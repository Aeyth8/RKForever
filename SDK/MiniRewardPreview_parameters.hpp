#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: MiniRewardPreview

#include "Basic.hpp"

#include "MangoClient_structs.hpp"


namespace SDK::Params
{

// Function MiniRewardPreview.MiniRewardPreview_C.Init CurrencyReward
// 0x0038 (0x0038 - 0x0000)
struct MiniRewardPreview_C_Init_CurrencyReward final
{
public:
	int32                                         CurrencyNum;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bPremium;                                          // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2159[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   NewLocalVar_0;                                     // 0x0008(0x0018)(Edit, BlueprintVisible)
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0020(0x0018)()
};
static_assert(alignof(MiniRewardPreview_C_Init_CurrencyReward) == 0x000008, "Wrong alignment on MiniRewardPreview_C_Init_CurrencyReward");
static_assert(sizeof(MiniRewardPreview_C_Init_CurrencyReward) == 0x000038, "Wrong size on MiniRewardPreview_C_Init_CurrencyReward");
static_assert(offsetof(MiniRewardPreview_C_Init_CurrencyReward, CurrencyNum) == 0x000000, "Member 'MiniRewardPreview_C_Init_CurrencyReward::CurrencyNum' has a wrong offset!");
static_assert(offsetof(MiniRewardPreview_C_Init_CurrencyReward, bPremium) == 0x000004, "Member 'MiniRewardPreview_C_Init_CurrencyReward::bPremium' has a wrong offset!");
static_assert(offsetof(MiniRewardPreview_C_Init_CurrencyReward, NewLocalVar_0) == 0x000008, "Member 'MiniRewardPreview_C_Init_CurrencyReward::NewLocalVar_0' has a wrong offset!");
static_assert(offsetof(MiniRewardPreview_C_Init_CurrencyReward, CallFunc_Conv_IntToText_ReturnValue) == 0x000020, "Member 'MiniRewardPreview_C_Init_CurrencyReward::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");

// Function MiniRewardPreview.MiniRewardPreview_C.InitBlastPassReward
// 0x0020 (0x0020 - 0x0000)
struct MiniRewardPreview_C_InitBlastPassReward final
{
public:
	float                                         BlastPassPips;                                     // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_215A[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_FloatToText_ReturnValue;             // 0x0008(0x0018)()
};
static_assert(alignof(MiniRewardPreview_C_InitBlastPassReward) == 0x000008, "Wrong alignment on MiniRewardPreview_C_InitBlastPassReward");
static_assert(sizeof(MiniRewardPreview_C_InitBlastPassReward) == 0x000020, "Wrong size on MiniRewardPreview_C_InitBlastPassReward");
static_assert(offsetof(MiniRewardPreview_C_InitBlastPassReward, BlastPassPips) == 0x000000, "Member 'MiniRewardPreview_C_InitBlastPassReward::BlastPassPips' has a wrong offset!");
static_assert(offsetof(MiniRewardPreview_C_InitBlastPassReward, CallFunc_Conv_FloatToText_ReturnValue) == 0x000008, "Member 'MiniRewardPreview_C_InitBlastPassReward::CallFunc_Conv_FloatToText_ReturnValue' has a wrong offset!");

// Function MiniRewardPreview.MiniRewardPreview_C.InitItemReward
// 0x0050 (0x0050 - 0x0000)
struct MiniRewardPreview_C_InitItemReward final
{
public:
	struct FMangoItem                             Item;                                              // 0x0000(0x0050)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(MiniRewardPreview_C_InitItemReward) == 0x000008, "Wrong alignment on MiniRewardPreview_C_InitItemReward");
static_assert(sizeof(MiniRewardPreview_C_InitItemReward) == 0x000050, "Wrong size on MiniRewardPreview_C_InitItemReward");
static_assert(offsetof(MiniRewardPreview_C_InitItemReward, Item) == 0x000000, "Member 'MiniRewardPreview_C_InitItemReward::Item' has a wrong offset!");

// Function MiniRewardPreview.MiniRewardPreview_C.Set Item Type
// 0x0070 (0x0070 - 0x0000)
struct MiniRewardPreview_C_Set_Item_Type final
{
public:
	struct FMangoItem                             Item;                                              // 0x0000(0x0050)(BlueprintVisible, BlueprintReadOnly, Parm)
	class UMarinerUIGlobals*                      CallFunc_GetUIGlobals_ReturnValue;                 // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_GetItemTypeName_ReturnValue;              // 0x0058(0x0018)()
};
static_assert(alignof(MiniRewardPreview_C_Set_Item_Type) == 0x000008, "Wrong alignment on MiniRewardPreview_C_Set_Item_Type");
static_assert(sizeof(MiniRewardPreview_C_Set_Item_Type) == 0x000070, "Wrong size on MiniRewardPreview_C_Set_Item_Type");
static_assert(offsetof(MiniRewardPreview_C_Set_Item_Type, Item) == 0x000000, "Member 'MiniRewardPreview_C_Set_Item_Type::Item' has a wrong offset!");
static_assert(offsetof(MiniRewardPreview_C_Set_Item_Type, CallFunc_GetUIGlobals_ReturnValue) == 0x000050, "Member 'MiniRewardPreview_C_Set_Item_Type::CallFunc_GetUIGlobals_ReturnValue' has a wrong offset!");
static_assert(offsetof(MiniRewardPreview_C_Set_Item_Type, CallFunc_GetItemTypeName_ReturnValue) == 0x000058, "Member 'MiniRewardPreview_C_Set_Item_Type::CallFunc_GetItemTypeName_ReturnValue' has a wrong offset!");

}

