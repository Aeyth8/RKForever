#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GameOver

#include "Basic.hpp"

#include "MangoClient_structs.hpp"
#include "Engine_structs.hpp"
#include "Mariner_structs.hpp"
#include "Mariner_classes.hpp"
#include "AkAudio_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass GameOver.GameOver_C
// 0x00C0 (0x05A0 - 0x04E0)
class UGameOver_C final : public UMarinerPostGameGameOverMenu
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x04E0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       GameOverAnimationOnboarding;                       // 0x04E8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       GameOverAnimationInTrials;                         // 0x04F0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       GameOverAnimationOut;                              // 0x04F8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       GameOverAnimationIn;                               // 0x0500(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 Background;                                        // 0x0508(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             GameOutcomeText;                                   // 0x0510(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Transitionblue;                                    // 0x0518(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 TransitionGrey;                                    // 0x0520(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 TransitionWhite;                                   // 0x0528(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 UIBackgroundVignette;                              // 0x0530(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 WhiteFadeIn;                                       // 0x0538(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	EMarinerGameOutcome                           GameOutcome;                                       // 0x0540(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_541[0x7];                                      // 0x0541(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAkAudioEvent*                          GameOverVO;                                        // 0x0548(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAkAudioEvent*                          VictoryVO;                                         // 0x0550(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAkAudioEvent*                          VictorySFX;                                        // 0x0558(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAkAudioEvent*                          DefeatVO;                                          // 0x0560(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAkAudioEvent*                          DefeatSFX;                                         // 0x0568(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAkAudioEvent*                          DrawVO;                                            // 0x0570(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAkAudioEvent*                          DrawSFX;                                           // 0x0578(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsWinningTeam;                                     // 0x0580(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_581[0x7];                                      // 0x0581(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAkAudioEvent*                          GameOverSFX;                                       // 0x0588(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       GameOverInAnimationToUse;                          // 0x0590(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SetMenuBackgroundAllowedDelayLength;               // 0x0598(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_GameOver(int32 EntryPoint);
	void WidgetAnimationEvt_GameOverAnimationIn_K2Node_WidgetAnimationEvent_0();
	void OnGameOverAnimationInFinish();
	void OnGameOutcomeChanged(const TArray<EMarinerGameOutcome>& GameOutcomesByTeam);
	void Construct();
	void DisplayValidGameOutcome();
	void UpdateGameOutcome(TArray<EMarinerGameOutcome>& GameOutcomesByTeam, bool* GameOutcomeValid);
	void AnimateOut();
	void OnAnimateOutFinished();
	struct FSlateColor Get_GameOutcomeText_ColorAndOpacity_0();
	void PlayGameOverAudio();
	void CheckAndSetTrialsFX();
	void PlayTrialsGameOverAudio();
	void PlayTrialsExit();
	void SetInAnimation();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"GameOver_C">();
	}
	static class UGameOver_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGameOver_C>();
	}
};
static_assert(alignof(UGameOver_C) == 0x000008, "Wrong alignment on UGameOver_C");
static_assert(sizeof(UGameOver_C) == 0x0005A0, "Wrong size on UGameOver_C");
static_assert(offsetof(UGameOver_C, UberGraphFrame) == 0x0004E0, "Member 'UGameOver_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UGameOver_C, GameOverAnimationOnboarding) == 0x0004E8, "Member 'UGameOver_C::GameOverAnimationOnboarding' has a wrong offset!");
static_assert(offsetof(UGameOver_C, GameOverAnimationInTrials) == 0x0004F0, "Member 'UGameOver_C::GameOverAnimationInTrials' has a wrong offset!");
static_assert(offsetof(UGameOver_C, GameOverAnimationOut) == 0x0004F8, "Member 'UGameOver_C::GameOverAnimationOut' has a wrong offset!");
static_assert(offsetof(UGameOver_C, GameOverAnimationIn) == 0x000500, "Member 'UGameOver_C::GameOverAnimationIn' has a wrong offset!");
static_assert(offsetof(UGameOver_C, Background) == 0x000508, "Member 'UGameOver_C::Background' has a wrong offset!");
static_assert(offsetof(UGameOver_C, GameOutcomeText) == 0x000510, "Member 'UGameOver_C::GameOutcomeText' has a wrong offset!");
static_assert(offsetof(UGameOver_C, Transitionblue) == 0x000518, "Member 'UGameOver_C::Transitionblue' has a wrong offset!");
static_assert(offsetof(UGameOver_C, TransitionGrey) == 0x000520, "Member 'UGameOver_C::TransitionGrey' has a wrong offset!");
static_assert(offsetof(UGameOver_C, TransitionWhite) == 0x000528, "Member 'UGameOver_C::TransitionWhite' has a wrong offset!");
static_assert(offsetof(UGameOver_C, UIBackgroundVignette) == 0x000530, "Member 'UGameOver_C::UIBackgroundVignette' has a wrong offset!");
static_assert(offsetof(UGameOver_C, WhiteFadeIn) == 0x000538, "Member 'UGameOver_C::WhiteFadeIn' has a wrong offset!");
static_assert(offsetof(UGameOver_C, GameOutcome) == 0x000540, "Member 'UGameOver_C::GameOutcome' has a wrong offset!");
static_assert(offsetof(UGameOver_C, GameOverVO) == 0x000548, "Member 'UGameOver_C::GameOverVO' has a wrong offset!");
static_assert(offsetof(UGameOver_C, VictoryVO) == 0x000550, "Member 'UGameOver_C::VictoryVO' has a wrong offset!");
static_assert(offsetof(UGameOver_C, VictorySFX) == 0x000558, "Member 'UGameOver_C::VictorySFX' has a wrong offset!");
static_assert(offsetof(UGameOver_C, DefeatVO) == 0x000560, "Member 'UGameOver_C::DefeatVO' has a wrong offset!");
static_assert(offsetof(UGameOver_C, DefeatSFX) == 0x000568, "Member 'UGameOver_C::DefeatSFX' has a wrong offset!");
static_assert(offsetof(UGameOver_C, DrawVO) == 0x000570, "Member 'UGameOver_C::DrawVO' has a wrong offset!");
static_assert(offsetof(UGameOver_C, DrawSFX) == 0x000578, "Member 'UGameOver_C::DrawSFX' has a wrong offset!");
static_assert(offsetof(UGameOver_C, IsWinningTeam) == 0x000580, "Member 'UGameOver_C::IsWinningTeam' has a wrong offset!");
static_assert(offsetof(UGameOver_C, GameOverSFX) == 0x000588, "Member 'UGameOver_C::GameOverSFX' has a wrong offset!");
static_assert(offsetof(UGameOver_C, GameOverInAnimationToUse) == 0x000590, "Member 'UGameOver_C::GameOverInAnimationToUse' has a wrong offset!");
static_assert(offsetof(UGameOver_C, SetMenuBackgroundAllowedDelayLength) == 0x000598, "Member 'UGameOver_C::SetMenuBackgroundAllowedDelayLength' has a wrong offset!");

}

