#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: DefaultProjectileImpulseHandler

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function DefaultProjectileImpulseHandler.DefaultProjectileImpulseHandler_C.IsSpikeImpulse
// 0x0060 (0x0060 - 0x0000)
struct DefaultProjectileImpulseHandler_C_IsSpikeImpulse final
{
public:
	class UObject*                                Projectile;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                HitLocation;                                       // 0x0008(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24EB[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                DamagedActor;                                      // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DirectionPitch;                                    // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsFalling;                                         // 0x0024(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_24EC[0x3];                                     // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                Instigator;                                        // 0x0028(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0030(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_24ED[0x7];                                     // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AMarinerProjectile*                     K2Node_DynamicCast_AsMariner_Projectile;           // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_24EE[0x3];                                     // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0044(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_24EF[0x3];                                     // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_VSize_ReturnValue;                        // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue_1;       // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x005A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(DefaultProjectileImpulseHandler_C_IsSpikeImpulse) == 0x000008, "Wrong alignment on DefaultProjectileImpulseHandler_C_IsSpikeImpulse");
static_assert(sizeof(DefaultProjectileImpulseHandler_C_IsSpikeImpulse) == 0x000060, "Wrong size on DefaultProjectileImpulseHandler_C_IsSpikeImpulse");
static_assert(offsetof(DefaultProjectileImpulseHandler_C_IsSpikeImpulse, Projectile) == 0x000000, "Member 'DefaultProjectileImpulseHandler_C_IsSpikeImpulse::Projectile' has a wrong offset!");
static_assert(offsetof(DefaultProjectileImpulseHandler_C_IsSpikeImpulse, HitLocation) == 0x000008, "Member 'DefaultProjectileImpulseHandler_C_IsSpikeImpulse::HitLocation' has a wrong offset!");
static_assert(offsetof(DefaultProjectileImpulseHandler_C_IsSpikeImpulse, DamagedActor) == 0x000018, "Member 'DefaultProjectileImpulseHandler_C_IsSpikeImpulse::DamagedActor' has a wrong offset!");
static_assert(offsetof(DefaultProjectileImpulseHandler_C_IsSpikeImpulse, DirectionPitch) == 0x000020, "Member 'DefaultProjectileImpulseHandler_C_IsSpikeImpulse::DirectionPitch' has a wrong offset!");
static_assert(offsetof(DefaultProjectileImpulseHandler_C_IsSpikeImpulse, IsFalling) == 0x000024, "Member 'DefaultProjectileImpulseHandler_C_IsSpikeImpulse::IsFalling' has a wrong offset!");
static_assert(offsetof(DefaultProjectileImpulseHandler_C_IsSpikeImpulse, Instigator) == 0x000028, "Member 'DefaultProjectileImpulseHandler_C_IsSpikeImpulse::Instigator' has a wrong offset!");
static_assert(offsetof(DefaultProjectileImpulseHandler_C_IsSpikeImpulse, ReturnValue) == 0x000030, "Member 'DefaultProjectileImpulseHandler_C_IsSpikeImpulse::ReturnValue' has a wrong offset!");
static_assert(offsetof(DefaultProjectileImpulseHandler_C_IsSpikeImpulse, K2Node_DynamicCast_AsMariner_Projectile) == 0x000038, "Member 'DefaultProjectileImpulseHandler_C_IsSpikeImpulse::K2Node_DynamicCast_AsMariner_Projectile' has a wrong offset!");
static_assert(offsetof(DefaultProjectileImpulseHandler_C_IsSpikeImpulse, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'DefaultProjectileImpulseHandler_C_IsSpikeImpulse::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(DefaultProjectileImpulseHandler_C_IsSpikeImpulse, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000044, "Member 'DefaultProjectileImpulseHandler_C_IsSpikeImpulse::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(DefaultProjectileImpulseHandler_C_IsSpikeImpulse, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000050, "Member 'DefaultProjectileImpulseHandler_C_IsSpikeImpulse::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(DefaultProjectileImpulseHandler_C_IsSpikeImpulse, CallFunc_VSize_ReturnValue) == 0x000054, "Member 'DefaultProjectileImpulseHandler_C_IsSpikeImpulse::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(DefaultProjectileImpulseHandler_C_IsSpikeImpulse, CallFunc_LessEqual_FloatFloat_ReturnValue_1) == 0x000058, "Member 'DefaultProjectileImpulseHandler_C_IsSpikeImpulse::CallFunc_LessEqual_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(DefaultProjectileImpulseHandler_C_IsSpikeImpulse, CallFunc_BooleanAND_ReturnValue) == 0x000059, "Member 'DefaultProjectileImpulseHandler_C_IsSpikeImpulse::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(DefaultProjectileImpulseHandler_C_IsSpikeImpulse, CallFunc_BooleanAND_ReturnValue_1) == 0x00005A, "Member 'DefaultProjectileImpulseHandler_C_IsSpikeImpulse::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");

}

