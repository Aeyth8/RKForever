#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ArtifactHighlight

#include "Basic.hpp"

#include "Mariner_classes.hpp"
#include "AkAudio_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass ArtifactHighlight.ArtifactHighlight_C
// 0x0098 (0x04B0 - 0x0418)
class UArtifactHighlight_C final : public UMarinerAnimatedWidget
{
public:
	class UTextBlock*                             ArtifactDescription;                               // 0x0418(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 ArtifactImage;                                     // 0x0420(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             ArtifactName;                                      // 0x0428(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBorder*                                AvailablePanel;                                    // 0x0430(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Dividerline;                                       // 0x0438(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBorder*                                EquippedPanel;                                     // 0x0440(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBorder*                                LockedPanel;                                       // 0x0448(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetSwitcher*                        StateSwitcher;                                     // 0x0450(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         UnlockGroup;                                       // 0x0458(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 UnlockIcon;                                        // 0x0460(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             UnlockText;                                        // 0x0468(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UMarinerArtifactDataAsset*              Artifact;                                          // 0x0470(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UItemLoadResponse*                      ItemLoadResponse;                                  // 0x0478(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSoftClassPtr<class UClass>                   CharacterClass;                                    // 0x0480(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	bool                                          AllowState;                                        // 0x04A8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void SetArtifact(class UMarinerArtifactDataAsset* Param_Artifact, class UItemLoadResponse* Param_ItemLoadResponse, TSoftClassPtr<class UClass> CurrentCharacterClass, bool Param_AllowState);
	bool Populate();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ArtifactHighlight_C">();
	}
	static class UArtifactHighlight_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UArtifactHighlight_C>();
	}
};
static_assert(alignof(UArtifactHighlight_C) == 0x000008, "Wrong alignment on UArtifactHighlight_C");
static_assert(sizeof(UArtifactHighlight_C) == 0x0004B0, "Wrong size on UArtifactHighlight_C");
static_assert(offsetof(UArtifactHighlight_C, ArtifactDescription) == 0x000418, "Member 'UArtifactHighlight_C::ArtifactDescription' has a wrong offset!");
static_assert(offsetof(UArtifactHighlight_C, ArtifactImage) == 0x000420, "Member 'UArtifactHighlight_C::ArtifactImage' has a wrong offset!");
static_assert(offsetof(UArtifactHighlight_C, ArtifactName) == 0x000428, "Member 'UArtifactHighlight_C::ArtifactName' has a wrong offset!");
static_assert(offsetof(UArtifactHighlight_C, AvailablePanel) == 0x000430, "Member 'UArtifactHighlight_C::AvailablePanel' has a wrong offset!");
static_assert(offsetof(UArtifactHighlight_C, Dividerline) == 0x000438, "Member 'UArtifactHighlight_C::Dividerline' has a wrong offset!");
static_assert(offsetof(UArtifactHighlight_C, EquippedPanel) == 0x000440, "Member 'UArtifactHighlight_C::EquippedPanel' has a wrong offset!");
static_assert(offsetof(UArtifactHighlight_C, LockedPanel) == 0x000448, "Member 'UArtifactHighlight_C::LockedPanel' has a wrong offset!");
static_assert(offsetof(UArtifactHighlight_C, StateSwitcher) == 0x000450, "Member 'UArtifactHighlight_C::StateSwitcher' has a wrong offset!");
static_assert(offsetof(UArtifactHighlight_C, UnlockGroup) == 0x000458, "Member 'UArtifactHighlight_C::UnlockGroup' has a wrong offset!");
static_assert(offsetof(UArtifactHighlight_C, UnlockIcon) == 0x000460, "Member 'UArtifactHighlight_C::UnlockIcon' has a wrong offset!");
static_assert(offsetof(UArtifactHighlight_C, UnlockText) == 0x000468, "Member 'UArtifactHighlight_C::UnlockText' has a wrong offset!");
static_assert(offsetof(UArtifactHighlight_C, Artifact) == 0x000470, "Member 'UArtifactHighlight_C::Artifact' has a wrong offset!");
static_assert(offsetof(UArtifactHighlight_C, ItemLoadResponse) == 0x000478, "Member 'UArtifactHighlight_C::ItemLoadResponse' has a wrong offset!");
static_assert(offsetof(UArtifactHighlight_C, CharacterClass) == 0x000480, "Member 'UArtifactHighlight_C::CharacterClass' has a wrong offset!");
static_assert(offsetof(UArtifactHighlight_C, AllowState) == 0x0004A8, "Member 'UArtifactHighlight_C::AllowState' has a wrong offset!");

}

