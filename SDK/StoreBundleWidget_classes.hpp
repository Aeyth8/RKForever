#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: StoreBundleWidget

#include "Basic.hpp"

#include "MangoClient_structs.hpp"
#include "Engine_structs.hpp"
#include "Mariner_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass StoreBundleWidget.StoreBundleWidget_C
// 0x0108 (0x0520 - 0x0418)
class UStoreBundleWidget_C final : public UMarinerAnimatedWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0418(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       HoverAnim;                                         // 0x0420(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UButton*                                Button;                                            // 0x0428(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 ImageBorder;                                       // 0x0430(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 OfferImage;                                        // 0x0438(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TextOfferDescription;                              // 0x0440(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TextOfferName;                                     // 0x0448(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TextOfferPrice;                                    // 0x0450(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	struct FMangoNativeOffer                      Offer;                                             // 0x0458(0x00C0)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          CanPurchaseOffer;                                  // 0x0518(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          AllowMouseInteraction;                             // 0x0519(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_StoreBundleWidget(int32 EntryPoint);
	void BndEvt__Button_K2Node_ComponentBoundEvent_2_OnButtonHoverEvent__DelegateSignature();
	void BndEvt__Button_K2Node_ComponentBoundEvent_1_OnButtonHoverEvent__DelegateSignature();
	void BndEvt__Button_K2Node_ComponentBoundEvent_0_OnButtonClickedEvent__DelegateSignature();
	void SetBundleOfferToShow(const struct FMangoNativeOffer& InOffer, bool CanPurchase, bool Param_AllowMouseInteraction);
	bool Populate();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"StoreBundleWidget_C">();
	}
	static class UStoreBundleWidget_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UStoreBundleWidget_C>();
	}
};
static_assert(alignof(UStoreBundleWidget_C) == 0x000008, "Wrong alignment on UStoreBundleWidget_C");
static_assert(sizeof(UStoreBundleWidget_C) == 0x000520, "Wrong size on UStoreBundleWidget_C");
static_assert(offsetof(UStoreBundleWidget_C, UberGraphFrame) == 0x000418, "Member 'UStoreBundleWidget_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UStoreBundleWidget_C, HoverAnim) == 0x000420, "Member 'UStoreBundleWidget_C::HoverAnim' has a wrong offset!");
static_assert(offsetof(UStoreBundleWidget_C, Button) == 0x000428, "Member 'UStoreBundleWidget_C::Button' has a wrong offset!");
static_assert(offsetof(UStoreBundleWidget_C, ImageBorder) == 0x000430, "Member 'UStoreBundleWidget_C::ImageBorder' has a wrong offset!");
static_assert(offsetof(UStoreBundleWidget_C, OfferImage) == 0x000438, "Member 'UStoreBundleWidget_C::OfferImage' has a wrong offset!");
static_assert(offsetof(UStoreBundleWidget_C, TextOfferDescription) == 0x000440, "Member 'UStoreBundleWidget_C::TextOfferDescription' has a wrong offset!");
static_assert(offsetof(UStoreBundleWidget_C, TextOfferName) == 0x000448, "Member 'UStoreBundleWidget_C::TextOfferName' has a wrong offset!");
static_assert(offsetof(UStoreBundleWidget_C, TextOfferPrice) == 0x000450, "Member 'UStoreBundleWidget_C::TextOfferPrice' has a wrong offset!");
static_assert(offsetof(UStoreBundleWidget_C, Offer) == 0x000458, "Member 'UStoreBundleWidget_C::Offer' has a wrong offset!");
static_assert(offsetof(UStoreBundleWidget_C, CanPurchaseOffer) == 0x000518, "Member 'UStoreBundleWidget_C::CanPurchaseOffer' has a wrong offset!");
static_assert(offsetof(UStoreBundleWidget_C, AllowMouseInteraction) == 0x000519, "Member 'UStoreBundleWidget_C::AllowMouseInteraction' has a wrong offset!");

}

