#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BasePin

#include "Basic.hpp"


namespace SDK::Params
{

// Function BasePin.BasePin_C.ExecuteUbergraph_BasePin
// 0x0058 (0x0058 - 0x0000)
struct BasePin_C_ExecuteUbergraph_BasePin final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMarinerGameState*                      K2Node_DynamicCast_AsMariner_Game_State;           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class FName NewMatchState)>    K2Node_CreateDelegate_OutputDelegate;              // 0x001C(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NewMatchState;                  // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AHUD*                                   CallFunc_GetHUD_ReturnValue;                       // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMarinerHUD*                            K2Node_DynamicCast_AsMariner_HUD;                  // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BasePin_C_ExecuteUbergraph_BasePin) == 0x000008, "Wrong alignment on BasePin_C_ExecuteUbergraph_BasePin");
static_assert(sizeof(BasePin_C_ExecuteUbergraph_BasePin) == 0x000058, "Wrong size on BasePin_C_ExecuteUbergraph_BasePin");
static_assert(offsetof(BasePin_C_ExecuteUbergraph_BasePin, EntryPoint) == 0x000000, "Member 'BasePin_C_ExecuteUbergraph_BasePin::EntryPoint' has a wrong offset!");
static_assert(offsetof(BasePin_C_ExecuteUbergraph_BasePin, CallFunc_GetGameState_ReturnValue) == 0x000008, "Member 'BasePin_C_ExecuteUbergraph_BasePin::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BasePin_C_ExecuteUbergraph_BasePin, K2Node_DynamicCast_AsMariner_Game_State) == 0x000010, "Member 'BasePin_C_ExecuteUbergraph_BasePin::K2Node_DynamicCast_AsMariner_Game_State' has a wrong offset!");
static_assert(offsetof(BasePin_C_ExecuteUbergraph_BasePin, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BasePin_C_ExecuteUbergraph_BasePin::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BasePin_C_ExecuteUbergraph_BasePin, K2Node_CreateDelegate_OutputDelegate) == 0x00001C, "Member 'BasePin_C_ExecuteUbergraph_BasePin::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BasePin_C_ExecuteUbergraph_BasePin, CallFunc_GetOwningPlayer_ReturnValue) == 0x000030, "Member 'BasePin_C_ExecuteUbergraph_BasePin::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BasePin_C_ExecuteUbergraph_BasePin, K2Node_CustomEvent_NewMatchState) == 0x000038, "Member 'BasePin_C_ExecuteUbergraph_BasePin::K2Node_CustomEvent_NewMatchState' has a wrong offset!");
static_assert(offsetof(BasePin_C_ExecuteUbergraph_BasePin, CallFunc_GetHUD_ReturnValue) == 0x000040, "Member 'BasePin_C_ExecuteUbergraph_BasePin::CallFunc_GetHUD_ReturnValue' has a wrong offset!");
static_assert(offsetof(BasePin_C_ExecuteUbergraph_BasePin, K2Node_DynamicCast_AsMariner_HUD) == 0x000048, "Member 'BasePin_C_ExecuteUbergraph_BasePin::K2Node_DynamicCast_AsMariner_HUD' has a wrong offset!");
static_assert(offsetof(BasePin_C_ExecuteUbergraph_BasePin, K2Node_DynamicCast_bSuccess_1) == 0x000050, "Member 'BasePin_C_ExecuteUbergraph_BasePin::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");

// Function BasePin.BasePin_C.OnHUDMatchStateChanged
// 0x0008 (0x0008 - 0x0000)
struct BasePin_C_OnHUDMatchStateChanged final
{
public:
	class FName                                   NewMatchState;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BasePin_C_OnHUDMatchStateChanged) == 0x000004, "Wrong alignment on BasePin_C_OnHUDMatchStateChanged");
static_assert(sizeof(BasePin_C_OnHUDMatchStateChanged) == 0x000008, "Wrong size on BasePin_C_OnHUDMatchStateChanged");
static_assert(offsetof(BasePin_C_OnHUDMatchStateChanged, NewMatchState) == 0x000000, "Member 'BasePin_C_OnHUDMatchStateChanged::NewMatchState' has a wrong offset!");

// Function BasePin.BasePin_C.ReactToMatchStateChanged
// 0x0020 (0x0020 - 0x0000)
struct BasePin_C_ReactToMatchStateChanged final
{
public:
	class FName                                   InName;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x0008(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue;            // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue_1;          // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BasePin_C_ReactToMatchStateChanged) == 0x000008, "Wrong alignment on BasePin_C_ReactToMatchStateChanged");
static_assert(sizeof(BasePin_C_ReactToMatchStateChanged) == 0x000020, "Wrong size on BasePin_C_ReactToMatchStateChanged");
static_assert(offsetof(BasePin_C_ReactToMatchStateChanged, InName) == 0x000000, "Member 'BasePin_C_ReactToMatchStateChanged::InName' has a wrong offset!");
static_assert(offsetof(BasePin_C_ReactToMatchStateChanged, CallFunc_Conv_NameToString_ReturnValue) == 0x000008, "Member 'BasePin_C_ReactToMatchStateChanged::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BasePin_C_ReactToMatchStateChanged, CallFunc_EqualEqual_StrStr_ReturnValue) == 0x000018, "Member 'BasePin_C_ReactToMatchStateChanged::CallFunc_EqualEqual_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BasePin_C_ReactToMatchStateChanged, CallFunc_EqualEqual_StrStr_ReturnValue_1) == 0x000019, "Member 'BasePin_C_ReactToMatchStateChanged::CallFunc_EqualEqual_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BasePin_C_ReactToMatchStateChanged, CallFunc_BooleanOR_ReturnValue) == 0x00001A, "Member 'BasePin_C_ReactToMatchStateChanged::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function BasePin.BasePin_C.PinRenderingUpdate
// 0x0001 (0x0001 - 0x0000)
struct BasePin_C_PinRenderingUpdate final
{
public:
	bool                                          NewPinnedState;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BasePin_C_PinRenderingUpdate) == 0x000001, "Wrong alignment on BasePin_C_PinRenderingUpdate");
static_assert(sizeof(BasePin_C_PinRenderingUpdate) == 0x000001, "Wrong size on BasePin_C_PinRenderingUpdate");
static_assert(offsetof(BasePin_C_PinRenderingUpdate, NewPinnedState) == 0x000000, "Member 'BasePin_C_PinRenderingUpdate::NewPinnedState' has a wrong offset!");

}

