#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: CharacterHUD_Library

#include "Basic.hpp"

#include "Engine_classes.hpp"
#include "E_ReticleElementTypes_structs.hpp"
#include "Mariner_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass CharacterHUD_Library.CharacterHUD_Library_C
// 0x0000 (0x0028 - 0x0028)
class UCharacterHUD_Library_C final : public UBlueprintFunctionLibrary
{
public:
	static void HandleRedReticle(class UWidgetAnimation* ReloadAnimation, class UUserWidget* HUD_Widget, class UImage* ReticleImage, class UCanvasPanel* ReticleCanvas, class UProgressBar* ReticleProgressBar, bool ColorProgressBarFill, E_ReticleElementTypes ReticleElementType, bool GamepadNotRequired, bool ForceOnIgnoreGameGlobal, class UObject* __WorldContext);
	static void GetActiveInputType(class UObject* __WorldContext, bool* IsGamepadActive);
	static void CanUpdateReticleTargetForAimAssist(class UUserWidget* HUD_Widget, const class UWidgetAnimation* ReloadAnimation, class UObject* __WorldContext, bool* CanUpdate);
	static void UpdateReticleColorForAimAssist(class UImage* ReticleImage, class UCanvasPanel* ReticleCanvas, class UUserWidget* HUD_Widget, class UProgressBar* ReticleProgressBar, bool ColorProgressBarFill, E_ReticleElementTypes ReticleElementType, bool ForceColorReset, bool GamepadNotRequired, class UObject* __WorldContext);
	static struct FLinearColor GetReticleColorAndOpacity(bool ForceColorReset, class UUserWidget* HUD_Widget, E_ReticleElementTypes ReticleElementType, class UObject* __WorldContext);
	static void MakeProgressBarReticleWidgetStyle(class UProgressBar* ProgressBar, const struct FLinearColor& SpecifiedColor, bool ColorProgressBarFill, class UObject* __WorldContext, struct FProgressBarStyle* ProgressBarStyle);
	static void BindCharacterAbilityEvents(class UUserWidget* HUD_Widget, const TDelegate<void()>& ReloadStarted, const TDelegate<void(bool bWasCancelled)>& ReloadFinished, const TDelegate<void()>& WeaponFired, const TDelegate<void(class AMarinerProjectile* ProjectileSpawned)>& ProjectileSpawned, const TDelegate<void(class AActor* CurrentReticleTarget)>& ReticleTargetChanged, class UObject* __WorldContext, bool* DidBindToAbilities);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"CharacterHUD_Library_C">();
	}
	static class UCharacterHUD_Library_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCharacterHUD_Library_C>();
	}
};
static_assert(alignof(UCharacterHUD_Library_C) == 0x000008, "Wrong alignment on UCharacterHUD_Library_C");
static_assert(sizeof(UCharacterHUD_Library_C) == 0x000028, "Wrong size on UCharacterHUD_Library_C");

}

