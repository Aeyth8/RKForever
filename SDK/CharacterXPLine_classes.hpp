#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: CharacterXPLine

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass CharacterXPLine.CharacterXPLine_C
// 0x0030 (0x0260 - 0x0230)
class UCharacterXPLine_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0230(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       Init;                                              // 0x0238(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       AnimateIn;                                         // 0x0240(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UTextBlock*                             Metric;                                            // 0x0248(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             StatName;                                          // 0x0250(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             XPValue;                                           // 0x0258(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_CharacterXPLine(int32 EntryPoint);
	void Destruct();
	void PlayAnimateIn();
	void Construct();
	void SetData(const struct FPGRStatData& StatData, const struct FMangoXPBonusType& XPData);
	void FormatMetric();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"CharacterXPLine_C">();
	}
	static class UCharacterXPLine_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCharacterXPLine_C>();
	}
};
static_assert(alignof(UCharacterXPLine_C) == 0x000008, "Wrong alignment on UCharacterXPLine_C");
static_assert(sizeof(UCharacterXPLine_C) == 0x000260, "Wrong size on UCharacterXPLine_C");
static_assert(offsetof(UCharacterXPLine_C, UberGraphFrame) == 0x000230, "Member 'UCharacterXPLine_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UCharacterXPLine_C, Init) == 0x000238, "Member 'UCharacterXPLine_C::Init' has a wrong offset!");
static_assert(offsetof(UCharacterXPLine_C, AnimateIn) == 0x000240, "Member 'UCharacterXPLine_C::AnimateIn' has a wrong offset!");
static_assert(offsetof(UCharacterXPLine_C, Metric) == 0x000248, "Member 'UCharacterXPLine_C::Metric' has a wrong offset!");
static_assert(offsetof(UCharacterXPLine_C, StatName) == 0x000250, "Member 'UCharacterXPLine_C::StatName' has a wrong offset!");
static_assert(offsetof(UCharacterXPLine_C, XPValue) == 0x000258, "Member 'UCharacterXPLine_C::XPValue' has a wrong offset!");

}

