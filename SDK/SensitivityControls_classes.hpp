#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: SensitivityControls

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_classes.hpp"
#include "AkAudio_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass SensitivityControls.SensitivityControls_C
// 0x0078 (0x02A8 - 0x0230)
class USensitivityControls_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0230(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UCheckBox*                              GamepadToggle;                                     // 0x0238(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USlider*                                HorizontalSlider;                                  // 0x0240(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             HorizontalText;                                    // 0x0248(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCheckBox*                              InvertX;                                           // 0x0250(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCheckBox*                              InvertY;                                           // 0x0258(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             LookInversion;                                     // 0x0260(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCheckBox*                              MouseToggle;                                       // 0x0268(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UStepperWidget_C*                       StepperWidget;                                     // 0x0270(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USlider*                                VerticalSlider;                                    // 0x0278(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             VerticalText;                                      // 0x0280(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             XInversionText;                                    // 0x0288(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             YInversionText;                                    // 0x0290(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	TArray<class FString>                         SensitivityNames;                                  // 0x0298(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)

public:
	void ExecuteUbergraph_SensitivityControls(int32 EntryPoint);
	void StepperSelectionChanged_Event_0();
	void BndEvt__HorizontalSlider_K2Node_ComponentBoundEvent_473_OnFloatValueChangedEvent__DelegateSignature(float Value);
	void BndEvt__InvertY_K2Node_ComponentBoundEvent_617_OnCheckBoxComponentStateChanged__DelegateSignature(bool bIsChecked);
	void BndEvt__InvertX_K2Node_ComponentBoundEvent_605_OnCheckBoxComponentStateChanged__DelegateSignature(bool bIsChecked);
	void BndEvt__VerticalSlider_K2Node_ComponentBoundEvent_505_OnFloatValueChangedEvent__DelegateSignature(float Value);
	void BndEvt__GamepadToggle_K2Node_ComponentBoundEvent_38_OnCheckBoxComponentStateChanged__DelegateSignature(bool bIsChecked);
	void BndEvt__MouseToggle_K2Node_ComponentBoundEvent_37_OnCheckBoxComponentStateChanged__DelegateSignature(bool bIsChecked);
	void Construct();
	void PlayClickSound();
	void ShowGamepadSensitivity();
	void ShowMouseSensitivity();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"SensitivityControls_C">();
	}
	static class USensitivityControls_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<USensitivityControls_C>();
	}
};
static_assert(alignof(USensitivityControls_C) == 0x000008, "Wrong alignment on USensitivityControls_C");
static_assert(sizeof(USensitivityControls_C) == 0x0002A8, "Wrong size on USensitivityControls_C");
static_assert(offsetof(USensitivityControls_C, UberGraphFrame) == 0x000230, "Member 'USensitivityControls_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(USensitivityControls_C, GamepadToggle) == 0x000238, "Member 'USensitivityControls_C::GamepadToggle' has a wrong offset!");
static_assert(offsetof(USensitivityControls_C, HorizontalSlider) == 0x000240, "Member 'USensitivityControls_C::HorizontalSlider' has a wrong offset!");
static_assert(offsetof(USensitivityControls_C, HorizontalText) == 0x000248, "Member 'USensitivityControls_C::HorizontalText' has a wrong offset!");
static_assert(offsetof(USensitivityControls_C, InvertX) == 0x000250, "Member 'USensitivityControls_C::InvertX' has a wrong offset!");
static_assert(offsetof(USensitivityControls_C, InvertY) == 0x000258, "Member 'USensitivityControls_C::InvertY' has a wrong offset!");
static_assert(offsetof(USensitivityControls_C, LookInversion) == 0x000260, "Member 'USensitivityControls_C::LookInversion' has a wrong offset!");
static_assert(offsetof(USensitivityControls_C, MouseToggle) == 0x000268, "Member 'USensitivityControls_C::MouseToggle' has a wrong offset!");
static_assert(offsetof(USensitivityControls_C, StepperWidget) == 0x000270, "Member 'USensitivityControls_C::StepperWidget' has a wrong offset!");
static_assert(offsetof(USensitivityControls_C, VerticalSlider) == 0x000278, "Member 'USensitivityControls_C::VerticalSlider' has a wrong offset!");
static_assert(offsetof(USensitivityControls_C, VerticalText) == 0x000280, "Member 'USensitivityControls_C::VerticalText' has a wrong offset!");
static_assert(offsetof(USensitivityControls_C, XInversionText) == 0x000288, "Member 'USensitivityControls_C::XInversionText' has a wrong offset!");
static_assert(offsetof(USensitivityControls_C, YInversionText) == 0x000290, "Member 'USensitivityControls_C::YInversionText' has a wrong offset!");
static_assert(offsetof(USensitivityControls_C, SensitivityNames) == 0x000298, "Member 'USensitivityControls_C::SensitivityNames' has a wrong offset!");

}

