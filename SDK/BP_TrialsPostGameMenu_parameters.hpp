#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_TrialsPostGameMenu

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "MangoClient_structs.hpp"


namespace SDK::Params
{

// Function BP_TrialsPostGameMenu.BP_TrialsPostGameMenu_C.ExecuteUbergraph_BP_TrialsPostGameMenu
// 0x00B0 (0x00B0 - 0x0000)
struct BP_TrialsPostGameMenu_C_ExecuteUbergraph_BP_TrialsPostGameMenu final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bFromSubMenu;                         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2026[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UMarinerMenuManager*                    CallFunc_GetMenuManager_ReturnValue;               // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMarinerGameOutcome                           Temp_byte_Variable;                                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2027[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMarinerMenuSequence*                   CallFunc_GetActiveSequence_ReturnValue;            // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMarinerPostGameSequence*               K2Node_DynamicCast_AsMariner_Post_Game_Sequence;   // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2028[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMatchEnd                              CallFunc_GetMatchEndData_ReturnValue;              // 0x0030(0x0068)(ConstParm)
	int32                                         CallFunc_GetPlayerTeam_TeamIndex;                  // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMarinerGameOutcome                           CallFunc_GetPlayerTeam_PlayerGameOutcome;          // 0x009C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2029[0x3];                                     // 0x009D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                K2Node_Select_Default;                             // 0x00A0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_TrialsPostGameMenu_C_ExecuteUbergraph_BP_TrialsPostGameMenu) == 0x000008, "Wrong alignment on BP_TrialsPostGameMenu_C_ExecuteUbergraph_BP_TrialsPostGameMenu");
static_assert(sizeof(BP_TrialsPostGameMenu_C_ExecuteUbergraph_BP_TrialsPostGameMenu) == 0x0000B0, "Wrong size on BP_TrialsPostGameMenu_C_ExecuteUbergraph_BP_TrialsPostGameMenu");
static_assert(offsetof(BP_TrialsPostGameMenu_C_ExecuteUbergraph_BP_TrialsPostGameMenu, EntryPoint) == 0x000000, "Member 'BP_TrialsPostGameMenu_C_ExecuteUbergraph_BP_TrialsPostGameMenu::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_TrialsPostGameMenu_C_ExecuteUbergraph_BP_TrialsPostGameMenu, K2Node_Event_bFromSubMenu) == 0x000004, "Member 'BP_TrialsPostGameMenu_C_ExecuteUbergraph_BP_TrialsPostGameMenu::K2Node_Event_bFromSubMenu' has a wrong offset!");
static_assert(offsetof(BP_TrialsPostGameMenu_C_ExecuteUbergraph_BP_TrialsPostGameMenu, CallFunc_GetMenuManager_ReturnValue) == 0x000008, "Member 'BP_TrialsPostGameMenu_C_ExecuteUbergraph_BP_TrialsPostGameMenu::CallFunc_GetMenuManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TrialsPostGameMenu_C_ExecuteUbergraph_BP_TrialsPostGameMenu, Temp_byte_Variable) == 0x000010, "Member 'BP_TrialsPostGameMenu_C_ExecuteUbergraph_BP_TrialsPostGameMenu::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_TrialsPostGameMenu_C_ExecuteUbergraph_BP_TrialsPostGameMenu, CallFunc_GetActiveSequence_ReturnValue) == 0x000018, "Member 'BP_TrialsPostGameMenu_C_ExecuteUbergraph_BP_TrialsPostGameMenu::CallFunc_GetActiveSequence_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TrialsPostGameMenu_C_ExecuteUbergraph_BP_TrialsPostGameMenu, K2Node_DynamicCast_AsMariner_Post_Game_Sequence) == 0x000020, "Member 'BP_TrialsPostGameMenu_C_ExecuteUbergraph_BP_TrialsPostGameMenu::K2Node_DynamicCast_AsMariner_Post_Game_Sequence' has a wrong offset!");
static_assert(offsetof(BP_TrialsPostGameMenu_C_ExecuteUbergraph_BP_TrialsPostGameMenu, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BP_TrialsPostGameMenu_C_ExecuteUbergraph_BP_TrialsPostGameMenu::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_TrialsPostGameMenu_C_ExecuteUbergraph_BP_TrialsPostGameMenu, CallFunc_GetMatchEndData_ReturnValue) == 0x000030, "Member 'BP_TrialsPostGameMenu_C_ExecuteUbergraph_BP_TrialsPostGameMenu::CallFunc_GetMatchEndData_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TrialsPostGameMenu_C_ExecuteUbergraph_BP_TrialsPostGameMenu, CallFunc_GetPlayerTeam_TeamIndex) == 0x000098, "Member 'BP_TrialsPostGameMenu_C_ExecuteUbergraph_BP_TrialsPostGameMenu::CallFunc_GetPlayerTeam_TeamIndex' has a wrong offset!");
static_assert(offsetof(BP_TrialsPostGameMenu_C_ExecuteUbergraph_BP_TrialsPostGameMenu, CallFunc_GetPlayerTeam_PlayerGameOutcome) == 0x00009C, "Member 'BP_TrialsPostGameMenu_C_ExecuteUbergraph_BP_TrialsPostGameMenu::CallFunc_GetPlayerTeam_PlayerGameOutcome' has a wrong offset!");
static_assert(offsetof(BP_TrialsPostGameMenu_C_ExecuteUbergraph_BP_TrialsPostGameMenu, K2Node_Select_Default) == 0x0000A0, "Member 'BP_TrialsPostGameMenu_C_ExecuteUbergraph_BP_TrialsPostGameMenu::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_TrialsPostGameMenu_C_ExecuteUbergraph_BP_TrialsPostGameMenu, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x0000A8, "Member 'BP_TrialsPostGameMenu_C_ExecuteUbergraph_BP_TrialsPostGameMenu::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");

// Function BP_TrialsPostGameMenu.BP_TrialsPostGameMenu_C.BP_OnEntered
// 0x0001 (0x0001 - 0x0000)
struct BP_TrialsPostGameMenu_C_BP_OnEntered final
{
public:
	bool                                          bFromSubMenu;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_TrialsPostGameMenu_C_BP_OnEntered) == 0x000001, "Wrong alignment on BP_TrialsPostGameMenu_C_BP_OnEntered");
static_assert(sizeof(BP_TrialsPostGameMenu_C_BP_OnEntered) == 0x000001, "Wrong size on BP_TrialsPostGameMenu_C_BP_OnEntered");
static_assert(offsetof(BP_TrialsPostGameMenu_C_BP_OnEntered, bFromSubMenu) == 0x000000, "Member 'BP_TrialsPostGameMenu_C_BP_OnEntered::bFromSubMenu' has a wrong offset!");

// Function BP_TrialsPostGameMenu.BP_TrialsPostGameMenu_C.SetTimeText
// 0x0180 (0x0180 - 0x0000)
struct BP_TrialsPostGameMenu_C_SetTimeText final
{
public:
	class FString                                 MSString;                                          // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 SecString;                                         // 0x0010(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 MinString;                                         // 0x0020(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0048(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class ABP_MarinerTrialsGameState_C*           K2Node_DynamicCast_AsBP_Mariner_Trials_Game_State; // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_202A[0x7];                                     // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x0068(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_3;              // 0x0078(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_IsValidTimerHandle_ReturnValue;        // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_202B[0x7];                                     // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0090(0x0018)()
	class FText                                   CallFunc_MakeLiteralText_ReturnValue;              // 0x00A8(0x0018)()
	float                                         CallFunc_K2_GetTimerElapsedTimeHandle_ReturnValue; // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_202C[0x4];                                     // 0x00C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimespan                              CallFunc_FromSeconds_ReturnValue;                  // 0x00C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakTimespan_Days;                       // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakTimespan_Hours;                      // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakTimespan_Minutes;                    // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakTimespan_Seconds;                    // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakTimespan_Milliseconds;               // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_202D[0x4];                                     // 0x00E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x00E8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Divide_IntInt_ReturnValue;                // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_202E[0x3];                                     // 0x00FD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_1;           // 0x0100(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_4;              // 0x0110(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_2;           // 0x0120(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_202F[0x7];                                     // 0x0131(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_3;           // 0x0138(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_5;              // 0x0148(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2030[0x7];                                     // 0x0159(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_4;           // 0x0160(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_6;              // 0x0170(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_TrialsPostGameMenu_C_SetTimeText) == 0x000008, "Wrong alignment on BP_TrialsPostGameMenu_C_SetTimeText");
static_assert(sizeof(BP_TrialsPostGameMenu_C_SetTimeText) == 0x000180, "Wrong size on BP_TrialsPostGameMenu_C_SetTimeText");
static_assert(offsetof(BP_TrialsPostGameMenu_C_SetTimeText, MSString) == 0x000000, "Member 'BP_TrialsPostGameMenu_C_SetTimeText::MSString' has a wrong offset!");
static_assert(offsetof(BP_TrialsPostGameMenu_C_SetTimeText, SecString) == 0x000010, "Member 'BP_TrialsPostGameMenu_C_SetTimeText::SecString' has a wrong offset!");
static_assert(offsetof(BP_TrialsPostGameMenu_C_SetTimeText, MinString) == 0x000020, "Member 'BP_TrialsPostGameMenu_C_SetTimeText::MinString' has a wrong offset!");
static_assert(offsetof(BP_TrialsPostGameMenu_C_SetTimeText, CallFunc_Concat_StrStr_ReturnValue) == 0x000030, "Member 'BP_TrialsPostGameMenu_C_SetTimeText::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TrialsPostGameMenu_C_SetTimeText, CallFunc_GetGameState_ReturnValue) == 0x000040, "Member 'BP_TrialsPostGameMenu_C_SetTimeText::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TrialsPostGameMenu_C_SetTimeText, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000048, "Member 'BP_TrialsPostGameMenu_C_SetTimeText::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_TrialsPostGameMenu_C_SetTimeText, K2Node_DynamicCast_AsBP_Mariner_Trials_Game_State) == 0x000058, "Member 'BP_TrialsPostGameMenu_C_SetTimeText::K2Node_DynamicCast_AsBP_Mariner_Trials_Game_State' has a wrong offset!");
static_assert(offsetof(BP_TrialsPostGameMenu_C_SetTimeText, K2Node_DynamicCast_bSuccess) == 0x000060, "Member 'BP_TrialsPostGameMenu_C_SetTimeText::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_TrialsPostGameMenu_C_SetTimeText, CallFunc_Concat_StrStr_ReturnValue_2) == 0x000068, "Member 'BP_TrialsPostGameMenu_C_SetTimeText::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_TrialsPostGameMenu_C_SetTimeText, CallFunc_Concat_StrStr_ReturnValue_3) == 0x000078, "Member 'BP_TrialsPostGameMenu_C_SetTimeText::CallFunc_Concat_StrStr_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_TrialsPostGameMenu_C_SetTimeText, CallFunc_K2_IsValidTimerHandle_ReturnValue) == 0x000088, "Member 'BP_TrialsPostGameMenu_C_SetTimeText::CallFunc_K2_IsValidTimerHandle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TrialsPostGameMenu_C_SetTimeText, CallFunc_Conv_StringToText_ReturnValue) == 0x000090, "Member 'BP_TrialsPostGameMenu_C_SetTimeText::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TrialsPostGameMenu_C_SetTimeText, CallFunc_MakeLiteralText_ReturnValue) == 0x0000A8, "Member 'BP_TrialsPostGameMenu_C_SetTimeText::CallFunc_MakeLiteralText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TrialsPostGameMenu_C_SetTimeText, CallFunc_K2_GetTimerElapsedTimeHandle_ReturnValue) == 0x0000C0, "Member 'BP_TrialsPostGameMenu_C_SetTimeText::CallFunc_K2_GetTimerElapsedTimeHandle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TrialsPostGameMenu_C_SetTimeText, CallFunc_FromSeconds_ReturnValue) == 0x0000C8, "Member 'BP_TrialsPostGameMenu_C_SetTimeText::CallFunc_FromSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TrialsPostGameMenu_C_SetTimeText, CallFunc_BreakTimespan_Days) == 0x0000D0, "Member 'BP_TrialsPostGameMenu_C_SetTimeText::CallFunc_BreakTimespan_Days' has a wrong offset!");
static_assert(offsetof(BP_TrialsPostGameMenu_C_SetTimeText, CallFunc_BreakTimespan_Hours) == 0x0000D4, "Member 'BP_TrialsPostGameMenu_C_SetTimeText::CallFunc_BreakTimespan_Hours' has a wrong offset!");
static_assert(offsetof(BP_TrialsPostGameMenu_C_SetTimeText, CallFunc_BreakTimespan_Minutes) == 0x0000D8, "Member 'BP_TrialsPostGameMenu_C_SetTimeText::CallFunc_BreakTimespan_Minutes' has a wrong offset!");
static_assert(offsetof(BP_TrialsPostGameMenu_C_SetTimeText, CallFunc_BreakTimespan_Seconds) == 0x0000DC, "Member 'BP_TrialsPostGameMenu_C_SetTimeText::CallFunc_BreakTimespan_Seconds' has a wrong offset!");
static_assert(offsetof(BP_TrialsPostGameMenu_C_SetTimeText, CallFunc_BreakTimespan_Milliseconds) == 0x0000E0, "Member 'BP_TrialsPostGameMenu_C_SetTimeText::CallFunc_BreakTimespan_Milliseconds' has a wrong offset!");
static_assert(offsetof(BP_TrialsPostGameMenu_C_SetTimeText, CallFunc_Conv_IntToString_ReturnValue) == 0x0000E8, "Member 'BP_TrialsPostGameMenu_C_SetTimeText::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TrialsPostGameMenu_C_SetTimeText, CallFunc_Divide_IntInt_ReturnValue) == 0x0000F8, "Member 'BP_TrialsPostGameMenu_C_SetTimeText::CallFunc_Divide_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TrialsPostGameMenu_C_SetTimeText, CallFunc_Less_IntInt_ReturnValue) == 0x0000FC, "Member 'BP_TrialsPostGameMenu_C_SetTimeText::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TrialsPostGameMenu_C_SetTimeText, CallFunc_Conv_IntToString_ReturnValue_1) == 0x000100, "Member 'BP_TrialsPostGameMenu_C_SetTimeText::CallFunc_Conv_IntToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_TrialsPostGameMenu_C_SetTimeText, CallFunc_Concat_StrStr_ReturnValue_4) == 0x000110, "Member 'BP_TrialsPostGameMenu_C_SetTimeText::CallFunc_Concat_StrStr_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_TrialsPostGameMenu_C_SetTimeText, CallFunc_Conv_IntToString_ReturnValue_2) == 0x000120, "Member 'BP_TrialsPostGameMenu_C_SetTimeText::CallFunc_Conv_IntToString_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_TrialsPostGameMenu_C_SetTimeText, CallFunc_Less_IntInt_ReturnValue_1) == 0x000130, "Member 'BP_TrialsPostGameMenu_C_SetTimeText::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_TrialsPostGameMenu_C_SetTimeText, CallFunc_Conv_IntToString_ReturnValue_3) == 0x000138, "Member 'BP_TrialsPostGameMenu_C_SetTimeText::CallFunc_Conv_IntToString_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_TrialsPostGameMenu_C_SetTimeText, CallFunc_Concat_StrStr_ReturnValue_5) == 0x000148, "Member 'BP_TrialsPostGameMenu_C_SetTimeText::CallFunc_Concat_StrStr_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_TrialsPostGameMenu_C_SetTimeText, CallFunc_Less_IntInt_ReturnValue_2) == 0x000158, "Member 'BP_TrialsPostGameMenu_C_SetTimeText::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_TrialsPostGameMenu_C_SetTimeText, CallFunc_Conv_IntToString_ReturnValue_4) == 0x000160, "Member 'BP_TrialsPostGameMenu_C_SetTimeText::CallFunc_Conv_IntToString_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_TrialsPostGameMenu_C_SetTimeText, CallFunc_Concat_StrStr_ReturnValue_6) == 0x000170, "Member 'BP_TrialsPostGameMenu_C_SetTimeText::CallFunc_Concat_StrStr_ReturnValue_6' has a wrong offset!");

}

