#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: DodgeAbility

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "Mariner_structs.hpp"
#include "GameplayAbilities_structs.hpp"


namespace SDK::Params
{

// Function DodgeAbility.DodgeAbility_C.UpdateRocketsDodged__DelegateSignature
// 0x0004 (0x0004 - 0x0000)
struct DodgeAbility_C_UpdateRocketsDodged__DelegateSignature final
{
public:
	int32                                         RocketsDodged;                                     // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(DodgeAbility_C_UpdateRocketsDodged__DelegateSignature) == 0x000004, "Wrong alignment on DodgeAbility_C_UpdateRocketsDodged__DelegateSignature");
static_assert(sizeof(DodgeAbility_C_UpdateRocketsDodged__DelegateSignature) == 0x000004, "Wrong size on DodgeAbility_C_UpdateRocketsDodged__DelegateSignature");
static_assert(offsetof(DodgeAbility_C_UpdateRocketsDodged__DelegateSignature, RocketsDodged) == 0x000000, "Member 'DodgeAbility_C_UpdateRocketsDodged__DelegateSignature::RocketsDodged' has a wrong offset!");

// Function DodgeAbility.DodgeAbility_C.ExecuteUbergraph_DodgeAbility
// 0x02A0 (0x02A0 - 0x0000)
struct DodgeAbility_C_ExecuteUbergraph_DodgeAbility final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24FB[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Temp_string_Variable;                              // 0x0008(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0018(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   Temp_name_Variable;                                // 0x0028(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BP_HasAuthority_ReturnValue;              // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BP_HasAuthority_ReturnValue_1;            // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_24FC[0x6];                                     // 0x0032(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AMarinerCharacter*                      CallFunc_GetOwningCharacterFromActorInfo_ReturnValue; // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetDodgeLaunchVelocity_ReturnValue;       // 0x0040(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24FD[0x4];                                     // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UItem_NinjaHeadband_ItemAbility_C*      CallFunc_GetNinjaHeadbandAbility_NinjaHeadbandAbility; // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetNinjaHeadbandAbility_CastSuccess;      // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_24FE[0x7];                                     // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<class FName, float>                      K2Node_Event_Map;                                  // 0x0060(0x0050)(ConstParm, ZeroConstructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x00B0(0x0010)(ZeroConstructor, NoDestructor)
	float                                         CallFunc_Map_Find_Value;                           // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x00C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_24FF[0x3];                                     // 0x00C5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x00C8(0x0008)(NoDestructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_1;                            // 0x00D0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class AMarinerCharacter*                      CallFunc_GetOwningCharacterFromActorInfo_ReturnValue_1; // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_2;            // 0x00E8(0x0010)(ZeroConstructor, NoDestructor)
	class UMarinerAbilitySystemComponent*         CallFunc_GetOwningAbilitySystemComponent_ReturnValue; // 0x00F8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class UClass*                           CallFunc_GetCooldownGameplayEffectType_ReturnValue; // 0x0100(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x010C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x010D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2500[0x2];                                     // 0x010E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AMarinerFastArenaBounds*>        CallFunc_GetAllActorsOfClass_OutActors;            // 0x0110(0x0010)(ZeroConstructor, ReferenceParm)
	class AMarinerFastArenaBounds*                CallFunc_Array_Get_Item;                           // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2501[0x7];                                     // 0x0129(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AMarinerCharacter*                      CallFunc_GetOwningCharacterFromActorInfo_ReturnValue_2; // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayAbilityActorInfo              K2Node_Event_ActorInfo_1;                          // 0x0138(0x0040)(ContainsInstancedReference)
	bool                                          K2Node_Event_WasCancelled;                         // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2502[0x7];                                     // 0x0179(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class ICharacterAbilityInterface_C> K2Node_DynamicCast_AsCharacter_Ability_Interface;  // 0x0180(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2503[0x7];                                     // 0x0191(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue_1;        // 0x0198(0x0008)(NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UMarinerDamageableComponent* RelevantDamageableComponent, class AMarinerPlayerState* MegablastInstigator, bool bEnteredState)> K2Node_CreateDelegate_OutputDelegate_3;            // 0x01A0(0x0010)(ZeroConstructor, NoDestructor)
	class AMarinerCharacter*                      CallFunc_GetAvatarCharacterFromActorInfo_ReturnValue; // 0x01B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMarinerCharacter*                      CallFunc_GetOwningCharacterFromActorInfo_ReturnValue_3; // 0x01B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMarinerDamageableComponent*            CallFunc_BP_GetDamageableComponent_ReturnValue;    // 0x01C0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class UMarinerDamageableComponent*      K2Node_CustomEvent_RelevantDamageableComponent;    // 0x01C8(0x0008)(ConstParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class AMarinerPlayerState*              K2Node_CustomEvent_MegablastInstigator;            // 0x01D0(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bEnteredState;                  // 0x01D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2504[0x7];                                     // 0x01D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayAbilityActorInfo              K2Node_Event_ActorInfo;                            // 0x01E0(0x0040)(ContainsInstancedReference)
	bool                                          CallFunc_IsActive_ReturnValue;                     // 0x0220(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2505[0x7];                                     // 0x0221(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMarinerCharacterMovement*              CallFunc_GetOwningMovementComponent_ReturnValue;   // 0x0228(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_1;                              // 0x0230(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMarinerCharacterMovement*              CallFunc_GetOwningMovementComponent_ReturnValue_1; // 0x0238(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Map_Find_Value_1;                         // 0x0240(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_1;                   // 0x0244(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EMarinerInputActions                          K2Node_Event_InputType;                            // 0x0245(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EInputEvent                                   K2Node_Event_EventType;                            // 0x0246(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2506[0x1];                                     // 0x0247(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Temp_name_Variable_2;                              // 0x0248(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0250(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0251(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2507[0x2];                                     // 0x0252(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Map_Find_Value_2;                         // 0x0254(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_2;                   // 0x0258(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0259(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x025A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x025B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x025C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2508[0x3];                                     // 0x025D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_Select_Default;                             // 0x0260(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0270(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsBuildShipping_ReturnValue;              // 0x0280(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2509[0x3];                                     // 0x0281(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_4;            // 0x0284(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_250A[0x4];                                     // 0x0294(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue_2;        // 0x0298(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(DodgeAbility_C_ExecuteUbergraph_DodgeAbility) == 0x000008, "Wrong alignment on DodgeAbility_C_ExecuteUbergraph_DodgeAbility");
static_assert(sizeof(DodgeAbility_C_ExecuteUbergraph_DodgeAbility) == 0x0002A0, "Wrong size on DodgeAbility_C_ExecuteUbergraph_DodgeAbility");
static_assert(offsetof(DodgeAbility_C_ExecuteUbergraph_DodgeAbility, EntryPoint) == 0x000000, "Member 'DodgeAbility_C_ExecuteUbergraph_DodgeAbility::EntryPoint' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_ExecuteUbergraph_DodgeAbility, Temp_string_Variable) == 0x000008, "Member 'DodgeAbility_C_ExecuteUbergraph_DodgeAbility::Temp_string_Variable' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_ExecuteUbergraph_DodgeAbility, K2Node_CreateDelegate_OutputDelegate) == 0x000018, "Member 'DodgeAbility_C_ExecuteUbergraph_DodgeAbility::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_ExecuteUbergraph_DodgeAbility, Temp_name_Variable) == 0x000028, "Member 'DodgeAbility_C_ExecuteUbergraph_DodgeAbility::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_ExecuteUbergraph_DodgeAbility, CallFunc_BP_HasAuthority_ReturnValue) == 0x000030, "Member 'DodgeAbility_C_ExecuteUbergraph_DodgeAbility::CallFunc_BP_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_ExecuteUbergraph_DodgeAbility, CallFunc_BP_HasAuthority_ReturnValue_1) == 0x000031, "Member 'DodgeAbility_C_ExecuteUbergraph_DodgeAbility::CallFunc_BP_HasAuthority_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_ExecuteUbergraph_DodgeAbility, CallFunc_GetOwningCharacterFromActorInfo_ReturnValue) == 0x000038, "Member 'DodgeAbility_C_ExecuteUbergraph_DodgeAbility::CallFunc_GetOwningCharacterFromActorInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_ExecuteUbergraph_DodgeAbility, CallFunc_GetDodgeLaunchVelocity_ReturnValue) == 0x000040, "Member 'DodgeAbility_C_ExecuteUbergraph_DodgeAbility::CallFunc_GetDodgeLaunchVelocity_ReturnValue' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_ExecuteUbergraph_DodgeAbility, CallFunc_GetNinjaHeadbandAbility_NinjaHeadbandAbility) == 0x000050, "Member 'DodgeAbility_C_ExecuteUbergraph_DodgeAbility::CallFunc_GetNinjaHeadbandAbility_NinjaHeadbandAbility' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_ExecuteUbergraph_DodgeAbility, CallFunc_GetNinjaHeadbandAbility_CastSuccess) == 0x000058, "Member 'DodgeAbility_C_ExecuteUbergraph_DodgeAbility::CallFunc_GetNinjaHeadbandAbility_CastSuccess' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_ExecuteUbergraph_DodgeAbility, K2Node_Event_Map) == 0x000060, "Member 'DodgeAbility_C_ExecuteUbergraph_DodgeAbility::K2Node_Event_Map' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_ExecuteUbergraph_DodgeAbility, K2Node_CreateDelegate_OutputDelegate_1) == 0x0000B0, "Member 'DodgeAbility_C_ExecuteUbergraph_DodgeAbility::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_ExecuteUbergraph_DodgeAbility, CallFunc_Map_Find_Value) == 0x0000C0, "Member 'DodgeAbility_C_ExecuteUbergraph_DodgeAbility::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_ExecuteUbergraph_DodgeAbility, CallFunc_Map_Find_ReturnValue) == 0x0000C4, "Member 'DodgeAbility_C_ExecuteUbergraph_DodgeAbility::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_ExecuteUbergraph_DodgeAbility, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x0000C8, "Member 'DodgeAbility_C_ExecuteUbergraph_DodgeAbility::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_ExecuteUbergraph_DodgeAbility, Temp_string_Variable_1) == 0x0000D0, "Member 'DodgeAbility_C_ExecuteUbergraph_DodgeAbility::Temp_string_Variable_1' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_ExecuteUbergraph_DodgeAbility, CallFunc_GetOwningCharacterFromActorInfo_ReturnValue_1) == 0x0000E0, "Member 'DodgeAbility_C_ExecuteUbergraph_DodgeAbility::CallFunc_GetOwningCharacterFromActorInfo_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_ExecuteUbergraph_DodgeAbility, K2Node_CreateDelegate_OutputDelegate_2) == 0x0000E8, "Member 'DodgeAbility_C_ExecuteUbergraph_DodgeAbility::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_ExecuteUbergraph_DodgeAbility, CallFunc_GetOwningAbilitySystemComponent_ReturnValue) == 0x0000F8, "Member 'DodgeAbility_C_ExecuteUbergraph_DodgeAbility::CallFunc_GetOwningAbilitySystemComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_ExecuteUbergraph_DodgeAbility, CallFunc_GetCooldownGameplayEffectType_ReturnValue) == 0x000100, "Member 'DodgeAbility_C_ExecuteUbergraph_DodgeAbility::CallFunc_GetCooldownGameplayEffectType_ReturnValue' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_ExecuteUbergraph_DodgeAbility, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000108, "Member 'DodgeAbility_C_ExecuteUbergraph_DodgeAbility::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_ExecuteUbergraph_DodgeAbility, CallFunc_Not_PreBool_ReturnValue) == 0x00010C, "Member 'DodgeAbility_C_ExecuteUbergraph_DodgeAbility::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_ExecuteUbergraph_DodgeAbility, CallFunc_BooleanAND_ReturnValue) == 0x00010D, "Member 'DodgeAbility_C_ExecuteUbergraph_DodgeAbility::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_ExecuteUbergraph_DodgeAbility, CallFunc_GetAllActorsOfClass_OutActors) == 0x000110, "Member 'DodgeAbility_C_ExecuteUbergraph_DodgeAbility::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_ExecuteUbergraph_DodgeAbility, CallFunc_Array_Get_Item) == 0x000120, "Member 'DodgeAbility_C_ExecuteUbergraph_DodgeAbility::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_ExecuteUbergraph_DodgeAbility, Temp_bool_Variable) == 0x000128, "Member 'DodgeAbility_C_ExecuteUbergraph_DodgeAbility::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_ExecuteUbergraph_DodgeAbility, CallFunc_GetOwningCharacterFromActorInfo_ReturnValue_2) == 0x000130, "Member 'DodgeAbility_C_ExecuteUbergraph_DodgeAbility::CallFunc_GetOwningCharacterFromActorInfo_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_ExecuteUbergraph_DodgeAbility, K2Node_Event_ActorInfo_1) == 0x000138, "Member 'DodgeAbility_C_ExecuteUbergraph_DodgeAbility::K2Node_Event_ActorInfo_1' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_ExecuteUbergraph_DodgeAbility, K2Node_Event_WasCancelled) == 0x000178, "Member 'DodgeAbility_C_ExecuteUbergraph_DodgeAbility::K2Node_Event_WasCancelled' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_ExecuteUbergraph_DodgeAbility, K2Node_DynamicCast_AsCharacter_Ability_Interface) == 0x000180, "Member 'DodgeAbility_C_ExecuteUbergraph_DodgeAbility::K2Node_DynamicCast_AsCharacter_Ability_Interface' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_ExecuteUbergraph_DodgeAbility, K2Node_DynamicCast_bSuccess) == 0x000190, "Member 'DodgeAbility_C_ExecuteUbergraph_DodgeAbility::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_ExecuteUbergraph_DodgeAbility, CallFunc_K2_SetTimerDelegate_ReturnValue_1) == 0x000198, "Member 'DodgeAbility_C_ExecuteUbergraph_DodgeAbility::CallFunc_K2_SetTimerDelegate_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_ExecuteUbergraph_DodgeAbility, K2Node_CreateDelegate_OutputDelegate_3) == 0x0001A0, "Member 'DodgeAbility_C_ExecuteUbergraph_DodgeAbility::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_ExecuteUbergraph_DodgeAbility, CallFunc_GetAvatarCharacterFromActorInfo_ReturnValue) == 0x0001B0, "Member 'DodgeAbility_C_ExecuteUbergraph_DodgeAbility::CallFunc_GetAvatarCharacterFromActorInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_ExecuteUbergraph_DodgeAbility, CallFunc_GetOwningCharacterFromActorInfo_ReturnValue_3) == 0x0001B8, "Member 'DodgeAbility_C_ExecuteUbergraph_DodgeAbility::CallFunc_GetOwningCharacterFromActorInfo_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_ExecuteUbergraph_DodgeAbility, CallFunc_BP_GetDamageableComponent_ReturnValue) == 0x0001C0, "Member 'DodgeAbility_C_ExecuteUbergraph_DodgeAbility::CallFunc_BP_GetDamageableComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_ExecuteUbergraph_DodgeAbility, K2Node_CustomEvent_RelevantDamageableComponent) == 0x0001C8, "Member 'DodgeAbility_C_ExecuteUbergraph_DodgeAbility::K2Node_CustomEvent_RelevantDamageableComponent' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_ExecuteUbergraph_DodgeAbility, K2Node_CustomEvent_MegablastInstigator) == 0x0001D0, "Member 'DodgeAbility_C_ExecuteUbergraph_DodgeAbility::K2Node_CustomEvent_MegablastInstigator' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_ExecuteUbergraph_DodgeAbility, K2Node_CustomEvent_bEnteredState) == 0x0001D8, "Member 'DodgeAbility_C_ExecuteUbergraph_DodgeAbility::K2Node_CustomEvent_bEnteredState' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_ExecuteUbergraph_DodgeAbility, K2Node_Event_ActorInfo) == 0x0001E0, "Member 'DodgeAbility_C_ExecuteUbergraph_DodgeAbility::K2Node_Event_ActorInfo' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_ExecuteUbergraph_DodgeAbility, CallFunc_IsActive_ReturnValue) == 0x000220, "Member 'DodgeAbility_C_ExecuteUbergraph_DodgeAbility::CallFunc_IsActive_ReturnValue' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_ExecuteUbergraph_DodgeAbility, CallFunc_GetOwningMovementComponent_ReturnValue) == 0x000228, "Member 'DodgeAbility_C_ExecuteUbergraph_DodgeAbility::CallFunc_GetOwningMovementComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_ExecuteUbergraph_DodgeAbility, Temp_name_Variable_1) == 0x000230, "Member 'DodgeAbility_C_ExecuteUbergraph_DodgeAbility::Temp_name_Variable_1' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_ExecuteUbergraph_DodgeAbility, CallFunc_GetOwningMovementComponent_ReturnValue_1) == 0x000238, "Member 'DodgeAbility_C_ExecuteUbergraph_DodgeAbility::CallFunc_GetOwningMovementComponent_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_ExecuteUbergraph_DodgeAbility, CallFunc_Map_Find_Value_1) == 0x000240, "Member 'DodgeAbility_C_ExecuteUbergraph_DodgeAbility::CallFunc_Map_Find_Value_1' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_ExecuteUbergraph_DodgeAbility, CallFunc_Map_Find_ReturnValue_1) == 0x000244, "Member 'DodgeAbility_C_ExecuteUbergraph_DodgeAbility::CallFunc_Map_Find_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_ExecuteUbergraph_DodgeAbility, K2Node_Event_InputType) == 0x000245, "Member 'DodgeAbility_C_ExecuteUbergraph_DodgeAbility::K2Node_Event_InputType' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_ExecuteUbergraph_DodgeAbility, K2Node_Event_EventType) == 0x000246, "Member 'DodgeAbility_C_ExecuteUbergraph_DodgeAbility::K2Node_Event_EventType' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_ExecuteUbergraph_DodgeAbility, Temp_name_Variable_2) == 0x000248, "Member 'DodgeAbility_C_ExecuteUbergraph_DodgeAbility::Temp_name_Variable_2' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_ExecuteUbergraph_DodgeAbility, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000250, "Member 'DodgeAbility_C_ExecuteUbergraph_DodgeAbility::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_ExecuteUbergraph_DodgeAbility, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000251, "Member 'DodgeAbility_C_ExecuteUbergraph_DodgeAbility::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_ExecuteUbergraph_DodgeAbility, CallFunc_Map_Find_Value_2) == 0x000254, "Member 'DodgeAbility_C_ExecuteUbergraph_DodgeAbility::CallFunc_Map_Find_Value_2' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_ExecuteUbergraph_DodgeAbility, CallFunc_Map_Find_ReturnValue_2) == 0x000258, "Member 'DodgeAbility_C_ExecuteUbergraph_DodgeAbility::CallFunc_Map_Find_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_ExecuteUbergraph_DodgeAbility, CallFunc_BooleanAND_ReturnValue_1) == 0x000259, "Member 'DodgeAbility_C_ExecuteUbergraph_DodgeAbility::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_ExecuteUbergraph_DodgeAbility, CallFunc_Not_PreBool_ReturnValue_1) == 0x00025A, "Member 'DodgeAbility_C_ExecuteUbergraph_DodgeAbility::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_ExecuteUbergraph_DodgeAbility, CallFunc_HasAuthority_ReturnValue) == 0x00025B, "Member 'DodgeAbility_C_ExecuteUbergraph_DodgeAbility::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_ExecuteUbergraph_DodgeAbility, CallFunc_Not_PreBool_ReturnValue_2) == 0x00025C, "Member 'DodgeAbility_C_ExecuteUbergraph_DodgeAbility::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_ExecuteUbergraph_DodgeAbility, K2Node_Select_Default) == 0x000260, "Member 'DodgeAbility_C_ExecuteUbergraph_DodgeAbility::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_ExecuteUbergraph_DodgeAbility, CallFunc_Concat_StrStr_ReturnValue) == 0x000270, "Member 'DodgeAbility_C_ExecuteUbergraph_DodgeAbility::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_ExecuteUbergraph_DodgeAbility, CallFunc_IsBuildShipping_ReturnValue) == 0x000280, "Member 'DodgeAbility_C_ExecuteUbergraph_DodgeAbility::CallFunc_IsBuildShipping_ReturnValue' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_ExecuteUbergraph_DodgeAbility, K2Node_CreateDelegate_OutputDelegate_4) == 0x000284, "Member 'DodgeAbility_C_ExecuteUbergraph_DodgeAbility::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_ExecuteUbergraph_DodgeAbility, CallFunc_K2_SetTimerDelegate_ReturnValue_2) == 0x000298, "Member 'DodgeAbility_C_ExecuteUbergraph_DodgeAbility::CallFunc_K2_SetTimerDelegate_ReturnValue_2' has a wrong offset!");

// Function DodgeAbility.DodgeAbility_C.BP_OnAnyInputReceived
// 0x0002 (0x0002 - 0x0000)
struct DodgeAbility_C_BP_OnAnyInputReceived final
{
public:
	EMarinerInputActions                          InputType;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EInputEvent                                   EventType;                                         // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(DodgeAbility_C_BP_OnAnyInputReceived) == 0x000001, "Wrong alignment on DodgeAbility_C_BP_OnAnyInputReceived");
static_assert(sizeof(DodgeAbility_C_BP_OnAnyInputReceived) == 0x000002, "Wrong size on DodgeAbility_C_BP_OnAnyInputReceived");
static_assert(offsetof(DodgeAbility_C_BP_OnAnyInputReceived, InputType) == 0x000000, "Member 'DodgeAbility_C_BP_OnAnyInputReceived::InputType' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_BP_OnAnyInputReceived, EventType) == 0x000001, "Member 'DodgeAbility_C_BP_OnAnyInputReceived::EventType' has a wrong offset!");

// Function DodgeAbility.DodgeAbility_C.BP_OnAbilityActivated
// 0x0040 (0x0040 - 0x0000)
struct DodgeAbility_C_BP_OnAbilityActivated final
{
public:
	struct FGameplayAbilityActorInfo              ActorInfo;                                         // 0x0000(0x0040)(BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference)
};
static_assert(alignof(DodgeAbility_C_BP_OnAbilityActivated) == 0x000008, "Wrong alignment on DodgeAbility_C_BP_OnAbilityActivated");
static_assert(sizeof(DodgeAbility_C_BP_OnAbilityActivated) == 0x000040, "Wrong size on DodgeAbility_C_BP_OnAbilityActivated");
static_assert(offsetof(DodgeAbility_C_BP_OnAbilityActivated, ActorInfo) == 0x000000, "Member 'DodgeAbility_C_BP_OnAbilityActivated::ActorInfo' has a wrong offset!");

// Function DodgeAbility.DodgeAbility_C.OnMegablastStateChangedOwner
// 0x0018 (0x0018 - 0x0000)
struct DodgeAbility_C_OnMegablastStateChangedOwner final
{
public:
	const class UMarinerDamageableComponent*      RelevantDamageableComponent;                       // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class AMarinerPlayerState*              MegablastInstigator;                               // 0x0008(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bEnteredState;                                     // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(DodgeAbility_C_OnMegablastStateChangedOwner) == 0x000008, "Wrong alignment on DodgeAbility_C_OnMegablastStateChangedOwner");
static_assert(sizeof(DodgeAbility_C_OnMegablastStateChangedOwner) == 0x000018, "Wrong size on DodgeAbility_C_OnMegablastStateChangedOwner");
static_assert(offsetof(DodgeAbility_C_OnMegablastStateChangedOwner, RelevantDamageableComponent) == 0x000000, "Member 'DodgeAbility_C_OnMegablastStateChangedOwner::RelevantDamageableComponent' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_OnMegablastStateChangedOwner, MegablastInstigator) == 0x000008, "Member 'DodgeAbility_C_OnMegablastStateChangedOwner::MegablastInstigator' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_OnMegablastStateChangedOwner, bEnteredState) == 0x000010, "Member 'DodgeAbility_C_OnMegablastStateChangedOwner::bEnteredState' has a wrong offset!");

// Function DodgeAbility.DodgeAbility_C.BP_OnAbilityEnded
// 0x0048 (0x0048 - 0x0000)
struct DodgeAbility_C_BP_OnAbilityEnded final
{
public:
	struct FGameplayAbilityActorInfo              ActorInfo;                                         // 0x0000(0x0040)(BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference)
	bool                                          WasCancelled;                                      // 0x0040(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(DodgeAbility_C_BP_OnAbilityEnded) == 0x000008, "Wrong alignment on DodgeAbility_C_BP_OnAbilityEnded");
static_assert(sizeof(DodgeAbility_C_BP_OnAbilityEnded) == 0x000048, "Wrong size on DodgeAbility_C_BP_OnAbilityEnded");
static_assert(offsetof(DodgeAbility_C_BP_OnAbilityEnded, ActorInfo) == 0x000000, "Member 'DodgeAbility_C_BP_OnAbilityEnded::ActorInfo' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_BP_OnAbilityEnded, WasCancelled) == 0x000040, "Member 'DodgeAbility_C_BP_OnAbilityEnded::WasCancelled' has a wrong offset!");

// Function DodgeAbility.DodgeAbility_C.ProcessArtifactData
// 0x0050 (0x0050 - 0x0000)
struct DodgeAbility_C_ProcessArtifactData final
{
public:
	TMap<class FName, float>                      Map;                                               // 0x0000(0x0050)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm)
};
static_assert(alignof(DodgeAbility_C_ProcessArtifactData) == 0x000008, "Wrong alignment on DodgeAbility_C_ProcessArtifactData");
static_assert(sizeof(DodgeAbility_C_ProcessArtifactData) == 0x000050, "Wrong size on DodgeAbility_C_ProcessArtifactData");
static_assert(offsetof(DodgeAbility_C_ProcessArtifactData, Map) == 0x000000, "Member 'DodgeAbility_C_ProcessArtifactData::Map' has a wrong offset!");

// Function DodgeAbility.DodgeAbility_C.GetOwningController
// 0x0040 (0x0040 - 0x0000)
struct DodgeAbility_C_GetOwningController final
{
public:
	class AMarinerPlayerController*               OwningControlller;                                 // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_250B[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetAvatarActorFromActorInfo_ReturnValue;  // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMarinerCharacter*                      K2Node_DynamicCast_AsMariner_Character;            // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_250C[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMarinerPlayerController*               K2Node_DynamicCast_AsMariner_Player_Controller;    // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(DodgeAbility_C_GetOwningController) == 0x000008, "Wrong alignment on DodgeAbility_C_GetOwningController");
static_assert(sizeof(DodgeAbility_C_GetOwningController) == 0x000040, "Wrong size on DodgeAbility_C_GetOwningController");
static_assert(offsetof(DodgeAbility_C_GetOwningController, OwningControlller) == 0x000000, "Member 'DodgeAbility_C_GetOwningController::OwningControlller' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_GetOwningController, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'DodgeAbility_C_GetOwningController::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_GetOwningController, CallFunc_GetAvatarActorFromActorInfo_ReturnValue) == 0x000010, "Member 'DodgeAbility_C_GetOwningController::CallFunc_GetAvatarActorFromActorInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_GetOwningController, K2Node_DynamicCast_AsMariner_Character) == 0x000018, "Member 'DodgeAbility_C_GetOwningController::K2Node_DynamicCast_AsMariner_Character' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_GetOwningController, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'DodgeAbility_C_GetOwningController::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_GetOwningController, CallFunc_GetController_ReturnValue) == 0x000028, "Member 'DodgeAbility_C_GetOwningController::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_GetOwningController, K2Node_DynamicCast_AsMariner_Player_Controller) == 0x000030, "Member 'DodgeAbility_C_GetOwningController::K2Node_DynamicCast_AsMariner_Player_Controller' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_GetOwningController, K2Node_DynamicCast_bSuccess_1) == 0x000038, "Member 'DodgeAbility_C_GetOwningController::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");

// Function DodgeAbility.DodgeAbility_C.GetNormalizedAcceleration
// 0x0030 (0x0030 - 0x0000)
struct DodgeAbility_C_GetNormalizedAcceleration final
{
public:
	struct FVector                                Acceleration;                                      // 0x0000(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_250D[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AMarinerCharacter*                      CallFunc_GetOwningCharacterFromActorInfo_ReturnValue; // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetCurrentAcceleration_ReturnValue;       // 0x0018(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x0024(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(DodgeAbility_C_GetNormalizedAcceleration) == 0x000008, "Wrong alignment on DodgeAbility_C_GetNormalizedAcceleration");
static_assert(sizeof(DodgeAbility_C_GetNormalizedAcceleration) == 0x000030, "Wrong size on DodgeAbility_C_GetNormalizedAcceleration");
static_assert(offsetof(DodgeAbility_C_GetNormalizedAcceleration, Acceleration) == 0x000000, "Member 'DodgeAbility_C_GetNormalizedAcceleration::Acceleration' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_GetNormalizedAcceleration, CallFunc_GetOwningCharacterFromActorInfo_ReturnValue) == 0x000010, "Member 'DodgeAbility_C_GetNormalizedAcceleration::CallFunc_GetOwningCharacterFromActorInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_GetNormalizedAcceleration, CallFunc_GetCurrentAcceleration_ReturnValue) == 0x000018, "Member 'DodgeAbility_C_GetNormalizedAcceleration::CallFunc_GetCurrentAcceleration_ReturnValue' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_GetNormalizedAcceleration, CallFunc_Normal_ReturnValue) == 0x000024, "Member 'DodgeAbility_C_GetNormalizedAcceleration::CallFunc_Normal_ReturnValue' has a wrong offset!");

// Function DodgeAbility.DodgeAbility_C.GetDodgeStrength
// 0x0028 (0x0028 - 0x0000)
struct DodgeAbility_C_GetDodgeStrength final
{
public:
	float                                         Param_DodgeStrength;                               // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TempStrength;                                      // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_250E[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UItem_NinjaHeadband_ItemAbility_C*      CallFunc_GetNinjaHeadbandAbility_NinjaHeadbandAbility; // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetNinjaHeadbandAbility_CastSuccess;      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_250F[0x3];                                     // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default;                             // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(DodgeAbility_C_GetDodgeStrength) == 0x000008, "Wrong alignment on DodgeAbility_C_GetDodgeStrength");
static_assert(sizeof(DodgeAbility_C_GetDodgeStrength) == 0x000028, "Wrong size on DodgeAbility_C_GetDodgeStrength");
static_assert(offsetof(DodgeAbility_C_GetDodgeStrength, Param_DodgeStrength) == 0x000000, "Member 'DodgeAbility_C_GetDodgeStrength::Param_DodgeStrength' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_GetDodgeStrength, TempStrength) == 0x000004, "Member 'DodgeAbility_C_GetDodgeStrength::TempStrength' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_GetDodgeStrength, Temp_bool_Variable) == 0x000008, "Member 'DodgeAbility_C_GetDodgeStrength::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_GetDodgeStrength, CallFunc_GetNinjaHeadbandAbility_NinjaHeadbandAbility) == 0x000010, "Member 'DodgeAbility_C_GetDodgeStrength::CallFunc_GetNinjaHeadbandAbility_NinjaHeadbandAbility' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_GetDodgeStrength, CallFunc_GetNinjaHeadbandAbility_CastSuccess) == 0x000018, "Member 'DodgeAbility_C_GetDodgeStrength::CallFunc_GetNinjaHeadbandAbility_CastSuccess' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_GetDodgeStrength, K2Node_Select_Default) == 0x00001C, "Member 'DodgeAbility_C_GetDodgeStrength::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_GetDodgeStrength, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000020, "Member 'DodgeAbility_C_GetDodgeStrength::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");

// Function DodgeAbility.DodgeAbility_C.GetDodgeLaunchVelocity
// 0x0138 (0x0138 - 0x0000)
struct DodgeAbility_C_GetDodgeLaunchVelocity final
{
public:
	struct FVector                                ReturnValue;                                       // 0x0000(0x000C)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ChanceForBotToDodgeInPlace;                        // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetDodgeInPlaceStrength_DodgeInPlaceDir;  // 0x0010(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetInputVector_InputVector;               // 0x001C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_AntiSelfKOLaunchModifier_AdjustedDodge;   // 0x0028(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_VectorVector_ReturnValue;      // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2510[0x3];                                     // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_CalculateDirectionalLaunchVector_LaunchVector; // 0x0038(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetDodgeInPlaceStrength_DodgeInPlaceDir_1; // 0x0044(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FMarinerGameplayAbilityTargetData_Aim  CallFunc_GetAimData_ReturnValue;                   // 0x0050(0x0050)(ConstParm)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x00A0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_AntiSelfKOLaunchModifier_AdjustedDodge_1; // 0x00AC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_VectorVector_ReturnValue_1;    // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2511[0x3];                                     // 0x00B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_Conv_VectorToVector2D_ReturnValue;        // 0x00BC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x00C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2512[0x3];                                     // 0x00C5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_Normal2D_ReturnValue;                     // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_Vector2DToVector_ReturnValue;        // 0x00D0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetDodgeMinLaunchAngle_MinLaunchAngle;    // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetDodgeStrength_DodgeStrength;           // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2513[0x4];                                     // 0x00E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AMarinerCharacter*                      CallFunc_GetOwningCharacterFromActorInfo_ReturnValue; // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorUpVector_ReturnValue;             // 0x00F0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Cross_VectorVector_ReturnValue;           // 0x00FC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_RotateAngleAxis_ReturnValue;              // 0x0108(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0114(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Select_Default;                             // 0x0120(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_AntiSelfKOLaunchModifier_AdjustedDodge_2; // 0x012C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(DodgeAbility_C_GetDodgeLaunchVelocity) == 0x000008, "Wrong alignment on DodgeAbility_C_GetDodgeLaunchVelocity");
static_assert(sizeof(DodgeAbility_C_GetDodgeLaunchVelocity) == 0x000138, "Wrong size on DodgeAbility_C_GetDodgeLaunchVelocity");
static_assert(offsetof(DodgeAbility_C_GetDodgeLaunchVelocity, ReturnValue) == 0x000000, "Member 'DodgeAbility_C_GetDodgeLaunchVelocity::ReturnValue' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_GetDodgeLaunchVelocity, ChanceForBotToDodgeInPlace) == 0x00000C, "Member 'DodgeAbility_C_GetDodgeLaunchVelocity::ChanceForBotToDodgeInPlace' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_GetDodgeLaunchVelocity, CallFunc_GetDodgeInPlaceStrength_DodgeInPlaceDir) == 0x000010, "Member 'DodgeAbility_C_GetDodgeLaunchVelocity::CallFunc_GetDodgeInPlaceStrength_DodgeInPlaceDir' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_GetDodgeLaunchVelocity, CallFunc_GetInputVector_InputVector) == 0x00001C, "Member 'DodgeAbility_C_GetDodgeLaunchVelocity::CallFunc_GetInputVector_InputVector' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_GetDodgeLaunchVelocity, CallFunc_AntiSelfKOLaunchModifier_AdjustedDodge) == 0x000028, "Member 'DodgeAbility_C_GetDodgeLaunchVelocity::CallFunc_AntiSelfKOLaunchModifier_AdjustedDodge' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_GetDodgeLaunchVelocity, CallFunc_EqualEqual_VectorVector_ReturnValue) == 0x000034, "Member 'DodgeAbility_C_GetDodgeLaunchVelocity::CallFunc_EqualEqual_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_GetDodgeLaunchVelocity, CallFunc_CalculateDirectionalLaunchVector_LaunchVector) == 0x000038, "Member 'DodgeAbility_C_GetDodgeLaunchVelocity::CallFunc_CalculateDirectionalLaunchVector_LaunchVector' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_GetDodgeLaunchVelocity, CallFunc_GetDodgeInPlaceStrength_DodgeInPlaceDir_1) == 0x000044, "Member 'DodgeAbility_C_GetDodgeLaunchVelocity::CallFunc_GetDodgeInPlaceStrength_DodgeInPlaceDir_1' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_GetDodgeLaunchVelocity, CallFunc_GetAimData_ReturnValue) == 0x000050, "Member 'DodgeAbility_C_GetDodgeLaunchVelocity::CallFunc_GetAimData_ReturnValue' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_GetDodgeLaunchVelocity, CallFunc_Normal_ReturnValue) == 0x0000A0, "Member 'DodgeAbility_C_GetDodgeLaunchVelocity::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_GetDodgeLaunchVelocity, CallFunc_AntiSelfKOLaunchModifier_AdjustedDodge_1) == 0x0000AC, "Member 'DodgeAbility_C_GetDodgeLaunchVelocity::CallFunc_AntiSelfKOLaunchModifier_AdjustedDodge_1' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_GetDodgeLaunchVelocity, CallFunc_EqualEqual_VectorVector_ReturnValue_1) == 0x0000B8, "Member 'DodgeAbility_C_GetDodgeLaunchVelocity::CallFunc_EqualEqual_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_GetDodgeLaunchVelocity, CallFunc_Conv_VectorToVector2D_ReturnValue) == 0x0000BC, "Member 'DodgeAbility_C_GetDodgeLaunchVelocity::CallFunc_Conv_VectorToVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_GetDodgeLaunchVelocity, Temp_bool_Variable) == 0x0000C4, "Member 'DodgeAbility_C_GetDodgeLaunchVelocity::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_GetDodgeLaunchVelocity, CallFunc_Normal2D_ReturnValue) == 0x0000C8, "Member 'DodgeAbility_C_GetDodgeLaunchVelocity::CallFunc_Normal2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_GetDodgeLaunchVelocity, CallFunc_Conv_Vector2DToVector_ReturnValue) == 0x0000D0, "Member 'DodgeAbility_C_GetDodgeLaunchVelocity::CallFunc_Conv_Vector2DToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_GetDodgeLaunchVelocity, CallFunc_GetDodgeMinLaunchAngle_MinLaunchAngle) == 0x0000DC, "Member 'DodgeAbility_C_GetDodgeLaunchVelocity::CallFunc_GetDodgeMinLaunchAngle_MinLaunchAngle' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_GetDodgeLaunchVelocity, CallFunc_GetDodgeStrength_DodgeStrength) == 0x0000E0, "Member 'DodgeAbility_C_GetDodgeLaunchVelocity::CallFunc_GetDodgeStrength_DodgeStrength' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_GetDodgeLaunchVelocity, CallFunc_GetOwningCharacterFromActorInfo_ReturnValue) == 0x0000E8, "Member 'DodgeAbility_C_GetDodgeLaunchVelocity::CallFunc_GetOwningCharacterFromActorInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_GetDodgeLaunchVelocity, CallFunc_GetActorUpVector_ReturnValue) == 0x0000F0, "Member 'DodgeAbility_C_GetDodgeLaunchVelocity::CallFunc_GetActorUpVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_GetDodgeLaunchVelocity, CallFunc_Cross_VectorVector_ReturnValue) == 0x0000FC, "Member 'DodgeAbility_C_GetDodgeLaunchVelocity::CallFunc_Cross_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_GetDodgeLaunchVelocity, CallFunc_RotateAngleAxis_ReturnValue) == 0x000108, "Member 'DodgeAbility_C_GetDodgeLaunchVelocity::CallFunc_RotateAngleAxis_ReturnValue' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_GetDodgeLaunchVelocity, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000114, "Member 'DodgeAbility_C_GetDodgeLaunchVelocity::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_GetDodgeLaunchVelocity, K2Node_Select_Default) == 0x000120, "Member 'DodgeAbility_C_GetDodgeLaunchVelocity::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_GetDodgeLaunchVelocity, CallFunc_AntiSelfKOLaunchModifier_AdjustedDodge_2) == 0x00012C, "Member 'DodgeAbility_C_GetDodgeLaunchVelocity::CallFunc_AntiSelfKOLaunchModifier_AdjustedDodge_2' has a wrong offset!");

// Function DodgeAbility.DodgeAbility_C.GetDodgeMinLaunchAngle
// 0x0028 (0x0028 - 0x0000)
struct DodgeAbility_C_GetDodgeMinLaunchAngle final
{
public:
	float                                         MinLaunchAngle;                                    // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2514[0x2];                                     // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2515[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UItem_NinjaHeadband_ItemAbility_C*      CallFunc_GetNinjaHeadbandAbility_NinjaHeadbandAbility; // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetNinjaHeadbandAbility_CastSuccess;      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2516[0x3];                                     // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default;                             // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(DodgeAbility_C_GetDodgeMinLaunchAngle) == 0x000008, "Wrong alignment on DodgeAbility_C_GetDodgeMinLaunchAngle");
static_assert(sizeof(DodgeAbility_C_GetDodgeMinLaunchAngle) == 0x000028, "Wrong size on DodgeAbility_C_GetDodgeMinLaunchAngle");
static_assert(offsetof(DodgeAbility_C_GetDodgeMinLaunchAngle, MinLaunchAngle) == 0x000000, "Member 'DodgeAbility_C_GetDodgeMinLaunchAngle::MinLaunchAngle' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_GetDodgeMinLaunchAngle, Temp_bool_Variable) == 0x000004, "Member 'DodgeAbility_C_GetDodgeMinLaunchAngle::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_GetDodgeMinLaunchAngle, CallFunc_Not_PreBool_ReturnValue) == 0x000005, "Member 'DodgeAbility_C_GetDodgeMinLaunchAngle::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_GetDodgeMinLaunchAngle, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000008, "Member 'DodgeAbility_C_GetDodgeMinLaunchAngle::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_GetDodgeMinLaunchAngle, CallFunc_GetNinjaHeadbandAbility_NinjaHeadbandAbility) == 0x000010, "Member 'DodgeAbility_C_GetDodgeMinLaunchAngle::CallFunc_GetNinjaHeadbandAbility_NinjaHeadbandAbility' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_GetDodgeMinLaunchAngle, CallFunc_GetNinjaHeadbandAbility_CastSuccess) == 0x000018, "Member 'DodgeAbility_C_GetDodgeMinLaunchAngle::CallFunc_GetNinjaHeadbandAbility_CastSuccess' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_GetDodgeMinLaunchAngle, K2Node_Select_Default) == 0x00001C, "Member 'DodgeAbility_C_GetDodgeMinLaunchAngle::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_GetDodgeMinLaunchAngle, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x000020, "Member 'DodgeAbility_C_GetDodgeMinLaunchAngle::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");

// Function DodgeAbility.DodgeAbility_C.ApplyActiveEffects_MoveAffecting
// 0x0030 (0x0030 - 0x0000)
struct DodgeAbility_C_ApplyActiveEffects_MoveAffecting final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2517[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMarinerAbilitySystemComponent*         CallFunc_GetOwningAbilitySystemComponent_ReturnValue; // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2518[0x4];                                     // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(DodgeAbility_C_ApplyActiveEffects_MoveAffecting) == 0x000008, "Wrong alignment on DodgeAbility_C_ApplyActiveEffects_MoveAffecting");
static_assert(sizeof(DodgeAbility_C_ApplyActiveEffects_MoveAffecting) == 0x000030, "Wrong size on DodgeAbility_C_ApplyActiveEffects_MoveAffecting");
static_assert(offsetof(DodgeAbility_C_ApplyActiveEffects_MoveAffecting, Temp_int_Array_Index_Variable) == 0x000000, "Member 'DodgeAbility_C_ApplyActiveEffects_MoveAffecting::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_ApplyActiveEffects_MoveAffecting, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'DodgeAbility_C_ApplyActiveEffects_MoveAffecting::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_ApplyActiveEffects_MoveAffecting, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'DodgeAbility_C_ApplyActiveEffects_MoveAffecting::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_ApplyActiveEffects_MoveAffecting, CallFunc_GetOwningAbilitySystemComponent_ReturnValue) == 0x000010, "Member 'DodgeAbility_C_ApplyActiveEffects_MoveAffecting::CallFunc_GetOwningAbilitySystemComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_ApplyActiveEffects_MoveAffecting, CallFunc_Array_Length_ReturnValue) == 0x000018, "Member 'DodgeAbility_C_ApplyActiveEffects_MoveAffecting::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_ApplyActiveEffects_MoveAffecting, CallFunc_Array_Get_Item) == 0x000020, "Member 'DodgeAbility_C_ApplyActiveEffects_MoveAffecting::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_ApplyActiveEffects_MoveAffecting, CallFunc_Less_IntInt_ReturnValue) == 0x000028, "Member 'DodgeAbility_C_ApplyActiveEffects_MoveAffecting::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function DodgeAbility.DodgeAbility_C.ApplyActiveEffects_Predictive
// 0x0020 (0x0020 - 0x0000)
struct DodgeAbility_C_ApplyActiveEffects_Predictive final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2519[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(DodgeAbility_C_ApplyActiveEffects_Predictive) == 0x000008, "Wrong alignment on DodgeAbility_C_ApplyActiveEffects_Predictive");
static_assert(sizeof(DodgeAbility_C_ApplyActiveEffects_Predictive) == 0x000020, "Wrong size on DodgeAbility_C_ApplyActiveEffects_Predictive");
static_assert(offsetof(DodgeAbility_C_ApplyActiveEffects_Predictive, Temp_int_Array_Index_Variable) == 0x000000, "Member 'DodgeAbility_C_ApplyActiveEffects_Predictive::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_ApplyActiveEffects_Predictive, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'DodgeAbility_C_ApplyActiveEffects_Predictive::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_ApplyActiveEffects_Predictive, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'DodgeAbility_C_ApplyActiveEffects_Predictive::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_ApplyActiveEffects_Predictive, CallFunc_Array_Get_Item) == 0x000010, "Member 'DodgeAbility_C_ApplyActiveEffects_Predictive::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_ApplyActiveEffects_Predictive, CallFunc_Array_Length_ReturnValue) == 0x000018, "Member 'DodgeAbility_C_ApplyActiveEffects_Predictive::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_ApplyActiveEffects_Predictive, CallFunc_Less_IntInt_ReturnValue) == 0x00001C, "Member 'DodgeAbility_C_ApplyActiveEffects_Predictive::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function DodgeAbility.DodgeAbility_C.RemoveActiveEffects_PredictedRejection
// 0x0030 (0x0030 - 0x0000)
struct DodgeAbility_C_RemoveActiveEffects_PredictedRejection final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_251A[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMarinerAbilitySystemComponent*         CallFunc_GetOwningAbilitySystemComponent_ReturnValue; // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_251B[0x4];                                     // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(DodgeAbility_C_RemoveActiveEffects_PredictedRejection) == 0x000008, "Wrong alignment on DodgeAbility_C_RemoveActiveEffects_PredictedRejection");
static_assert(sizeof(DodgeAbility_C_RemoveActiveEffects_PredictedRejection) == 0x000030, "Wrong size on DodgeAbility_C_RemoveActiveEffects_PredictedRejection");
static_assert(offsetof(DodgeAbility_C_RemoveActiveEffects_PredictedRejection, Temp_int_Array_Index_Variable) == 0x000000, "Member 'DodgeAbility_C_RemoveActiveEffects_PredictedRejection::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_RemoveActiveEffects_PredictedRejection, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'DodgeAbility_C_RemoveActiveEffects_PredictedRejection::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_RemoveActiveEffects_PredictedRejection, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'DodgeAbility_C_RemoveActiveEffects_PredictedRejection::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_RemoveActiveEffects_PredictedRejection, CallFunc_GetOwningAbilitySystemComponent_ReturnValue) == 0x000010, "Member 'DodgeAbility_C_RemoveActiveEffects_PredictedRejection::CallFunc_GetOwningAbilitySystemComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_RemoveActiveEffects_PredictedRejection, CallFunc_Array_Length_ReturnValue) == 0x000018, "Member 'DodgeAbility_C_RemoveActiveEffects_PredictedRejection::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_RemoveActiveEffects_PredictedRejection, CallFunc_Array_Get_Item) == 0x000020, "Member 'DodgeAbility_C_RemoveActiveEffects_PredictedRejection::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_RemoveActiveEffects_PredictedRejection, CallFunc_Less_IntInt_ReturnValue) == 0x000028, "Member 'DodgeAbility_C_RemoveActiveEffects_PredictedRejection::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function DodgeAbility.DodgeAbility_C.RemoveActiveEffects_Predictive
// 0x0030 (0x0030 - 0x0000)
struct DodgeAbility_C_RemoveActiveEffects_Predictive final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_251C[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMarinerAbilitySystemComponent*         CallFunc_GetOwningAbilitySystemComponent_ReturnValue; // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_251D[0x4];                                     // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(DodgeAbility_C_RemoveActiveEffects_Predictive) == 0x000008, "Wrong alignment on DodgeAbility_C_RemoveActiveEffects_Predictive");
static_assert(sizeof(DodgeAbility_C_RemoveActiveEffects_Predictive) == 0x000030, "Wrong size on DodgeAbility_C_RemoveActiveEffects_Predictive");
static_assert(offsetof(DodgeAbility_C_RemoveActiveEffects_Predictive, Temp_int_Array_Index_Variable) == 0x000000, "Member 'DodgeAbility_C_RemoveActiveEffects_Predictive::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_RemoveActiveEffects_Predictive, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'DodgeAbility_C_RemoveActiveEffects_Predictive::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_RemoveActiveEffects_Predictive, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'DodgeAbility_C_RemoveActiveEffects_Predictive::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_RemoveActiveEffects_Predictive, CallFunc_GetOwningAbilitySystemComponent_ReturnValue) == 0x000010, "Member 'DodgeAbility_C_RemoveActiveEffects_Predictive::CallFunc_GetOwningAbilitySystemComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_RemoveActiveEffects_Predictive, CallFunc_Array_Length_ReturnValue) == 0x000018, "Member 'DodgeAbility_C_RemoveActiveEffects_Predictive::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_RemoveActiveEffects_Predictive, CallFunc_Array_Get_Item) == 0x000020, "Member 'DodgeAbility_C_RemoveActiveEffects_Predictive::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_RemoveActiveEffects_Predictive, CallFunc_Less_IntInt_ReturnValue) == 0x000028, "Member 'DodgeAbility_C_RemoveActiveEffects_Predictive::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function DodgeAbility.DodgeAbility_C.RemoveActiveEffects_MoveAffecting
// 0x0030 (0x0030 - 0x0000)
struct DodgeAbility_C_RemoveActiveEffects_MoveAffecting final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_251E[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_251F[0x4];                                     // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMarinerAbilitySystemComponent*         CallFunc_GetOwningAbilitySystemComponent_ReturnValue; // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(DodgeAbility_C_RemoveActiveEffects_MoveAffecting) == 0x000008, "Wrong alignment on DodgeAbility_C_RemoveActiveEffects_MoveAffecting");
static_assert(sizeof(DodgeAbility_C_RemoveActiveEffects_MoveAffecting) == 0x000030, "Wrong size on DodgeAbility_C_RemoveActiveEffects_MoveAffecting");
static_assert(offsetof(DodgeAbility_C_RemoveActiveEffects_MoveAffecting, Temp_int_Array_Index_Variable) == 0x000000, "Member 'DodgeAbility_C_RemoveActiveEffects_MoveAffecting::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_RemoveActiveEffects_MoveAffecting, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'DodgeAbility_C_RemoveActiveEffects_MoveAffecting::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_RemoveActiveEffects_MoveAffecting, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'DodgeAbility_C_RemoveActiveEffects_MoveAffecting::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_RemoveActiveEffects_MoveAffecting, CallFunc_Array_Get_Item) == 0x000010, "Member 'DodgeAbility_C_RemoveActiveEffects_MoveAffecting::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_RemoveActiveEffects_MoveAffecting, CallFunc_Array_Length_ReturnValue) == 0x000018, "Member 'DodgeAbility_C_RemoveActiveEffects_MoveAffecting::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_RemoveActiveEffects_MoveAffecting, CallFunc_GetOwningAbilitySystemComponent_ReturnValue) == 0x000020, "Member 'DodgeAbility_C_RemoveActiveEffects_MoveAffecting::CallFunc_GetOwningAbilitySystemComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_RemoveActiveEffects_MoveAffecting, CallFunc_Less_IntInt_ReturnValue) == 0x000028, "Member 'DodgeAbility_C_RemoveActiveEffects_MoveAffecting::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function DodgeAbility.DodgeAbility_C.IncreaseStunBreakStat
// 0x0028 (0x0028 - 0x0000)
struct DodgeAbility_C_IncreaseStunBreakStat final
{
public:
	int32                                         DefaultIncrementStatValue;                         // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   StunsBrokenStatName;                               // 0x0004(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2520[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AMarinerCharacter*                      CallFunc_GetOwningCharacterFromActorInfo_ReturnValue; // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMarinerCharacter*                      CallFunc_GetOwningCharacterFromActorInfo_ReturnValue_1; // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsHitStunned_ReturnValue;                 // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(DodgeAbility_C_IncreaseStunBreakStat) == 0x000008, "Wrong alignment on DodgeAbility_C_IncreaseStunBreakStat");
static_assert(sizeof(DodgeAbility_C_IncreaseStunBreakStat) == 0x000028, "Wrong size on DodgeAbility_C_IncreaseStunBreakStat");
static_assert(offsetof(DodgeAbility_C_IncreaseStunBreakStat, DefaultIncrementStatValue) == 0x000000, "Member 'DodgeAbility_C_IncreaseStunBreakStat::DefaultIncrementStatValue' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_IncreaseStunBreakStat, StunsBrokenStatName) == 0x000004, "Member 'DodgeAbility_C_IncreaseStunBreakStat::StunsBrokenStatName' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_IncreaseStunBreakStat, CallFunc_GetOwningCharacterFromActorInfo_ReturnValue) == 0x000010, "Member 'DodgeAbility_C_IncreaseStunBreakStat::CallFunc_GetOwningCharacterFromActorInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_IncreaseStunBreakStat, CallFunc_GetOwningCharacterFromActorInfo_ReturnValue_1) == 0x000018, "Member 'DodgeAbility_C_IncreaseStunBreakStat::CallFunc_GetOwningCharacterFromActorInfo_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_IncreaseStunBreakStat, CallFunc_IsHitStunned_ReturnValue) == 0x000020, "Member 'DodgeAbility_C_IncreaseStunBreakStat::CallFunc_IsHitStunned_ReturnValue' has a wrong offset!");

// Function DodgeAbility.DodgeAbility_C.HandleNinjaHeadbandSlowDown
// 0x0040 (0x0040 - 0x0000)
struct DodgeAbility_C_HandleNinjaHeadbandSlowDown final
{
public:
	class UItem_NinjaHeadband_ItemAbility_C*      CallFunc_GetNinjaHeadbandAbility_NinjaHeadbandAbility; // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetNinjaHeadbandAbility_CastSuccess;      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2521[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AMarinerCharacter*                      CallFunc_GetOwningCharacterFromActorInfo_ReturnValue; // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2522[0x3];                                     // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x001C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0028(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2523[0x4];                                     // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AMarinerCharacter*                      CallFunc_GetOwningCharacterFromActorInfo_ReturnValue_1; // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(DodgeAbility_C_HandleNinjaHeadbandSlowDown) == 0x000008, "Wrong alignment on DodgeAbility_C_HandleNinjaHeadbandSlowDown");
static_assert(sizeof(DodgeAbility_C_HandleNinjaHeadbandSlowDown) == 0x000040, "Wrong size on DodgeAbility_C_HandleNinjaHeadbandSlowDown");
static_assert(offsetof(DodgeAbility_C_HandleNinjaHeadbandSlowDown, CallFunc_GetNinjaHeadbandAbility_NinjaHeadbandAbility) == 0x000000, "Member 'DodgeAbility_C_HandleNinjaHeadbandSlowDown::CallFunc_GetNinjaHeadbandAbility_NinjaHeadbandAbility' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_HandleNinjaHeadbandSlowDown, CallFunc_GetNinjaHeadbandAbility_CastSuccess) == 0x000008, "Member 'DodgeAbility_C_HandleNinjaHeadbandSlowDown::CallFunc_GetNinjaHeadbandAbility_CastSuccess' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_HandleNinjaHeadbandSlowDown, CallFunc_GetOwningCharacterFromActorInfo_ReturnValue) == 0x000010, "Member 'DodgeAbility_C_HandleNinjaHeadbandSlowDown::CallFunc_GetOwningCharacterFromActorInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_HandleNinjaHeadbandSlowDown, CallFunc_BooleanAND_ReturnValue) == 0x000018, "Member 'DodgeAbility_C_HandleNinjaHeadbandSlowDown::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_HandleNinjaHeadbandSlowDown, CallFunc_Normal_ReturnValue) == 0x00001C, "Member 'DodgeAbility_C_HandleNinjaHeadbandSlowDown::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_HandleNinjaHeadbandSlowDown, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000028, "Member 'DodgeAbility_C_HandleNinjaHeadbandSlowDown::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_HandleNinjaHeadbandSlowDown, CallFunc_GetOwningCharacterFromActorInfo_ReturnValue_1) == 0x000038, "Member 'DodgeAbility_C_HandleNinjaHeadbandSlowDown::CallFunc_GetOwningCharacterFromActorInfo_ReturnValue_1' has a wrong offset!");

// Function DodgeAbility.DodgeAbility_C.HandleInputQueuing
// 0x0010 (0x0010 - 0x0000)
struct DodgeAbility_C_HandleInputQueuing final
{
public:
	class AMarinerCharacter*                      CallFunc_GetAvatarCharacterFromActorInfo_ReturnValue; // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BP_IsLocallyControlled_ReturnValue;       // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(DodgeAbility_C_HandleInputQueuing) == 0x000008, "Wrong alignment on DodgeAbility_C_HandleInputQueuing");
static_assert(sizeof(DodgeAbility_C_HandleInputQueuing) == 0x000010, "Wrong size on DodgeAbility_C_HandleInputQueuing");
static_assert(offsetof(DodgeAbility_C_HandleInputQueuing, CallFunc_GetAvatarCharacterFromActorInfo_ReturnValue) == 0x000000, "Member 'DodgeAbility_C_HandleInputQueuing::CallFunc_GetAvatarCharacterFromActorInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_HandleInputQueuing, CallFunc_BP_IsLocallyControlled_ReturnValue) == 0x000008, "Member 'DodgeAbility_C_HandleInputQueuing::CallFunc_BP_IsLocallyControlled_ReturnValue' has a wrong offset!");

// Function DodgeAbility.DodgeAbility_C.CheckForOverlappingProjectiles
// 0x0138 (0x0138 - 0x0000)
struct DodgeAbility_C_CheckForOverlappingProjectiles final
{
public:
	int32                                         DefaultStatIncrementValue;                         // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   RocketsDodgedStatName;                             // 0x0004(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2524[0x3];                                     // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMarinerCharacter*                      CallFunc_GetAvatarCharacterFromActorInfo_ReturnValue; // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2525[0x4];                                     // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IMarinerTeamAffiliatedObjectInterface> K2Node_DynamicCast_AsMariner_Team_Affiliated_Object_Interface; // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_DoesImplementInterface_ReturnValue;       // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2526[0x2];                                     // 0x0042(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetTeamIndex_ReturnValue;                 // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMarinerCharacter*                      CallFunc_GetOwningCharacterFromActorInfo_ReturnValue; // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorUpVector_ReturnValue;             // 0x0050(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x005C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0068(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_2;                               // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2527[0x3];                                     // 0x007D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_1;       // 0x0080(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x008C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2528[0x3];                                     // 0x008D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0090(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_2;       // 0x009C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue_1;            // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2529[0x3];                                     // 0x00A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x00AC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_252A[0x3];                                     // 0x00B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMarinerCharacter*                      CallFunc_GetOwningCharacterFromActorInfo_ReturnValue_1; // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UMarinerFastCollisionComponent*> CallFunc_FastOverlapCapsuleWithCollection_OutHits; // 0x00C8(0x0010)(ZeroConstructor, ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_FastOverlapCapsuleWithCollection_ReturnValue; // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_252B[0x7];                                     // 0x00D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMarinerFastCollisionComponent*         CallFunc_Array_Get_Item;                           // 0x00E0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_252C[0x4];                                     // 0x00EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_252D[0x7];                                     // 0x00F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AMarinerProjectile*                     K2Node_DynamicCast_AsMariner_Projectile;           // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_252E[0x7];                                     // 0x0109(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IMarinerTeamAffiliatedObjectInterface> K2Node_DynamicCast_AsMariner_Team_Affiliated_Object_Interface_1; // 0x0110(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_DoesImplementInterface_ReturnValue_1;     // 0x0121(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_252F[0x2];                                     // 0x0122(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetTeamIndex_ReturnValue_1;               // 0x0124(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2530[0x3];                                     // 0x0129(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x012C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0134(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(DodgeAbility_C_CheckForOverlappingProjectiles) == 0x000008, "Wrong alignment on DodgeAbility_C_CheckForOverlappingProjectiles");
static_assert(sizeof(DodgeAbility_C_CheckForOverlappingProjectiles) == 0x000138, "Wrong size on DodgeAbility_C_CheckForOverlappingProjectiles");
static_assert(offsetof(DodgeAbility_C_CheckForOverlappingProjectiles, DefaultStatIncrementValue) == 0x000000, "Member 'DodgeAbility_C_CheckForOverlappingProjectiles::DefaultStatIncrementValue' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_CheckForOverlappingProjectiles, RocketsDodgedStatName) == 0x000004, "Member 'DodgeAbility_C_CheckForOverlappingProjectiles::RocketsDodgedStatName' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_CheckForOverlappingProjectiles, Temp_int_Variable) == 0x00000C, "Member 'DodgeAbility_C_CheckForOverlappingProjectiles::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_CheckForOverlappingProjectiles, Temp_int_Loop_Counter_Variable) == 0x000010, "Member 'DodgeAbility_C_CheckForOverlappingProjectiles::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_CheckForOverlappingProjectiles, CallFunc_Add_IntInt_ReturnValue) == 0x000014, "Member 'DodgeAbility_C_CheckForOverlappingProjectiles::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_CheckForOverlappingProjectiles, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000018, "Member 'DodgeAbility_C_CheckForOverlappingProjectiles::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_CheckForOverlappingProjectiles, Temp_int_Array_Index_Variable) == 0x00001C, "Member 'DodgeAbility_C_CheckForOverlappingProjectiles::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_CheckForOverlappingProjectiles, CallFunc_GetAvatarCharacterFromActorInfo_ReturnValue) == 0x000020, "Member 'DodgeAbility_C_CheckForOverlappingProjectiles::CallFunc_GetAvatarCharacterFromActorInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_CheckForOverlappingProjectiles, Temp_int_Variable_1) == 0x000028, "Member 'DodgeAbility_C_CheckForOverlappingProjectiles::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_CheckForOverlappingProjectiles, K2Node_DynamicCast_AsMariner_Team_Affiliated_Object_Interface) == 0x000030, "Member 'DodgeAbility_C_CheckForOverlappingProjectiles::K2Node_DynamicCast_AsMariner_Team_Affiliated_Object_Interface' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_CheckForOverlappingProjectiles, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'DodgeAbility_C_CheckForOverlappingProjectiles::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_CheckForOverlappingProjectiles, CallFunc_DoesImplementInterface_ReturnValue) == 0x000041, "Member 'DodgeAbility_C_CheckForOverlappingProjectiles::CallFunc_DoesImplementInterface_ReturnValue' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_CheckForOverlappingProjectiles, CallFunc_GetTeamIndex_ReturnValue) == 0x000044, "Member 'DodgeAbility_C_CheckForOverlappingProjectiles::CallFunc_GetTeamIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_CheckForOverlappingProjectiles, CallFunc_GetOwningCharacterFromActorInfo_ReturnValue) == 0x000048, "Member 'DodgeAbility_C_CheckForOverlappingProjectiles::CallFunc_GetOwningCharacterFromActorInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_CheckForOverlappingProjectiles, CallFunc_GetActorUpVector_ReturnValue) == 0x000050, "Member 'DodgeAbility_C_CheckForOverlappingProjectiles::CallFunc_GetActorUpVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_CheckForOverlappingProjectiles, CallFunc_K2_GetActorLocation_ReturnValue) == 0x00005C, "Member 'DodgeAbility_C_CheckForOverlappingProjectiles::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_CheckForOverlappingProjectiles, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000068, "Member 'DodgeAbility_C_CheckForOverlappingProjectiles::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_CheckForOverlappingProjectiles, Temp_int_Variable_2) == 0x000074, "Member 'DodgeAbility_C_CheckForOverlappingProjectiles::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_CheckForOverlappingProjectiles, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000078, "Member 'DodgeAbility_C_CheckForOverlappingProjectiles::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_CheckForOverlappingProjectiles, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x00007C, "Member 'DodgeAbility_C_CheckForOverlappingProjectiles::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_CheckForOverlappingProjectiles, CallFunc_Multiply_VectorFloat_ReturnValue_1) == 0x000080, "Member 'DodgeAbility_C_CheckForOverlappingProjectiles::CallFunc_Multiply_VectorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_CheckForOverlappingProjectiles, CallFunc_BooleanAND_ReturnValue) == 0x00008C, "Member 'DodgeAbility_C_CheckForOverlappingProjectiles::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_CheckForOverlappingProjectiles, CallFunc_Add_VectorVector_ReturnValue) == 0x000090, "Member 'DodgeAbility_C_CheckForOverlappingProjectiles::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_CheckForOverlappingProjectiles, CallFunc_Multiply_VectorFloat_ReturnValue_2) == 0x00009C, "Member 'DodgeAbility_C_CheckForOverlappingProjectiles::CallFunc_Multiply_VectorFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_CheckForOverlappingProjectiles, CallFunc_NotEqual_IntInt_ReturnValue_1) == 0x0000A8, "Member 'DodgeAbility_C_CheckForOverlappingProjectiles::CallFunc_NotEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_CheckForOverlappingProjectiles, CallFunc_Add_VectorVector_ReturnValue_1) == 0x0000AC, "Member 'DodgeAbility_C_CheckForOverlappingProjectiles::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_CheckForOverlappingProjectiles, CallFunc_BooleanAND_ReturnValue_1) == 0x0000B8, "Member 'DodgeAbility_C_CheckForOverlappingProjectiles::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_CheckForOverlappingProjectiles, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x0000BC, "Member 'DodgeAbility_C_CheckForOverlappingProjectiles::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_CheckForOverlappingProjectiles, CallFunc_GetOwningCharacterFromActorInfo_ReturnValue_1) == 0x0000C0, "Member 'DodgeAbility_C_CheckForOverlappingProjectiles::CallFunc_GetOwningCharacterFromActorInfo_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_CheckForOverlappingProjectiles, CallFunc_FastOverlapCapsuleWithCollection_OutHits) == 0x0000C8, "Member 'DodgeAbility_C_CheckForOverlappingProjectiles::CallFunc_FastOverlapCapsuleWithCollection_OutHits' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_CheckForOverlappingProjectiles, CallFunc_FastOverlapCapsuleWithCollection_ReturnValue) == 0x0000D8, "Member 'DodgeAbility_C_CheckForOverlappingProjectiles::CallFunc_FastOverlapCapsuleWithCollection_ReturnValue' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_CheckForOverlappingProjectiles, CallFunc_Array_Get_Item) == 0x0000E0, "Member 'DodgeAbility_C_CheckForOverlappingProjectiles::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_CheckForOverlappingProjectiles, CallFunc_Array_Length_ReturnValue) == 0x0000E8, "Member 'DodgeAbility_C_CheckForOverlappingProjectiles::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_CheckForOverlappingProjectiles, CallFunc_GetOwner_ReturnValue) == 0x0000F0, "Member 'DodgeAbility_C_CheckForOverlappingProjectiles::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_CheckForOverlappingProjectiles, CallFunc_Less_IntInt_ReturnValue) == 0x0000F8, "Member 'DodgeAbility_C_CheckForOverlappingProjectiles::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_CheckForOverlappingProjectiles, K2Node_DynamicCast_AsMariner_Projectile) == 0x000100, "Member 'DodgeAbility_C_CheckForOverlappingProjectiles::K2Node_DynamicCast_AsMariner_Projectile' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_CheckForOverlappingProjectiles, K2Node_DynamicCast_bSuccess_1) == 0x000108, "Member 'DodgeAbility_C_CheckForOverlappingProjectiles::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_CheckForOverlappingProjectiles, K2Node_DynamicCast_AsMariner_Team_Affiliated_Object_Interface_1) == 0x000110, "Member 'DodgeAbility_C_CheckForOverlappingProjectiles::K2Node_DynamicCast_AsMariner_Team_Affiliated_Object_Interface_1' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_CheckForOverlappingProjectiles, K2Node_DynamicCast_bSuccess_2) == 0x000120, "Member 'DodgeAbility_C_CheckForOverlappingProjectiles::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_CheckForOverlappingProjectiles, CallFunc_DoesImplementInterface_ReturnValue_1) == 0x000121, "Member 'DodgeAbility_C_CheckForOverlappingProjectiles::CallFunc_DoesImplementInterface_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_CheckForOverlappingProjectiles, CallFunc_GetTeamIndex_ReturnValue_1) == 0x000124, "Member 'DodgeAbility_C_CheckForOverlappingProjectiles::CallFunc_GetTeamIndex_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_CheckForOverlappingProjectiles, CallFunc_BooleanAND_ReturnValue_2) == 0x000128, "Member 'DodgeAbility_C_CheckForOverlappingProjectiles::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_CheckForOverlappingProjectiles, CallFunc_Add_IntInt_ReturnValue_1) == 0x00012C, "Member 'DodgeAbility_C_CheckForOverlappingProjectiles::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_CheckForOverlappingProjectiles, CallFunc_Array_AddUnique_ReturnValue) == 0x000130, "Member 'DodgeAbility_C_CheckForOverlappingProjectiles::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_CheckForOverlappingProjectiles, CallFunc_Array_Contains_ReturnValue) == 0x000134, "Member 'DodgeAbility_C_CheckForOverlappingProjectiles::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");

// Function DodgeAbility.DodgeAbility_C.LookForAbilitiesToEnd
// 0x0048 (0x0048 - 0x0000)
struct DodgeAbility_C_LookForAbilitiesToEnd final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2531[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMarinerAbilitySystemComponent*         CallFunc_GetOwningAbilitySystemComponent_ReturnValue; // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 CallFunc_Array_Get_Item;                           // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2532[0x4];                                     // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameplayAbility*                       CallFunc_GetAbilityInstanceForAbilityClass_ReturnValue; // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2533[0x6];                                     // 0x0032(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UMarinerAbility*                        K2Node_DynamicCast_AsMariner_Ability;              // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(DodgeAbility_C_LookForAbilitiesToEnd) == 0x000008, "Wrong alignment on DodgeAbility_C_LookForAbilitiesToEnd");
static_assert(sizeof(DodgeAbility_C_LookForAbilitiesToEnd) == 0x000048, "Wrong size on DodgeAbility_C_LookForAbilitiesToEnd");
static_assert(offsetof(DodgeAbility_C_LookForAbilitiesToEnd, Temp_int_Array_Index_Variable) == 0x000000, "Member 'DodgeAbility_C_LookForAbilitiesToEnd::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_LookForAbilitiesToEnd, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'DodgeAbility_C_LookForAbilitiesToEnd::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_LookForAbilitiesToEnd, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'DodgeAbility_C_LookForAbilitiesToEnd::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_LookForAbilitiesToEnd, CallFunc_GetOwningAbilitySystemComponent_ReturnValue) == 0x000010, "Member 'DodgeAbility_C_LookForAbilitiesToEnd::CallFunc_GetOwningAbilitySystemComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_LookForAbilitiesToEnd, CallFunc_Array_Get_Item) == 0x000018, "Member 'DodgeAbility_C_LookForAbilitiesToEnd::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_LookForAbilitiesToEnd, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'DodgeAbility_C_LookForAbilitiesToEnd::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_LookForAbilitiesToEnd, CallFunc_GetAbilityInstanceForAbilityClass_ReturnValue) == 0x000028, "Member 'DodgeAbility_C_LookForAbilitiesToEnd::CallFunc_GetAbilityInstanceForAbilityClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_LookForAbilitiesToEnd, CallFunc_Less_IntInt_ReturnValue) == 0x000030, "Member 'DodgeAbility_C_LookForAbilitiesToEnd::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_LookForAbilitiesToEnd, CallFunc_IsValid_ReturnValue) == 0x000031, "Member 'DodgeAbility_C_LookForAbilitiesToEnd::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_LookForAbilitiesToEnd, K2Node_DynamicCast_AsMariner_Ability) == 0x000038, "Member 'DodgeAbility_C_LookForAbilitiesToEnd::K2Node_DynamicCast_AsMariner_Ability' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_LookForAbilitiesToEnd, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'DodgeAbility_C_LookForAbilitiesToEnd::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function DodgeAbility.DodgeAbility_C.PredictDodgeStateApplied
// 0x0008 (0x0008 - 0x0000)
struct DodgeAbility_C_PredictDodgeStateApplied final
{
public:
	class AMarinerCharacter*                      CallFunc_GetAvatarCharacterFromActorInfo_ReturnValue; // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(DodgeAbility_C_PredictDodgeStateApplied) == 0x000008, "Wrong alignment on DodgeAbility_C_PredictDodgeStateApplied");
static_assert(sizeof(DodgeAbility_C_PredictDodgeStateApplied) == 0x000008, "Wrong size on DodgeAbility_C_PredictDodgeStateApplied");
static_assert(offsetof(DodgeAbility_C_PredictDodgeStateApplied, CallFunc_GetAvatarCharacterFromActorInfo_ReturnValue) == 0x000000, "Member 'DodgeAbility_C_PredictDodgeStateApplied::CallFunc_GetAvatarCharacterFromActorInfo_ReturnValue' has a wrong offset!");

// Function DodgeAbility.DodgeAbility_C.RemoveStun
// 0x0010 (0x0010 - 0x0000)
struct DodgeAbility_C_RemoveStun final
{
public:
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2534[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AMarinerCharacter*                      CallFunc_GetOwningCharacterFromActorInfo_ReturnValue; // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(DodgeAbility_C_RemoveStun) == 0x000008, "Wrong alignment on DodgeAbility_C_RemoveStun");
static_assert(sizeof(DodgeAbility_C_RemoveStun) == 0x000010, "Wrong size on DodgeAbility_C_RemoveStun");
static_assert(offsetof(DodgeAbility_C_RemoveStun, CallFunc_HasAuthority_ReturnValue) == 0x000000, "Member 'DodgeAbility_C_RemoveStun::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_RemoveStun, CallFunc_GetOwningCharacterFromActorInfo_ReturnValue) == 0x000008, "Member 'DodgeAbility_C_RemoveStun::CallFunc_GetOwningCharacterFromActorInfo_ReturnValue' has a wrong offset!");

// Function DodgeAbility.DodgeAbility_C.GetDodgeInPlaceStrength
// 0x0030 (0x0030 - 0x0000)
struct DodgeAbility_C_GetDodgeInPlaceStrength final
{
public:
	struct FVector                                DodgeInPlaceDir;                                   // 0x0000(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2535[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AMarinerCharacter*                      CallFunc_GetOwningCharacterFromActorInfo_ReturnValue; // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorUpVector_ReturnValue;             // 0x0018(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0024(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(DodgeAbility_C_GetDodgeInPlaceStrength) == 0x000008, "Wrong alignment on DodgeAbility_C_GetDodgeInPlaceStrength");
static_assert(sizeof(DodgeAbility_C_GetDodgeInPlaceStrength) == 0x000030, "Wrong size on DodgeAbility_C_GetDodgeInPlaceStrength");
static_assert(offsetof(DodgeAbility_C_GetDodgeInPlaceStrength, DodgeInPlaceDir) == 0x000000, "Member 'DodgeAbility_C_GetDodgeInPlaceStrength::DodgeInPlaceDir' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_GetDodgeInPlaceStrength, CallFunc_GetOwningCharacterFromActorInfo_ReturnValue) == 0x000010, "Member 'DodgeAbility_C_GetDodgeInPlaceStrength::CallFunc_GetOwningCharacterFromActorInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_GetDodgeInPlaceStrength, CallFunc_GetActorUpVector_ReturnValue) == 0x000018, "Member 'DodgeAbility_C_GetDodgeInPlaceStrength::CallFunc_GetActorUpVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_GetDodgeInPlaceStrength, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000024, "Member 'DodgeAbility_C_GetDodgeInPlaceStrength::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");

// Function DodgeAbility.DodgeAbility_C.AntiSelfKOLaunchModifier
// 0x0388 (0x0388 - 0x0000)
struct DodgeAbility_C_AntiSelfKOLaunchModifier final
{
public:
	struct FVector                                TargetLoc;                                         // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsDodgeInPlace;                                    // 0x000C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2536[0x3];                                     // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                AdjustedDodge;                                     // 0x0010(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                ModifiedEndLocationWithBuffer;                     // 0x001C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                PointOnClosestBoundsSurface;                       // 0x0028(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          TargetLocationIsInBounds;                          // 0x0034(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2537[0x3];                                     // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                ClosestBoundsNormal;                               // 0x0038(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DistanceToNearestBounds;                           // 0x0044(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMarinerFastArenaBounds*                CallFunc_GetArenaBoundsRef_ArenaBounds;            // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetIsPointOnClosestBoundsValidForProtection_IsValid; // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetIsPointOnClosestBoundsValidForProtection_IsValid_1; // 0x0052(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2538[0x1];                                     // 0x0053(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0054(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetNonFloorKOBoundsLaunchScalar_LaunchScalar; // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetNonFloorKOBoundsLaunchVector_LaunchVector; // 0x0064(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetIsClosestKOBoundsFloor_IsFloor;        // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2539[0x3];                                     // 0x0071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0074(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetIsClosestKOBoundsFloor_IsFloor_1;      // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0082(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_253A[0x5];                                     // 0x0083(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AMarinerCharacter*                      CallFunc_GetOwningCharacterFromActorInfo_ReturnValue; // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0090(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x009C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_LinePlaneIntersection_OriginNormal_T;     // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_LinePlaneIntersection_OriginNormal_Intersection; // 0x00AC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LinePlaneIntersection_OriginNormal_ReturnValue; // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_253B[0x3];                                     // 0x00B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Dot_VectorVector_ReturnValue;             // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_253C[0x7];                                     // 0x00C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AMarinerCharacter*                      CallFunc_GetOwningCharacterFromActorInfo_ReturnValue_1; // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x00D0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_LinePlaneIntersection_OriginNormal_T_1;   // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_LinePlaneIntersection_OriginNormal_Intersection_1; // 0x00E0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LinePlaneIntersection_OriginNormal_ReturnValue_1; // 0x00EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_253D[0x3];                                     // 0x00ED(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetAntiKO_FloorLaunchVector_LaunchVector; // 0x00F0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetAntiKO_FloorLaunchVector_LaunchVector_1; // 0x00FC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMarinerCharacter*                      CallFunc_GetOwningCharacterFromActorInfo_ReturnValue_2; // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_2;        // 0x0110(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x011C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_IsPointInsideArenaBounds_OutDistToClosestSurface; // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_IsPointInsideArenaBounds_OutPointOnClosestSurface; // 0x012C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_IsPointInsideArenaBounds_OutSurfaceNormal; // 0x0138(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPointInsideArenaBounds_ReturnValue;     // 0x0144(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0145(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_253E[0x2];                                     // 0x0146(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class AMarinerCharacter*                      CallFunc_GetOwningCharacterFromActorInfo_ReturnValue_3; // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_IsPointInsideArenaBounds_OutDistToClosestSurface_1; // 0x0150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_IsPointInsideArenaBounds_OutPointOnClosestSurface_1; // 0x0154(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_IsPointInsideArenaBounds_OutSurfaceNormal_1; // 0x0160(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPointInsideArenaBounds_ReturnValue_1;   // 0x016C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_253F[0x3];                                     // 0x016D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_3;        // 0x0170(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x017C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         K2Node_MakeArray_Array;                            // 0x0188(0x0010)(ConstParm, ZeroConstructor, ReferenceParm)
	class AMarinerCharacter*                      CallFunc_GetOwningCharacterFromActorInfo_ReturnValue_4; // 0x0198(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMarinerCharacter*                      CallFunc_GetOwningCharacterFromActorInfo_ReturnValue_5; // 0x01A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_4;        // 0x01A8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorUpVector_ReturnValue;             // 0x01B4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x01C0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_NegateVector_ReturnValue;                 // 0x01CC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x01D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2540[0x7];                                     // 0x01D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AMarinerCharacter*                      CallFunc_GetOwningCharacterFromActorInfo_ReturnValue_6; // 0x01E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x01E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2541[0x3];                                     // 0x01E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_5;        // 0x01EC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_SphereTraceSingle_OutHit;                 // 0x01F8(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_SphereTraceSingle_ReturnValue;            // 0x0280(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0281(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x0282(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2542[0x1];                                     // 0x0283(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x0284(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0288(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x028C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0298(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x02A4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x02B0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2543[0x4];                                     // 0x02BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x02C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x02C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x02D0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x02D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x02E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x02E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x02E8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x02F4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Dot_VectorVector_ReturnValue_1;           // 0x0300(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NearlyEqual_FloatFloat_ReturnValue;       // 0x0304(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x0305(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2544[0x2];                                     // 0x0306(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_NegateVector_ReturnValue_1;               // 0x0308(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default;                             // 0x0314(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_1;       // 0x0318(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2545[0x4];                                     // 0x0324(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AMarinerCharacter*                      CallFunc_GetOwningCharacterFromActorInfo_ReturnValue_7; // 0x0328(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorUpVector_ReturnValue_1;           // 0x0330(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x033C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2546[0x3];                                     // 0x033D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Dot_VectorVector_ReturnValue_2;           // 0x0340(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0344(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NearlyEqual_FloatFloat_ReturnValue_1;     // 0x0345(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2547[0x2];                                     // 0x0346(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class AMarinerCharacter*                      CallFunc_GetOwningCharacterFromActorInfo_ReturnValue_8; // 0x0348(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_6;        // 0x0350(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_2;           // 0x035C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_IsPointInsideArenaBounds_OutDistToClosestSurface_2; // 0x0368(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_IsPointInsideArenaBounds_OutPointOnClosestSurface_2; // 0x036C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_IsPointInsideArenaBounds_OutSurfaceNormal_2; // 0x0378(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPointInsideArenaBounds_ReturnValue_2;   // 0x0384(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(DodgeAbility_C_AntiSelfKOLaunchModifier) == 0x000008, "Wrong alignment on DodgeAbility_C_AntiSelfKOLaunchModifier");
static_assert(sizeof(DodgeAbility_C_AntiSelfKOLaunchModifier) == 0x000388, "Wrong size on DodgeAbility_C_AntiSelfKOLaunchModifier");
static_assert(offsetof(DodgeAbility_C_AntiSelfKOLaunchModifier, TargetLoc) == 0x000000, "Member 'DodgeAbility_C_AntiSelfKOLaunchModifier::TargetLoc' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_AntiSelfKOLaunchModifier, IsDodgeInPlace) == 0x00000C, "Member 'DodgeAbility_C_AntiSelfKOLaunchModifier::IsDodgeInPlace' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_AntiSelfKOLaunchModifier, AdjustedDodge) == 0x000010, "Member 'DodgeAbility_C_AntiSelfKOLaunchModifier::AdjustedDodge' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_AntiSelfKOLaunchModifier, ModifiedEndLocationWithBuffer) == 0x00001C, "Member 'DodgeAbility_C_AntiSelfKOLaunchModifier::ModifiedEndLocationWithBuffer' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_AntiSelfKOLaunchModifier, PointOnClosestBoundsSurface) == 0x000028, "Member 'DodgeAbility_C_AntiSelfKOLaunchModifier::PointOnClosestBoundsSurface' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_AntiSelfKOLaunchModifier, TargetLocationIsInBounds) == 0x000034, "Member 'DodgeAbility_C_AntiSelfKOLaunchModifier::TargetLocationIsInBounds' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_AntiSelfKOLaunchModifier, ClosestBoundsNormal) == 0x000038, "Member 'DodgeAbility_C_AntiSelfKOLaunchModifier::ClosestBoundsNormal' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_AntiSelfKOLaunchModifier, DistanceToNearestBounds) == 0x000044, "Member 'DodgeAbility_C_AntiSelfKOLaunchModifier::DistanceToNearestBounds' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_AntiSelfKOLaunchModifier, CallFunc_GetArenaBoundsRef_ArenaBounds) == 0x000048, "Member 'DodgeAbility_C_AntiSelfKOLaunchModifier::CallFunc_GetArenaBoundsRef_ArenaBounds' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_AntiSelfKOLaunchModifier, CallFunc_IsValid_ReturnValue) == 0x000050, "Member 'DodgeAbility_C_AntiSelfKOLaunchModifier::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_AntiSelfKOLaunchModifier, CallFunc_GetIsPointOnClosestBoundsValidForProtection_IsValid) == 0x000051, "Member 'DodgeAbility_C_AntiSelfKOLaunchModifier::CallFunc_GetIsPointOnClosestBoundsValidForProtection_IsValid' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_AntiSelfKOLaunchModifier, CallFunc_GetIsPointOnClosestBoundsValidForProtection_IsValid_1) == 0x000052, "Member 'DodgeAbility_C_AntiSelfKOLaunchModifier::CallFunc_GetIsPointOnClosestBoundsValidForProtection_IsValid_1' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_AntiSelfKOLaunchModifier, CallFunc_MakeVector_ReturnValue) == 0x000054, "Member 'DodgeAbility_C_AntiSelfKOLaunchModifier::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_AntiSelfKOLaunchModifier, CallFunc_GetNonFloorKOBoundsLaunchScalar_LaunchScalar) == 0x000060, "Member 'DodgeAbility_C_AntiSelfKOLaunchModifier::CallFunc_GetNonFloorKOBoundsLaunchScalar_LaunchScalar' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_AntiSelfKOLaunchModifier, CallFunc_GetNonFloorKOBoundsLaunchVector_LaunchVector) == 0x000064, "Member 'DodgeAbility_C_AntiSelfKOLaunchModifier::CallFunc_GetNonFloorKOBoundsLaunchVector_LaunchVector' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_AntiSelfKOLaunchModifier, CallFunc_GetIsClosestKOBoundsFloor_IsFloor) == 0x000070, "Member 'DodgeAbility_C_AntiSelfKOLaunchModifier::CallFunc_GetIsClosestKOBoundsFloor_IsFloor' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_AntiSelfKOLaunchModifier, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000074, "Member 'DodgeAbility_C_AntiSelfKOLaunchModifier::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_AntiSelfKOLaunchModifier, CallFunc_Not_PreBool_ReturnValue) == 0x000080, "Member 'DodgeAbility_C_AntiSelfKOLaunchModifier::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_AntiSelfKOLaunchModifier, CallFunc_GetIsClosestKOBoundsFloor_IsFloor_1) == 0x000081, "Member 'DodgeAbility_C_AntiSelfKOLaunchModifier::CallFunc_GetIsClosestKOBoundsFloor_IsFloor_1' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_AntiSelfKOLaunchModifier, CallFunc_Not_PreBool_ReturnValue_1) == 0x000082, "Member 'DodgeAbility_C_AntiSelfKOLaunchModifier::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_AntiSelfKOLaunchModifier, CallFunc_GetOwningCharacterFromActorInfo_ReturnValue) == 0x000088, "Member 'DodgeAbility_C_AntiSelfKOLaunchModifier::CallFunc_GetOwningCharacterFromActorInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_AntiSelfKOLaunchModifier, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000090, "Member 'DodgeAbility_C_AntiSelfKOLaunchModifier::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_AntiSelfKOLaunchModifier, CallFunc_Normal_ReturnValue) == 0x00009C, "Member 'DodgeAbility_C_AntiSelfKOLaunchModifier::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_AntiSelfKOLaunchModifier, CallFunc_LinePlaneIntersection_OriginNormal_T) == 0x0000A8, "Member 'DodgeAbility_C_AntiSelfKOLaunchModifier::CallFunc_LinePlaneIntersection_OriginNormal_T' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_AntiSelfKOLaunchModifier, CallFunc_LinePlaneIntersection_OriginNormal_Intersection) == 0x0000AC, "Member 'DodgeAbility_C_AntiSelfKOLaunchModifier::CallFunc_LinePlaneIntersection_OriginNormal_Intersection' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_AntiSelfKOLaunchModifier, CallFunc_LinePlaneIntersection_OriginNormal_ReturnValue) == 0x0000B8, "Member 'DodgeAbility_C_AntiSelfKOLaunchModifier::CallFunc_LinePlaneIntersection_OriginNormal_ReturnValue' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_AntiSelfKOLaunchModifier, CallFunc_Dot_VectorVector_ReturnValue) == 0x0000BC, "Member 'DodgeAbility_C_AntiSelfKOLaunchModifier::CallFunc_Dot_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_AntiSelfKOLaunchModifier, CallFunc_Greater_FloatFloat_ReturnValue) == 0x0000C0, "Member 'DodgeAbility_C_AntiSelfKOLaunchModifier::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_AntiSelfKOLaunchModifier, CallFunc_GetOwningCharacterFromActorInfo_ReturnValue_1) == 0x0000C8, "Member 'DodgeAbility_C_AntiSelfKOLaunchModifier::CallFunc_GetOwningCharacterFromActorInfo_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_AntiSelfKOLaunchModifier, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x0000D0, "Member 'DodgeAbility_C_AntiSelfKOLaunchModifier::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_AntiSelfKOLaunchModifier, CallFunc_LinePlaneIntersection_OriginNormal_T_1) == 0x0000DC, "Member 'DodgeAbility_C_AntiSelfKOLaunchModifier::CallFunc_LinePlaneIntersection_OriginNormal_T_1' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_AntiSelfKOLaunchModifier, CallFunc_LinePlaneIntersection_OriginNormal_Intersection_1) == 0x0000E0, "Member 'DodgeAbility_C_AntiSelfKOLaunchModifier::CallFunc_LinePlaneIntersection_OriginNormal_Intersection_1' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_AntiSelfKOLaunchModifier, CallFunc_LinePlaneIntersection_OriginNormal_ReturnValue_1) == 0x0000EC, "Member 'DodgeAbility_C_AntiSelfKOLaunchModifier::CallFunc_LinePlaneIntersection_OriginNormal_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_AntiSelfKOLaunchModifier, CallFunc_GetAntiKO_FloorLaunchVector_LaunchVector) == 0x0000F0, "Member 'DodgeAbility_C_AntiSelfKOLaunchModifier::CallFunc_GetAntiKO_FloorLaunchVector_LaunchVector' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_AntiSelfKOLaunchModifier, CallFunc_GetAntiKO_FloorLaunchVector_LaunchVector_1) == 0x0000FC, "Member 'DodgeAbility_C_AntiSelfKOLaunchModifier::CallFunc_GetAntiKO_FloorLaunchVector_LaunchVector_1' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_AntiSelfKOLaunchModifier, CallFunc_GetOwningCharacterFromActorInfo_ReturnValue_2) == 0x000108, "Member 'DodgeAbility_C_AntiSelfKOLaunchModifier::CallFunc_GetOwningCharacterFromActorInfo_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_AntiSelfKOLaunchModifier, CallFunc_K2_GetActorLocation_ReturnValue_2) == 0x000110, "Member 'DodgeAbility_C_AntiSelfKOLaunchModifier::CallFunc_K2_GetActorLocation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_AntiSelfKOLaunchModifier, CallFunc_Subtract_VectorVector_ReturnValue) == 0x00011C, "Member 'DodgeAbility_C_AntiSelfKOLaunchModifier::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_AntiSelfKOLaunchModifier, CallFunc_IsPointInsideArenaBounds_OutDistToClosestSurface) == 0x000128, "Member 'DodgeAbility_C_AntiSelfKOLaunchModifier::CallFunc_IsPointInsideArenaBounds_OutDistToClosestSurface' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_AntiSelfKOLaunchModifier, CallFunc_IsPointInsideArenaBounds_OutPointOnClosestSurface) == 0x00012C, "Member 'DodgeAbility_C_AntiSelfKOLaunchModifier::CallFunc_IsPointInsideArenaBounds_OutPointOnClosestSurface' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_AntiSelfKOLaunchModifier, CallFunc_IsPointInsideArenaBounds_OutSurfaceNormal) == 0x000138, "Member 'DodgeAbility_C_AntiSelfKOLaunchModifier::CallFunc_IsPointInsideArenaBounds_OutSurfaceNormal' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_AntiSelfKOLaunchModifier, CallFunc_IsPointInsideArenaBounds_ReturnValue) == 0x000144, "Member 'DodgeAbility_C_AntiSelfKOLaunchModifier::CallFunc_IsPointInsideArenaBounds_ReturnValue' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_AntiSelfKOLaunchModifier, Temp_bool_Variable) == 0x000145, "Member 'DodgeAbility_C_AntiSelfKOLaunchModifier::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_AntiSelfKOLaunchModifier, CallFunc_GetOwningCharacterFromActorInfo_ReturnValue_3) == 0x000148, "Member 'DodgeAbility_C_AntiSelfKOLaunchModifier::CallFunc_GetOwningCharacterFromActorInfo_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_AntiSelfKOLaunchModifier, CallFunc_IsPointInsideArenaBounds_OutDistToClosestSurface_1) == 0x000150, "Member 'DodgeAbility_C_AntiSelfKOLaunchModifier::CallFunc_IsPointInsideArenaBounds_OutDistToClosestSurface_1' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_AntiSelfKOLaunchModifier, CallFunc_IsPointInsideArenaBounds_OutPointOnClosestSurface_1) == 0x000154, "Member 'DodgeAbility_C_AntiSelfKOLaunchModifier::CallFunc_IsPointInsideArenaBounds_OutPointOnClosestSurface_1' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_AntiSelfKOLaunchModifier, CallFunc_IsPointInsideArenaBounds_OutSurfaceNormal_1) == 0x000160, "Member 'DodgeAbility_C_AntiSelfKOLaunchModifier::CallFunc_IsPointInsideArenaBounds_OutSurfaceNormal_1' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_AntiSelfKOLaunchModifier, CallFunc_IsPointInsideArenaBounds_ReturnValue_1) == 0x00016C, "Member 'DodgeAbility_C_AntiSelfKOLaunchModifier::CallFunc_IsPointInsideArenaBounds_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_AntiSelfKOLaunchModifier, CallFunc_K2_GetActorLocation_ReturnValue_3) == 0x000170, "Member 'DodgeAbility_C_AntiSelfKOLaunchModifier::CallFunc_K2_GetActorLocation_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_AntiSelfKOLaunchModifier, CallFunc_Add_VectorVector_ReturnValue) == 0x00017C, "Member 'DodgeAbility_C_AntiSelfKOLaunchModifier::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_AntiSelfKOLaunchModifier, K2Node_MakeArray_Array) == 0x000188, "Member 'DodgeAbility_C_AntiSelfKOLaunchModifier::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_AntiSelfKOLaunchModifier, CallFunc_GetOwningCharacterFromActorInfo_ReturnValue_4) == 0x000198, "Member 'DodgeAbility_C_AntiSelfKOLaunchModifier::CallFunc_GetOwningCharacterFromActorInfo_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_AntiSelfKOLaunchModifier, CallFunc_GetOwningCharacterFromActorInfo_ReturnValue_5) == 0x0001A0, "Member 'DodgeAbility_C_AntiSelfKOLaunchModifier::CallFunc_GetOwningCharacterFromActorInfo_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_AntiSelfKOLaunchModifier, CallFunc_K2_GetActorLocation_ReturnValue_4) == 0x0001A8, "Member 'DodgeAbility_C_AntiSelfKOLaunchModifier::CallFunc_K2_GetActorLocation_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_AntiSelfKOLaunchModifier, CallFunc_GetActorUpVector_ReturnValue) == 0x0001B4, "Member 'DodgeAbility_C_AntiSelfKOLaunchModifier::CallFunc_GetActorUpVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_AntiSelfKOLaunchModifier, CallFunc_Add_VectorVector_ReturnValue_1) == 0x0001C0, "Member 'DodgeAbility_C_AntiSelfKOLaunchModifier::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_AntiSelfKOLaunchModifier, CallFunc_NegateVector_ReturnValue) == 0x0001CC, "Member 'DodgeAbility_C_AntiSelfKOLaunchModifier::CallFunc_NegateVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_AntiSelfKOLaunchModifier, CallFunc_BooleanOR_ReturnValue) == 0x0001D8, "Member 'DodgeAbility_C_AntiSelfKOLaunchModifier::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_AntiSelfKOLaunchModifier, CallFunc_GetOwningCharacterFromActorInfo_ReturnValue_6) == 0x0001E0, "Member 'DodgeAbility_C_AntiSelfKOLaunchModifier::CallFunc_GetOwningCharacterFromActorInfo_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_AntiSelfKOLaunchModifier, CallFunc_BooleanOR_ReturnValue_1) == 0x0001E8, "Member 'DodgeAbility_C_AntiSelfKOLaunchModifier::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_AntiSelfKOLaunchModifier, CallFunc_K2_GetActorLocation_ReturnValue_5) == 0x0001EC, "Member 'DodgeAbility_C_AntiSelfKOLaunchModifier::CallFunc_K2_GetActorLocation_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_AntiSelfKOLaunchModifier, CallFunc_SphereTraceSingle_OutHit) == 0x0001F8, "Member 'DodgeAbility_C_AntiSelfKOLaunchModifier::CallFunc_SphereTraceSingle_OutHit' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_AntiSelfKOLaunchModifier, CallFunc_SphereTraceSingle_ReturnValue) == 0x000280, "Member 'DodgeAbility_C_AntiSelfKOLaunchModifier::CallFunc_SphereTraceSingle_ReturnValue' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_AntiSelfKOLaunchModifier, CallFunc_BreakHitResult_bBlockingHit) == 0x000281, "Member 'DodgeAbility_C_AntiSelfKOLaunchModifier::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_AntiSelfKOLaunchModifier, CallFunc_BreakHitResult_bInitialOverlap) == 0x000282, "Member 'DodgeAbility_C_AntiSelfKOLaunchModifier::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_AntiSelfKOLaunchModifier, CallFunc_BreakHitResult_Time) == 0x000284, "Member 'DodgeAbility_C_AntiSelfKOLaunchModifier::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_AntiSelfKOLaunchModifier, CallFunc_BreakHitResult_Distance) == 0x000288, "Member 'DodgeAbility_C_AntiSelfKOLaunchModifier::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_AntiSelfKOLaunchModifier, CallFunc_BreakHitResult_Location) == 0x00028C, "Member 'DodgeAbility_C_AntiSelfKOLaunchModifier::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_AntiSelfKOLaunchModifier, CallFunc_BreakHitResult_ImpactPoint) == 0x000298, "Member 'DodgeAbility_C_AntiSelfKOLaunchModifier::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_AntiSelfKOLaunchModifier, CallFunc_BreakHitResult_Normal) == 0x0002A4, "Member 'DodgeAbility_C_AntiSelfKOLaunchModifier::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_AntiSelfKOLaunchModifier, CallFunc_BreakHitResult_ImpactNormal) == 0x0002B0, "Member 'DodgeAbility_C_AntiSelfKOLaunchModifier::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_AntiSelfKOLaunchModifier, CallFunc_BreakHitResult_PhysMat) == 0x0002C0, "Member 'DodgeAbility_C_AntiSelfKOLaunchModifier::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_AntiSelfKOLaunchModifier, CallFunc_BreakHitResult_HitActor) == 0x0002C8, "Member 'DodgeAbility_C_AntiSelfKOLaunchModifier::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_AntiSelfKOLaunchModifier, CallFunc_BreakHitResult_HitComponent) == 0x0002D0, "Member 'DodgeAbility_C_AntiSelfKOLaunchModifier::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_AntiSelfKOLaunchModifier, CallFunc_BreakHitResult_HitBoneName) == 0x0002D8, "Member 'DodgeAbility_C_AntiSelfKOLaunchModifier::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_AntiSelfKOLaunchModifier, CallFunc_BreakHitResult_HitItem) == 0x0002E0, "Member 'DodgeAbility_C_AntiSelfKOLaunchModifier::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_AntiSelfKOLaunchModifier, CallFunc_BreakHitResult_FaceIndex) == 0x0002E4, "Member 'DodgeAbility_C_AntiSelfKOLaunchModifier::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_AntiSelfKOLaunchModifier, CallFunc_BreakHitResult_TraceStart) == 0x0002E8, "Member 'DodgeAbility_C_AntiSelfKOLaunchModifier::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_AntiSelfKOLaunchModifier, CallFunc_BreakHitResult_TraceEnd) == 0x0002F4, "Member 'DodgeAbility_C_AntiSelfKOLaunchModifier::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_AntiSelfKOLaunchModifier, CallFunc_Dot_VectorVector_ReturnValue_1) == 0x000300, "Member 'DodgeAbility_C_AntiSelfKOLaunchModifier::CallFunc_Dot_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_AntiSelfKOLaunchModifier, CallFunc_NearlyEqual_FloatFloat_ReturnValue) == 0x000304, "Member 'DodgeAbility_C_AntiSelfKOLaunchModifier::CallFunc_NearlyEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_AntiSelfKOLaunchModifier, CallFunc_BooleanOR_ReturnValue_2) == 0x000305, "Member 'DodgeAbility_C_AntiSelfKOLaunchModifier::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_AntiSelfKOLaunchModifier, CallFunc_NegateVector_ReturnValue_1) == 0x000308, "Member 'DodgeAbility_C_AntiSelfKOLaunchModifier::CallFunc_NegateVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_AntiSelfKOLaunchModifier, K2Node_Select_Default) == 0x000314, "Member 'DodgeAbility_C_AntiSelfKOLaunchModifier::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_AntiSelfKOLaunchModifier, CallFunc_Multiply_VectorFloat_ReturnValue_1) == 0x000318, "Member 'DodgeAbility_C_AntiSelfKOLaunchModifier::CallFunc_Multiply_VectorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_AntiSelfKOLaunchModifier, CallFunc_GetOwningCharacterFromActorInfo_ReturnValue_7) == 0x000328, "Member 'DodgeAbility_C_AntiSelfKOLaunchModifier::CallFunc_GetOwningCharacterFromActorInfo_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_AntiSelfKOLaunchModifier, CallFunc_GetActorUpVector_ReturnValue_1) == 0x000330, "Member 'DodgeAbility_C_AntiSelfKOLaunchModifier::CallFunc_GetActorUpVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_AntiSelfKOLaunchModifier, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x00033C, "Member 'DodgeAbility_C_AntiSelfKOLaunchModifier::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_AntiSelfKOLaunchModifier, CallFunc_Dot_VectorVector_ReturnValue_2) == 0x000340, "Member 'DodgeAbility_C_AntiSelfKOLaunchModifier::CallFunc_Dot_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_AntiSelfKOLaunchModifier, CallFunc_BooleanAND_ReturnValue) == 0x000344, "Member 'DodgeAbility_C_AntiSelfKOLaunchModifier::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_AntiSelfKOLaunchModifier, CallFunc_NearlyEqual_FloatFloat_ReturnValue_1) == 0x000345, "Member 'DodgeAbility_C_AntiSelfKOLaunchModifier::CallFunc_NearlyEqual_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_AntiSelfKOLaunchModifier, CallFunc_GetOwningCharacterFromActorInfo_ReturnValue_8) == 0x000348, "Member 'DodgeAbility_C_AntiSelfKOLaunchModifier::CallFunc_GetOwningCharacterFromActorInfo_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_AntiSelfKOLaunchModifier, CallFunc_K2_GetActorLocation_ReturnValue_6) == 0x000350, "Member 'DodgeAbility_C_AntiSelfKOLaunchModifier::CallFunc_K2_GetActorLocation_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_AntiSelfKOLaunchModifier, CallFunc_Add_VectorVector_ReturnValue_2) == 0x00035C, "Member 'DodgeAbility_C_AntiSelfKOLaunchModifier::CallFunc_Add_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_AntiSelfKOLaunchModifier, CallFunc_IsPointInsideArenaBounds_OutDistToClosestSurface_2) == 0x000368, "Member 'DodgeAbility_C_AntiSelfKOLaunchModifier::CallFunc_IsPointInsideArenaBounds_OutDistToClosestSurface_2' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_AntiSelfKOLaunchModifier, CallFunc_IsPointInsideArenaBounds_OutPointOnClosestSurface_2) == 0x00036C, "Member 'DodgeAbility_C_AntiSelfKOLaunchModifier::CallFunc_IsPointInsideArenaBounds_OutPointOnClosestSurface_2' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_AntiSelfKOLaunchModifier, CallFunc_IsPointInsideArenaBounds_OutSurfaceNormal_2) == 0x000378, "Member 'DodgeAbility_C_AntiSelfKOLaunchModifier::CallFunc_IsPointInsideArenaBounds_OutSurfaceNormal_2' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_AntiSelfKOLaunchModifier, CallFunc_IsPointInsideArenaBounds_ReturnValue_2) == 0x000384, "Member 'DodgeAbility_C_AntiSelfKOLaunchModifier::CallFunc_IsPointInsideArenaBounds_ReturnValue_2' has a wrong offset!");

// Function DodgeAbility.DodgeAbility_C.UpdateDodgeDuration
// 0x0004 (0x0004 - 0x0000)
struct DodgeAbility_C_UpdateDodgeDuration final
{
public:
	float                                         CallFunc_GetDodgeDuration_DodgeDuration;           // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(DodgeAbility_C_UpdateDodgeDuration) == 0x000004, "Wrong alignment on DodgeAbility_C_UpdateDodgeDuration");
static_assert(sizeof(DodgeAbility_C_UpdateDodgeDuration) == 0x000004, "Wrong size on DodgeAbility_C_UpdateDodgeDuration");
static_assert(offsetof(DodgeAbility_C_UpdateDodgeDuration, CallFunc_GetDodgeDuration_DodgeDuration) == 0x000000, "Member 'DodgeAbility_C_UpdateDodgeDuration::CallFunc_GetDodgeDuration_DodgeDuration' has a wrong offset!");

// Function DodgeAbility.DodgeAbility_C.CacheIsNinjaHeadbandActive
// 0x0058 (0x0058 - 0x0000)
struct DodgeAbility_C_CacheIsNinjaHeadbandActive final
{
public:
	struct FMarinerGameplayAbilityTargetData_Aim  CallFunc_GetAimData_ReturnValue;                   // 0x0000(0x0050)(ConstParm)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(DodgeAbility_C_CacheIsNinjaHeadbandActive) == 0x000008, "Wrong alignment on DodgeAbility_C_CacheIsNinjaHeadbandActive");
static_assert(sizeof(DodgeAbility_C_CacheIsNinjaHeadbandActive) == 0x000058, "Wrong size on DodgeAbility_C_CacheIsNinjaHeadbandActive");
static_assert(offsetof(DodgeAbility_C_CacheIsNinjaHeadbandActive, CallFunc_GetAimData_ReturnValue) == 0x000000, "Member 'DodgeAbility_C_CacheIsNinjaHeadbandActive::CallFunc_GetAimData_ReturnValue' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_CacheIsNinjaHeadbandActive, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000050, "Member 'DodgeAbility_C_CacheIsNinjaHeadbandActive::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");

// Function DodgeAbility.DodgeAbility_C.ApplyCharacterRecovery
// 0x0010 (0x0010 - 0x0000)
struct DodgeAbility_C_ApplyCharacterRecovery final
{
public:
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2548[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AMarinerCharacter*                      CallFunc_GetAvatarCharacterFromActorInfo_ReturnValue; // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(DodgeAbility_C_ApplyCharacterRecovery) == 0x000008, "Wrong alignment on DodgeAbility_C_ApplyCharacterRecovery");
static_assert(sizeof(DodgeAbility_C_ApplyCharacterRecovery) == 0x000010, "Wrong size on DodgeAbility_C_ApplyCharacterRecovery");
static_assert(offsetof(DodgeAbility_C_ApplyCharacterRecovery, CallFunc_HasAuthority_ReturnValue) == 0x000000, "Member 'DodgeAbility_C_ApplyCharacterRecovery::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_ApplyCharacterRecovery, CallFunc_GetAvatarCharacterFromActorInfo_ReturnValue) == 0x000008, "Member 'DodgeAbility_C_ApplyCharacterRecovery::CallFunc_GetAvatarCharacterFromActorInfo_ReturnValue' has a wrong offset!");

// Function DodgeAbility.DodgeAbility_C.GetInputVector
// 0x0070 (0x0070 - 0x0000)
struct DodgeAbility_C_GetInputVector final
{
public:
	struct FVector                                InputVector;                                       // 0x0000(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2549[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMarinerGameplayAbilityTargetData_Aim  CallFunc_GetAimData_ReturnValue;                   // 0x0010(0x0050)(ConstParm)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x0060(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(DodgeAbility_C_GetInputVector) == 0x000008, "Wrong alignment on DodgeAbility_C_GetInputVector");
static_assert(sizeof(DodgeAbility_C_GetInputVector) == 0x000070, "Wrong size on DodgeAbility_C_GetInputVector");
static_assert(offsetof(DodgeAbility_C_GetInputVector, InputVector) == 0x000000, "Member 'DodgeAbility_C_GetInputVector::InputVector' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_GetInputVector, CallFunc_GetAimData_ReturnValue) == 0x000010, "Member 'DodgeAbility_C_GetInputVector::CallFunc_GetAimData_ReturnValue' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_GetInputVector, CallFunc_Normal_ReturnValue) == 0x000060, "Member 'DodgeAbility_C_GetInputVector::CallFunc_Normal_ReturnValue' has a wrong offset!");

// Function DodgeAbility.DodgeAbility_C.GetCharacterForwardVector
// 0x0030 (0x0030 - 0x0000)
struct DodgeAbility_C_GetCharacterForwardVector final
{
public:
	struct FVector                                ForwardVector;                                     // 0x0000(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_254A[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AMarinerCharacter*                      CallFunc_GetAvatarCharacterFromActorInfo_ReturnValue; // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue;        // 0x0018(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x0024(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(DodgeAbility_C_GetCharacterForwardVector) == 0x000008, "Wrong alignment on DodgeAbility_C_GetCharacterForwardVector");
static_assert(sizeof(DodgeAbility_C_GetCharacterForwardVector) == 0x000030, "Wrong size on DodgeAbility_C_GetCharacterForwardVector");
static_assert(offsetof(DodgeAbility_C_GetCharacterForwardVector, ForwardVector) == 0x000000, "Member 'DodgeAbility_C_GetCharacterForwardVector::ForwardVector' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_GetCharacterForwardVector, CallFunc_GetAvatarCharacterFromActorInfo_ReturnValue) == 0x000010, "Member 'DodgeAbility_C_GetCharacterForwardVector::CallFunc_GetAvatarCharacterFromActorInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_GetCharacterForwardVector, CallFunc_GetActorForwardVector_ReturnValue) == 0x000018, "Member 'DodgeAbility_C_GetCharacterForwardVector::CallFunc_GetActorForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_GetCharacterForwardVector, CallFunc_Normal_ReturnValue) == 0x000024, "Member 'DodgeAbility_C_GetCharacterForwardVector::CallFunc_Normal_ReturnValue' has a wrong offset!");

// Function DodgeAbility.DodgeAbility_C.GetAimDirection
// 0x0070 (0x0070 - 0x0000)
struct DodgeAbility_C_GetAimDirection final
{
public:
	struct FVector                                AimDirection;                                      // 0x0000(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_254B[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMarinerGameplayAbilityTargetData_Aim  CallFunc_GetAimData_ReturnValue;                   // 0x0010(0x0050)(ConstParm)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x0060(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(DodgeAbility_C_GetAimDirection) == 0x000008, "Wrong alignment on DodgeAbility_C_GetAimDirection");
static_assert(sizeof(DodgeAbility_C_GetAimDirection) == 0x000070, "Wrong size on DodgeAbility_C_GetAimDirection");
static_assert(offsetof(DodgeAbility_C_GetAimDirection, AimDirection) == 0x000000, "Member 'DodgeAbility_C_GetAimDirection::AimDirection' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_GetAimDirection, CallFunc_GetAimData_ReturnValue) == 0x000010, "Member 'DodgeAbility_C_GetAimDirection::CallFunc_GetAimData_ReturnValue' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_GetAimDirection, CallFunc_Normal_ReturnValue) == 0x000060, "Member 'DodgeAbility_C_GetAimDirection::CallFunc_Normal_ReturnValue' has a wrong offset!");

// Function DodgeAbility.DodgeAbility_C.CalculateDirectionalLaunchVector
// 0x00B8 (0x00B8 - 0x0000)
struct DodgeAbility_C_CalculateDirectionalLaunchVector final
{
public:
	struct FVector                                LaunchVector;                                      // 0x0000(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                AdjustedAimDirection;                              // 0x000C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         InputForwardVectorDot;                             // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CombinedAimInputVector;                            // 0x001C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsPlayerMovingBackwards;                           // 0x0028(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_254C[0x3];                                     // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CombinedAimInputVectorZ;                           // 0x002C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsControlledByAI__Server_Only__bSuccess;  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_254D[0x3];                                     // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetAimDirection_AimDirection;             // 0x0034(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_NegateVector_ReturnValue;                 // 0x0040(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x004D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_254E[0x2];                                     // 0x004E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_Select_Default;                             // 0x0050(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetPlayerInputAndActorForwardVectorDot_InputForwardVectorDot; // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_CalculateCombinedAimInputVector_CombinedAimInputVector; // 0x0060(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetModifiedLaunchStrength_ModifiedLaunchStrength; // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_RotateLaunchVectorByMinLaunchAngle_ModifiedLaunchVector; // 0x007C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_FloatToString_ReturnValue;           // 0x0088(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0098(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_254F[0x4];                                     // 0x00A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x00A8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(DodgeAbility_C_CalculateDirectionalLaunchVector) == 0x000008, "Wrong alignment on DodgeAbility_C_CalculateDirectionalLaunchVector");
static_assert(sizeof(DodgeAbility_C_CalculateDirectionalLaunchVector) == 0x0000B8, "Wrong size on DodgeAbility_C_CalculateDirectionalLaunchVector");
static_assert(offsetof(DodgeAbility_C_CalculateDirectionalLaunchVector, LaunchVector) == 0x000000, "Member 'DodgeAbility_C_CalculateDirectionalLaunchVector::LaunchVector' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_CalculateDirectionalLaunchVector, AdjustedAimDirection) == 0x00000C, "Member 'DodgeAbility_C_CalculateDirectionalLaunchVector::AdjustedAimDirection' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_CalculateDirectionalLaunchVector, InputForwardVectorDot) == 0x000018, "Member 'DodgeAbility_C_CalculateDirectionalLaunchVector::InputForwardVectorDot' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_CalculateDirectionalLaunchVector, CombinedAimInputVector) == 0x00001C, "Member 'DodgeAbility_C_CalculateDirectionalLaunchVector::CombinedAimInputVector' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_CalculateDirectionalLaunchVector, IsPlayerMovingBackwards) == 0x000028, "Member 'DodgeAbility_C_CalculateDirectionalLaunchVector::IsPlayerMovingBackwards' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_CalculateDirectionalLaunchVector, CombinedAimInputVectorZ) == 0x00002C, "Member 'DodgeAbility_C_CalculateDirectionalLaunchVector::CombinedAimInputVectorZ' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_CalculateDirectionalLaunchVector, CallFunc_IsControlledByAI__Server_Only__bSuccess) == 0x000030, "Member 'DodgeAbility_C_CalculateDirectionalLaunchVector::CallFunc_IsControlledByAI__Server_Only__bSuccess' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_CalculateDirectionalLaunchVector, CallFunc_GetAimDirection_AimDirection) == 0x000034, "Member 'DodgeAbility_C_CalculateDirectionalLaunchVector::CallFunc_GetAimDirection_AimDirection' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_CalculateDirectionalLaunchVector, CallFunc_NegateVector_ReturnValue) == 0x000040, "Member 'DodgeAbility_C_CalculateDirectionalLaunchVector::CallFunc_NegateVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_CalculateDirectionalLaunchVector, CallFunc_Less_FloatFloat_ReturnValue) == 0x00004C, "Member 'DodgeAbility_C_CalculateDirectionalLaunchVector::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_CalculateDirectionalLaunchVector, Temp_bool_Variable) == 0x00004D, "Member 'DodgeAbility_C_CalculateDirectionalLaunchVector::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_CalculateDirectionalLaunchVector, K2Node_Select_Default) == 0x000050, "Member 'DodgeAbility_C_CalculateDirectionalLaunchVector::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_CalculateDirectionalLaunchVector, CallFunc_GetPlayerInputAndActorForwardVectorDot_InputForwardVectorDot) == 0x00005C, "Member 'DodgeAbility_C_CalculateDirectionalLaunchVector::CallFunc_GetPlayerInputAndActorForwardVectorDot_InputForwardVectorDot' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_CalculateDirectionalLaunchVector, CallFunc_CalculateCombinedAimInputVector_CombinedAimInputVector) == 0x000060, "Member 'DodgeAbility_C_CalculateDirectionalLaunchVector::CallFunc_CalculateCombinedAimInputVector_CombinedAimInputVector' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_CalculateDirectionalLaunchVector, CallFunc_BreakVector_X) == 0x00006C, "Member 'DodgeAbility_C_CalculateDirectionalLaunchVector::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_CalculateDirectionalLaunchVector, CallFunc_BreakVector_Y) == 0x000070, "Member 'DodgeAbility_C_CalculateDirectionalLaunchVector::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_CalculateDirectionalLaunchVector, CallFunc_BreakVector_Z) == 0x000074, "Member 'DodgeAbility_C_CalculateDirectionalLaunchVector::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_CalculateDirectionalLaunchVector, CallFunc_GetModifiedLaunchStrength_ModifiedLaunchStrength) == 0x000078, "Member 'DodgeAbility_C_CalculateDirectionalLaunchVector::CallFunc_GetModifiedLaunchStrength_ModifiedLaunchStrength' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_CalculateDirectionalLaunchVector, CallFunc_RotateLaunchVectorByMinLaunchAngle_ModifiedLaunchVector) == 0x00007C, "Member 'DodgeAbility_C_CalculateDirectionalLaunchVector::CallFunc_RotateLaunchVectorByMinLaunchAngle_ModifiedLaunchVector' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_CalculateDirectionalLaunchVector, CallFunc_Conv_FloatToString_ReturnValue) == 0x000088, "Member 'DodgeAbility_C_CalculateDirectionalLaunchVector::CallFunc_Conv_FloatToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_CalculateDirectionalLaunchVector, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000098, "Member 'DodgeAbility_C_CalculateDirectionalLaunchVector::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_CalculateDirectionalLaunchVector, CallFunc_Concat_StrStr_ReturnValue) == 0x0000A8, "Member 'DodgeAbility_C_CalculateDirectionalLaunchVector::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");

// Function DodgeAbility.DodgeAbility_C.RotateLaunchVectorByMinLaunchAngle
// 0x00C0 (0x00C0 - 0x0000)
struct DodgeAbility_C_RotateLaunchVectorByMinLaunchAngle final
{
public:
	struct FVector                                CombinedAimInputVector;                            // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CombinedAimInputVectorZ;                           // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsPlayerMovingBackwards;                           // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2550[0x3];                                     // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                AdjustedAimDirection;                              // 0x0014(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                ModifiedLaunchVector;                              // 0x0020(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2551[0x4];                                     // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AMarinerCharacter*                      CallFunc_GetOwningCharacterFromActorInfo_ReturnValue; // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorUpVector_ReturnValue;             // 0x0038(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetIsPlayerWalking_IsWalking;             // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2552[0x3];                                     // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Dot_VectorVector_ReturnValue;             // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeClamped_ReturnValue;              // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Abs_ReturnValue;                          // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetInputVector_InputVector;               // 0x0054(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeClamped_ReturnValue_1;            // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2553[0x4];                                     // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AMarinerCharacter*                      CallFunc_GetOwningCharacterFromActorInfo_ReturnValue_1; // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorUpVector_ReturnValue_1;           // 0x0074(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetDodgeMinLaunchAngle_MinLaunchAngle;    // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Cross_VectorVector_ReturnValue;           // 0x0084(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_RotateAngleAxis_ReturnValue;              // 0x0094(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_FloatToString_ReturnValue;           // 0x00A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x00B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(DodgeAbility_C_RotateLaunchVectorByMinLaunchAngle) == 0x000008, "Wrong alignment on DodgeAbility_C_RotateLaunchVectorByMinLaunchAngle");
static_assert(sizeof(DodgeAbility_C_RotateLaunchVectorByMinLaunchAngle) == 0x0000C0, "Wrong size on DodgeAbility_C_RotateLaunchVectorByMinLaunchAngle");
static_assert(offsetof(DodgeAbility_C_RotateLaunchVectorByMinLaunchAngle, CombinedAimInputVector) == 0x000000, "Member 'DodgeAbility_C_RotateLaunchVectorByMinLaunchAngle::CombinedAimInputVector' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_RotateLaunchVectorByMinLaunchAngle, CombinedAimInputVectorZ) == 0x00000C, "Member 'DodgeAbility_C_RotateLaunchVectorByMinLaunchAngle::CombinedAimInputVectorZ' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_RotateLaunchVectorByMinLaunchAngle, IsPlayerMovingBackwards) == 0x000010, "Member 'DodgeAbility_C_RotateLaunchVectorByMinLaunchAngle::IsPlayerMovingBackwards' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_RotateLaunchVectorByMinLaunchAngle, AdjustedAimDirection) == 0x000014, "Member 'DodgeAbility_C_RotateLaunchVectorByMinLaunchAngle::AdjustedAimDirection' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_RotateLaunchVectorByMinLaunchAngle, ModifiedLaunchVector) == 0x000020, "Member 'DodgeAbility_C_RotateLaunchVectorByMinLaunchAngle::ModifiedLaunchVector' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_RotateLaunchVectorByMinLaunchAngle, CallFunc_GetOwningCharacterFromActorInfo_ReturnValue) == 0x000030, "Member 'DodgeAbility_C_RotateLaunchVectorByMinLaunchAngle::CallFunc_GetOwningCharacterFromActorInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_RotateLaunchVectorByMinLaunchAngle, CallFunc_GetActorUpVector_ReturnValue) == 0x000038, "Member 'DodgeAbility_C_RotateLaunchVectorByMinLaunchAngle::CallFunc_GetActorUpVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_RotateLaunchVectorByMinLaunchAngle, CallFunc_GetIsPlayerWalking_IsWalking) == 0x000044, "Member 'DodgeAbility_C_RotateLaunchVectorByMinLaunchAngle::CallFunc_GetIsPlayerWalking_IsWalking' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_RotateLaunchVectorByMinLaunchAngle, CallFunc_Dot_VectorVector_ReturnValue) == 0x000048, "Member 'DodgeAbility_C_RotateLaunchVectorByMinLaunchAngle::CallFunc_Dot_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_RotateLaunchVectorByMinLaunchAngle, CallFunc_MapRangeClamped_ReturnValue) == 0x00004C, "Member 'DodgeAbility_C_RotateLaunchVectorByMinLaunchAngle::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_RotateLaunchVectorByMinLaunchAngle, CallFunc_Abs_ReturnValue) == 0x000050, "Member 'DodgeAbility_C_RotateLaunchVectorByMinLaunchAngle::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_RotateLaunchVectorByMinLaunchAngle, CallFunc_GetInputVector_InputVector) == 0x000054, "Member 'DodgeAbility_C_RotateLaunchVectorByMinLaunchAngle::CallFunc_GetInputVector_InputVector' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_RotateLaunchVectorByMinLaunchAngle, CallFunc_MapRangeClamped_ReturnValue_1) == 0x000060, "Member 'DodgeAbility_C_RotateLaunchVectorByMinLaunchAngle::CallFunc_MapRangeClamped_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_RotateLaunchVectorByMinLaunchAngle, CallFunc_GetOwningCharacterFromActorInfo_ReturnValue_1) == 0x000068, "Member 'DodgeAbility_C_RotateLaunchVectorByMinLaunchAngle::CallFunc_GetOwningCharacterFromActorInfo_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_RotateLaunchVectorByMinLaunchAngle, CallFunc_SelectFloat_ReturnValue) == 0x000070, "Member 'DodgeAbility_C_RotateLaunchVectorByMinLaunchAngle::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_RotateLaunchVectorByMinLaunchAngle, CallFunc_GetActorUpVector_ReturnValue_1) == 0x000074, "Member 'DodgeAbility_C_RotateLaunchVectorByMinLaunchAngle::CallFunc_GetActorUpVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_RotateLaunchVectorByMinLaunchAngle, CallFunc_GetDodgeMinLaunchAngle_MinLaunchAngle) == 0x000080, "Member 'DodgeAbility_C_RotateLaunchVectorByMinLaunchAngle::CallFunc_GetDodgeMinLaunchAngle_MinLaunchAngle' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_RotateLaunchVectorByMinLaunchAngle, CallFunc_Cross_VectorVector_ReturnValue) == 0x000084, "Member 'DodgeAbility_C_RotateLaunchVectorByMinLaunchAngle::CallFunc_Cross_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_RotateLaunchVectorByMinLaunchAngle, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000090, "Member 'DodgeAbility_C_RotateLaunchVectorByMinLaunchAngle::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_RotateLaunchVectorByMinLaunchAngle, CallFunc_RotateAngleAxis_ReturnValue) == 0x000094, "Member 'DodgeAbility_C_RotateLaunchVectorByMinLaunchAngle::CallFunc_RotateAngleAxis_ReturnValue' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_RotateLaunchVectorByMinLaunchAngle, CallFunc_Conv_FloatToString_ReturnValue) == 0x0000A0, "Member 'DodgeAbility_C_RotateLaunchVectorByMinLaunchAngle::CallFunc_Conv_FloatToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_RotateLaunchVectorByMinLaunchAngle, CallFunc_Concat_StrStr_ReturnValue) == 0x0000B0, "Member 'DodgeAbility_C_RotateLaunchVectorByMinLaunchAngle::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");

// Function DodgeAbility.DodgeAbility_C.GetModifiedLaunchStrength
// 0x0088 (0x0088 - 0x0000)
struct DodgeAbility_C_GetModifiedLaunchStrength final
{
public:
	float                                         CombinedAimInputVectorZ;                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CombinedAimInputVector;                            // 0x0004(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ModifiedLaunchStrength;                            // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         UnmodifiedLaunchStrength;                          // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMarinerCharacter*                      CallFunc_GetOwningCharacterFromActorInfo_ReturnValue; // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMarinerCharacter*                      CallFunc_GetOwningCharacterFromActorInfo_ReturnValue_1; // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorUpVector_ReturnValue;             // 0x0028(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorUpVector_ReturnValue_1;           // 0x0034(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Dot_VectorVector_ReturnValue;             // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Dot_VectorVector_ReturnValue_1;           // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeClamped_ReturnValue;              // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetIsPlayerWalking_IsWalking;             // 0x004D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2554[0x2];                                     // 0x004E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetFloatValue_ReturnValue;                // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2555[0x3];                                     // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetDodgeStrength_DodgeStrength;           // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue;                         // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_FloatToString_ReturnValue;           // 0x0068(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0078(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(DodgeAbility_C_GetModifiedLaunchStrength) == 0x000008, "Wrong alignment on DodgeAbility_C_GetModifiedLaunchStrength");
static_assert(sizeof(DodgeAbility_C_GetModifiedLaunchStrength) == 0x000088, "Wrong size on DodgeAbility_C_GetModifiedLaunchStrength");
static_assert(offsetof(DodgeAbility_C_GetModifiedLaunchStrength, CombinedAimInputVectorZ) == 0x000000, "Member 'DodgeAbility_C_GetModifiedLaunchStrength::CombinedAimInputVectorZ' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_GetModifiedLaunchStrength, CombinedAimInputVector) == 0x000004, "Member 'DodgeAbility_C_GetModifiedLaunchStrength::CombinedAimInputVector' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_GetModifiedLaunchStrength, ModifiedLaunchStrength) == 0x000010, "Member 'DodgeAbility_C_GetModifiedLaunchStrength::ModifiedLaunchStrength' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_GetModifiedLaunchStrength, UnmodifiedLaunchStrength) == 0x000014, "Member 'DodgeAbility_C_GetModifiedLaunchStrength::UnmodifiedLaunchStrength' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_GetModifiedLaunchStrength, CallFunc_GetOwningCharacterFromActorInfo_ReturnValue) == 0x000018, "Member 'DodgeAbility_C_GetModifiedLaunchStrength::CallFunc_GetOwningCharacterFromActorInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_GetModifiedLaunchStrength, CallFunc_GetOwningCharacterFromActorInfo_ReturnValue_1) == 0x000020, "Member 'DodgeAbility_C_GetModifiedLaunchStrength::CallFunc_GetOwningCharacterFromActorInfo_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_GetModifiedLaunchStrength, CallFunc_GetActorUpVector_ReturnValue) == 0x000028, "Member 'DodgeAbility_C_GetModifiedLaunchStrength::CallFunc_GetActorUpVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_GetModifiedLaunchStrength, CallFunc_GetActorUpVector_ReturnValue_1) == 0x000034, "Member 'DodgeAbility_C_GetModifiedLaunchStrength::CallFunc_GetActorUpVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_GetModifiedLaunchStrength, CallFunc_Dot_VectorVector_ReturnValue) == 0x000040, "Member 'DodgeAbility_C_GetModifiedLaunchStrength::CallFunc_Dot_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_GetModifiedLaunchStrength, CallFunc_Dot_VectorVector_ReturnValue_1) == 0x000044, "Member 'DodgeAbility_C_GetModifiedLaunchStrength::CallFunc_Dot_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_GetModifiedLaunchStrength, CallFunc_MapRangeClamped_ReturnValue) == 0x000048, "Member 'DodgeAbility_C_GetModifiedLaunchStrength::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_GetModifiedLaunchStrength, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x00004C, "Member 'DodgeAbility_C_GetModifiedLaunchStrength::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_GetModifiedLaunchStrength, CallFunc_GetIsPlayerWalking_IsWalking) == 0x00004D, "Member 'DodgeAbility_C_GetModifiedLaunchStrength::CallFunc_GetIsPlayerWalking_IsWalking' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_GetModifiedLaunchStrength, CallFunc_GetFloatValue_ReturnValue) == 0x000050, "Member 'DodgeAbility_C_GetModifiedLaunchStrength::CallFunc_GetFloatValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_GetModifiedLaunchStrength, CallFunc_BooleanOR_ReturnValue) == 0x000054, "Member 'DodgeAbility_C_GetModifiedLaunchStrength::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_GetModifiedLaunchStrength, CallFunc_GetDodgeStrength_DodgeStrength) == 0x000058, "Member 'DodgeAbility_C_GetModifiedLaunchStrength::CallFunc_GetDodgeStrength_DodgeStrength' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_GetModifiedLaunchStrength, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x00005C, "Member 'DodgeAbility_C_GetModifiedLaunchStrength::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_GetModifiedLaunchStrength, CallFunc_Lerp_ReturnValue) == 0x000060, "Member 'DodgeAbility_C_GetModifiedLaunchStrength::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_GetModifiedLaunchStrength, CallFunc_SelectFloat_ReturnValue) == 0x000064, "Member 'DodgeAbility_C_GetModifiedLaunchStrength::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_GetModifiedLaunchStrength, CallFunc_Conv_FloatToString_ReturnValue) == 0x000068, "Member 'DodgeAbility_C_GetModifiedLaunchStrength::CallFunc_Conv_FloatToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_GetModifiedLaunchStrength, CallFunc_Concat_StrStr_ReturnValue) == 0x000078, "Member 'DodgeAbility_C_GetModifiedLaunchStrength::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");

// Function DodgeAbility.DodgeAbility_C.CalculateCombinedAimInputVector
// 0x0100 (0x0100 - 0x0000)
struct DodgeAbility_C_CalculateCombinedAimInputVector final
{
public:
	float                                         InputForwardVectorDot;                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsPlayerMovingBackwards;                           // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2556[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                AdjustedAimDirection;                              // 0x0008(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CombinedAimInputVector;                            // 0x0014(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMarinerCharacter*                      CallFunc_GetOwningCharacterFromActorInfo_ReturnValue; // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorUpVector_ReturnValue;             // 0x0028(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetIsPlayerWalking_IsWalking;             // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2557[0x3];                                     // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Dot_VectorVector_ReturnValue;             // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Abs_ReturnValue;                          // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeClamped_ReturnValue;              // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Abs_ReturnValue_1;                        // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_FloatToString_ReturnValue;           // 0x0050(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0060(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2558[0x4];                                     // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0070(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetInputVector_InputVector;               // 0x0090(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2559[0x4];                                     // 0x009C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_FloatToString_ReturnValue_1;         // 0x00A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_1;       // 0x00B0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_255A[0x4];                                     // 0x00BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x00C0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x00D0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_SelectVector_ReturnValue;                 // 0x00DC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x00E8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x00F4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(DodgeAbility_C_CalculateCombinedAimInputVector) == 0x000008, "Wrong alignment on DodgeAbility_C_CalculateCombinedAimInputVector");
static_assert(sizeof(DodgeAbility_C_CalculateCombinedAimInputVector) == 0x000100, "Wrong size on DodgeAbility_C_CalculateCombinedAimInputVector");
static_assert(offsetof(DodgeAbility_C_CalculateCombinedAimInputVector, InputForwardVectorDot) == 0x000000, "Member 'DodgeAbility_C_CalculateCombinedAimInputVector::InputForwardVectorDot' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_CalculateCombinedAimInputVector, IsPlayerMovingBackwards) == 0x000004, "Member 'DodgeAbility_C_CalculateCombinedAimInputVector::IsPlayerMovingBackwards' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_CalculateCombinedAimInputVector, AdjustedAimDirection) == 0x000008, "Member 'DodgeAbility_C_CalculateCombinedAimInputVector::AdjustedAimDirection' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_CalculateCombinedAimInputVector, CombinedAimInputVector) == 0x000014, "Member 'DodgeAbility_C_CalculateCombinedAimInputVector::CombinedAimInputVector' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_CalculateCombinedAimInputVector, CallFunc_GetOwningCharacterFromActorInfo_ReturnValue) == 0x000020, "Member 'DodgeAbility_C_CalculateCombinedAimInputVector::CallFunc_GetOwningCharacterFromActorInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_CalculateCombinedAimInputVector, CallFunc_GetActorUpVector_ReturnValue) == 0x000028, "Member 'DodgeAbility_C_CalculateCombinedAimInputVector::CallFunc_GetActorUpVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_CalculateCombinedAimInputVector, CallFunc_GetIsPlayerWalking_IsWalking) == 0x000034, "Member 'DodgeAbility_C_CalculateCombinedAimInputVector::CallFunc_GetIsPlayerWalking_IsWalking' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_CalculateCombinedAimInputVector, CallFunc_Dot_VectorVector_ReturnValue) == 0x000038, "Member 'DodgeAbility_C_CalculateCombinedAimInputVector::CallFunc_Dot_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_CalculateCombinedAimInputVector, CallFunc_Abs_ReturnValue) == 0x00003C, "Member 'DodgeAbility_C_CalculateCombinedAimInputVector::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_CalculateCombinedAimInputVector, CallFunc_MapRangeClamped_ReturnValue) == 0x000040, "Member 'DodgeAbility_C_CalculateCombinedAimInputVector::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_CalculateCombinedAimInputVector, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000044, "Member 'DodgeAbility_C_CalculateCombinedAimInputVector::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_CalculateCombinedAimInputVector, CallFunc_FClamp_ReturnValue) == 0x000048, "Member 'DodgeAbility_C_CalculateCombinedAimInputVector::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_CalculateCombinedAimInputVector, CallFunc_Abs_ReturnValue_1) == 0x00004C, "Member 'DodgeAbility_C_CalculateCombinedAimInputVector::CallFunc_Abs_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_CalculateCombinedAimInputVector, CallFunc_Conv_FloatToString_ReturnValue) == 0x000050, "Member 'DodgeAbility_C_CalculateCombinedAimInputVector::CallFunc_Conv_FloatToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_CalculateCombinedAimInputVector, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000060, "Member 'DodgeAbility_C_CalculateCombinedAimInputVector::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_CalculateCombinedAimInputVector, CallFunc_Concat_StrStr_ReturnValue) == 0x000070, "Member 'DodgeAbility_C_CalculateCombinedAimInputVector::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_CalculateCombinedAimInputVector, CallFunc_BreakVector_X) == 0x000080, "Member 'DodgeAbility_C_CalculateCombinedAimInputVector::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_CalculateCombinedAimInputVector, CallFunc_BreakVector_Y) == 0x000084, "Member 'DodgeAbility_C_CalculateCombinedAimInputVector::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_CalculateCombinedAimInputVector, CallFunc_BreakVector_Z) == 0x000088, "Member 'DodgeAbility_C_CalculateCombinedAimInputVector::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_CalculateCombinedAimInputVector, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x00008C, "Member 'DodgeAbility_C_CalculateCombinedAimInputVector::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_CalculateCombinedAimInputVector, CallFunc_GetInputVector_InputVector) == 0x000090, "Member 'DodgeAbility_C_CalculateCombinedAimInputVector::CallFunc_GetInputVector_InputVector' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_CalculateCombinedAimInputVector, CallFunc_Conv_FloatToString_ReturnValue_1) == 0x0000A0, "Member 'DodgeAbility_C_CalculateCombinedAimInputVector::CallFunc_Conv_FloatToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_CalculateCombinedAimInputVector, CallFunc_Multiply_VectorFloat_ReturnValue_1) == 0x0000B0, "Member 'DodgeAbility_C_CalculateCombinedAimInputVector::CallFunc_Multiply_VectorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_CalculateCombinedAimInputVector, CallFunc_Concat_StrStr_ReturnValue_1) == 0x0000C0, "Member 'DodgeAbility_C_CalculateCombinedAimInputVector::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_CalculateCombinedAimInputVector, CallFunc_MakeVector_ReturnValue) == 0x0000D0, "Member 'DodgeAbility_C_CalculateCombinedAimInputVector::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_CalculateCombinedAimInputVector, CallFunc_SelectVector_ReturnValue) == 0x0000DC, "Member 'DodgeAbility_C_CalculateCombinedAimInputVector::CallFunc_SelectVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_CalculateCombinedAimInputVector, CallFunc_Add_VectorVector_ReturnValue) == 0x0000E8, "Member 'DodgeAbility_C_CalculateCombinedAimInputVector::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_CalculateCombinedAimInputVector, CallFunc_Normal_ReturnValue) == 0x0000F4, "Member 'DodgeAbility_C_CalculateCombinedAimInputVector::CallFunc_Normal_ReturnValue' has a wrong offset!");

// Function DodgeAbility.DodgeAbility_C.GetPlayerInputAndActorForwardVectorDot
// 0x0020 (0x0020 - 0x0000)
struct DodgeAbility_C_GetPlayerInputAndActorForwardVectorDot final
{
public:
	float                                         InputForwardVectorDot;                             // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetCharacterForwardVector_ForwardVector;  // 0x0004(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetInputVector_InputVector;               // 0x0010(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Dot_VectorVector_ReturnValue;             // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(DodgeAbility_C_GetPlayerInputAndActorForwardVectorDot) == 0x000004, "Wrong alignment on DodgeAbility_C_GetPlayerInputAndActorForwardVectorDot");
static_assert(sizeof(DodgeAbility_C_GetPlayerInputAndActorForwardVectorDot) == 0x000020, "Wrong size on DodgeAbility_C_GetPlayerInputAndActorForwardVectorDot");
static_assert(offsetof(DodgeAbility_C_GetPlayerInputAndActorForwardVectorDot, InputForwardVectorDot) == 0x000000, "Member 'DodgeAbility_C_GetPlayerInputAndActorForwardVectorDot::InputForwardVectorDot' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_GetPlayerInputAndActorForwardVectorDot, CallFunc_GetCharacterForwardVector_ForwardVector) == 0x000004, "Member 'DodgeAbility_C_GetPlayerInputAndActorForwardVectorDot::CallFunc_GetCharacterForwardVector_ForwardVector' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_GetPlayerInputAndActorForwardVectorDot, CallFunc_GetInputVector_InputVector) == 0x000010, "Member 'DodgeAbility_C_GetPlayerInputAndActorForwardVectorDot::CallFunc_GetInputVector_InputVector' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_GetPlayerInputAndActorForwardVectorDot, CallFunc_Dot_VectorVector_ReturnValue) == 0x00001C, "Member 'DodgeAbility_C_GetPlayerInputAndActorForwardVectorDot::CallFunc_Dot_VectorVector_ReturnValue' has a wrong offset!");

// Function DodgeAbility.DodgeAbility_C.GetIsPlayerWalking
// 0x0018 (0x0018 - 0x0000)
struct DodgeAbility_C_GetIsPlayerWalking final
{
public:
	bool                                          IsWalking;                                         // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_255B[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AMarinerCharacter*                      CallFunc_GetAvatarCharacterFromActorInfo_ReturnValue; // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsWalking_ReturnValue;                    // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(DodgeAbility_C_GetIsPlayerWalking) == 0x000008, "Wrong alignment on DodgeAbility_C_GetIsPlayerWalking");
static_assert(sizeof(DodgeAbility_C_GetIsPlayerWalking) == 0x000018, "Wrong size on DodgeAbility_C_GetIsPlayerWalking");
static_assert(offsetof(DodgeAbility_C_GetIsPlayerWalking, IsWalking) == 0x000000, "Member 'DodgeAbility_C_GetIsPlayerWalking::IsWalking' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_GetIsPlayerWalking, CallFunc_GetAvatarCharacterFromActorInfo_ReturnValue) == 0x000008, "Member 'DodgeAbility_C_GetIsPlayerWalking::CallFunc_GetAvatarCharacterFromActorInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_GetIsPlayerWalking, CallFunc_IsWalking_ReturnValue) == 0x000010, "Member 'DodgeAbility_C_GetIsPlayerWalking::CallFunc_IsWalking_ReturnValue' has a wrong offset!");

// Function DodgeAbility.DodgeAbility_C.BP_GetLaunchVector
// 0x0018 (0x0018 - 0x0000)
struct DodgeAbility_C_BP_GetLaunchVector final
{
public:
	struct FVector                                ReturnValue;                                       // 0x0000(0x000C)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetDodgeLaunchVelocity_ReturnValue;       // 0x000C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(DodgeAbility_C_BP_GetLaunchVector) == 0x000004, "Wrong alignment on DodgeAbility_C_BP_GetLaunchVector");
static_assert(sizeof(DodgeAbility_C_BP_GetLaunchVector) == 0x000018, "Wrong size on DodgeAbility_C_BP_GetLaunchVector");
static_assert(offsetof(DodgeAbility_C_BP_GetLaunchVector, ReturnValue) == 0x000000, "Member 'DodgeAbility_C_BP_GetLaunchVector::ReturnValue' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_BP_GetLaunchVector, CallFunc_GetDodgeLaunchVelocity_ReturnValue) == 0x00000C, "Member 'DodgeAbility_C_BP_GetLaunchVector::CallFunc_GetDodgeLaunchVelocity_ReturnValue' has a wrong offset!");

// Function DodgeAbility.DodgeAbility_C.IsLaunchEndLocationArenaBoundsLOS_Blocked
// 0x0168 (0x0168 - 0x0000)
struct DodgeAbility_C_IsLaunchEndLocationArenaBoundsLOS_Blocked final
{
public:
	struct FVector                                ClosestPointOnBoundsSurface;                       // 0x0000(0x000C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bLocked;                                           // 0x000C(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_255C[0x3];                                     // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AMarinerCharacter*                      CallFunc_GetOwningCharacterFromActorInfo_ReturnValue; // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         K2Node_MakeArray_Array;                            // 0x0018(0x0010)(ConstParm, ZeroConstructor, ReferenceParm)
	class AMarinerCharacter*                      CallFunc_GetOwningCharacterFromActorInfo_ReturnValue_1; // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0030(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_SphereTraceSingle_OutHit;                 // 0x003C(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_SphereTraceSingle_ReturnValue;            // 0x00C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x00C5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x00C6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_255D[0x1];                                     // 0x00C7(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x00D0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x00DC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x00E8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x00F4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0110(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0124(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0128(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0134(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_255E[0x7];                                     // 0x0141(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_BoolToString_ReturnValue;            // 0x0148(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0158(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(DodgeAbility_C_IsLaunchEndLocationArenaBoundsLOS_Blocked) == 0x000008, "Wrong alignment on DodgeAbility_C_IsLaunchEndLocationArenaBoundsLOS_Blocked");
static_assert(sizeof(DodgeAbility_C_IsLaunchEndLocationArenaBoundsLOS_Blocked) == 0x000168, "Wrong size on DodgeAbility_C_IsLaunchEndLocationArenaBoundsLOS_Blocked");
static_assert(offsetof(DodgeAbility_C_IsLaunchEndLocationArenaBoundsLOS_Blocked, ClosestPointOnBoundsSurface) == 0x000000, "Member 'DodgeAbility_C_IsLaunchEndLocationArenaBoundsLOS_Blocked::ClosestPointOnBoundsSurface' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_IsLaunchEndLocationArenaBoundsLOS_Blocked, bLocked) == 0x00000C, "Member 'DodgeAbility_C_IsLaunchEndLocationArenaBoundsLOS_Blocked::bLocked' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_IsLaunchEndLocationArenaBoundsLOS_Blocked, CallFunc_GetOwningCharacterFromActorInfo_ReturnValue) == 0x000010, "Member 'DodgeAbility_C_IsLaunchEndLocationArenaBoundsLOS_Blocked::CallFunc_GetOwningCharacterFromActorInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_IsLaunchEndLocationArenaBoundsLOS_Blocked, K2Node_MakeArray_Array) == 0x000018, "Member 'DodgeAbility_C_IsLaunchEndLocationArenaBoundsLOS_Blocked::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_IsLaunchEndLocationArenaBoundsLOS_Blocked, CallFunc_GetOwningCharacterFromActorInfo_ReturnValue_1) == 0x000028, "Member 'DodgeAbility_C_IsLaunchEndLocationArenaBoundsLOS_Blocked::CallFunc_GetOwningCharacterFromActorInfo_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_IsLaunchEndLocationArenaBoundsLOS_Blocked, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000030, "Member 'DodgeAbility_C_IsLaunchEndLocationArenaBoundsLOS_Blocked::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_IsLaunchEndLocationArenaBoundsLOS_Blocked, CallFunc_SphereTraceSingle_OutHit) == 0x00003C, "Member 'DodgeAbility_C_IsLaunchEndLocationArenaBoundsLOS_Blocked::CallFunc_SphereTraceSingle_OutHit' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_IsLaunchEndLocationArenaBoundsLOS_Blocked, CallFunc_SphereTraceSingle_ReturnValue) == 0x0000C4, "Member 'DodgeAbility_C_IsLaunchEndLocationArenaBoundsLOS_Blocked::CallFunc_SphereTraceSingle_ReturnValue' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_IsLaunchEndLocationArenaBoundsLOS_Blocked, CallFunc_BreakHitResult_bBlockingHit) == 0x0000C5, "Member 'DodgeAbility_C_IsLaunchEndLocationArenaBoundsLOS_Blocked::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_IsLaunchEndLocationArenaBoundsLOS_Blocked, CallFunc_BreakHitResult_bInitialOverlap) == 0x0000C6, "Member 'DodgeAbility_C_IsLaunchEndLocationArenaBoundsLOS_Blocked::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_IsLaunchEndLocationArenaBoundsLOS_Blocked, CallFunc_BreakHitResult_Time) == 0x0000C8, "Member 'DodgeAbility_C_IsLaunchEndLocationArenaBoundsLOS_Blocked::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_IsLaunchEndLocationArenaBoundsLOS_Blocked, CallFunc_BreakHitResult_Distance) == 0x0000CC, "Member 'DodgeAbility_C_IsLaunchEndLocationArenaBoundsLOS_Blocked::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_IsLaunchEndLocationArenaBoundsLOS_Blocked, CallFunc_BreakHitResult_Location) == 0x0000D0, "Member 'DodgeAbility_C_IsLaunchEndLocationArenaBoundsLOS_Blocked::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_IsLaunchEndLocationArenaBoundsLOS_Blocked, CallFunc_BreakHitResult_ImpactPoint) == 0x0000DC, "Member 'DodgeAbility_C_IsLaunchEndLocationArenaBoundsLOS_Blocked::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_IsLaunchEndLocationArenaBoundsLOS_Blocked, CallFunc_BreakHitResult_Normal) == 0x0000E8, "Member 'DodgeAbility_C_IsLaunchEndLocationArenaBoundsLOS_Blocked::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_IsLaunchEndLocationArenaBoundsLOS_Blocked, CallFunc_BreakHitResult_ImpactNormal) == 0x0000F4, "Member 'DodgeAbility_C_IsLaunchEndLocationArenaBoundsLOS_Blocked::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_IsLaunchEndLocationArenaBoundsLOS_Blocked, CallFunc_BreakHitResult_PhysMat) == 0x000100, "Member 'DodgeAbility_C_IsLaunchEndLocationArenaBoundsLOS_Blocked::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_IsLaunchEndLocationArenaBoundsLOS_Blocked, CallFunc_BreakHitResult_HitActor) == 0x000108, "Member 'DodgeAbility_C_IsLaunchEndLocationArenaBoundsLOS_Blocked::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_IsLaunchEndLocationArenaBoundsLOS_Blocked, CallFunc_BreakHitResult_HitComponent) == 0x000110, "Member 'DodgeAbility_C_IsLaunchEndLocationArenaBoundsLOS_Blocked::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_IsLaunchEndLocationArenaBoundsLOS_Blocked, CallFunc_BreakHitResult_HitBoneName) == 0x000118, "Member 'DodgeAbility_C_IsLaunchEndLocationArenaBoundsLOS_Blocked::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_IsLaunchEndLocationArenaBoundsLOS_Blocked, CallFunc_BreakHitResult_HitItem) == 0x000120, "Member 'DodgeAbility_C_IsLaunchEndLocationArenaBoundsLOS_Blocked::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_IsLaunchEndLocationArenaBoundsLOS_Blocked, CallFunc_BreakHitResult_FaceIndex) == 0x000124, "Member 'DodgeAbility_C_IsLaunchEndLocationArenaBoundsLOS_Blocked::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_IsLaunchEndLocationArenaBoundsLOS_Blocked, CallFunc_BreakHitResult_TraceStart) == 0x000128, "Member 'DodgeAbility_C_IsLaunchEndLocationArenaBoundsLOS_Blocked::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_IsLaunchEndLocationArenaBoundsLOS_Blocked, CallFunc_BreakHitResult_TraceEnd) == 0x000134, "Member 'DodgeAbility_C_IsLaunchEndLocationArenaBoundsLOS_Blocked::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_IsLaunchEndLocationArenaBoundsLOS_Blocked, CallFunc_Not_PreBool_ReturnValue) == 0x000140, "Member 'DodgeAbility_C_IsLaunchEndLocationArenaBoundsLOS_Blocked::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_IsLaunchEndLocationArenaBoundsLOS_Blocked, CallFunc_Conv_BoolToString_ReturnValue) == 0x000148, "Member 'DodgeAbility_C_IsLaunchEndLocationArenaBoundsLOS_Blocked::CallFunc_Conv_BoolToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_IsLaunchEndLocationArenaBoundsLOS_Blocked, CallFunc_Concat_StrStr_ReturnValue) == 0x000158, "Member 'DodgeAbility_C_IsLaunchEndLocationArenaBoundsLOS_Blocked::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");

// Function DodgeAbility.DodgeAbility_C.GetAntiKO_FloorLaunchVector
// 0x0088 (0x0088 - 0x0000)
struct DodgeAbility_C_GetAntiKO_FloorLaunchVector final
{
public:
	struct FVector                                TargetLoc;                                         // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                ClosestBoundsNormal;                               // 0x000C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                LaunchVector;                                      // 0x0018(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetDodgeStrength_DodgeStrength;           // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x0028(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue_1;                     // 0x0034(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Dot_VectorVector_ReturnValue;             // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Abs_ReturnValue;                          // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x004C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0058(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue_2;                     // 0x0064(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_1;       // 0x0070(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_2;       // 0x007C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(DodgeAbility_C_GetAntiKO_FloorLaunchVector) == 0x000004, "Wrong alignment on DodgeAbility_C_GetAntiKO_FloorLaunchVector");
static_assert(sizeof(DodgeAbility_C_GetAntiKO_FloorLaunchVector) == 0x000088, "Wrong size on DodgeAbility_C_GetAntiKO_FloorLaunchVector");
static_assert(offsetof(DodgeAbility_C_GetAntiKO_FloorLaunchVector, TargetLoc) == 0x000000, "Member 'DodgeAbility_C_GetAntiKO_FloorLaunchVector::TargetLoc' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_GetAntiKO_FloorLaunchVector, ClosestBoundsNormal) == 0x00000C, "Member 'DodgeAbility_C_GetAntiKO_FloorLaunchVector::ClosestBoundsNormal' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_GetAntiKO_FloorLaunchVector, LaunchVector) == 0x000018, "Member 'DodgeAbility_C_GetAntiKO_FloorLaunchVector::LaunchVector' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_GetAntiKO_FloorLaunchVector, CallFunc_GetDodgeStrength_DodgeStrength) == 0x000024, "Member 'DodgeAbility_C_GetAntiKO_FloorLaunchVector::CallFunc_GetDodgeStrength_DodgeStrength' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_GetAntiKO_FloorLaunchVector, CallFunc_Normal_ReturnValue) == 0x000028, "Member 'DodgeAbility_C_GetAntiKO_FloorLaunchVector::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_GetAntiKO_FloorLaunchVector, CallFunc_Normal_ReturnValue_1) == 0x000034, "Member 'DodgeAbility_C_GetAntiKO_FloorLaunchVector::CallFunc_Normal_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_GetAntiKO_FloorLaunchVector, CallFunc_Dot_VectorVector_ReturnValue) == 0x000040, "Member 'DodgeAbility_C_GetAntiKO_FloorLaunchVector::CallFunc_Dot_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_GetAntiKO_FloorLaunchVector, CallFunc_Abs_ReturnValue) == 0x000044, "Member 'DodgeAbility_C_GetAntiKO_FloorLaunchVector::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_GetAntiKO_FloorLaunchVector, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000048, "Member 'DodgeAbility_C_GetAntiKO_FloorLaunchVector::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_GetAntiKO_FloorLaunchVector, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x00004C, "Member 'DodgeAbility_C_GetAntiKO_FloorLaunchVector::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_GetAntiKO_FloorLaunchVector, CallFunc_Add_VectorVector_ReturnValue) == 0x000058, "Member 'DodgeAbility_C_GetAntiKO_FloorLaunchVector::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_GetAntiKO_FloorLaunchVector, CallFunc_Normal_ReturnValue_2) == 0x000064, "Member 'DodgeAbility_C_GetAntiKO_FloorLaunchVector::CallFunc_Normal_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_GetAntiKO_FloorLaunchVector, CallFunc_Multiply_VectorFloat_ReturnValue_1) == 0x000070, "Member 'DodgeAbility_C_GetAntiKO_FloorLaunchVector::CallFunc_Multiply_VectorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_GetAntiKO_FloorLaunchVector, CallFunc_Multiply_VectorFloat_ReturnValue_2) == 0x00007C, "Member 'DodgeAbility_C_GetAntiKO_FloorLaunchVector::CallFunc_Multiply_VectorFloat_ReturnValue_2' has a wrong offset!");

// Function DodgeAbility.DodgeAbility_C.IsPlayerCloseEnoughToKOBoundsForProtectionLogic
// 0x0078 (0x0078 - 0x0000)
struct DodgeAbility_C_IsPlayerCloseEnoughToKOBoundsForProtectionLogic final
{
public:
	struct FVector                                PointOnClosestBounds;                              // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CloseEnough;                                       // 0x000C(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_255F[0x3];                                     // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AMarinerCharacter*                      CallFunc_GetOwningCharacterFromActorInfo_ReturnValue; // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0018(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0024(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue;                        // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2560[0x3];                                     // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_FloatToString_ReturnValue;           // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0048(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_BoolToString_ReturnValue;            // 0x0058(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0068(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(DodgeAbility_C_IsPlayerCloseEnoughToKOBoundsForProtectionLogic) == 0x000008, "Wrong alignment on DodgeAbility_C_IsPlayerCloseEnoughToKOBoundsForProtectionLogic");
static_assert(sizeof(DodgeAbility_C_IsPlayerCloseEnoughToKOBoundsForProtectionLogic) == 0x000078, "Wrong size on DodgeAbility_C_IsPlayerCloseEnoughToKOBoundsForProtectionLogic");
static_assert(offsetof(DodgeAbility_C_IsPlayerCloseEnoughToKOBoundsForProtectionLogic, PointOnClosestBounds) == 0x000000, "Member 'DodgeAbility_C_IsPlayerCloseEnoughToKOBoundsForProtectionLogic::PointOnClosestBounds' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_IsPlayerCloseEnoughToKOBoundsForProtectionLogic, CloseEnough) == 0x00000C, "Member 'DodgeAbility_C_IsPlayerCloseEnoughToKOBoundsForProtectionLogic::CloseEnough' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_IsPlayerCloseEnoughToKOBoundsForProtectionLogic, CallFunc_GetOwningCharacterFromActorInfo_ReturnValue) == 0x000010, "Member 'DodgeAbility_C_IsPlayerCloseEnoughToKOBoundsForProtectionLogic::CallFunc_GetOwningCharacterFromActorInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_IsPlayerCloseEnoughToKOBoundsForProtectionLogic, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000018, "Member 'DodgeAbility_C_IsPlayerCloseEnoughToKOBoundsForProtectionLogic::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_IsPlayerCloseEnoughToKOBoundsForProtectionLogic, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000024, "Member 'DodgeAbility_C_IsPlayerCloseEnoughToKOBoundsForProtectionLogic::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_IsPlayerCloseEnoughToKOBoundsForProtectionLogic, CallFunc_VSize_ReturnValue) == 0x000030, "Member 'DodgeAbility_C_IsPlayerCloseEnoughToKOBoundsForProtectionLogic::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_IsPlayerCloseEnoughToKOBoundsForProtectionLogic, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000034, "Member 'DodgeAbility_C_IsPlayerCloseEnoughToKOBoundsForProtectionLogic::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_IsPlayerCloseEnoughToKOBoundsForProtectionLogic, CallFunc_Conv_FloatToString_ReturnValue) == 0x000038, "Member 'DodgeAbility_C_IsPlayerCloseEnoughToKOBoundsForProtectionLogic::CallFunc_Conv_FloatToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_IsPlayerCloseEnoughToKOBoundsForProtectionLogic, CallFunc_Concat_StrStr_ReturnValue) == 0x000048, "Member 'DodgeAbility_C_IsPlayerCloseEnoughToKOBoundsForProtectionLogic::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_IsPlayerCloseEnoughToKOBoundsForProtectionLogic, CallFunc_Conv_BoolToString_ReturnValue) == 0x000058, "Member 'DodgeAbility_C_IsPlayerCloseEnoughToKOBoundsForProtectionLogic::CallFunc_Conv_BoolToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_IsPlayerCloseEnoughToKOBoundsForProtectionLogic, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000068, "Member 'DodgeAbility_C_IsPlayerCloseEnoughToKOBoundsForProtectionLogic::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");

// Function DodgeAbility.DodgeAbility_C.GetIsClosestKOBoundsFloor
// 0x0030 (0x0030 - 0x0000)
struct DodgeAbility_C_GetIsClosestKOBoundsFloor final
{
public:
	struct FVector                                ClosestBoundsNormal;                               // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsFloor;                                           // 0x000C(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2561[0x3];                                     // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AMarinerCharacter*                      CallFunc_GetOwningCharacterFromActorInfo_ReturnValue; // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorUpVector_ReturnValue;             // 0x0018(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Dot_VectorVector_ReturnValue;             // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_InRange_FloatFloat_ReturnValue;           // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(DodgeAbility_C_GetIsClosestKOBoundsFloor) == 0x000008, "Wrong alignment on DodgeAbility_C_GetIsClosestKOBoundsFloor");
static_assert(sizeof(DodgeAbility_C_GetIsClosestKOBoundsFloor) == 0x000030, "Wrong size on DodgeAbility_C_GetIsClosestKOBoundsFloor");
static_assert(offsetof(DodgeAbility_C_GetIsClosestKOBoundsFloor, ClosestBoundsNormal) == 0x000000, "Member 'DodgeAbility_C_GetIsClosestKOBoundsFloor::ClosestBoundsNormal' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_GetIsClosestKOBoundsFloor, IsFloor) == 0x00000C, "Member 'DodgeAbility_C_GetIsClosestKOBoundsFloor::IsFloor' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_GetIsClosestKOBoundsFloor, CallFunc_GetOwningCharacterFromActorInfo_ReturnValue) == 0x000010, "Member 'DodgeAbility_C_GetIsClosestKOBoundsFloor::CallFunc_GetOwningCharacterFromActorInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_GetIsClosestKOBoundsFloor, CallFunc_GetActorUpVector_ReturnValue) == 0x000018, "Member 'DodgeAbility_C_GetIsClosestKOBoundsFloor::CallFunc_GetActorUpVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_GetIsClosestKOBoundsFloor, CallFunc_Dot_VectorVector_ReturnValue) == 0x000024, "Member 'DodgeAbility_C_GetIsClosestKOBoundsFloor::CallFunc_Dot_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_GetIsClosestKOBoundsFloor, CallFunc_InRange_FloatFloat_ReturnValue) == 0x000028, "Member 'DodgeAbility_C_GetIsClosestKOBoundsFloor::CallFunc_InRange_FloatFloat_ReturnValue' has a wrong offset!");

// Function DodgeAbility.DodgeAbility_C.GetNonFloorKOBoundsLaunchVector
// 0x0064 (0x0064 - 0x0000)
struct DodgeAbility_C_GetNonFloorKOBoundsLaunchVector final
{
public:
	struct FVector                                ClosestBoundsNormal;                               // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                TargetLoc;                                         // 0x000C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                LaunchVector;                                      // 0x0018(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetDodgeStrength_DodgeStrength;           // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_NegateVector_ReturnValue;                 // 0x0028(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x0034(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0040(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue_1;                     // 0x004C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0058(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(DodgeAbility_C_GetNonFloorKOBoundsLaunchVector) == 0x000004, "Wrong alignment on DodgeAbility_C_GetNonFloorKOBoundsLaunchVector");
static_assert(sizeof(DodgeAbility_C_GetNonFloorKOBoundsLaunchVector) == 0x000064, "Wrong size on DodgeAbility_C_GetNonFloorKOBoundsLaunchVector");
static_assert(offsetof(DodgeAbility_C_GetNonFloorKOBoundsLaunchVector, ClosestBoundsNormal) == 0x000000, "Member 'DodgeAbility_C_GetNonFloorKOBoundsLaunchVector::ClosestBoundsNormal' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_GetNonFloorKOBoundsLaunchVector, TargetLoc) == 0x00000C, "Member 'DodgeAbility_C_GetNonFloorKOBoundsLaunchVector::TargetLoc' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_GetNonFloorKOBoundsLaunchVector, LaunchVector) == 0x000018, "Member 'DodgeAbility_C_GetNonFloorKOBoundsLaunchVector::LaunchVector' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_GetNonFloorKOBoundsLaunchVector, CallFunc_GetDodgeStrength_DodgeStrength) == 0x000024, "Member 'DodgeAbility_C_GetNonFloorKOBoundsLaunchVector::CallFunc_GetDodgeStrength_DodgeStrength' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_GetNonFloorKOBoundsLaunchVector, CallFunc_NegateVector_ReturnValue) == 0x000028, "Member 'DodgeAbility_C_GetNonFloorKOBoundsLaunchVector::CallFunc_NegateVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_GetNonFloorKOBoundsLaunchVector, CallFunc_Normal_ReturnValue) == 0x000034, "Member 'DodgeAbility_C_GetNonFloorKOBoundsLaunchVector::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_GetNonFloorKOBoundsLaunchVector, CallFunc_Add_VectorVector_ReturnValue) == 0x000040, "Member 'DodgeAbility_C_GetNonFloorKOBoundsLaunchVector::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_GetNonFloorKOBoundsLaunchVector, CallFunc_Normal_ReturnValue_1) == 0x00004C, "Member 'DodgeAbility_C_GetNonFloorKOBoundsLaunchVector::CallFunc_Normal_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_GetNonFloorKOBoundsLaunchVector, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000058, "Member 'DodgeAbility_C_GetNonFloorKOBoundsLaunchVector::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");

// Function DodgeAbility.DodgeAbility_C.GetNonFloorKOBoundsLaunchScalar
// 0x0048 (0x0048 - 0x0000)
struct DodgeAbility_C_GetNonFloorKOBoundsLaunchScalar final
{
public:
	bool                                          IsDodgeInPlace;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2562[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                ClosestBoundsNormal;                               // 0x0004(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LaunchScalar;                                      // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2563[0x3];                                     // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AMarinerCharacter*                      CallFunc_GetOwningCharacterFromActorInfo_ReturnValue; // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorUpVector_ReturnValue;             // 0x0020(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_NegateVector_ReturnValue;                 // 0x002C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Dot_VectorVector_ReturnValue;             // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NearlyEqual_FloatFloat_ReturnValue;       // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x003D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2564[0x2];                                     // 0x003E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default;                             // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(DodgeAbility_C_GetNonFloorKOBoundsLaunchScalar) == 0x000008, "Wrong alignment on DodgeAbility_C_GetNonFloorKOBoundsLaunchScalar");
static_assert(sizeof(DodgeAbility_C_GetNonFloorKOBoundsLaunchScalar) == 0x000048, "Wrong size on DodgeAbility_C_GetNonFloorKOBoundsLaunchScalar");
static_assert(offsetof(DodgeAbility_C_GetNonFloorKOBoundsLaunchScalar, IsDodgeInPlace) == 0x000000, "Member 'DodgeAbility_C_GetNonFloorKOBoundsLaunchScalar::IsDodgeInPlace' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_GetNonFloorKOBoundsLaunchScalar, ClosestBoundsNormal) == 0x000004, "Member 'DodgeAbility_C_GetNonFloorKOBoundsLaunchScalar::ClosestBoundsNormal' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_GetNonFloorKOBoundsLaunchScalar, LaunchScalar) == 0x000010, "Member 'DodgeAbility_C_GetNonFloorKOBoundsLaunchScalar::LaunchScalar' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_GetNonFloorKOBoundsLaunchScalar, Temp_bool_Variable) == 0x000014, "Member 'DodgeAbility_C_GetNonFloorKOBoundsLaunchScalar::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_GetNonFloorKOBoundsLaunchScalar, CallFunc_GetOwningCharacterFromActorInfo_ReturnValue) == 0x000018, "Member 'DodgeAbility_C_GetNonFloorKOBoundsLaunchScalar::CallFunc_GetOwningCharacterFromActorInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_GetNonFloorKOBoundsLaunchScalar, CallFunc_GetActorUpVector_ReturnValue) == 0x000020, "Member 'DodgeAbility_C_GetNonFloorKOBoundsLaunchScalar::CallFunc_GetActorUpVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_GetNonFloorKOBoundsLaunchScalar, CallFunc_NegateVector_ReturnValue) == 0x00002C, "Member 'DodgeAbility_C_GetNonFloorKOBoundsLaunchScalar::CallFunc_NegateVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_GetNonFloorKOBoundsLaunchScalar, CallFunc_Dot_VectorVector_ReturnValue) == 0x000038, "Member 'DodgeAbility_C_GetNonFloorKOBoundsLaunchScalar::CallFunc_Dot_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_GetNonFloorKOBoundsLaunchScalar, CallFunc_NearlyEqual_FloatFloat_ReturnValue) == 0x00003C, "Member 'DodgeAbility_C_GetNonFloorKOBoundsLaunchScalar::CallFunc_NearlyEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_GetNonFloorKOBoundsLaunchScalar, CallFunc_BooleanOR_ReturnValue) == 0x00003D, "Member 'DodgeAbility_C_GetNonFloorKOBoundsLaunchScalar::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_GetNonFloorKOBoundsLaunchScalar, K2Node_Select_Default) == 0x000040, "Member 'DodgeAbility_C_GetNonFloorKOBoundsLaunchScalar::K2Node_Select_Default' has a wrong offset!");

// Function DodgeAbility.DodgeAbility_C.DebugDrawAntiKOBoundsChecks
// 0x0068 (0x0068 - 0x0000)
struct DodgeAbility_C_DebugDrawAntiKOBoundsChecks final
{
public:
	struct FVector                                PointOnClosestBoundsSurface;                       // 0x0000(0x000C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                ModifiedEndLocationWithBuffer;                     // 0x000C(0x000C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                ClosestBoundsNormal;                               // 0x0018(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2565[0x4];                                     // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AMarinerCharacter*                      CallFunc_GetOwningCharacterFromActorInfo_ReturnValue; // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMarinerCharacter*                      CallFunc_GetOwningCharacterFromActorInfo_ReturnValue_1; // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0038(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0044(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_LinePlaneIntersection_OriginNormal_T;     // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_LinePlaneIntersection_OriginNormal_Intersection; // 0x0054(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LinePlaneIntersection_OriginNormal_ReturnValue; // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(DodgeAbility_C_DebugDrawAntiKOBoundsChecks) == 0x000008, "Wrong alignment on DodgeAbility_C_DebugDrawAntiKOBoundsChecks");
static_assert(sizeof(DodgeAbility_C_DebugDrawAntiKOBoundsChecks) == 0x000068, "Wrong size on DodgeAbility_C_DebugDrawAntiKOBoundsChecks");
static_assert(offsetof(DodgeAbility_C_DebugDrawAntiKOBoundsChecks, PointOnClosestBoundsSurface) == 0x000000, "Member 'DodgeAbility_C_DebugDrawAntiKOBoundsChecks::PointOnClosestBoundsSurface' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_DebugDrawAntiKOBoundsChecks, ModifiedEndLocationWithBuffer) == 0x00000C, "Member 'DodgeAbility_C_DebugDrawAntiKOBoundsChecks::ModifiedEndLocationWithBuffer' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_DebugDrawAntiKOBoundsChecks, ClosestBoundsNormal) == 0x000018, "Member 'DodgeAbility_C_DebugDrawAntiKOBoundsChecks::ClosestBoundsNormal' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_DebugDrawAntiKOBoundsChecks, CallFunc_GetOwningCharacterFromActorInfo_ReturnValue) == 0x000028, "Member 'DodgeAbility_C_DebugDrawAntiKOBoundsChecks::CallFunc_GetOwningCharacterFromActorInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_DebugDrawAntiKOBoundsChecks, CallFunc_GetOwningCharacterFromActorInfo_ReturnValue_1) == 0x000030, "Member 'DodgeAbility_C_DebugDrawAntiKOBoundsChecks::CallFunc_GetOwningCharacterFromActorInfo_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_DebugDrawAntiKOBoundsChecks, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000038, "Member 'DodgeAbility_C_DebugDrawAntiKOBoundsChecks::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_DebugDrawAntiKOBoundsChecks, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000044, "Member 'DodgeAbility_C_DebugDrawAntiKOBoundsChecks::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_DebugDrawAntiKOBoundsChecks, CallFunc_LinePlaneIntersection_OriginNormal_T) == 0x000050, "Member 'DodgeAbility_C_DebugDrawAntiKOBoundsChecks::CallFunc_LinePlaneIntersection_OriginNormal_T' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_DebugDrawAntiKOBoundsChecks, CallFunc_LinePlaneIntersection_OriginNormal_Intersection) == 0x000054, "Member 'DodgeAbility_C_DebugDrawAntiKOBoundsChecks::CallFunc_LinePlaneIntersection_OriginNormal_Intersection' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_DebugDrawAntiKOBoundsChecks, CallFunc_LinePlaneIntersection_OriginNormal_ReturnValue) == 0x000060, "Member 'DodgeAbility_C_DebugDrawAntiKOBoundsChecks::CallFunc_LinePlaneIntersection_OriginNormal_ReturnValue' has a wrong offset!");

// Function DodgeAbility.DodgeAbility_C.GetIsPointOnClosestBoundsValidForProtection
// 0x0014 (0x0014 - 0x0000)
struct DodgeAbility_C_GetIsPointOnClosestBoundsValidForProtection final
{
public:
	struct FVector                                PointOnClosestBoundsSurface;                       // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsValid;                                           // 0x000C(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPlayerCloseEnoughToKOBoundsForProtectionLogic_CloseEnough; // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsLaunchEndLocationArenaBoundsLOS_Blocked_Blocked; // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x000F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(DodgeAbility_C_GetIsPointOnClosestBoundsValidForProtection) == 0x000004, "Wrong alignment on DodgeAbility_C_GetIsPointOnClosestBoundsValidForProtection");
static_assert(sizeof(DodgeAbility_C_GetIsPointOnClosestBoundsValidForProtection) == 0x000014, "Wrong size on DodgeAbility_C_GetIsPointOnClosestBoundsValidForProtection");
static_assert(offsetof(DodgeAbility_C_GetIsPointOnClosestBoundsValidForProtection, PointOnClosestBoundsSurface) == 0x000000, "Member 'DodgeAbility_C_GetIsPointOnClosestBoundsValidForProtection::PointOnClosestBoundsSurface' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_GetIsPointOnClosestBoundsValidForProtection, IsValid) == 0x00000C, "Member 'DodgeAbility_C_GetIsPointOnClosestBoundsValidForProtection::IsValid' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_GetIsPointOnClosestBoundsValidForProtection, CallFunc_IsPlayerCloseEnoughToKOBoundsForProtectionLogic_CloseEnough) == 0x00000D, "Member 'DodgeAbility_C_GetIsPointOnClosestBoundsValidForProtection::CallFunc_IsPlayerCloseEnoughToKOBoundsForProtectionLogic_CloseEnough' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_GetIsPointOnClosestBoundsValidForProtection, CallFunc_IsLaunchEndLocationArenaBoundsLOS_Blocked_Blocked) == 0x00000E, "Member 'DodgeAbility_C_GetIsPointOnClosestBoundsValidForProtection::CallFunc_IsLaunchEndLocationArenaBoundsLOS_Blocked_Blocked' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_GetIsPointOnClosestBoundsValidForProtection, CallFunc_Not_PreBool_ReturnValue) == 0x00000F, "Member 'DodgeAbility_C_GetIsPointOnClosestBoundsValidForProtection::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_GetIsPointOnClosestBoundsValidForProtection, CallFunc_BooleanAND_ReturnValue) == 0x000010, "Member 'DodgeAbility_C_GetIsPointOnClosestBoundsValidForProtection::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function DodgeAbility.DodgeAbility_C.GetArenaBoundsRef
// 0x0028 (0x0028 - 0x0000)
struct DodgeAbility_C_GetArenaBoundsRef final
{
public:
	class AMarinerFastArenaBounds*                Param_ArenaBounds;                                 // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AMarinerFastArenaBounds*>        CallFunc_GetAllActorsOfClass_OutActors;            // 0x0008(0x0010)(ZeroConstructor, ReferenceParm)
	class AMarinerFastArenaBounds*                CallFunc_Array_Get_Item;                           // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(DodgeAbility_C_GetArenaBoundsRef) == 0x000008, "Wrong alignment on DodgeAbility_C_GetArenaBoundsRef");
static_assert(sizeof(DodgeAbility_C_GetArenaBoundsRef) == 0x000028, "Wrong size on DodgeAbility_C_GetArenaBoundsRef");
static_assert(offsetof(DodgeAbility_C_GetArenaBoundsRef, Param_ArenaBounds) == 0x000000, "Member 'DodgeAbility_C_GetArenaBoundsRef::Param_ArenaBounds' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_GetArenaBoundsRef, CallFunc_GetAllActorsOfClass_OutActors) == 0x000008, "Member 'DodgeAbility_C_GetArenaBoundsRef::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_GetArenaBoundsRef, CallFunc_Array_Get_Item) == 0x000018, "Member 'DodgeAbility_C_GetArenaBoundsRef::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_GetArenaBoundsRef, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'DodgeAbility_C_GetArenaBoundsRef::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function DodgeAbility.DodgeAbility_C.IsNinjaHeadbandActive
// 0x0028 (0x0028 - 0x0000)
struct DodgeAbility_C_IsNinjaHeadbandActive final
{
public:
	bool                                          Param_IsActive;                                    // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2566[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMarinerAbilitySystemComponent*         CallFunc_GetOwningAbilitySystemComponent_ReturnValue; // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasMatchingGameplayTag_self_CastInput;    // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasMatchingGameplayTag_ReturnValue;       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(DodgeAbility_C_IsNinjaHeadbandActive) == 0x000008, "Wrong alignment on DodgeAbility_C_IsNinjaHeadbandActive");
static_assert(sizeof(DodgeAbility_C_IsNinjaHeadbandActive) == 0x000028, "Wrong size on DodgeAbility_C_IsNinjaHeadbandActive");
static_assert(offsetof(DodgeAbility_C_IsNinjaHeadbandActive, Param_IsActive) == 0x000000, "Member 'DodgeAbility_C_IsNinjaHeadbandActive::Param_IsActive' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_IsNinjaHeadbandActive, CallFunc_GetOwningAbilitySystemComponent_ReturnValue) == 0x000008, "Member 'DodgeAbility_C_IsNinjaHeadbandActive::CallFunc_GetOwningAbilitySystemComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_IsNinjaHeadbandActive, CallFunc_HasMatchingGameplayTag_self_CastInput) == 0x000010, "Member 'DodgeAbility_C_IsNinjaHeadbandActive::CallFunc_HasMatchingGameplayTag_self_CastInput' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_IsNinjaHeadbandActive, CallFunc_HasMatchingGameplayTag_ReturnValue) == 0x000020, "Member 'DodgeAbility_C_IsNinjaHeadbandActive::CallFunc_HasMatchingGameplayTag_ReturnValue' has a wrong offset!");

// Function DodgeAbility.DodgeAbility_C.GetNinjaHeadbandAbility
// 0x0030 (0x0030 - 0x0000)
struct DodgeAbility_C_GetNinjaHeadbandAbility final
{
public:
	class UItem_NinjaHeadband_ItemAbility_C*      NinjaHeadbandAbility;                              // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CastSuccess;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2567[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMarinerAbilitySystemComponent*         CallFunc_GetOwningAbilitySystemComponent_ReturnValue; // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGameplayAbility*                       CallFunc_GetAbilityInstanceForAbilityClass_ReturnValue; // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UItem_NinjaHeadband_ItemAbility_C*      K2Node_DynamicCast_AsItem_Ninja_Headband_Item_Ability; // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(DodgeAbility_C_GetNinjaHeadbandAbility) == 0x000008, "Wrong alignment on DodgeAbility_C_GetNinjaHeadbandAbility");
static_assert(sizeof(DodgeAbility_C_GetNinjaHeadbandAbility) == 0x000030, "Wrong size on DodgeAbility_C_GetNinjaHeadbandAbility");
static_assert(offsetof(DodgeAbility_C_GetNinjaHeadbandAbility, NinjaHeadbandAbility) == 0x000000, "Member 'DodgeAbility_C_GetNinjaHeadbandAbility::NinjaHeadbandAbility' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_GetNinjaHeadbandAbility, CastSuccess) == 0x000008, "Member 'DodgeAbility_C_GetNinjaHeadbandAbility::CastSuccess' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_GetNinjaHeadbandAbility, CallFunc_GetOwningAbilitySystemComponent_ReturnValue) == 0x000010, "Member 'DodgeAbility_C_GetNinjaHeadbandAbility::CallFunc_GetOwningAbilitySystemComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_GetNinjaHeadbandAbility, CallFunc_GetAbilityInstanceForAbilityClass_ReturnValue) == 0x000018, "Member 'DodgeAbility_C_GetNinjaHeadbandAbility::CallFunc_GetAbilityInstanceForAbilityClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_GetNinjaHeadbandAbility, K2Node_DynamicCast_AsItem_Ninja_Headband_Item_Ability) == 0x000020, "Member 'DodgeAbility_C_GetNinjaHeadbandAbility::K2Node_DynamicCast_AsItem_Ninja_Headband_Item_Ability' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_GetNinjaHeadbandAbility, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'DodgeAbility_C_GetNinjaHeadbandAbility::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function DodgeAbility.DodgeAbility_C.GetCooldownDuration
// 0x0040 (0x0040 - 0x0000)
struct DodgeAbility_C_GetCooldownDuration final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DefaultCooldown;                                   // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LowestCooldown;                                    // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsNinjaHeadbandActive_IsActive;           // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2568[0x1];                                     // 0x000F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2569[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AMarinerCharacter*                      CallFunc_GetOwningCharacterFromActorInfo_ReturnValue; // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetAccumulatedDamage_ReturnValue;         // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_256A[0x6];                                     // 0x002A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UItem_NinjaHeadband_ItemAbility_C*      CallFunc_GetNinjaHeadbandAbility_NinjaHeadbandAbility; // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetNinjaHeadbandAbility_CastSuccess;      // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsNinjaHeadbandActive_IsActive_1;         // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_1;            // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_256B[0x1];                                     // 0x003B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetCooldownDuration_ReturnValue;          // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(DodgeAbility_C_GetCooldownDuration) == 0x000008, "Wrong alignment on DodgeAbility_C_GetCooldownDuration");
static_assert(sizeof(DodgeAbility_C_GetCooldownDuration) == 0x000040, "Wrong size on DodgeAbility_C_GetCooldownDuration");
static_assert(offsetof(DodgeAbility_C_GetCooldownDuration, ReturnValue) == 0x000000, "Member 'DodgeAbility_C_GetCooldownDuration::ReturnValue' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_GetCooldownDuration, DefaultCooldown) == 0x000004, "Member 'DodgeAbility_C_GetCooldownDuration::DefaultCooldown' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_GetCooldownDuration, LowestCooldown) == 0x000008, "Member 'DodgeAbility_C_GetCooldownDuration::LowestCooldown' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_GetCooldownDuration, CallFunc_IsNinjaHeadbandActive_IsActive) == 0x00000C, "Member 'DodgeAbility_C_GetCooldownDuration::CallFunc_IsNinjaHeadbandActive_IsActive' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_GetCooldownDuration, CallFunc_Not_PreBool_ReturnValue) == 0x00000D, "Member 'DodgeAbility_C_GetCooldownDuration::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_GetCooldownDuration, CallFunc_BooleanAND_ReturnValue) == 0x00000E, "Member 'DodgeAbility_C_GetCooldownDuration::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_GetCooldownDuration, CallFunc_Add_FloatFloat_ReturnValue) == 0x000010, "Member 'DodgeAbility_C_GetCooldownDuration::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_GetCooldownDuration, CallFunc_GetOwningCharacterFromActorInfo_ReturnValue) == 0x000018, "Member 'DodgeAbility_C_GetCooldownDuration::CallFunc_GetOwningCharacterFromActorInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_GetCooldownDuration, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000020, "Member 'DodgeAbility_C_GetCooldownDuration::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_GetCooldownDuration, CallFunc_GetAccumulatedDamage_ReturnValue) == 0x000024, "Member 'DodgeAbility_C_GetCooldownDuration::CallFunc_GetAccumulatedDamage_ReturnValue' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_GetCooldownDuration, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x000028, "Member 'DodgeAbility_C_GetCooldownDuration::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_GetCooldownDuration, CallFunc_Less_FloatFloat_ReturnValue) == 0x000029, "Member 'DodgeAbility_C_GetCooldownDuration::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_GetCooldownDuration, CallFunc_GetNinjaHeadbandAbility_NinjaHeadbandAbility) == 0x000030, "Member 'DodgeAbility_C_GetCooldownDuration::CallFunc_GetNinjaHeadbandAbility_NinjaHeadbandAbility' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_GetCooldownDuration, CallFunc_GetNinjaHeadbandAbility_CastSuccess) == 0x000038, "Member 'DodgeAbility_C_GetCooldownDuration::CallFunc_GetNinjaHeadbandAbility_CastSuccess' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_GetCooldownDuration, CallFunc_IsNinjaHeadbandActive_IsActive_1) == 0x000039, "Member 'DodgeAbility_C_GetCooldownDuration::CallFunc_IsNinjaHeadbandActive_IsActive_1' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_GetCooldownDuration, CallFunc_Less_FloatFloat_ReturnValue_1) == 0x00003A, "Member 'DodgeAbility_C_GetCooldownDuration::CallFunc_Less_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_GetCooldownDuration, CallFunc_GetCooldownDuration_ReturnValue) == 0x00003C, "Member 'DodgeAbility_C_GetCooldownDuration::CallFunc_GetCooldownDuration_ReturnValue' has a wrong offset!");

// Function DodgeAbility.DodgeAbility_C.GetDodgeDuration
// 0x0018 (0x0018 - 0x0000)
struct DodgeAbility_C_GetDodgeDuration final
{
public:
	float                                         DodgeDuration;                                     // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_256C[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UItem_NinjaHeadband_ItemAbility_C*      CallFunc_GetNinjaHeadbandAbility_NinjaHeadbandAbility; // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetNinjaHeadbandAbility_CastSuccess;      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_256D[0x3];                                     // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default;                             // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(DodgeAbility_C_GetDodgeDuration) == 0x000008, "Wrong alignment on DodgeAbility_C_GetDodgeDuration");
static_assert(sizeof(DodgeAbility_C_GetDodgeDuration) == 0x000018, "Wrong size on DodgeAbility_C_GetDodgeDuration");
static_assert(offsetof(DodgeAbility_C_GetDodgeDuration, DodgeDuration) == 0x000000, "Member 'DodgeAbility_C_GetDodgeDuration::DodgeDuration' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_GetDodgeDuration, Temp_bool_Variable) == 0x000004, "Member 'DodgeAbility_C_GetDodgeDuration::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_GetDodgeDuration, CallFunc_GetNinjaHeadbandAbility_NinjaHeadbandAbility) == 0x000008, "Member 'DodgeAbility_C_GetDodgeDuration::CallFunc_GetNinjaHeadbandAbility_NinjaHeadbandAbility' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_GetDodgeDuration, CallFunc_GetNinjaHeadbandAbility_CastSuccess) == 0x000010, "Member 'DodgeAbility_C_GetDodgeDuration::CallFunc_GetNinjaHeadbandAbility_CastSuccess' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_GetDodgeDuration, K2Node_Select_Default) == 0x000014, "Member 'DodgeAbility_C_GetDodgeDuration::K2Node_Select_Default' has a wrong offset!");

// Function DodgeAbility.DodgeAbility_C.GetAbilityUIDuration
// 0x0008 (0x0008 - 0x0000)
struct DodgeAbility_C_GetAbilityUIDuration final
{
public:
	bool                                          bForceActiveDisplay;                               // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_256E[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         ReturnValue;                                       // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(DodgeAbility_C_GetAbilityUIDuration) == 0x000004, "Wrong alignment on DodgeAbility_C_GetAbilityUIDuration");
static_assert(sizeof(DodgeAbility_C_GetAbilityUIDuration) == 0x000008, "Wrong size on DodgeAbility_C_GetAbilityUIDuration");
static_assert(offsetof(DodgeAbility_C_GetAbilityUIDuration, bForceActiveDisplay) == 0x000000, "Member 'DodgeAbility_C_GetAbilityUIDuration::bForceActiveDisplay' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_GetAbilityUIDuration, ReturnValue) == 0x000004, "Member 'DodgeAbility_C_GetAbilityUIDuration::ReturnValue' has a wrong offset!");

// Function DodgeAbility.DodgeAbility_C.BP_GetCustomTargetingInt
// 0x0018 (0x0018 - 0x0000)
struct DodgeAbility_C_BP_GetCustomTargetingInt final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_256F[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsNinjaHeadbandActive_IsActive;           // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2570[0x3];                                     // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Select_Default;                             // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(DodgeAbility_C_BP_GetCustomTargetingInt) == 0x000004, "Wrong alignment on DodgeAbility_C_BP_GetCustomTargetingInt");
static_assert(sizeof(DodgeAbility_C_BP_GetCustomTargetingInt) == 0x000018, "Wrong size on DodgeAbility_C_BP_GetCustomTargetingInt");
static_assert(offsetof(DodgeAbility_C_BP_GetCustomTargetingInt, ReturnValue) == 0x000000, "Member 'DodgeAbility_C_BP_GetCustomTargetingInt::ReturnValue' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_BP_GetCustomTargetingInt, Temp_bool_Variable) == 0x000004, "Member 'DodgeAbility_C_BP_GetCustomTargetingInt::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_BP_GetCustomTargetingInt, Temp_int_Variable) == 0x000008, "Member 'DodgeAbility_C_BP_GetCustomTargetingInt::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_BP_GetCustomTargetingInt, Temp_int_Variable_1) == 0x00000C, "Member 'DodgeAbility_C_BP_GetCustomTargetingInt::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_BP_GetCustomTargetingInt, CallFunc_IsNinjaHeadbandActive_IsActive) == 0x000010, "Member 'DodgeAbility_C_BP_GetCustomTargetingInt::CallFunc_IsNinjaHeadbandActive_IsActive' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_BP_GetCustomTargetingInt, K2Node_Select_Default) == 0x000014, "Member 'DodgeAbility_C_BP_GetCustomTargetingInt::K2Node_Select_Default' has a wrong offset!");

// Function DodgeAbility.DodgeAbility_C.IsControlledByAI (Server Only)
// 0x0028 (0x0028 - 0x0000)
struct DodgeAbility_C_IsControlledByAI__Server_Only_ final
{
public:
	bool                                          bSuccess;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2571[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AMarinerCharacter*                      CallFunc_GetAvatarCharacterFromActorInfo_ReturnValue; // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMarinerAIController*                   K2Node_DynamicCast_AsMariner_AIController;         // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(DodgeAbility_C_IsControlledByAI__Server_Only_) == 0x000008, "Wrong alignment on DodgeAbility_C_IsControlledByAI__Server_Only_");
static_assert(sizeof(DodgeAbility_C_IsControlledByAI__Server_Only_) == 0x000028, "Wrong size on DodgeAbility_C_IsControlledByAI__Server_Only_");
static_assert(offsetof(DodgeAbility_C_IsControlledByAI__Server_Only_, bSuccess) == 0x000000, "Member 'DodgeAbility_C_IsControlledByAI__Server_Only_::bSuccess' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_IsControlledByAI__Server_Only_, CallFunc_GetAvatarCharacterFromActorInfo_ReturnValue) == 0x000008, "Member 'DodgeAbility_C_IsControlledByAI__Server_Only_::CallFunc_GetAvatarCharacterFromActorInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_IsControlledByAI__Server_Only_, CallFunc_GetController_ReturnValue) == 0x000010, "Member 'DodgeAbility_C_IsControlledByAI__Server_Only_::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_IsControlledByAI__Server_Only_, K2Node_DynamicCast_AsMariner_AIController) == 0x000018, "Member 'DodgeAbility_C_IsControlledByAI__Server_Only_::K2Node_DynamicCast_AsMariner_AIController' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_IsControlledByAI__Server_Only_, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'DodgeAbility_C_IsControlledByAI__Server_Only_::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function DodgeAbility.DodgeAbility_C.BP_GenerateAIInputVector
// 0x0140 (0x0140 - 0x0000)
struct DodgeAbility_C_BP_GenerateAIInputVector final
{
public:
	class AMarinerAIController*                   RequestingController;                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMarinerCharacter*                      RequestingPawn;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                ReturnValue;                                       // 0x0010(0x000C)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RandomOutput;                                      // 0x001C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SumOfAllWeights;                                   // 0x0020(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DodgeDownWeight;                                   // 0x0024(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DodgeLeftOrRightWeight;                            // 0x0028(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DodgeInPlaceChance;                                // 0x002C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                PawnUpVector;                                      // 0x0030(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                PawnRightVector;                                   // 0x003C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsPawnWalking;                                    // 0x0048(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2572[0x3];                                     // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                PawnForward;                                       // 0x004C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMarinerCharacter*                      Enemy;                                             // 0x0058(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2573[0x3];                                     // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable;                               // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2574[0x3];                                     // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_RandomFloatInRange_ReturnValue;           // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RandomBool_ReturnValue;                   // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2575[0x3];                                     // 0x0071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakVector_X;                            // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Abs_ReturnValue;                          // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2576[0x3];                                     // 0x0089(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x008C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0098(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x00A4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue_1;       // 0x00B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00B5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2577[0x2];                                     // 0x00B6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable_1;                             // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00BD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2578[0x2];                                     // 0x00BE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable_2;                             // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default;                             // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_1;             // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue;        // 0x00CC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorUpVector_ReturnValue;             // 0x00D8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Cross_VectorVector_ReturnValue;           // 0x00E4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2579[0x3];                                     // 0x00F1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default_1;                           // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x00F8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0104(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMarinerCharacter*                      CallFunc_GetLocalEnemy_ReturnValue;                // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsWalking_ReturnValue;                    // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_257A[0x3];                                     // 0x0119(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x011C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0128(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue_1;                     // 0x0134(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(DodgeAbility_C_BP_GenerateAIInputVector) == 0x000008, "Wrong alignment on DodgeAbility_C_BP_GenerateAIInputVector");
static_assert(sizeof(DodgeAbility_C_BP_GenerateAIInputVector) == 0x000140, "Wrong size on DodgeAbility_C_BP_GenerateAIInputVector");
static_assert(offsetof(DodgeAbility_C_BP_GenerateAIInputVector, RequestingController) == 0x000000, "Member 'DodgeAbility_C_BP_GenerateAIInputVector::RequestingController' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_BP_GenerateAIInputVector, RequestingPawn) == 0x000008, "Member 'DodgeAbility_C_BP_GenerateAIInputVector::RequestingPawn' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_BP_GenerateAIInputVector, ReturnValue) == 0x000010, "Member 'DodgeAbility_C_BP_GenerateAIInputVector::ReturnValue' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_BP_GenerateAIInputVector, RandomOutput) == 0x00001C, "Member 'DodgeAbility_C_BP_GenerateAIInputVector::RandomOutput' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_BP_GenerateAIInputVector, SumOfAllWeights) == 0x000020, "Member 'DodgeAbility_C_BP_GenerateAIInputVector::SumOfAllWeights' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_BP_GenerateAIInputVector, DodgeDownWeight) == 0x000024, "Member 'DodgeAbility_C_BP_GenerateAIInputVector::DodgeDownWeight' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_BP_GenerateAIInputVector, DodgeLeftOrRightWeight) == 0x000028, "Member 'DodgeAbility_C_BP_GenerateAIInputVector::DodgeLeftOrRightWeight' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_BP_GenerateAIInputVector, DodgeInPlaceChance) == 0x00002C, "Member 'DodgeAbility_C_BP_GenerateAIInputVector::DodgeInPlaceChance' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_BP_GenerateAIInputVector, PawnUpVector) == 0x000030, "Member 'DodgeAbility_C_BP_GenerateAIInputVector::PawnUpVector' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_BP_GenerateAIInputVector, PawnRightVector) == 0x00003C, "Member 'DodgeAbility_C_BP_GenerateAIInputVector::PawnRightVector' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_BP_GenerateAIInputVector, bIsPawnWalking) == 0x000048, "Member 'DodgeAbility_C_BP_GenerateAIInputVector::bIsPawnWalking' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_BP_GenerateAIInputVector, PawnForward) == 0x00004C, "Member 'DodgeAbility_C_BP_GenerateAIInputVector::PawnForward' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_BP_GenerateAIInputVector, Enemy) == 0x000058, "Member 'DodgeAbility_C_BP_GenerateAIInputVector::Enemy' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_BP_GenerateAIInputVector, Temp_bool_Variable) == 0x000060, "Member 'DodgeAbility_C_BP_GenerateAIInputVector::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_BP_GenerateAIInputVector, Temp_float_Variable) == 0x000064, "Member 'DodgeAbility_C_BP_GenerateAIInputVector::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_BP_GenerateAIInputVector, CallFunc_IsValid_ReturnValue) == 0x000068, "Member 'DodgeAbility_C_BP_GenerateAIInputVector::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_BP_GenerateAIInputVector, CallFunc_RandomFloatInRange_ReturnValue) == 0x00006C, "Member 'DodgeAbility_C_BP_GenerateAIInputVector::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_BP_GenerateAIInputVector, CallFunc_RandomBool_ReturnValue) == 0x000070, "Member 'DodgeAbility_C_BP_GenerateAIInputVector::CallFunc_RandomBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_BP_GenerateAIInputVector, CallFunc_BreakVector_X) == 0x000074, "Member 'DodgeAbility_C_BP_GenerateAIInputVector::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_BP_GenerateAIInputVector, CallFunc_BreakVector_Y) == 0x000078, "Member 'DodgeAbility_C_BP_GenerateAIInputVector::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_BP_GenerateAIInputVector, CallFunc_BreakVector_Z) == 0x00007C, "Member 'DodgeAbility_C_BP_GenerateAIInputVector::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_BP_GenerateAIInputVector, CallFunc_Abs_ReturnValue) == 0x000080, "Member 'DodgeAbility_C_BP_GenerateAIInputVector::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_BP_GenerateAIInputVector, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000084, "Member 'DodgeAbility_C_BP_GenerateAIInputVector::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_BP_GenerateAIInputVector, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000088, "Member 'DodgeAbility_C_BP_GenerateAIInputVector::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_BP_GenerateAIInputVector, CallFunc_MakeVector_ReturnValue) == 0x00008C, "Member 'DodgeAbility_C_BP_GenerateAIInputVector::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_BP_GenerateAIInputVector, CallFunc_Add_VectorVector_ReturnValue) == 0x000098, "Member 'DodgeAbility_C_BP_GenerateAIInputVector::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_BP_GenerateAIInputVector, CallFunc_Normal_ReturnValue) == 0x0000A4, "Member 'DodgeAbility_C_BP_GenerateAIInputVector::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_BP_GenerateAIInputVector, CallFunc_Add_FloatFloat_ReturnValue) == 0x0000B0, "Member 'DodgeAbility_C_BP_GenerateAIInputVector::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_BP_GenerateAIInputVector, CallFunc_LessEqual_FloatFloat_ReturnValue_1) == 0x0000B4, "Member 'DodgeAbility_C_BP_GenerateAIInputVector::CallFunc_LessEqual_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_BP_GenerateAIInputVector, CallFunc_Not_PreBool_ReturnValue) == 0x0000B5, "Member 'DodgeAbility_C_BP_GenerateAIInputVector::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_BP_GenerateAIInputVector, Temp_float_Variable_1) == 0x0000B8, "Member 'DodgeAbility_C_BP_GenerateAIInputVector::Temp_float_Variable_1' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_BP_GenerateAIInputVector, CallFunc_IsValid_ReturnValue_1) == 0x0000BC, "Member 'DodgeAbility_C_BP_GenerateAIInputVector::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_BP_GenerateAIInputVector, CallFunc_BooleanAND_ReturnValue) == 0x0000BD, "Member 'DodgeAbility_C_BP_GenerateAIInputVector::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_BP_GenerateAIInputVector, Temp_float_Variable_2) == 0x0000C0, "Member 'DodgeAbility_C_BP_GenerateAIInputVector::Temp_float_Variable_2' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_BP_GenerateAIInputVector, K2Node_Select_Default) == 0x0000C4, "Member 'DodgeAbility_C_BP_GenerateAIInputVector::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_BP_GenerateAIInputVector, CallFunc_Add_FloatFloat_ReturnValue_1) == 0x0000C8, "Member 'DodgeAbility_C_BP_GenerateAIInputVector::CallFunc_Add_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_BP_GenerateAIInputVector, CallFunc_GetActorForwardVector_ReturnValue) == 0x0000CC, "Member 'DodgeAbility_C_BP_GenerateAIInputVector::CallFunc_GetActorForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_BP_GenerateAIInputVector, CallFunc_GetActorUpVector_ReturnValue) == 0x0000D8, "Member 'DodgeAbility_C_BP_GenerateAIInputVector::CallFunc_GetActorUpVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_BP_GenerateAIInputVector, CallFunc_Cross_VectorVector_ReturnValue) == 0x0000E4, "Member 'DodgeAbility_C_BP_GenerateAIInputVector::CallFunc_Cross_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_BP_GenerateAIInputVector, Temp_bool_Variable_1) == 0x0000F0, "Member 'DodgeAbility_C_BP_GenerateAIInputVector::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_BP_GenerateAIInputVector, K2Node_Select_Default_1) == 0x0000F4, "Member 'DodgeAbility_C_BP_GenerateAIInputVector::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_BP_GenerateAIInputVector, CallFunc_K2_GetActorLocation_ReturnValue) == 0x0000F8, "Member 'DodgeAbility_C_BP_GenerateAIInputVector::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_BP_GenerateAIInputVector, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000104, "Member 'DodgeAbility_C_BP_GenerateAIInputVector::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_BP_GenerateAIInputVector, CallFunc_GetLocalEnemy_ReturnValue) == 0x000110, "Member 'DodgeAbility_C_BP_GenerateAIInputVector::CallFunc_GetLocalEnemy_ReturnValue' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_BP_GenerateAIInputVector, CallFunc_IsWalking_ReturnValue) == 0x000118, "Member 'DodgeAbility_C_BP_GenerateAIInputVector::CallFunc_IsWalking_ReturnValue' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_BP_GenerateAIInputVector, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x00011C, "Member 'DodgeAbility_C_BP_GenerateAIInputVector::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_BP_GenerateAIInputVector, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000128, "Member 'DodgeAbility_C_BP_GenerateAIInputVector::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(DodgeAbility_C_BP_GenerateAIInputVector, CallFunc_Normal_ReturnValue_1) == 0x000134, "Member 'DodgeAbility_C_BP_GenerateAIInputVector::CallFunc_Normal_ReturnValue_1' has a wrong offset!");

}

