#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: MiniRewardsPreview

#include "Basic.hpp"

#include "MangoClient_structs.hpp"


namespace SDK::Params
{

// Function MiniRewardsPreview.MiniRewardsPreview_C.PopulateRewards
// 0x01F8 (0x01F8 - 0x0000)
struct MiniRewardsPreview_C_PopulateRewards final
{
public:
	struct FMangoQuestReward                      QuestReward;                                       // 0x0000(0x00C8)(BlueprintVisible, BlueprintReadOnly, Parm)
	struct FMangoQuest                            Quest;                                             // 0x00C8(0x0068)(BlueprintVisible, BlueprintReadOnly, Parm)
	struct FMangoQuestReward                      NewLocalVar_0;                                     // 0x0130(0x00C8)(Edit, BlueprintVisible)
};
static_assert(alignof(MiniRewardsPreview_C_PopulateRewards) == 0x000008, "Wrong alignment on MiniRewardsPreview_C_PopulateRewards");
static_assert(sizeof(MiniRewardsPreview_C_PopulateRewards) == 0x0001F8, "Wrong size on MiniRewardsPreview_C_PopulateRewards");
static_assert(offsetof(MiniRewardsPreview_C_PopulateRewards, QuestReward) == 0x000000, "Member 'MiniRewardsPreview_C_PopulateRewards::QuestReward' has a wrong offset!");
static_assert(offsetof(MiniRewardsPreview_C_PopulateRewards, Quest) == 0x0000C8, "Member 'MiniRewardsPreview_C_PopulateRewards::Quest' has a wrong offset!");
static_assert(offsetof(MiniRewardsPreview_C_PopulateRewards, NewLocalVar_0) == 0x000130, "Member 'MiniRewardsPreview_C_PopulateRewards::NewLocalVar_0' has a wrong offset!");

// Function MiniRewardsPreview.MiniRewardsPreview_C.Populate Blast Pass Reward
// 0x0088 (0x0088 - 0x0000)
struct MiniRewardsPreview_C_Populate_Blast_Pass_Reward final
{
public:
	struct FMangoQuest                            Quest;                                             // 0x0000(0x0068)(BlueprintVisible, BlueprintReadOnly, Parm)
	class UMiniRewardPreview_C*                   CallFunc_Create_ReturnValue;                       // 0x0068(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2156[0x4];                                     // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UVerticalBoxSlot*                       CallFunc_AddChildToVerticalBox_ReturnValue;        // 0x0078(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(MiniRewardsPreview_C_Populate_Blast_Pass_Reward) == 0x000008, "Wrong alignment on MiniRewardsPreview_C_Populate_Blast_Pass_Reward");
static_assert(sizeof(MiniRewardsPreview_C_Populate_Blast_Pass_Reward) == 0x000088, "Wrong size on MiniRewardsPreview_C_Populate_Blast_Pass_Reward");
static_assert(offsetof(MiniRewardsPreview_C_Populate_Blast_Pass_Reward, Quest) == 0x000000, "Member 'MiniRewardsPreview_C_Populate_Blast_Pass_Reward::Quest' has a wrong offset!");
static_assert(offsetof(MiniRewardsPreview_C_Populate_Blast_Pass_Reward, CallFunc_Create_ReturnValue) == 0x000068, "Member 'MiniRewardsPreview_C_Populate_Blast_Pass_Reward::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(MiniRewardsPreview_C_Populate_Blast_Pass_Reward, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000070, "Member 'MiniRewardsPreview_C_Populate_Blast_Pass_Reward::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(MiniRewardsPreview_C_Populate_Blast_Pass_Reward, CallFunc_AddChildToVerticalBox_ReturnValue) == 0x000078, "Member 'MiniRewardsPreview_C_Populate_Blast_Pass_Reward::CallFunc_AddChildToVerticalBox_ReturnValue' has a wrong offset!");
static_assert(offsetof(MiniRewardsPreview_C_Populate_Blast_Pass_Reward, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000080, "Member 'MiniRewardsPreview_C_Populate_Blast_Pass_Reward::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(MiniRewardsPreview_C_Populate_Blast_Pass_Reward, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000084, "Member 'MiniRewardsPreview_C_Populate_Blast_Pass_Reward::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");

// Function MiniRewardsPreview.MiniRewardsPreview_C.PopulateRocketFuelReward
// 0x00E0 (0x00E0 - 0x0000)
struct MiniRewardsPreview_C_PopulateRocketFuelReward final
{
public:
	struct FMangoQuestReward                      QuestReward;                                       // 0x0000(0x00C8)(BlueprintVisible, BlueprintReadOnly, Parm)
	class UMiniRewardPreview_C*                   CallFunc_Create_ReturnValue;                       // 0x00C8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2157[0x7];                                     // 0x00D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UVerticalBoxSlot*                       CallFunc_AddChildToVerticalBox_ReturnValue;        // 0x00D8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MiniRewardsPreview_C_PopulateRocketFuelReward) == 0x000008, "Wrong alignment on MiniRewardsPreview_C_PopulateRocketFuelReward");
static_assert(sizeof(MiniRewardsPreview_C_PopulateRocketFuelReward) == 0x0000E0, "Wrong size on MiniRewardsPreview_C_PopulateRocketFuelReward");
static_assert(offsetof(MiniRewardsPreview_C_PopulateRocketFuelReward, QuestReward) == 0x000000, "Member 'MiniRewardsPreview_C_PopulateRocketFuelReward::QuestReward' has a wrong offset!");
static_assert(offsetof(MiniRewardsPreview_C_PopulateRocketFuelReward, CallFunc_Create_ReturnValue) == 0x0000C8, "Member 'MiniRewardsPreview_C_PopulateRocketFuelReward::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(MiniRewardsPreview_C_PopulateRocketFuelReward, CallFunc_Greater_IntInt_ReturnValue) == 0x0000D0, "Member 'MiniRewardsPreview_C_PopulateRocketFuelReward::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MiniRewardsPreview_C_PopulateRocketFuelReward, CallFunc_AddChildToVerticalBox_ReturnValue) == 0x0000D8, "Member 'MiniRewardsPreview_C_PopulateRocketFuelReward::CallFunc_AddChildToVerticalBox_ReturnValue' has a wrong offset!");

// Function MiniRewardsPreview.MiniRewardsPreview_C.Populate Rocket Parts Reward
// 0x00E0 (0x00E0 - 0x0000)
struct MiniRewardsPreview_C_Populate_Rocket_Parts_Reward final
{
public:
	struct FMangoQuestReward                      QuestRewards;                                      // 0x0000(0x00C8)(BlueprintVisible, BlueprintReadOnly, Parm)
	class UMiniRewardPreview_C*                   CallFunc_Create_ReturnValue;                       // 0x00C8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2158[0x7];                                     // 0x00D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UVerticalBoxSlot*                       CallFunc_AddChildToVerticalBox_ReturnValue;        // 0x00D8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MiniRewardsPreview_C_Populate_Rocket_Parts_Reward) == 0x000008, "Wrong alignment on MiniRewardsPreview_C_Populate_Rocket_Parts_Reward");
static_assert(sizeof(MiniRewardsPreview_C_Populate_Rocket_Parts_Reward) == 0x0000E0, "Wrong size on MiniRewardsPreview_C_Populate_Rocket_Parts_Reward");
static_assert(offsetof(MiniRewardsPreview_C_Populate_Rocket_Parts_Reward, QuestRewards) == 0x000000, "Member 'MiniRewardsPreview_C_Populate_Rocket_Parts_Reward::QuestRewards' has a wrong offset!");
static_assert(offsetof(MiniRewardsPreview_C_Populate_Rocket_Parts_Reward, CallFunc_Create_ReturnValue) == 0x0000C8, "Member 'MiniRewardsPreview_C_Populate_Rocket_Parts_Reward::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(MiniRewardsPreview_C_Populate_Rocket_Parts_Reward, CallFunc_Greater_IntInt_ReturnValue) == 0x0000D0, "Member 'MiniRewardsPreview_C_Populate_Rocket_Parts_Reward::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MiniRewardsPreview_C_Populate_Rocket_Parts_Reward, CallFunc_AddChildToVerticalBox_ReturnValue) == 0x0000D8, "Member 'MiniRewardsPreview_C_Populate_Rocket_Parts_Reward::CallFunc_AddChildToVerticalBox_ReturnValue' has a wrong offset!");

// Function MiniRewardsPreview.MiniRewardsPreview_C.PopulateItemReward
// 0x00E0 (0x00E0 - 0x0000)
struct MiniRewardsPreview_C_PopulateItemReward final
{
public:
	struct FMangoQuestReward                      QuestReward;                                       // 0x0000(0x00C8)(BlueprintVisible, BlueprintReadOnly, Parm)
	class UMiniRewardPreview_C*                   CallFunc_Create_ReturnValue;                       // 0x00C8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UVerticalBoxSlot*                       CallFunc_AddChildToVerticalBox_ReturnValue;        // 0x00D0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_StrStr_ReturnValue;              // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(MiniRewardsPreview_C_PopulateItemReward) == 0x000008, "Wrong alignment on MiniRewardsPreview_C_PopulateItemReward");
static_assert(sizeof(MiniRewardsPreview_C_PopulateItemReward) == 0x0000E0, "Wrong size on MiniRewardsPreview_C_PopulateItemReward");
static_assert(offsetof(MiniRewardsPreview_C_PopulateItemReward, QuestReward) == 0x000000, "Member 'MiniRewardsPreview_C_PopulateItemReward::QuestReward' has a wrong offset!");
static_assert(offsetof(MiniRewardsPreview_C_PopulateItemReward, CallFunc_Create_ReturnValue) == 0x0000C8, "Member 'MiniRewardsPreview_C_PopulateItemReward::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(MiniRewardsPreview_C_PopulateItemReward, CallFunc_AddChildToVerticalBox_ReturnValue) == 0x0000D0, "Member 'MiniRewardsPreview_C_PopulateItemReward::CallFunc_AddChildToVerticalBox_ReturnValue' has a wrong offset!");
static_assert(offsetof(MiniRewardsPreview_C_PopulateItemReward, CallFunc_NotEqual_StrStr_ReturnValue) == 0x0000D8, "Member 'MiniRewardsPreview_C_PopulateItemReward::CallFunc_NotEqual_StrStr_ReturnValue' has a wrong offset!");

}

