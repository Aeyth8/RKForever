#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: CharacterStackHeader

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Mariner_classes.hpp"
#include "UMG_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass CharacterStackHeader.CharacterStackHeader_C
// 0x0098 (0x04C0 - 0x0428)
class UCharacterStackHeader_C final : public UMarinerCharacterStackHeader
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0428(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UArtifactImage_C*                       ArtifactImage;                                     // 0x0430(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UArtifactImage_C*                       ArtifactImage2;                                    // 0x0438(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UArtifactImage_C*                       ArtifactImage3;                                    // 0x0440(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UArtifactImage_C*                       ArtifactImage4;                                    // 0x0448(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 BG;                                                // 0x0450(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           CharacterHeader;                                   // 0x0458(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             CharacterName;                                     // 0x0460(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_0;                                           // 0x0468(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 ImageRankedArtifacts;                              // 0x0470(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Material;                                          // 0x0478(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 RarityIcon;                                        // 0x0480(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TextLevel;                                         // 0x0488(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 WeaponIcon;                                        // 0x0490(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UProgressBar*                           XPBar;                                             // 0x0498(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UMarinerPlayableCharacter*              ActiveCharacter;                                   // 0x04A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMarinerSkinCollectionDataAsset*        SkinOverride;                                      // 0x04A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMarinerSkinCollectionDataAsset*        LastSkinOverride;                                  // 0x04B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bRankedArtifacts;                                  // 0x04B8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_CharacterStackHeader(int32 EntryPoint);
	void PopulateNameAndOrWeapon();
	void SetCharacter(class UMarinerPlayableCharacter* Character);
	bool Populate();
	void GetProgressionData(struct FMangoCharacterProgression* Progression);
	void SetSkinOverride(class UMarinerSkinCollectionDataAsset* Skin);
	void Handle_Equipped_Artifacts();
	void GetFormattedProgression(const struct FMangoCharacterProgression& Progression, int32* Level, float* Progress, bool* HasPlayed);

	bool IsHeaderAllowed() const;
	void UpdateEquippedArtifacts(const bool bRankedPreset) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"CharacterStackHeader_C">();
	}
	static class UCharacterStackHeader_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCharacterStackHeader_C>();
	}
};
static_assert(alignof(UCharacterStackHeader_C) == 0x000008, "Wrong alignment on UCharacterStackHeader_C");
static_assert(sizeof(UCharacterStackHeader_C) == 0x0004C0, "Wrong size on UCharacterStackHeader_C");
static_assert(offsetof(UCharacterStackHeader_C, UberGraphFrame) == 0x000428, "Member 'UCharacterStackHeader_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UCharacterStackHeader_C, ArtifactImage) == 0x000430, "Member 'UCharacterStackHeader_C::ArtifactImage' has a wrong offset!");
static_assert(offsetof(UCharacterStackHeader_C, ArtifactImage2) == 0x000438, "Member 'UCharacterStackHeader_C::ArtifactImage2' has a wrong offset!");
static_assert(offsetof(UCharacterStackHeader_C, ArtifactImage3) == 0x000440, "Member 'UCharacterStackHeader_C::ArtifactImage3' has a wrong offset!");
static_assert(offsetof(UCharacterStackHeader_C, ArtifactImage4) == 0x000448, "Member 'UCharacterStackHeader_C::ArtifactImage4' has a wrong offset!");
static_assert(offsetof(UCharacterStackHeader_C, BG) == 0x000450, "Member 'UCharacterStackHeader_C::BG' has a wrong offset!");
static_assert(offsetof(UCharacterStackHeader_C, CharacterHeader) == 0x000458, "Member 'UCharacterStackHeader_C::CharacterHeader' has a wrong offset!");
static_assert(offsetof(UCharacterStackHeader_C, CharacterName) == 0x000460, "Member 'UCharacterStackHeader_C::CharacterName' has a wrong offset!");
static_assert(offsetof(UCharacterStackHeader_C, Image_0) == 0x000468, "Member 'UCharacterStackHeader_C::Image_0' has a wrong offset!");
static_assert(offsetof(UCharacterStackHeader_C, ImageRankedArtifacts) == 0x000470, "Member 'UCharacterStackHeader_C::ImageRankedArtifacts' has a wrong offset!");
static_assert(offsetof(UCharacterStackHeader_C, Material) == 0x000478, "Member 'UCharacterStackHeader_C::Material' has a wrong offset!");
static_assert(offsetof(UCharacterStackHeader_C, RarityIcon) == 0x000480, "Member 'UCharacterStackHeader_C::RarityIcon' has a wrong offset!");
static_assert(offsetof(UCharacterStackHeader_C, TextLevel) == 0x000488, "Member 'UCharacterStackHeader_C::TextLevel' has a wrong offset!");
static_assert(offsetof(UCharacterStackHeader_C, WeaponIcon) == 0x000490, "Member 'UCharacterStackHeader_C::WeaponIcon' has a wrong offset!");
static_assert(offsetof(UCharacterStackHeader_C, XPBar) == 0x000498, "Member 'UCharacterStackHeader_C::XPBar' has a wrong offset!");
static_assert(offsetof(UCharacterStackHeader_C, ActiveCharacter) == 0x0004A0, "Member 'UCharacterStackHeader_C::ActiveCharacter' has a wrong offset!");
static_assert(offsetof(UCharacterStackHeader_C, SkinOverride) == 0x0004A8, "Member 'UCharacterStackHeader_C::SkinOverride' has a wrong offset!");
static_assert(offsetof(UCharacterStackHeader_C, LastSkinOverride) == 0x0004B0, "Member 'UCharacterStackHeader_C::LastSkinOverride' has a wrong offset!");
static_assert(offsetof(UCharacterStackHeader_C, bRankedArtifacts) == 0x0004B8, "Member 'UCharacterStackHeader_C::bRankedArtifacts' has a wrong offset!");

}

