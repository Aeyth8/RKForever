#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: MapDataSmall

#include "Basic.hpp"

#include "MangoClient_structs.hpp"


namespace SDK::Params
{

// Function MapDataSmall.MapDataSmall_C.ExecuteUbergraph_MapDataSmall
// 0x0038 (0x0038 - 0x0000)
struct MapDataSmall_C_ExecuteUbergraph_MapDataSmall final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1341[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetGameModeText_ReturnValue;              // 0x0008(0x0018)()
	class FText                                   CallFunc_GetArenaNameText_ReturnValue;             // 0x0020(0x0018)()
};
static_assert(alignof(MapDataSmall_C_ExecuteUbergraph_MapDataSmall) == 0x000008, "Wrong alignment on MapDataSmall_C_ExecuteUbergraph_MapDataSmall");
static_assert(sizeof(MapDataSmall_C_ExecuteUbergraph_MapDataSmall) == 0x000038, "Wrong size on MapDataSmall_C_ExecuteUbergraph_MapDataSmall");
static_assert(offsetof(MapDataSmall_C_ExecuteUbergraph_MapDataSmall, EntryPoint) == 0x000000, "Member 'MapDataSmall_C_ExecuteUbergraph_MapDataSmall::EntryPoint' has a wrong offset!");
static_assert(offsetof(MapDataSmall_C_ExecuteUbergraph_MapDataSmall, CallFunc_GetGameModeText_ReturnValue) == 0x000008, "Member 'MapDataSmall_C_ExecuteUbergraph_MapDataSmall::CallFunc_GetGameModeText_ReturnValue' has a wrong offset!");
static_assert(offsetof(MapDataSmall_C_ExecuteUbergraph_MapDataSmall, CallFunc_GetArenaNameText_ReturnValue) == 0x000020, "Member 'MapDataSmall_C_ExecuteUbergraph_MapDataSmall::CallFunc_GetArenaNameText_ReturnValue' has a wrong offset!");

// Function MapDataSmall.MapDataSmall_C.GetGameModeText
// 0x00B8 (0x00B8 - 0x0000)
struct MapDataSmall_C_GetGameModeText final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm)
	bool                                          Temp_bool_Variable;                                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1342[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable;                                // 0x0020(0x0018)()
	class UMarinerModeGlobals*                    CallFunc_GetModeGlobals_ReturnValue;               // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TryAndGetMangoModeFromCurrentMode_bIsValid; // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1343[0x7];                                     // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMangoMode                             CallFunc_TryAndGetMangoModeFromCurrentMode_ReturnValue; // 0x0048(0x0058)(ConstParm)
	class FText                                   K2Node_Select_Default;                             // 0x00A0(0x0018)()
};
static_assert(alignof(MapDataSmall_C_GetGameModeText) == 0x000008, "Wrong alignment on MapDataSmall_C_GetGameModeText");
static_assert(sizeof(MapDataSmall_C_GetGameModeText) == 0x0000B8, "Wrong size on MapDataSmall_C_GetGameModeText");
static_assert(offsetof(MapDataSmall_C_GetGameModeText, ReturnValue) == 0x000000, "Member 'MapDataSmall_C_GetGameModeText::ReturnValue' has a wrong offset!");
static_assert(offsetof(MapDataSmall_C_GetGameModeText, Temp_bool_Variable) == 0x000018, "Member 'MapDataSmall_C_GetGameModeText::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(MapDataSmall_C_GetGameModeText, Temp_text_Variable) == 0x000020, "Member 'MapDataSmall_C_GetGameModeText::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(MapDataSmall_C_GetGameModeText, CallFunc_GetModeGlobals_ReturnValue) == 0x000038, "Member 'MapDataSmall_C_GetGameModeText::CallFunc_GetModeGlobals_ReturnValue' has a wrong offset!");
static_assert(offsetof(MapDataSmall_C_GetGameModeText, CallFunc_TryAndGetMangoModeFromCurrentMode_bIsValid) == 0x000040, "Member 'MapDataSmall_C_GetGameModeText::CallFunc_TryAndGetMangoModeFromCurrentMode_bIsValid' has a wrong offset!");
static_assert(offsetof(MapDataSmall_C_GetGameModeText, CallFunc_TryAndGetMangoModeFromCurrentMode_ReturnValue) == 0x000048, "Member 'MapDataSmall_C_GetGameModeText::CallFunc_TryAndGetMangoModeFromCurrentMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(MapDataSmall_C_GetGameModeText, K2Node_Select_Default) == 0x0000A0, "Member 'MapDataSmall_C_GetGameModeText::K2Node_Select_Default' has a wrong offset!");

// Function MapDataSmall.MapDataSmall_C.GetArenaNameText
// 0x00D0 (0x00D0 - 0x0000)
struct MapDataSmall_C_GetArenaNameText final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm)
	bool                                          Temp_bool_Variable;                                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1344[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable;                                // 0x0020(0x0018)()
	bool                                          CallFunc_GetMarinerGlobals_IsValid;                // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1345[0x7];                                     // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMarinerGlobals*                        CallFunc_GetMarinerGlobals_ReturnValue;            // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMarinerMapGlobals*                     CallFunc_GetMapGlobals_ReturnValue;                // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TryAndGetMangoMapFromCurrentMap_bIsValid; // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1346[0x7];                                     // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMangoMap                              CallFunc_TryAndGetMangoMapFromCurrentMap_ReturnValue; // 0x0058(0x0060)(ConstParm)
	class FText                                   K2Node_Select_Default;                             // 0x00B8(0x0018)()
};
static_assert(alignof(MapDataSmall_C_GetArenaNameText) == 0x000008, "Wrong alignment on MapDataSmall_C_GetArenaNameText");
static_assert(sizeof(MapDataSmall_C_GetArenaNameText) == 0x0000D0, "Wrong size on MapDataSmall_C_GetArenaNameText");
static_assert(offsetof(MapDataSmall_C_GetArenaNameText, ReturnValue) == 0x000000, "Member 'MapDataSmall_C_GetArenaNameText::ReturnValue' has a wrong offset!");
static_assert(offsetof(MapDataSmall_C_GetArenaNameText, Temp_bool_Variable) == 0x000018, "Member 'MapDataSmall_C_GetArenaNameText::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(MapDataSmall_C_GetArenaNameText, Temp_text_Variable) == 0x000020, "Member 'MapDataSmall_C_GetArenaNameText::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(MapDataSmall_C_GetArenaNameText, CallFunc_GetMarinerGlobals_IsValid) == 0x000038, "Member 'MapDataSmall_C_GetArenaNameText::CallFunc_GetMarinerGlobals_IsValid' has a wrong offset!");
static_assert(offsetof(MapDataSmall_C_GetArenaNameText, CallFunc_GetMarinerGlobals_ReturnValue) == 0x000040, "Member 'MapDataSmall_C_GetArenaNameText::CallFunc_GetMarinerGlobals_ReturnValue' has a wrong offset!");
static_assert(offsetof(MapDataSmall_C_GetArenaNameText, CallFunc_GetMapGlobals_ReturnValue) == 0x000048, "Member 'MapDataSmall_C_GetArenaNameText::CallFunc_GetMapGlobals_ReturnValue' has a wrong offset!");
static_assert(offsetof(MapDataSmall_C_GetArenaNameText, CallFunc_TryAndGetMangoMapFromCurrentMap_bIsValid) == 0x000050, "Member 'MapDataSmall_C_GetArenaNameText::CallFunc_TryAndGetMangoMapFromCurrentMap_bIsValid' has a wrong offset!");
static_assert(offsetof(MapDataSmall_C_GetArenaNameText, CallFunc_TryAndGetMangoMapFromCurrentMap_ReturnValue) == 0x000058, "Member 'MapDataSmall_C_GetArenaNameText::CallFunc_TryAndGetMangoMapFromCurrentMap_ReturnValue' has a wrong offset!");
static_assert(offsetof(MapDataSmall_C_GetArenaNameText, K2Node_Select_Default) == 0x0000B8, "Member 'MapDataSmall_C_GetArenaNameText::K2Node_Select_Default' has a wrong offset!");

}

