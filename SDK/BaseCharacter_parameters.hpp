#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BaseCharacter

#include "Basic.hpp"

#include "Mariner_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "GameplayAbilities_structs.hpp"
#include "ItemBoxTypes_structs.hpp"
#include "DodgeData_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "GameplayAwardTypes_structs.hpp"
#include "Engine_structs.hpp"
#include "InputCore_structs.hpp"
#include "DodgeDirections_structs.hpp"
#include "E_ItemActivationTypes_structs.hpp"
#include "AkAudio_structs.hpp"
#include "ECharacterStance_structs.hpp"


namespace SDK::Params
{

// Function BaseCharacter.BaseCharacter_C.ReturnedToArena__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct BaseCharacter_C_ReturnedToArena__DelegateSignature final
{
public:
	class AMarinerCharacter*                      ReturnedCharacter;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BaseCharacter_C_ReturnedToArena__DelegateSignature) == 0x000008, "Wrong alignment on BaseCharacter_C_ReturnedToArena__DelegateSignature");
static_assert(sizeof(BaseCharacter_C_ReturnedToArena__DelegateSignature) == 0x000008, "Wrong size on BaseCharacter_C_ReturnedToArena__DelegateSignature");
static_assert(offsetof(BaseCharacter_C_ReturnedToArena__DelegateSignature, ReturnedCharacter) == 0x000000, "Member 'BaseCharacter_C_ReturnedToArena__DelegateSignature::ReturnedCharacter' has a wrong offset!");

// Function BaseCharacter.BaseCharacter_C.AbilityFail__DelegateSignature
// 0x0028 (0x0028 - 0x0000)
struct BaseCharacter_C_AbilityFail__DelegateSignature final
{
public:
	class UGameplayAbility*                       Ability;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTagContainer                  FailTags;                                          // 0x0008(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(BaseCharacter_C_AbilityFail__DelegateSignature) == 0x000008, "Wrong alignment on BaseCharacter_C_AbilityFail__DelegateSignature");
static_assert(sizeof(BaseCharacter_C_AbilityFail__DelegateSignature) == 0x000028, "Wrong size on BaseCharacter_C_AbilityFail__DelegateSignature");
static_assert(offsetof(BaseCharacter_C_AbilityFail__DelegateSignature, Ability) == 0x000000, "Member 'BaseCharacter_C_AbilityFail__DelegateSignature::Ability' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_AbilityFail__DelegateSignature, FailTags) == 0x000008, "Member 'BaseCharacter_C_AbilityFail__DelegateSignature::FailTags' has a wrong offset!");

// Function BaseCharacter.BaseCharacter_C.AlternateAbilityIconUpdate__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct BaseCharacter_C_AlternateAbilityIconUpdate__DelegateSignature final
{
public:
	bool                                          UseAlternate;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 AbiltiyClass;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BaseCharacter_C_AlternateAbilityIconUpdate__DelegateSignature) == 0x000008, "Wrong alignment on BaseCharacter_C_AlternateAbilityIconUpdate__DelegateSignature");
static_assert(sizeof(BaseCharacter_C_AlternateAbilityIconUpdate__DelegateSignature) == 0x000010, "Wrong size on BaseCharacter_C_AlternateAbilityIconUpdate__DelegateSignature");
static_assert(offsetof(BaseCharacter_C_AlternateAbilityIconUpdate__DelegateSignature, UseAlternate) == 0x000000, "Member 'BaseCharacter_C_AlternateAbilityIconUpdate__DelegateSignature::UseAlternate' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_AlternateAbilityIconUpdate__DelegateSignature, AbiltiyClass) == 0x000008, "Member 'BaseCharacter_C_AlternateAbilityIconUpdate__DelegateSignature::AbiltiyClass' has a wrong offset!");

// Function BaseCharacter.BaseCharacter_C.WallBounce__DelegateSignature
// 0x000C (0x000C - 0x0000)
struct BaseCharacter_C_WallBounce__DelegateSignature final
{
public:
	struct FVector                                Direction;                                         // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BaseCharacter_C_WallBounce__DelegateSignature) == 0x000004, "Wrong alignment on BaseCharacter_C_WallBounce__DelegateSignature");
static_assert(sizeof(BaseCharacter_C_WallBounce__DelegateSignature) == 0x00000C, "Wrong size on BaseCharacter_C_WallBounce__DelegateSignature");
static_assert(offsetof(BaseCharacter_C_WallBounce__DelegateSignature, Direction) == 0x000000, "Member 'BaseCharacter_C_WallBounce__DelegateSignature::Direction' has a wrong offset!");

// Function BaseCharacter.BaseCharacter_C.OnSpawnProtectionChange__DelegateSignature
// 0x000C (0x000C - 0x0000)
struct BaseCharacter_C_OnSpawnProtectionChange__DelegateSignature final
{
public:
	bool                                          IsEnabled;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Duration;                                          // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Timestamp;                                         // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BaseCharacter_C_OnSpawnProtectionChange__DelegateSignature) == 0x000004, "Wrong alignment on BaseCharacter_C_OnSpawnProtectionChange__DelegateSignature");
static_assert(sizeof(BaseCharacter_C_OnSpawnProtectionChange__DelegateSignature) == 0x00000C, "Wrong size on BaseCharacter_C_OnSpawnProtectionChange__DelegateSignature");
static_assert(offsetof(BaseCharacter_C_OnSpawnProtectionChange__DelegateSignature, IsEnabled) == 0x000000, "Member 'BaseCharacter_C_OnSpawnProtectionChange__DelegateSignature::IsEnabled' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_OnSpawnProtectionChange__DelegateSignature, Duration) == 0x000004, "Member 'BaseCharacter_C_OnSpawnProtectionChange__DelegateSignature::Duration' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_OnSpawnProtectionChange__DelegateSignature, Timestamp) == 0x000008, "Member 'BaseCharacter_C_OnSpawnProtectionChange__DelegateSignature::Timestamp' has a wrong offset!");

// Function BaseCharacter.BaseCharacter_C.DodgeStartedNavPin__DelegateSignature
// 0x0004 (0x0004 - 0x0000)
struct BaseCharacter_C_DodgeStartedNavPin__DelegateSignature final
{
public:
	float                                         DodgeDuration;                                     // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BaseCharacter_C_DodgeStartedNavPin__DelegateSignature) == 0x000004, "Wrong alignment on BaseCharacter_C_DodgeStartedNavPin__DelegateSignature");
static_assert(sizeof(BaseCharacter_C_DodgeStartedNavPin__DelegateSignature) == 0x000004, "Wrong size on BaseCharacter_C_DodgeStartedNavPin__DelegateSignature");
static_assert(offsetof(BaseCharacter_C_DodgeStartedNavPin__DelegateSignature, DodgeDuration) == 0x000000, "Member 'BaseCharacter_C_DodgeStartedNavPin__DelegateSignature::DodgeDuration' has a wrong offset!");

// Function BaseCharacter.BaseCharacter_C.OnGameplayAwardGiven__DelegateSignature
// 0x000C (0x000C - 0x0000)
struct BaseCharacter_C_OnGameplayAwardGiven__DelegateSignature final
{
public:
	EGameplayAwardTypes                           AwardType;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Value;                                             // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         StatTotal;                                         // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BaseCharacter_C_OnGameplayAwardGiven__DelegateSignature) == 0x000004, "Wrong alignment on BaseCharacter_C_OnGameplayAwardGiven__DelegateSignature");
static_assert(sizeof(BaseCharacter_C_OnGameplayAwardGiven__DelegateSignature) == 0x00000C, "Wrong size on BaseCharacter_C_OnGameplayAwardGiven__DelegateSignature");
static_assert(offsetof(BaseCharacter_C_OnGameplayAwardGiven__DelegateSignature, AwardType) == 0x000000, "Member 'BaseCharacter_C_OnGameplayAwardGiven__DelegateSignature::AwardType' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_OnGameplayAwardGiven__DelegateSignature, Value) == 0x000004, "Member 'BaseCharacter_C_OnGameplayAwardGiven__DelegateSignature::Value' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_OnGameplayAwardGiven__DelegateSignature, StatTotal) == 0x000008, "Member 'BaseCharacter_C_OnGameplayAwardGiven__DelegateSignature::StatTotal' has a wrong offset!");

// Function BaseCharacter.BaseCharacter_C.ExecuteUbergraph_BaseCharacter
// 0x1B40 (0x1B40 - 0x0000)
struct BaseCharacter_C_ExecuteUbergraph_BaseCharacter final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class AMarinerCharacter* ThrowingCharacter, EMarinerItemSlot ItemSlot)> K2Node_CreateDelegate_OutputDelegate;              // 0x0008(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_1;                               // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FAkExternalSourceInfo>          Temp_struct_Variable;                              // 0x0020(0x0010)(ConstParm, ZeroConstructor, ReferenceParm)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue_1;            // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_33[0x1];                                       // 0x0033(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable;                            // 0x0034(0x0010)(ConstParm, ZeroConstructor, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_45[0x3];                                       // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x0048(0x0010)(ZeroConstructor, NoDestructor)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0058(0x0008)(NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_VectorToString_ReturnValue;          // 0x0060(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0070(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_RotatorToString_ReturnValue;         // 0x0080(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0090(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TArray<struct FAkExternalSourceInfo>          Temp_struct_Variable_1;                            // 0x00A0(0x0010)(ConstParm, ZeroConstructor, ReferenceParm)
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable_1;                          // 0x00B0(0x0010)(ConstParm, ZeroConstructor, NoDestructor)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C1[0x3];                                       // 0x00C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class UGameplayAbility* Ability, struct FGameplayTagContainer& FailTags)> K2Node_CreateDelegate_OutputDelegate_2;            // 0x00C4(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_HasAuthority_ReturnValue_1;               // 0x00D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAuthority_ReturnValue_2;               // 0x00D5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_Enabled;                              // 0x00D6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D7[0x1];                                       // 0x00D7(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_Event_Hit;                                  // 0x00D8(0x0088)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      K2Node_DynamicCast_AsPlayer_Controller;            // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_171[0x3];                                      // 0x0171(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetVelocity_ReturnValue;                  // 0x0174(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0180(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0184(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0188(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x018C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_18D[0x3];                                      // 0x018D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AMarinerCharacter*                      K2Node_ComponentBoundEvent_StealingCharacter;      // 0x0190(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMarinerCharacter*                      K2Node_ComponentBoundEvent_VictimCharacter;        // 0x0198(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMarinerItemSlot                              K2Node_ComponentBoundEvent_ItemSlot_1;             // 0x01A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A1[0x7];                                      // 0x01A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_GetController_ReturnValue_1;              // 0x01A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMarinerPlayerController*               K2Node_DynamicCast_AsMariner_Player_Controller;    // 0x01B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x01B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1B9[0x7];                                      // 0x01B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_GetController_ReturnValue_2;              // 0x01C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMarinerPlayerController*               K2Node_DynamicCast_AsMariner_Player_Controller_1;  // 0x01C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x01D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D1[0x3];                                      // 0x01D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_CustomEvent_InputDI;                        // 0x01D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               K2Node_CustomEvent_DIRotation;                     // 0x01D8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         Temp_int_Variable_2;                               // 0x01E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x01E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x01EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue_2;            // 0x01F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1F1[0x3];                                      // 0x01F1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue;        // 0x01F4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x0200(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GreaterGreater_VectorRotator_ReturnValue; // 0x020C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AController*                            K2Node_Event_NewController;                        // 0x0218(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_3;            // 0x0220(0x0010)(ZeroConstructor, NoDestructor)
	float                                         K2Node_Event_Damage;                               // 0x0230(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_234[0x4];                                      // 0x0234(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	const class UDamageType*                      K2Node_Event_DamageType;                           // 0x0238(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AController*                            K2Node_Event_InstigatedBy;                         // 0x0240(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_DamageCauser;                         // 0x0248(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue_1;                     // 0x0250(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_25C[0x4];                                      // 0x025C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IMarinerTeamAffiliatedObjectInterface> K2Node_DynamicCast_AsMariner_Team_Affiliated_Object_Interface; // 0x0260(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0270(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_271[0x3];                                      // 0x0271(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0274(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetTeamIndex_ReturnValue;                 // 0x0280(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotFromX_ReturnValue;                 // 0x0284(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_DoesImplementInterface_ReturnValue;       // 0x0290(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_291[0x7];                                      // 0x0291(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AMarinerCharacter*                      K2Node_CustomEvent_RecoveredCharacter;             // 0x0298(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Suppress_2;                     // 0x02A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2A1[0x7];                                      // 0x02A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_CustomEvent_WhoSetME_1;                     // 0x02A8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsMegablasted_ReturnValue;                // 0x02B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetSuppressionTags_ReturnValue;           // 0x02B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_Suppress_1;                     // 0x02BA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2BB[0x5];                                      // 0x02BB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_CustomEvent_WhoSetME;                       // 0x02C0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetSuppressionTags_ReturnValue_1;         // 0x02D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D1[0x3];                                      // 0x02D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class AMarinerCharacter* RecoveredCharacter)> K2Node_CreateDelegate_OutputDelegate_4;            // 0x02D4(0x0010)(ZeroConstructor, NoDestructor)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x02E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class UGameplayAbility*                 K2Node_CustomEvent_Ability_1;                      // 0x02E8(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTagContainer                  K2Node_CustomEvent_FailTags_1;                     // 0x02F0(0x0020)(ConstParm)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue;          // 0x0310(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_311[0x7];                                      // 0x0311(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameplayAbility*                       K2Node_CustomEvent_Ability;                        // 0x0318(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTagContainer                  K2Node_CustomEvent_FailTags;                       // 0x0320(0x0020)()
	struct FActiveGameplayEffectHandle            CallFunc_BP_ApplyGameplayEffectToSelf_ReturnValue; // 0x0340(0x0008)(NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0348(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34C[0x4];                                      // 0x034C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_InputKeyEvent_Key;                          // 0x0350(0x0018)(HasGetValueTypeHash)
	class AController*                            CallFunc_GetController_ReturnValue_3;              // 0x0368(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMarinerBasePlayerController*           K2Node_DynamicCast_AsMariner_Base_Player_Controller; // 0x0370(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x0378(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_379[0x7];                                      // 0x0379(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCameraShake*                           CallFunc_PlayCameraShake_ReturnValue;              // 0x0380(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IMarinerTeamAffiliatedObjectInterface> K2Node_DynamicCast_AsMariner_Team_Affiliated_Object_Interface_1; // 0x0388(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x0398(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_DoesImplementInterface_ReturnValue_1;     // 0x0399(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39A[0x2];                                      // 0x039A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetTeamIndex_ReturnValue_1;               // 0x039C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x03A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x03A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x03A2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_IncreasedCombo;                 // 0x03A3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAuthority_ReturnValue_3;               // 0x03A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue_1;        // 0x03A5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A6[0x2];                                      // 0x03A6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_3;                               // 0x03A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x03AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue_3;            // 0x03AD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x03AE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EMovementMode                                 K2Node_Event_PrevMovementMode;                     // 0x03AF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMovementMode                                 K2Node_Event_NewMovementMode;                      // 0x03B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         K2Node_Event_PrevCustomMode;                       // 0x03B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         K2Node_Event_NewCustomMode;                        // 0x03B2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_4;                 // 0x03B3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x03B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3B5[0x3];                                      // 0x03B5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_GetController_ReturnValue_4;              // 0x03B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMarinerCharacterMovement*              K2Node_DynamicCast_AsMariner_Character_Movement;   // 0x03C0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_6;                     // 0x03C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C9[0x7];                                      // 0x03C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AMarinerPlayerController*               K2Node_DynamicCast_AsMariner_Player_Controller_2;  // 0x03D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_7;                     // 0x03D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D9[0x3];                                      // 0x03D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetWorldRotation_SweepHitResult;       // 0x03DC(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0464(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0468(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_4;               // 0x046C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_46D[0x3];                                      // 0x046D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x0470(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             K2Node_CustomEvent_BounceHitResult;                // 0x0474(0x0088)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          K2Node_CustomEvent_bBouncingWhileMegablasted;      // 0x04FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4FD[0x3];                                      // 0x04FD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector_NetQuantizeNormal              K2Node_CustomEvent_BounceDirection;                // 0x0500(0x000C)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x050C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x050D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_50E[0x2];                                      // 0x050E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x0510(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0514(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0518(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0524(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0530(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x053C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0548(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0550(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0558(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0560(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0568(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x056C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0570(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x057C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_1;                          // 0x0588(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_1;                          // 0x058C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_1;                          // 0x0590(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0594(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector_NetQuantizeNormal              K2Node_MakeStruct_Vector_NetQuantizeNormal;        // 0x05A0(0x000C)(NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_CurrentVelocity_1;              // 0x05AC(0x000C)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bMegablasted_1;                 // 0x05B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsMegablasted_ReturnValue_1;              // 0x05B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5BA[0x2];                                      // 0x05BA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_VSize_ReturnValue;                        // 0x05BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x05C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_1;            // 0x05C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_bTrailActive;                   // 0x05C2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5C3[0x1];                                      // 0x05C3(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_CustomEvent_CurrentVelocity;                // 0x05C4(0x000C)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bMegablasted;                   // 0x05D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5D1[0x7];                                      // 0x05D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_InputKeyEvent_Key_1;                        // 0x05D8(0x0018)(HasGetValueTypeHash)
	const class UMarinerDamageableComponent*      K2Node_ComponentBoundEvent_RelevantDamageableComponent_1; // 0x05F0(0x0008)(ConstParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_ComponentBoundEvent_NewAmount;              // 0x05F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_ComponentBoundEvent_OldAmount;              // 0x05FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0600(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue_1;       // 0x0601(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue_2;       // 0x0602(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_603[0x5];                                      // 0x0603(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Temp_string_Variable;                              // 0x0608(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0618(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x0619(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61A[0x6];                                      // 0x061A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Temp_string_Variable_1;                            // 0x0620(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0630(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_631[0x3];                                      // 0x0631(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x0634(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 K2Node_Select_Default;                             // 0x0638(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x0648(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0658(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_65C[0x4];                                      // 0x065C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	const class UMarinerDamageableComponent*      K2Node_ComponentBoundEvent_RelevantDamageableComponent; // 0x0660(0x0008)(ConstParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class AMarinerPlayerState*              K2Node_ComponentBoundEvent_MegablastInstigator;    // 0x0668(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bEnteredState;          // 0x0670(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_671[0x3];                                      // 0x0671(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetDangerThreshold_Threshold;             // 0x0674(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x0678(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_2;            // 0x0679(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_3;                // 0x067A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_4;                // 0x067B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_5;                 // 0x067C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_6;                 // 0x067D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_67E[0x2];                                      // 0x067E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_CustomEvent_DamagedActor_1;                 // 0x0680(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_Damage_1;                       // 0x0688(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_68C[0x4];                                      // 0x068C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	const class UDamageType*                      K2Node_CustomEvent_DamageType_1;                   // 0x0690(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AController*                            K2Node_CustomEvent_InstigatedBy;                   // 0x0698(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_CustomEvent_DamageCauser;                   // 0x06A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HandleShieldItemDamage_IsShieldDepleted;  // 0x06A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6A9[0x3];                                      // 0x06A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_CustomEvent_ShieldHealth;                   // 0x06AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FActiveGameplayEffectHandle            CallFunc_BP_ApplyGameplayEffectToSelf_ReturnValue_1; // 0x06B0(0x0008)(NoDestructor, HasGetValueTypeHash)
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable_2;                          // 0x06B8(0x0010)(ConstParm, ZeroConstructor, NoDestructor)
	TDelegate<void(struct FVector& PostLaunchVelocity, bool bLaunchContainedHostileImpulse, bool bLaunchWasMegablast)> K2Node_CreateDelegate_OutputDelegate_5;            // 0x06C8(0x0010)(ZeroConstructor, NoDestructor)
	TArray<struct FAkExternalSourceInfo>          Temp_struct_Variable_2;                            // 0x06D8(0x0010)(ConstParm, ZeroConstructor, ReferenceParm)
	int32                                         CallFunc_PostAkEvent_ReturnValue;                  // 0x06E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FActiveGameplayEffectHandle            CallFunc_BP_ApplyGameplayEffectToSelf_ReturnValue_2; // 0x06EC(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_5;               // 0x06F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6F5[0x3];                                      // 0x06F5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FActiveGameplayEffectHandle            CallFunc_BP_ApplyGameplayEffectToSelf_ReturnValue_3; // 0x06F8(0x0008)(NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_3;                   // 0x0700(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_704[0x4];                                      // 0x0704(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x0708(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           CallFunc_GetCurrentActiveMontage_ReturnValue;      // 0x0710(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue_1;            // 0x0718(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           CallFunc_GetCurrentActiveMontage_ReturnValue_1;    // 0x0720(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key;                       // 0x0728(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0740(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_741[0x7];                                      // 0x0741(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   Temp_struct_Variable_3;                            // 0x0748(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key_1;                     // 0x0760(0x0018)(HasGetValueTypeHash)
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable_3;                          // 0x0778(0x0010)(ConstParm, ZeroConstructor, NoDestructor)
	int32                                         Temp_int_Loop_Counter_Variable_3;                  // 0x0788(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         K2Node_CustomEvent_JumpCount_1;                    // 0x078C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_78D[0x3];                                      // 0x078D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x0790(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue_2;        // 0x0794(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_795[0x3];                                      // 0x0795(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 K2Node_CustomEvent_GameplayEffect_2;               // 0x0798(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMarinerCharacter*                      K2Node_CustomEvent_Character_6;                    // 0x07A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_PriorGameplayEffectCount_2;     // 0x07A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_GameplayEffectLevel_2;          // 0x07AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_CustomEvent_DamagedActor;                   // 0x07B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bDamageWasAOE;                  // 0x07B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_bDamageWasMegablast;            // 0x07B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7BA[0x6];                                      // 0x07BA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 K2Node_CustomEvent_DamageType;                     // 0x07C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_ImpulseVector;                  // 0x07C8(0x000C)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_Damage;                         // 0x07D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FAkExternalSourceInfo>          Temp_struct_Variable_4;                            // 0x07D8(0x0010)(ConstParm, ZeroConstructor, ReferenceParm)
	bool                                          CallFunc_HasAuthority_ReturnValue_6;               // 0x07E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7E9[0x3];                                      // 0x07E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_6;            // 0x07EC(0x0010)(ZeroConstructor, NoDestructor)
	int32                                         Temp_int_Array_Index_Variable_4;                   // 0x07FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue_1;        // 0x0800(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key_2;                     // 0x0808(0x0018)(HasGetValueTypeHash)
	int32                                         CallFunc_PostAkEvent_ReturnValue_1;                // 0x0820(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_824[0x4];                                      // 0x0824(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 K2Node_CustomEvent_GameplayEffect_1;               // 0x0828(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMarinerCharacter*                      K2Node_CustomEvent_Character_5;                    // 0x0830(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_PriorGameplayEffectCount_1;     // 0x0838(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_GameplayEffectLevel_1;          // 0x083C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ClassClass_ReturnValue;        // 0x0840(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0841(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_842[0x6];                                      // 0x0842(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 K2Node_CustomEvent_GameplayEffect;                 // 0x0848(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMarinerCharacter*                      K2Node_CustomEvent_Character_4;                    // 0x0850(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_PriorGameplayEffectCount;       // 0x0858(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_GameplayEffectLevel;            // 0x085C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_4;                               // 0x0860(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue_4;            // 0x0864(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_865[0x3];                                      // 0x0865(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AMarinerCharacter*                      K2Node_CustomEvent_Character_3;                    // 0x0868(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_CustomEvent_GameplayTag_1;                  // 0x0870(0x0008)(ConstParm, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HandleGameplayTagApplication_TagHandled;  // 0x0878(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HandleArtifactTagApplication_TagHandled;  // 0x0879(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_87A[0x6];                                      // 0x087A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AMarinerCharacter*                      K2Node_CustomEvent_Character_2;                    // 0x0880(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_CustomEvent_GameplayTag;                    // 0x0888(0x0008)(ConstParm, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_5;                // 0x0890(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HandleGameplayTagRemoval_TagHandled;      // 0x0891(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HandleArtifactTagRemoval_TagHandled;      // 0x0892(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_6;                // 0x0893(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0894(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_1;    // 0x0895(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_896[0x2];                                      // 0x0896(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class AMarinerCharacter* Character, struct FGameplayTag& GameplayTag)> K2Node_CreateDelegate_OutputDelegate_7;            // 0x0898(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(class AMarinerCharacter* Character, struct FGameplayTag& GameplayTag)> K2Node_CreateDelegate_OutputDelegate_8;            // 0x08A8(0x0010)(ZeroConstructor, NoDestructor)
	int32                                         Temp_int_Variable_5;                               // 0x08B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_2;          // 0x08BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue_5;            // 0x08BD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_7;                 // 0x08BE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_8;                 // 0x08BF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class IBlendableInterface>   CallFunc_AddOrUpdateBlendable_InBlendableObject_CastInput; // 0x08C0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class IBlendableInterface>   CallFunc_AddOrUpdateBlendable_InBlendableObject_CastInput_1; // 0x08D0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class IBlendableInterface>   CallFunc_AddOrUpdateBlendable_InBlendableObject_CastInput_2; // 0x08E0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class IBlendableInterface>   CallFunc_AddOrUpdateBlendable_InBlendableObject_CastInput_3; // 0x08F0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_9;            // 0x0900(0x0010)(ZeroConstructor, NoDestructor)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue_2;        // 0x0910(0x0008)(NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_6;                               // 0x0918(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_7;                               // 0x091C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_8;                               // 0x0920(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_924[0x4];                                      // 0x0924(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AMarinerCharacter*                      K2Node_Event_KnockOutInstigator;                   // 0x0928(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_KnockOutDirection_1;                  // 0x0930(0x000C)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x093C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_PostEventAtLocation_ReturnValue;          // 0x0948(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_4;                  // 0x094C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_7;               // 0x0950(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_951[0x3];                                      // 0x0951(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_4;                 // 0x0954(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMarinerCharacter*                      K2Node_Event_MegablastInstigator;                  // 0x0958(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_KnockOutDirection;                    // 0x0960(0x000C)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_96C[0x4];                                      // 0x096C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AMarinerCharacter*                      K2Node_CustomEvent_KnockoutInstigator;             // 0x0970(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bWasMegablast;                  // 0x0978(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_979[0x3];                                      // 0x0979(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_CustomEvent_KnockoutDir;                    // 0x097C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_9;                               // 0x0988(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x098C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMarinerHostility                             Temp_byte_Variable;                                // 0x0990(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_991[0x3];                                      // 0x0991(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult;    // 0x0994(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_10;           // 0x0A1C(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_A2C[0x4];                                      // 0x0A2C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0A30(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue_3;        // 0x0A60(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_8;               // 0x0A68(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAuthority_ReturnValue_9;               // 0x0A69(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A6A[0x2];                                      // 0x0A6A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult_1;  // 0x0A6C(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0AF4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_TransformLocation_ReturnValue;            // 0x0B00(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_10;              // 0x0B0C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_1;                              // 0x0B0D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B0E[0x2];                                      // 0x0B0E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0B10(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_7;                // 0x0B1C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAuthority_ReturnValue_11;              // 0x0B1D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_2;                              // 0x0B1E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_8;                // 0x0B1F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAuthority_ReturnValue_12;              // 0x0B20(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B21[0x3];                                      // 0x0B21(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_11;           // 0x0B24(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_HandleArtifactTagApplication_TagHandled_1; // 0x0B34(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAuthority_ReturnValue_13;              // 0x0B35(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B36[0x2];                                      // 0x0B36(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBlendableInterface>   CallFunc_AddOrUpdateBlendable_InBlendableObject_CastInput_4; // 0x0B38(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class IBlendableInterface>   CallFunc_AddOrUpdateBlendable_InBlendableObject_CastInput_5; // 0x0B48(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue_3;        // 0x0B58(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_9;                // 0x0B59(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue_4;        // 0x0B5A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_9;                 // 0x0B5B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_10;               // 0x0B5C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_10;                // 0x0B5D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B5E[0x2];                                      // 0x0B5E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class UMarinerDamageableComponent* RelevantDamageableComponent, class AMarinerCharacter* CharacterExpectingMegablast)> K2Node_CreateDelegate_OutputDelegate_12;           // 0x0B60(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue_5;        // 0x0B70(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B71[0x7];                                      // 0x0B71(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   Temp_struct_Variable_5;                            // 0x0B78(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_11;               // 0x0B90(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue_6;        // 0x0B91(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_11;                // 0x0B92(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_12;               // 0x0B93(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B94[0x4];                                      // 0x0B94(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_InputActionEvent_Key_3;                     // 0x0B98(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_12;                // 0x0BB0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue_7;        // 0x0BB1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue_8;        // 0x0BB2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_13;               // 0x0BB3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_13;                // 0x0BB4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_14;               // 0x0BB5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_14;                // 0x0BB6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_BB7[0x1];                                      // 0x0BB7(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_InputActionEvent_Key_4;                     // 0x0BB8(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue_9;        // 0x0BD0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_15;               // 0x0BD1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_15;                // 0x0BD2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_BD3[0x5];                                      // 0x0BD3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0BD8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_MarinerGameState_C*                 K2Node_DynamicCast_AsBP_Mariner_Game_State;        // 0x0BE0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_8;                     // 0x0BE8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_IsEnabled_1;                    // 0x0BE9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_16;               // 0x0BEA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue_10;       // 0x0BEB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0BEC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0BED(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_IsEnabled;                      // 0x0BEE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_BEF[0x1];                                      // 0x0BEF(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_CustomEvent_SpawnProtectionDuration;        // 0x0BF0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0BF4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_BF5[0x3];                                      // 0x0BF5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   Temp_struct_Variable_6;                            // 0x0BF8(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key_5;                     // 0x0C10(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key_6;                     // 0x0C28(0x0018)(HasGetValueTypeHash)
	class AMarinerBasePlayerController*           CallFunc_TryAndGetLocalPlayerController_ReturnValue; // 0x0C40(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FKey                                   Temp_struct_Variable_7;                            // 0x0C48(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x0C60(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C61[0x7];                                      // 0x0C61(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_InputActionEvent_Key_7;                     // 0x0C68(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key_8;                     // 0x0C80(0x0018)(HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_13;           // 0x0C98(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_HasAuthority_ReturnValue_14;              // 0x0CA8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_CA9[0x3];                                      // 0x0CA9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(bool IsEnabled)>               K2Node_CreateDelegate_OutputDelegate_14;           // 0x0CAC(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_HasAuthority_ReturnValue_15;              // 0x0CBC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_CBD[0x3];                                      // 0x0CBD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	const class UMarinerDamageableComponent*      K2Node_CustomEvent_RelevantDamageableComponent;    // 0x0CC0(0x0008)(ConstParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class AMarinerCharacter*                K2Node_CustomEvent_CharacterExpectingMegablast;    // 0x0CC8(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0CD0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetTeamIndex_ReturnValue_2;               // 0x0CD4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMarinerHostility                             CallFunc_TryAndGetHostilityRelativeToLocalPlayer_ReturnValue; // 0x0CD8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CD9[0x3];                                      // 0x0CD9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Select_Default_1;                           // 0x0CDC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue_11;       // 0x0CE0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_17;               // 0x0CE1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAuthority_ReturnValue_16;              // 0x0CE2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_16;                // 0x0CE3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_CE4[0x4];                                      // 0x0CE4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue_2;            // 0x0CE8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EDodgeDirections                              K2Node_Event_DodgeDirection;                       // 0x0CF0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CF1[0x3];                                      // 0x0CF1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DodgeDuration;                        // 0x0CF4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class ICharacterAnimationInterface_C> K2Node_DynamicCast_AsCharacter_Animation_Interface; // 0x0CF8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_9;                     // 0x0D08(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D09[0x3];                                      // 0x0D09(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x0D0C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMarinerCardinalDirection                     K2Node_ComponentBoundEvent_NewDirection;           // 0x0D18(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMarinerCardinalDirection                     K2Node_ComponentBoundEvent_PreviousDirection;      // 0x0D19(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D1A[0x6];                                      // 0x0D1A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UMarinerGameUserSettings*               CallFunc_GetUserSettings_ReturnValue;              // 0x0D20(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_17;              // 0x0D28(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetVibrationEnabled_ReturnValue;          // 0x0D29(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAuthority_ReturnValue_18;              // 0x0D2A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D2B[0x5];                                      // 0x0D2B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_CustomEvent_ItemName_2;                     // 0x0D30(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsBuildShipping_ReturnValue;              // 0x0D40(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D41[0x7];                                      // 0x0D41(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_3;              // 0x0D48(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 K2Node_CustomEvent_ItemName_1;                     // 0x0D58(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 K2Node_CustomEvent_ItemName;                       // 0x0D68(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_15;           // 0x0D78(0x0010)(ZeroConstructor, NoDestructor)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue_4;        // 0x0D88(0x0008)(NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const struct FActiveGameplayEffect& Effect, bool* bMatches)> K2Node_CreateDelegate_OutputDelegate_16;           // 0x0D90(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_HasAuthority_ReturnValue_19;              // 0x0DA0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_DA1[0x7];                                      // 0x0DA1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayEffectQuery                   K2Node_MakeStruct_GameplayEffectQuery;             // 0x0DA8(0x0138)(ContainsInstancedReference)
	TArray<struct FActiveGameplayEffectHandle>    CallFunc_GetActiveEffects_ReturnValue;             // 0x0EE0(0x0010)(ZeroConstructor, ReferenceParm)
	struct FActiveGameplayEffectHandle            CallFunc_Array_Get_Item;                           // 0x0EF0(0x0008)(NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0EF8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetActiveGameplayEffectRemainingDuration_ReturnValue; // 0x0EFC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0F00(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F01[0x7];                                      // 0x0F01(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_FloatToString_ReturnValue;           // 0x0F08(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_4;              // 0x0F18(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_1;         // 0x0F28(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_RemoveActiveGameplayEffect_ReturnValue;   // 0x0F29(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsBuildShipping_ReturnValue_1;            // 0x0F2A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsBuildShipping_ReturnValue_2;            // 0x0F2B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAuthority_ReturnValue_20;              // 0x0F2C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F2D[0x3];                                      // 0x0F2D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerState*                           K2Node_CustomEvent_PlayerStateToView_1;            // 0x0F30(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerState*                           K2Node_CustomEvent_PlayerStateToView;              // 0x0F38(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AController*                            CallFunc_GetController_ReturnValue_5;              // 0x0F40(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMarinerPlayerController*               K2Node_DynamicCast_AsMariner_Player_Controller_3;  // 0x0F48(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_10;                    // 0x0F50(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F51[0x7];                                      // 0x0F51(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AMarinerPlayerState*                    K2Node_DynamicCast_AsMariner_Player_State;         // 0x0F58(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_11;                    // 0x0F60(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F61[0x7];                                      // 0x0F61(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AMarinerCharacter*                      CallFunc_TryAndGetControlledCharacter_ReturnValue; // 0x0F68(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMarinerCharacter*                      CallFunc_TryAndGetControlledCharacter_ReturnValue_1; // 0x0F70(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x0F78(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F79[0x7];                                      // 0x0F79(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AViewTargetActor_C*                     CallFunc_GetDebugViewTargetActor_ViewTargetActor;  // 0x0F80(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AViewTargetActor_C*                     CallFunc_GetDebugViewTargetActor_ViewTargetActor_1; // 0x0F88(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_2;    // 0x0F90(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue_12;       // 0x0F91(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EGameplayAwardTypes                           K2Node_CustomEvent_AwardType_1;                    // 0x0F92(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F93[0x1];                                      // 0x0F93(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_CustomEvent_Value_1;                        // 0x0F94(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_StatTotal_1;                    // 0x0F98(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_18;               // 0x0F9C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_17;                // 0x0F9D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F9E[0x2];                                      // 0x0F9E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class AMarinerPlayerState*                    K2Node_DynamicCast_AsMariner_Player_State_1;       // 0x0FA0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_12;                    // 0x0FA8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAuthority_ReturnValue_21;              // 0x0FA9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_FAA[0x2];                                      // 0x0FAA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_5;                   // 0x0FAC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EGameplayAwardTypes                           K2Node_CustomEvent_AwardType;                      // 0x0FB0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_FB1[0x3];                                      // 0x0FB1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_CustomEvent_Value;                          // 0x0FB4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_StatTotal;                      // 0x0FB8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_FBC[0x4];                                      // 0x0FBC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AMarinerFastArenaBounds*>        CallFunc_GetAllActorsOfClass_OutActors;            // 0x0FC0(0x0010)(ZeroConstructor, ReferenceParm)
	class AMarinerFastArenaBounds*                CallFunc_Array_Get_Item_1;                         // 0x0FD0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(TSubclassOf<class UGameplayEffect> GameplayEffect, class AMarinerCharacter* Character, int32 PriorGameplayEffectCount, int32 GameplayEffectLevel)> K2Node_CreateDelegate_OutputDelegate_17;           // 0x0FD8(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(TSubclassOf<class UGameplayEffect> GameplayEffect, class AMarinerCharacter* Character, int32 PriorGameplayEffectCount, int32 GameplayEffectLevel)> K2Node_CreateDelegate_OutputDelegate_18;           // 0x0FE8(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsReturningToArena_ReturnValue;           // 0x0FF8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_FF9[0x3];                                      // 0x0FF9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0FFC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_19;               // 0x1000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue_3;       // 0x1001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_18;                // 0x1002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EMarinerInputActions                          K2Node_CustomEvent_MarinerInputAction_1;           // 0x1003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_19;                // 0x1004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EMarinerInputActions                          K2Node_CustomEvent_MarinerInputAction;             // 0x1005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_20;                // 0x1006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAuthority_ReturnValue_22;              // 0x1007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAuthority_ReturnValue_23;              // 0x1008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1009[0x3];                                     // 0x1009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_5;                  // 0x100C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_5;                 // 0x1010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsBuildShipping_ReturnValue_3;            // 0x1014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue_13;       // 0x1015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1016[0x2];                                     // 0x1016(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable_4;                          // 0x1018(0x0010)(ConstParm, ZeroConstructor, NoDestructor)
	TArray<struct FAkExternalSourceInfo>          Temp_struct_Variable_8;                            // 0x1028(0x0010)(ConstParm, ZeroConstructor, ReferenceParm)
	int32                                         CallFunc_PostAkEvent_ReturnValue_2;                // 0x1038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x103C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_1;       // 0x1040(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_2;           // 0x104C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_VLerp_ReturnValue;                        // 0x1058(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetWorldLocation_SweepHitResult;       // 0x1064(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FVector                                CallFunc_VLerp_ReturnValue_1;                      // 0x10EC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetWorldLocation_SweepHitResult_1;     // 0x10F8(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	TDelegate<void(class AActor* DamagedActor, bool bDamageWasAOE, bool bDamageWasMegablast, TSubclassOf<class UDamageType> DamageType, struct FVector& ImpulseVector, float Damage)> K2Node_CreateDelegate_OutputDelegate_19;           // 0x1180(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(TSubclassOf<class UGameplayEffect> GameplayEffect, class AMarinerCharacter* Character, int32 PriorGameplayEffectCount, int32 GameplayEffectLevel)> K2Node_CreateDelegate_OutputDelegate_20;           // 0x1190(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_20;               // 0x11A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11A1[0x3];                                     // 0x11A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(uint8 JumpCount)>              K2Node_CreateDelegate_OutputDelegate_21;           // 0x11A4(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_NearlyEqual_FloatFloat_ReturnValue;       // 0x11B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CanInputQueueThrowPriorityItem_bCanInputQueue; // 0x11B5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11B6[0x2];                                     // 0x11B6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_CustomEvent_PostLaunchVelocity;             // 0x11B8(0x000C)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bLaunchContainedHostileImpulse; // 0x11C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_bLaunchWasMegablast;            // 0x11C5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11C6[0x2];                                     // 0x11C6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_22;           // 0x11C8(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable_5;                          // 0x11D8(0x0010)(ConstParm, ZeroConstructor, NoDestructor)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue_5;        // 0x11E8(0x0008)(NoDestructor, HasGetValueTypeHash)
	uint8                                         K2Node_CustomEvent_JumpCount;                      // 0x11F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue_14;       // 0x11F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11F2[0x6];                                     // 0x11F2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FAkExternalSourceInfo>          Temp_struct_Variable_9;                            // 0x11F8(0x0010)(ConstParm, ZeroConstructor, ReferenceParm)
	int32                                         CallFunc_PostAkEvent_ReturnValue_3;                // 0x1208(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(bool bTrailActive, struct FVector& CurrentVelocity, bool bMegablasted)> K2Node_CreateDelegate_OutputDelegate_23;           // 0x120C(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_121C[0x4];                                     // 0x121C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AMarinerCharacter*                      K2Node_ComponentBoundEvent_CatchingCharacter;      // 0x1220(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMarinerItemSlot                              K2Node_ComponentBoundEvent_ItemSlot;               // 0x1228(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1229[0x3];                                     // 0x1229(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_6;                   // 0x122C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Enable_1;                       // 0x1230(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1231[0x7];                                     // 0x1231(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AMarinerCharacter*>              CallFunc_GetAllActorsOfClass_OutActors_1;          // 0x1238(0x0010)(ZeroConstructor, ReferenceParm)
	class AMarinerCharacter*                      CallFunc_Array_Get_Item_2;                         // 0x1248(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IMarinerTeamAffiliatedObjectInterface> K2Node_DynamicCast_AsMariner_Team_Affiliated_Object_Interface_2; // 0x1250(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_13;                    // 0x1260(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1261[0x7];                                     // 0x1261(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IMarinerTeamAffiliatedObjectInterface> K2Node_DynamicCast_AsMariner_Team_Affiliated_Object_Interface_3; // 0x1268(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_14;                    // 0x1278(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1279[0x3];                                     // 0x1279(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetTeamIndex_ReturnValue_3;               // 0x127C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetTeamIndex_ReturnValue_4;               // 0x1280(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_DoesImplementInterface_ReturnValue_2;     // 0x1284(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1285[0x3];                                     // 0x1285(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_GetController_ReturnValue_6;              // 0x1288(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_DoesImplementInterface_ReturnValue_3;     // 0x1290(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1291[0x7];                                     // 0x1291(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AMarinerPlayerController*               K2Node_DynamicCast_AsMariner_Player_Controller_4;  // 0x1298(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_15;                    // 0x12A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_21;                // 0x12A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12A2[0x2];                                     // 0x12A2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x12A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x12A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_Enable;                         // 0x12A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_ItemActivationTypes                         K2Node_CustomEvent_ItemUseType;                    // 0x12AA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12AB[0x5];                                     // 0x12AB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue_3;            // 0x12B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_ItemActivationTypes                         K2Node_Event_ItemUseType;                          // 0x12B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12B9[0x7];                                     // 0x12B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class ICharacterAnimationInterface_C> K2Node_DynamicCast_AsCharacter_Animation_Interface_1; // 0x12C0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_16;                    // 0x12D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12D1[0x7];                                     // 0x12D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AMarinerCharacter*                      K2Node_CustomEvent_CatchingCharacter;              // 0x12D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMarinerItemSlot                              K2Node_CustomEvent_ItemSlot_1;                     // 0x12E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12E1[0x3];                                     // 0x12E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class AMarinerCharacter* CatchingCharacter, EMarinerItemSlot ItemSlot)> K2Node_CreateDelegate_OutputDelegate_24;           // 0x12E4(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x12F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12F5[0x3];                                     // 0x12F5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(struct FVector& CurrentVelocity, bool bMegablasted)> K2Node_CreateDelegate_OutputDelegate_25;           // 0x12F8(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsIndependentCharacter_ReturnValue;       // 0x1308(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsIndependentCharacter_ReturnValue_1;     // 0x1309(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_22;                // 0x130A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_23;                // 0x130B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_130C[0x4];                                     // 0x130C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_CustomEvent_Reality_1;                      // 0x1310(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchString_CmpSuccess;                    // 0x1320(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1321[0x3];                                     // 0x1321(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_26;           // 0x1324(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(struct FHitResult& BounceHitResult, bool bBouncingWhileMegablasted)> K2Node_CreateDelegate_OutputDelegate_27;           // 0x1334(0x0010)(ZeroConstructor, NoDestructor)
	ECharacterStance                              Temp_byte_Variable_1;                              // 0x1344(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsBuildShipping_ReturnValue_4;            // 0x1345(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EMarinerRealityState                          K2Node_CustomEvent_Reality;                        // 0x1346(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsReturningToArena_ReturnValue_1;         // 0x1347(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue_15;       // 0x1348(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_21;               // 0x1349(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_134A[0x6];                                     // 0x134A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x1350(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetPlayerName_ReturnValue;                // 0x1360(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_5;              // 0x1370(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 K2Node_CustomEvent_soundname_6;                    // 0x1380(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_6;              // 0x1390(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_7;              // 0x13A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_8;              // 0x13B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsBuildShipping_ReturnValue_5;            // 0x13C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_13C1[0x7];                                     // 0x13C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_9;              // 0x13C8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_10;             // 0x13D8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsBuildShipping_ReturnValue_6;            // 0x13E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsBuildShipping_ReturnValue_7;            // 0x13E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_13EA[0x6];                                     // 0x13EA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_CustomEvent_soundname_5;                    // 0x13F0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bLoop_2;                        // 0x1400(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1401[0x3];                                     // 0x1401(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_CustomEvent_LoopFrequency_4;                // 0x1404(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 K2Node_CustomEvent_soundname_4;                    // 0x1408(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class UAkAudioEvent*                          CallFunc_Map_Find_Value;                           // 0x1418(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x1420(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsBuildShipping_ReturnValue_8;            // 0x1421(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1422[0x6];                                     // 0x1422(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetDisplayName_ReturnValue_1;             // 0x1428(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 K2Node_CustomEvent_soundname_3;                    // 0x1438(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bLoop_1;                        // 0x1448(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1449[0x3];                                     // 0x1449(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_CustomEvent_LoopFrequency_3;                // 0x144C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_11;             // 0x1450(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 K2Node_CustomEvent_soundname_2;                    // 0x1460(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bLoop;                          // 0x1470(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1471[0x3];                                     // 0x1471(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_CustomEvent_LoopFrequency_2;                // 0x1474(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 K2Node_CustomEvent_soundname_1;                    // 0x1478(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_LoopFrequency_1;                // 0x1488(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_148C[0x4];                                     // 0x148C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue_6;        // 0x1490(0x0008)(NoDestructor, HasGetValueTypeHash)
	class FString                                 K2Node_CustomEvent_soundname;                      // 0x1498(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_LoopFrequency;                  // 0x14A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14AC[0x4];                                     // 0x14AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UAkAudioEvent*>                  CallFunc_Map_Values_Values;                        // 0x14B0(0x0010)(ZeroConstructor, ReferenceParm)
	class UAkAudioEvent*                          CallFunc_Array_Get_Item_3;                         // 0x14C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetDisplayName_ReturnValue_2;             // 0x14C8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TArray<class FString>                         CallFunc_Map_Keys_Keys;                            // 0x14D8(0x0010)(ZeroConstructor, ReferenceParm)
	bool                                          Temp_bool_Variable_3;                              // 0x14E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_14E9[0x7];                                     // 0x14E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Array_Get_Item_4;                         // 0x14F0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_12;             // 0x1500(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x1510(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1514[0x4];                                     // 0x1514(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_13;             // 0x1518(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x1528(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1529[0x7];                                     // 0x1529(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_14;             // 0x1530(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_6;                  // 0x1540(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1544[0x4];                                     // 0x1544(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMeshComponent*                   CallFunc_GetOrCreateDebugSoundShape_DebugSoundShape; // 0x1548(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_6;                 // 0x1550(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1554[0x4];                                     // 0x1554(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMeshComponent*                   CallFunc_GetOrCreateDebugSoundShape_DebugSoundShape_1; // 0x1558(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   CallFunc_GetOrCreateDebugSoundShape_DebugSoundShape_2; // 0x1560(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        CallFunc_GetOrCreateDebugSoundHolder_DebugSoundHolder; // 0x1568(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   CallFunc_GetOrCreateDebugSoundShape_DebugSoundShape_3; // 0x1570(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_AttachToComponent_ReturnValue;         // 0x1578(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1579[0x3];                                     // 0x1579(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x157C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_PostEventAtLocation_ReturnValue_1;        // 0x1588(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x158C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_158D[0x3];                                     // 0x158D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetScaledCapsuleRadius_ReturnValue;       // 0x1590(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetScaledCapsuleHalfHeight_ReturnValue;   // 0x1594(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x1598(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_1;             // 0x159C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECharacterStance                              Temp_byte_Variable_2;                              // 0x15A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15A1[0x7];                                     // 0x15A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AMarinerCharacter*                      K2Node_CustomEvent_ThrowingCharacter;              // 0x15A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMarinerItemSlot                              K2Node_CustomEvent_ItemSlot;                       // 0x15B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue_16;       // 0x15B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15B2[0x6];                                     // 0x15B2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_CustomEvent_Character_1;                    // 0x15B8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 K2Node_CustomEvent_Number_1;                       // 0x15C8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 K2Node_CustomEvent_Character;                      // 0x15D8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 K2Node_CustomEvent_Number;                         // 0x15E8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsBuildShipping_ReturnValue_9;            // 0x15F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15F9[0x7];                                     // 0x15F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue_4;            // 0x1600(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class ICharacterAnimationInterface_C> K2Node_DynamicCast_AsCharacter_Animation_Interface_2; // 0x1608(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_17;                    // 0x1618(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_DoesImplementInterface_ReturnValue_4;     // 0x1619(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue_17;       // 0x161A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAuthority_ReturnValue_24;              // 0x161B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsBuildShipping_ReturnValue_10;           // 0x161C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsBuildShipping_ReturnValue_11;           // 0x161D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsBuildShipping_ReturnValue_12;           // 0x161E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_Suppress;                       // 0x161F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class FString                                 CallFunc_GetDisplayName_ReturnValue_3;             // 0x1620(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetDisplayName_ReturnValue_4;             // 0x1630(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_15;             // 0x1640(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_16;             // 0x1650(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue_18;       // 0x1660(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1661[0x7];                                     // 0x1661(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AMarinerCharacter*>              CallFunc_GetAllActorsOfClass_OutActors_2;          // 0x1668(0x0010)(ZeroConstructor, ReferenceParm)
	class AMarinerCharacter*                      CallFunc_Array_Get_Item_5;                         // 0x1678(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x1680(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_3;                // 0x1684(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1685[0x3];                                     // 0x1685(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AMarinerCharacter*>              CallFunc_GetAllActorsOfClass_OutActors_3;          // 0x1688(0x0010)(ZeroConstructor, ReferenceParm)
	class AMarinerCharacter*                      CallFunc_Array_Get_Item_6;                         // 0x1698(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_4;               // 0x16A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_4;                // 0x16A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_16A5[0x3];                                     // 0x16A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_InputAxisEvent_AxisValue_1;                 // 0x16A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_PostEvent_ReturnValue;                    // 0x16AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_2;         // 0x16B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_16B1[0x3];                                     // 0x16B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_InputAxisEvent_AxisValue;                   // 0x16B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_3;         // 0x16B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_22;               // 0x16B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_24;                // 0x16BA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_23;               // 0x16BB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_25;                // 0x16BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_24;               // 0x16BD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_26;                // 0x16BE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue_19;       // 0x16BF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAuthority_ReturnValue_25;              // 0x16C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAuthority_ReturnValue_26;              // 0x16C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetDodgeReplicationTrigger_ReturnValue;   // 0x16C2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_16C3[0x1];                                     // 0x16C3(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDodgeData                             K2Node_MakeStruct_DodgeData;                       // 0x16C4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_AbilityActivated;               // 0x16D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_16D1[0x3];                                     // 0x16D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetGameTimeInSeconds_ReturnValue;         // 0x16D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetGameTimeInSeconds_ReturnValue_1;       // 0x16D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetGameTimeInSeconds_ReturnValue_2;       // 0x16DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x16E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue_20;       // 0x16E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_25;               // 0x16E5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_16E6[0x2];                                     // 0x16E6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBlendableInterface>   CallFunc_AddOrUpdateBlendable_InBlendableObject_CastInput_6; // 0x16E8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_27;                // 0x16F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_16F9[0x3];                                     // 0x16F9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Conv_BoolToFloat_ReturnValue;             // 0x16FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_BoolToFloat_ReturnValue_1;           // 0x1700(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_BoolToFloat_ReturnValue_2;           // 0x1704(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NearlyEqual_FloatFloat_ReturnValue_1;     // 0x1708(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1709[0x7];                                     // 0x1709(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBlendableInterface>   CallFunc_AddOrUpdateBlendable_InBlendableObject_CastInput_7; // 0x1710(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ECharacterStance                              Temp_byte_Variable_3;                              // 0x1720(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1721[0x3];                                     // 0x1721(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_FInterpTo_ReturnValue;                    // 0x1724(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x1728(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_172C[0x4];                                     // 0x172C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EItemBoxTypes>                         CallFunc_DebugGetFullValidItemTypeArray_ValidItemArray; // 0x1730(0x0010)(ZeroConstructor, ReferenceParm)
	bool                                          Temp_bool_Variable_4;                              // 0x1740(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EItemBoxTypes                                 CallFunc_Array_Get_Item_7;                         // 0x1741(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1742[0x6];                                     // 0x1742(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue; // 0x1748(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	ECharacterStance                              K2Node_Select_Default_2;                           // 0x1758(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1759[0x7];                                     // 0x1759(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_17;             // 0x1760(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	ECharacterStance                              K2Node_Select_Default_3;                           // 0x1770(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1771[0x3];                                     // 0x1771(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_5;               // 0x1774(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_5;                // 0x1778(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1779[0x3];                                     // 0x1779(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_2;        // 0x177C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetActorLocation_SweepHitResult;       // 0x1788(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorLocation_ReturnValue;          // 0x1810(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1811[0x3];                                     // 0x1811(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_CustomEvent_X;                              // 0x1814(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_Y;                              // 0x1818(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_Z;                              // 0x181C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_Pitch_1;                        // 0x1820(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_Yaw_1;                          // 0x1824(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_Roll_1;                         // 0x1828(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x182C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetActorLocation_SweepHitResult_1;     // 0x1838(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorLocation_ReturnValue_1;        // 0x18C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_18C1[0x7];                                     // 0x18C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_GetController_ReturnValue_7;              // 0x18C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_GetControlRotation_ReturnValue;           // 0x18D0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         K2Node_CustomEvent_Pitch;                          // 0x18DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_Yaw;                            // 0x18E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_Roll;                           // 0x18E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AController*                            CallFunc_GetController_ReturnValue_8;              // 0x18E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x18F0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAuthority_ReturnValue_27;              // 0x18FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue_21;       // 0x18FD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_18FE[0x2];                                     // 0x18FE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AMarinerCharacter*>              CallFunc_GetAllActorsOfClass_OutActors_4;          // 0x1900(0x0010)(ZeroConstructor, ReferenceParm)
	class AMarinerCharacter*                      CallFunc_Array_Get_Item_8;                         // 0x1910(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_6;               // 0x1918(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_191C[0x4];                                     // 0x191C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IMarinerTeamAffiliatedObjectInterface> K2Node_DynamicCast_AsMariner_Team_Affiliated_Object_Interface_4; // 0x1920(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_18;                    // 0x1930(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_6;                // 0x1931(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1932[0x2];                                     // 0x1932(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetTeamIndex_ReturnValue_5;               // 0x1934(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_28;                // 0x1938(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_DoesImplementInterface_ReturnValue_5;     // 0x1939(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_193A[0x6];                                     // 0x193A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_GetController_ReturnValue_9;              // 0x1940(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_28;              // 0x1948(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1949[0x7];                                     // 0x1949(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IMarinerTeamAffiliatedObjectInterface> K2Node_DynamicCast_AsMariner_Team_Affiliated_Object_Interface_5; // 0x1950(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_19;                    // 0x1960(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_DoesImplementInterface_ReturnValue_6;     // 0x1961(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1962[0x2];                                     // 0x1962(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetTeamIndex_ReturnValue_6;               // 0x1964(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_29;                // 0x1968(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1969[0x3];                                     // 0x1969(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetActorEyesViewPoint_OutLocation;        // 0x196C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_GetActorEyesViewPoint_OutRotation;        // 0x1978(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Conv_RotatorToVector_ReturnValue;         // 0x1984(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_3;        // 0x1990(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue_2;                     // 0x199C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsBuildShipping_ReturnValue_13;           // 0x19A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19A9[0x3];                                     // 0x19A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_MakeHitResult_ReturnValue;                // 0x19AC(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	uint8                                         Pad_1A34[0x4];                                     // 0x1A34(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_InputActionEvent_Key_9;                     // 0x1A38(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x1A50(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A51[0x7];                                     // 0x1A51(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_InputActionEvent_Key_10;                    // 0x1A58(0x0018)(HasGetValueTypeHash)
	class UClass*                                 K2Node_Event_GameplayEffect_1;                     // 0x1A70(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_PriorGameplayEffectCount_1;           // 0x1A78(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_GameplayEffectLevel_1;                // 0x1A7C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_28;           // 0x1A80(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_EqualEqual_ClassClass_ReturnValue_1;      // 0x1A90(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A91[0x7];                                     // 0x1A91(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 K2Node_Event_GameplayEffect;                       // 0x1A98(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_PriorGameplayEffectCount;             // 0x1AA0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_GameplayEffectLevel;                  // 0x1AA4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ClassClass_ReturnValue_2;      // 0x1AA8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1AA9[0x3];                                     // 0x1AA9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_29;           // 0x1AAC(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_1ABC[0x4];                                     // 0x1ABC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue_7;        // 0x1AC0(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_29;              // 0x1AC8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetActiveInputType_IsGamepadActive;       // 0x1AC9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1ACA[0x2];                                     // 0x1ACA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FActiveGameplayEffectHandle            CallFunc_BP_ApplyGameplayEffectToSelf_ReturnValue_4; // 0x1ACC(0x0008)(NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1AD4[0x4];                                     // 0x1AD4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AMarinerBasePlayerController*           CallFunc_TryAndGetLocalPlayerController_ReturnValue_1; // 0x1AD8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsIndependentCharacter_ReturnValue_2;     // 0x1AE0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_30;                // 0x1AE1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1AE2[0x6];                                     // 0x1AE2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystemComponent*               CallFunc_SpawnEmitterAttached_ReturnValue;         // 0x1AE8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_PostAkEvent_ReturnValue_4;                // 0x1AF0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue_22;       // 0x1AF4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1AF5[0x3];                                     // 0x1AF5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_GetController_ReturnValue_10;             // 0x1AF8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMarinerPlayerController*               K2Node_DynamicCast_AsMariner_Player_Controller_5;  // 0x1B00(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_20;                    // 0x1B08(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1B09[0x3];                                     // 0x1B09(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetTimeSeconds_ReturnValue;               // 0x1B0C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x1B10(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x1B14(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanInputQueueThrowPriorityItem_bCanInputQueue_1; // 0x1B18(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1B19[0x3];                                     // 0x1B19(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_Event_StatName;                             // 0x1B1C(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_Value;                                // 0x1B24(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bGiveGameplayAward;                   // 0x1B28(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1B29[0x3];                                     // 0x1B29(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetStatValue_ReturnValue;                 // 0x1B2C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EGameplayAwardTypes                           CallFunc_GetGameplayAwardTypeFromStat_AwardType;   // 0x1B30(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter) == 0x000010, "Wrong alignment on BaseCharacter_C_ExecuteUbergraph_BaseCharacter");
static_assert(sizeof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter) == 0x001B40, "Wrong size on BaseCharacter_C_ExecuteUbergraph_BaseCharacter");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, EntryPoint) == 0x000000, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::EntryPoint' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, Temp_int_Variable) == 0x000004, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000018, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, Temp_int_Variable_1) == 0x00001C, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, Temp_struct_Variable) == 0x000020, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000030, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_NotEqual_IntInt_ReturnValue_1) == 0x000031, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_NotEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_BooleanAND_ReturnValue) == 0x000032, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, Temp_delegate_Variable) == 0x000034, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::Temp_delegate_Variable' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_BooleanAND_ReturnValue_1) == 0x000044, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, K2Node_CreateDelegate_OutputDelegate_1) == 0x000048, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000058, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_Conv_VectorToString_ReturnValue) == 0x000060, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_Conv_VectorToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_Concat_StrStr_ReturnValue) == 0x000070, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_Conv_RotatorToString_ReturnValue) == 0x000080, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_Conv_RotatorToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000090, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, Temp_struct_Variable_1) == 0x0000A0, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, Temp_delegate_Variable_1) == 0x0000B0, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::Temp_delegate_Variable_1' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_HasAuthority_ReturnValue) == 0x0000C0, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, K2Node_CreateDelegate_OutputDelegate_2) == 0x0000C4, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_HasAuthority_ReturnValue_1) == 0x0000D4, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_HasAuthority_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_HasAuthority_ReturnValue_2) == 0x0000D5, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_HasAuthority_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, K2Node_Event_Enabled) == 0x0000D6, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::K2Node_Event_Enabled' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, K2Node_Event_Hit) == 0x0000D8, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::K2Node_Event_Hit' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_GetController_ReturnValue) == 0x000160, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, K2Node_DynamicCast_AsPlayer_Controller) == 0x000168, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::K2Node_DynamicCast_AsPlayer_Controller' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, K2Node_DynamicCast_bSuccess) == 0x000170, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_GetVelocity_ReturnValue) == 0x000174, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_GetVelocity_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_BreakVector_X) == 0x000180, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_BreakVector_Y) == 0x000184, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_BreakVector_Z) == 0x000188, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_Less_FloatFloat_ReturnValue) == 0x00018C, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, K2Node_ComponentBoundEvent_StealingCharacter) == 0x000190, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::K2Node_ComponentBoundEvent_StealingCharacter' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, K2Node_ComponentBoundEvent_VictimCharacter) == 0x000198, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::K2Node_ComponentBoundEvent_VictimCharacter' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, K2Node_ComponentBoundEvent_ItemSlot_1) == 0x0001A0, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::K2Node_ComponentBoundEvent_ItemSlot_1' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_GetController_ReturnValue_1) == 0x0001A8, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_GetController_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, K2Node_DynamicCast_AsMariner_Player_Controller) == 0x0001B0, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::K2Node_DynamicCast_AsMariner_Player_Controller' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, K2Node_DynamicCast_bSuccess_1) == 0x0001B8, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_GetController_ReturnValue_2) == 0x0001C0, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_GetController_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, K2Node_DynamicCast_AsMariner_Player_Controller_1) == 0x0001C8, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::K2Node_DynamicCast_AsMariner_Player_Controller_1' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, K2Node_DynamicCast_bSuccess_2) == 0x0001D0, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, K2Node_CustomEvent_InputDI) == 0x0001D4, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::K2Node_CustomEvent_InputDI' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, K2Node_CustomEvent_DIRotation) == 0x0001D8, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::K2Node_CustomEvent_DIRotation' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, Temp_int_Variable_2) == 0x0001E4, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, Temp_int_Loop_Counter_Variable) == 0x0001E8, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_Add_IntInt_ReturnValue) == 0x0001EC, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_NotEqual_IntInt_ReturnValue_2) == 0x0001F0, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_NotEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_GetActorForwardVector_ReturnValue) == 0x0001F4, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_GetActorForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_Normal_ReturnValue) == 0x000200, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_GreaterGreater_VectorRotator_ReturnValue) == 0x00020C, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_GreaterGreater_VectorRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, K2Node_Event_NewController) == 0x000218, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::K2Node_Event_NewController' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, K2Node_CreateDelegate_OutputDelegate_3) == 0x000220, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, K2Node_Event_Damage) == 0x000230, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::K2Node_Event_Damage' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, K2Node_Event_DamageType) == 0x000238, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::K2Node_Event_DamageType' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, K2Node_Event_InstigatedBy) == 0x000240, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::K2Node_Event_InstigatedBy' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, K2Node_Event_DamageCauser) == 0x000248, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::K2Node_Event_DamageCauser' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_Normal_ReturnValue_1) == 0x000250, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_Normal_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, K2Node_DynamicCast_AsMariner_Team_Affiliated_Object_Interface) == 0x000260, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::K2Node_DynamicCast_AsMariner_Team_Affiliated_Object_Interface' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, K2Node_DynamicCast_bSuccess_3) == 0x000270, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000274, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_GetTeamIndex_ReturnValue) == 0x000280, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_GetTeamIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_MakeRotFromX_ReturnValue) == 0x000284, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_MakeRotFromX_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_DoesImplementInterface_ReturnValue) == 0x000290, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_DoesImplementInterface_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, K2Node_CustomEvent_RecoveredCharacter) == 0x000298, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::K2Node_CustomEvent_RecoveredCharacter' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, K2Node_CustomEvent_Suppress_2) == 0x0002A0, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::K2Node_CustomEvent_Suppress_2' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, K2Node_CustomEvent_WhoSetME_1) == 0x0002A8, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::K2Node_CustomEvent_WhoSetME_1' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_IsMegablasted_ReturnValue) == 0x0002B8, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_IsMegablasted_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_SetSuppressionTags_ReturnValue) == 0x0002B9, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_SetSuppressionTags_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, K2Node_CustomEvent_Suppress_1) == 0x0002BA, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::K2Node_CustomEvent_Suppress_1' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, K2Node_CustomEvent_WhoSetME) == 0x0002C0, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::K2Node_CustomEvent_WhoSetME' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_SetSuppressionTags_ReturnValue_1) == 0x0002D0, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_SetSuppressionTags_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, K2Node_CreateDelegate_OutputDelegate_4) == 0x0002D4, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, Temp_int_Array_Index_Variable) == 0x0002E4, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, K2Node_CustomEvent_Ability_1) == 0x0002E8, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::K2Node_CustomEvent_Ability_1' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, K2Node_CustomEvent_FailTags_1) == 0x0002F0, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::K2Node_CustomEvent_FailTags_1' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_IsLocallyControlled_ReturnValue) == 0x000310, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_IsLocallyControlled_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, K2Node_CustomEvent_Ability) == 0x000318, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::K2Node_CustomEvent_Ability' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, K2Node_CustomEvent_FailTags) == 0x000320, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::K2Node_CustomEvent_FailTags' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_BP_ApplyGameplayEffectToSelf_ReturnValue) == 0x000340, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_BP_ApplyGameplayEffectToSelf_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, Temp_int_Array_Index_Variable_1) == 0x000348, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, K2Node_InputKeyEvent_Key) == 0x000350, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::K2Node_InputKeyEvent_Key' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_GetController_ReturnValue_3) == 0x000368, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_GetController_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, K2Node_DynamicCast_AsMariner_Base_Player_Controller) == 0x000370, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::K2Node_DynamicCast_AsMariner_Base_Player_Controller' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, K2Node_DynamicCast_bSuccess_4) == 0x000378, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_PlayCameraShake_ReturnValue) == 0x000380, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_PlayCameraShake_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, K2Node_DynamicCast_AsMariner_Team_Affiliated_Object_Interface_1) == 0x000388, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::K2Node_DynamicCast_AsMariner_Team_Affiliated_Object_Interface_1' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, K2Node_DynamicCast_bSuccess_5) == 0x000398, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_DoesImplementInterface_ReturnValue_1) == 0x000399, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_DoesImplementInterface_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_GetTeamIndex_ReturnValue_1) == 0x00039C, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_GetTeamIndex_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_BooleanAND_ReturnValue_2) == 0x0003A0, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, Temp_bool_True_if_break_was_hit_Variable) == 0x0003A1, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_Not_PreBool_ReturnValue) == 0x0003A2, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, K2Node_CustomEvent_IncreasedCombo) == 0x0003A3, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::K2Node_CustomEvent_IncreasedCombo' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_HasAuthority_ReturnValue_3) == 0x0003A4, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_HasAuthority_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_IsLocallyControlled_ReturnValue_1) == 0x0003A5, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_IsLocallyControlled_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, Temp_int_Variable_3) == 0x0003A8, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::Temp_int_Variable_3' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x0003AC, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_NotEqual_IntInt_ReturnValue_3) == 0x0003AD, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_NotEqual_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_BooleanAND_ReturnValue_3) == 0x0003AE, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, K2Node_Event_PrevMovementMode) == 0x0003AF, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::K2Node_Event_PrevMovementMode' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, K2Node_Event_NewMovementMode) == 0x0003B0, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::K2Node_Event_NewMovementMode' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, K2Node_Event_PrevCustomMode) == 0x0003B1, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::K2Node_Event_PrevCustomMode' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, K2Node_Event_NewCustomMode) == 0x0003B2, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::K2Node_Event_NewCustomMode' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_BooleanAND_ReturnValue_4) == 0x0003B3, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_BooleanAND_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0003B4, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_GetController_ReturnValue_4) == 0x0003B8, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_GetController_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, K2Node_DynamicCast_AsMariner_Character_Movement) == 0x0003C0, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::K2Node_DynamicCast_AsMariner_Character_Movement' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, K2Node_DynamicCast_bSuccess_6) == 0x0003C8, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::K2Node_DynamicCast_bSuccess_6' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, K2Node_DynamicCast_AsMariner_Player_Controller_2) == 0x0003D0, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::K2Node_DynamicCast_AsMariner_Player_Controller_2' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, K2Node_DynamicCast_bSuccess_7) == 0x0003D8, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::K2Node_DynamicCast_bSuccess_7' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_K2_SetWorldRotation_SweepHitResult) == 0x0003DC, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_K2_SetWorldRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, Temp_int_Loop_Counter_Variable_1) == 0x000464, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_Add_IntInt_ReturnValue_1) == 0x000468, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_HasAuthority_ReturnValue_4) == 0x00046C, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_HasAuthority_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, Temp_int_Array_Index_Variable_2) == 0x000470, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, K2Node_CustomEvent_BounceHitResult) == 0x000474, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::K2Node_CustomEvent_BounceHitResult' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, K2Node_CustomEvent_bBouncingWhileMegablasted) == 0x0004FC, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::K2Node_CustomEvent_bBouncingWhileMegablasted' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, K2Node_CustomEvent_BounceDirection) == 0x000500, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::K2Node_CustomEvent_BounceDirection' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_BreakHitResult_bBlockingHit) == 0x00050C, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_BreakHitResult_bInitialOverlap) == 0x00050D, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_BreakHitResult_Time) == 0x000510, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_BreakHitResult_Distance) == 0x000514, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_BreakHitResult_Location) == 0x000518, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_BreakHitResult_ImpactPoint) == 0x000524, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_BreakHitResult_Normal) == 0x000530, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_BreakHitResult_ImpactNormal) == 0x00053C, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_BreakHitResult_PhysMat) == 0x000548, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_BreakHitResult_HitActor) == 0x000550, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_BreakHitResult_HitComponent) == 0x000558, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_BreakHitResult_HitBoneName) == 0x000560, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_BreakHitResult_HitItem) == 0x000568, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_BreakHitResult_FaceIndex) == 0x00056C, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_BreakHitResult_TraceStart) == 0x000570, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_BreakHitResult_TraceEnd) == 0x00057C, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_BreakVector_X_1) == 0x000588, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_BreakVector_Y_1) == 0x00058C, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_BreakVector_Z_1) == 0x000590, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_MakeVector_ReturnValue) == 0x000594, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, K2Node_MakeStruct_Vector_NetQuantizeNormal) == 0x0005A0, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::K2Node_MakeStruct_Vector_NetQuantizeNormal' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, K2Node_CustomEvent_CurrentVelocity_1) == 0x0005AC, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::K2Node_CustomEvent_CurrentVelocity_1' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, K2Node_CustomEvent_bMegablasted_1) == 0x0005B8, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::K2Node_CustomEvent_bMegablasted_1' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_IsMegablasted_ReturnValue_1) == 0x0005B9, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_IsMegablasted_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_VSize_ReturnValue) == 0x0005BC, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_Not_PreBool_ReturnValue_1) == 0x0005C0, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_Less_FloatFloat_ReturnValue_1) == 0x0005C1, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_Less_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, K2Node_CustomEvent_bTrailActive) == 0x0005C2, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::K2Node_CustomEvent_bTrailActive' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, K2Node_CustomEvent_CurrentVelocity) == 0x0005C4, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::K2Node_CustomEvent_CurrentVelocity' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, K2Node_CustomEvent_bMegablasted) == 0x0005D0, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::K2Node_CustomEvent_bMegablasted' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, K2Node_InputKeyEvent_Key_1) == 0x0005D8, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::K2Node_InputKeyEvent_Key_1' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, K2Node_ComponentBoundEvent_RelevantDamageableComponent_1) == 0x0005F0, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::K2Node_ComponentBoundEvent_RelevantDamageableComponent_1' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, K2Node_ComponentBoundEvent_NewAmount) == 0x0005F8, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::K2Node_ComponentBoundEvent_NewAmount' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, K2Node_ComponentBoundEvent_OldAmount) == 0x0005FC, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::K2Node_ComponentBoundEvent_OldAmount' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000600, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_LessEqual_FloatFloat_ReturnValue_1) == 0x000601, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_LessEqual_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_LessEqual_FloatFloat_ReturnValue_2) == 0x000602, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_LessEqual_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, Temp_string_Variable) == 0x000608, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::Temp_string_Variable' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000618, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_Not_PreBool_ReturnValue_2) == 0x000619, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, Temp_string_Variable_1) == 0x000620, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::Temp_string_Variable_1' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, Temp_bool_Variable) == 0x000630, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, Temp_int_Loop_Counter_Variable_2) == 0x000634, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, K2Node_Select_Default) == 0x000638, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_Concat_StrStr_ReturnValue_2) == 0x000648, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_Add_IntInt_ReturnValue_2) == 0x000658, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, K2Node_ComponentBoundEvent_RelevantDamageableComponent) == 0x000660, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::K2Node_ComponentBoundEvent_RelevantDamageableComponent' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, K2Node_ComponentBoundEvent_MegablastInstigator) == 0x000668, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::K2Node_ComponentBoundEvent_MegablastInstigator' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, K2Node_ComponentBoundEvent_bEnteredState) == 0x000670, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::K2Node_ComponentBoundEvent_bEnteredState' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_GetDangerThreshold_Threshold) == 0x000674, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_GetDangerThreshold_Threshold' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x000678, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_Less_FloatFloat_ReturnValue_2) == 0x000679, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_Less_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_Not_PreBool_ReturnValue_3) == 0x00067A, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_Not_PreBool_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_Not_PreBool_ReturnValue_4) == 0x00067B, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_Not_PreBool_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_BooleanAND_ReturnValue_5) == 0x00067C, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_BooleanAND_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_BooleanAND_ReturnValue_6) == 0x00067D, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_BooleanAND_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, K2Node_CustomEvent_DamagedActor_1) == 0x000680, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::K2Node_CustomEvent_DamagedActor_1' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, K2Node_CustomEvent_Damage_1) == 0x000688, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::K2Node_CustomEvent_Damage_1' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, K2Node_CustomEvent_DamageType_1) == 0x000690, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::K2Node_CustomEvent_DamageType_1' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, K2Node_CustomEvent_InstigatedBy) == 0x000698, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::K2Node_CustomEvent_InstigatedBy' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, K2Node_CustomEvent_DamageCauser) == 0x0006A0, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::K2Node_CustomEvent_DamageCauser' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_HandleShieldItemDamage_IsShieldDepleted) == 0x0006A8, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_HandleShieldItemDamage_IsShieldDepleted' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, K2Node_CustomEvent_ShieldHealth) == 0x0006AC, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::K2Node_CustomEvent_ShieldHealth' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_BP_ApplyGameplayEffectToSelf_ReturnValue_1) == 0x0006B0, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_BP_ApplyGameplayEffectToSelf_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, Temp_delegate_Variable_2) == 0x0006B8, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::Temp_delegate_Variable_2' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, K2Node_CreateDelegate_OutputDelegate_5) == 0x0006C8, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::K2Node_CreateDelegate_OutputDelegate_5' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, Temp_struct_Variable_2) == 0x0006D8, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::Temp_struct_Variable_2' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_PostAkEvent_ReturnValue) == 0x0006E8, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_PostAkEvent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_BP_ApplyGameplayEffectToSelf_ReturnValue_2) == 0x0006EC, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_BP_ApplyGameplayEffectToSelf_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_HasAuthority_ReturnValue_5) == 0x0006F4, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_HasAuthority_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_BP_ApplyGameplayEffectToSelf_ReturnValue_3) == 0x0006F8, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_BP_ApplyGameplayEffectToSelf_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, Temp_int_Array_Index_Variable_3) == 0x000700, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::Temp_int_Array_Index_Variable_3' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_GetAnimInstance_ReturnValue) == 0x000708, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_GetCurrentActiveMontage_ReturnValue) == 0x000710, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_GetCurrentActiveMontage_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_GetAnimInstance_ReturnValue_1) == 0x000718, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_GetAnimInstance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_GetCurrentActiveMontage_ReturnValue_1) == 0x000720, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_GetCurrentActiveMontage_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, K2Node_InputActionEvent_Key) == 0x000728, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::K2Node_InputActionEvent_Key' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_IsValid_ReturnValue) == 0x000740, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, Temp_struct_Variable_3) == 0x000748, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::Temp_struct_Variable_3' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, K2Node_InputActionEvent_Key_1) == 0x000760, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::K2Node_InputActionEvent_Key_1' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, Temp_delegate_Variable_3) == 0x000778, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::Temp_delegate_Variable_3' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, Temp_int_Loop_Counter_Variable_3) == 0x000788, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::Temp_int_Loop_Counter_Variable_3' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, K2Node_CustomEvent_JumpCount_1) == 0x00078C, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::K2Node_CustomEvent_JumpCount_1' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_Add_IntInt_ReturnValue_3) == 0x000790, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_IsLocallyControlled_ReturnValue_2) == 0x000794, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_IsLocallyControlled_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, K2Node_CustomEvent_GameplayEffect_2) == 0x000798, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::K2Node_CustomEvent_GameplayEffect_2' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, K2Node_CustomEvent_Character_6) == 0x0007A0, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::K2Node_CustomEvent_Character_6' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, K2Node_CustomEvent_PriorGameplayEffectCount_2) == 0x0007A8, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::K2Node_CustomEvent_PriorGameplayEffectCount_2' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, K2Node_CustomEvent_GameplayEffectLevel_2) == 0x0007AC, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::K2Node_CustomEvent_GameplayEffectLevel_2' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, K2Node_CustomEvent_DamagedActor) == 0x0007B0, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::K2Node_CustomEvent_DamagedActor' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, K2Node_CustomEvent_bDamageWasAOE) == 0x0007B8, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::K2Node_CustomEvent_bDamageWasAOE' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, K2Node_CustomEvent_bDamageWasMegablast) == 0x0007B9, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::K2Node_CustomEvent_bDamageWasMegablast' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, K2Node_CustomEvent_DamageType) == 0x0007C0, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::K2Node_CustomEvent_DamageType' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, K2Node_CustomEvent_ImpulseVector) == 0x0007C8, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::K2Node_CustomEvent_ImpulseVector' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, K2Node_CustomEvent_Damage) == 0x0007D4, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::K2Node_CustomEvent_Damage' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, Temp_struct_Variable_4) == 0x0007D8, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::Temp_struct_Variable_4' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_HasAuthority_ReturnValue_6) == 0x0007E8, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_HasAuthority_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, K2Node_CreateDelegate_OutputDelegate_6) == 0x0007EC, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::K2Node_CreateDelegate_OutputDelegate_6' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, Temp_int_Array_Index_Variable_4) == 0x0007FC, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::Temp_int_Array_Index_Variable_4' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_K2_SetTimerDelegate_ReturnValue_1) == 0x000800, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_K2_SetTimerDelegate_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, K2Node_InputActionEvent_Key_2) == 0x000808, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::K2Node_InputActionEvent_Key_2' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_PostAkEvent_ReturnValue_1) == 0x000820, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_PostAkEvent_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, K2Node_CustomEvent_GameplayEffect_1) == 0x000828, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::K2Node_CustomEvent_GameplayEffect_1' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, K2Node_CustomEvent_Character_5) == 0x000830, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::K2Node_CustomEvent_Character_5' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, K2Node_CustomEvent_PriorGameplayEffectCount_1) == 0x000838, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::K2Node_CustomEvent_PriorGameplayEffectCount_1' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, K2Node_CustomEvent_GameplayEffectLevel_1) == 0x00083C, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::K2Node_CustomEvent_GameplayEffectLevel_1' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_EqualEqual_ClassClass_ReturnValue) == 0x000840, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_EqualEqual_ClassClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_IsValid_ReturnValue_1) == 0x000841, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, K2Node_CustomEvent_GameplayEffect) == 0x000848, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::K2Node_CustomEvent_GameplayEffect' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, K2Node_CustomEvent_Character_4) == 0x000850, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::K2Node_CustomEvent_Character_4' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, K2Node_CustomEvent_PriorGameplayEffectCount) == 0x000858, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::K2Node_CustomEvent_PriorGameplayEffectCount' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, K2Node_CustomEvent_GameplayEffectLevel) == 0x00085C, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::K2Node_CustomEvent_GameplayEffectLevel' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, Temp_int_Variable_4) == 0x000860, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::Temp_int_Variable_4' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_NotEqual_IntInt_ReturnValue_4) == 0x000864, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_NotEqual_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, K2Node_CustomEvent_Character_3) == 0x000868, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::K2Node_CustomEvent_Character_3' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, K2Node_CustomEvent_GameplayTag_1) == 0x000870, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::K2Node_CustomEvent_GameplayTag_1' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_HandleGameplayTagApplication_TagHandled) == 0x000878, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_HandleGameplayTagApplication_TagHandled' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_HandleArtifactTagApplication_TagHandled) == 0x000879, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_HandleArtifactTagApplication_TagHandled' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, K2Node_CustomEvent_Character_2) == 0x000880, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::K2Node_CustomEvent_Character_2' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, K2Node_CustomEvent_GameplayTag) == 0x000888, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::K2Node_CustomEvent_GameplayTag' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_Not_PreBool_ReturnValue_5) == 0x000890, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_Not_PreBool_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_HandleGameplayTagRemoval_TagHandled) == 0x000891, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_HandleGameplayTagRemoval_TagHandled' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_HandleArtifactTagRemoval_TagHandled) == 0x000892, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_HandleArtifactTagRemoval_TagHandled' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_Not_PreBool_ReturnValue_6) == 0x000893, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_Not_PreBool_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000894, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_EqualEqual_ObjectObject_ReturnValue_1) == 0x000895, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_EqualEqual_ObjectObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, K2Node_CreateDelegate_OutputDelegate_7) == 0x000898, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::K2Node_CreateDelegate_OutputDelegate_7' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, K2Node_CreateDelegate_OutputDelegate_8) == 0x0008A8, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::K2Node_CreateDelegate_OutputDelegate_8' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, Temp_int_Variable_5) == 0x0008B8, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::Temp_int_Variable_5' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_EqualEqual_IntInt_ReturnValue_2) == 0x0008BC, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_EqualEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_NotEqual_IntInt_ReturnValue_5) == 0x0008BD, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_NotEqual_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_BooleanAND_ReturnValue_7) == 0x0008BE, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_BooleanAND_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_BooleanAND_ReturnValue_8) == 0x0008BF, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_BooleanAND_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_AddOrUpdateBlendable_InBlendableObject_CastInput) == 0x0008C0, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_AddOrUpdateBlendable_InBlendableObject_CastInput' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_AddOrUpdateBlendable_InBlendableObject_CastInput_1) == 0x0008D0, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_AddOrUpdateBlendable_InBlendableObject_CastInput_1' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_AddOrUpdateBlendable_InBlendableObject_CastInput_2) == 0x0008E0, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_AddOrUpdateBlendable_InBlendableObject_CastInput_2' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_AddOrUpdateBlendable_InBlendableObject_CastInput_3) == 0x0008F0, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_AddOrUpdateBlendable_InBlendableObject_CastInput_3' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, K2Node_CreateDelegate_OutputDelegate_9) == 0x000900, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::K2Node_CreateDelegate_OutputDelegate_9' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_K2_SetTimerDelegate_ReturnValue_2) == 0x000910, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_K2_SetTimerDelegate_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, Temp_int_Variable_6) == 0x000918, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::Temp_int_Variable_6' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, Temp_int_Variable_7) == 0x00091C, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::Temp_int_Variable_7' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, Temp_int_Variable_8) == 0x000920, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::Temp_int_Variable_8' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, K2Node_Event_KnockOutInstigator) == 0x000928, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::K2Node_Event_KnockOutInstigator' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, K2Node_Event_KnockOutDirection_1) == 0x000930, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::K2Node_Event_KnockOutDirection_1' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_K2_GetActorLocation_ReturnValue) == 0x00093C, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_PostEventAtLocation_ReturnValue) == 0x000948, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_PostEventAtLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, Temp_int_Loop_Counter_Variable_4) == 0x00094C, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::Temp_int_Loop_Counter_Variable_4' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_HasAuthority_ReturnValue_7) == 0x000950, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_HasAuthority_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_Add_IntInt_ReturnValue_4) == 0x000954, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_Add_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, K2Node_Event_MegablastInstigator) == 0x000958, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::K2Node_Event_MegablastInstigator' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, K2Node_Event_KnockOutDirection) == 0x000960, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::K2Node_Event_KnockOutDirection' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, K2Node_CustomEvent_KnockoutInstigator) == 0x000970, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::K2Node_CustomEvent_KnockoutInstigator' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, K2Node_CustomEvent_bWasMegablast) == 0x000978, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::K2Node_CustomEvent_bWasMegablast' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, K2Node_CustomEvent_KnockoutDir) == 0x00097C, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::K2Node_CustomEvent_KnockoutDir' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, Temp_int_Variable_9) == 0x000988, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::Temp_int_Variable_9' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x00098C, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, Temp_byte_Variable) == 0x000990, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_K2_SetRelativeLocation_SweepHitResult) == 0x000994, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_K2_SetRelativeLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, K2Node_CreateDelegate_OutputDelegate_10) == 0x000A1C, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::K2Node_CreateDelegate_OutputDelegate_10' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_GetTransform_ReturnValue) == 0x000A30, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_K2_SetTimerDelegate_ReturnValue_3) == 0x000A60, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_K2_SetTimerDelegate_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_HasAuthority_ReturnValue_8) == 0x000A68, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_HasAuthority_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_HasAuthority_ReturnValue_9) == 0x000A69, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_HasAuthority_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_K2_SetRelativeLocation_SweepHitResult_1) == 0x000A6C, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_K2_SetRelativeLocation_SweepHitResult_1' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000AF4, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_TransformLocation_ReturnValue) == 0x000B00, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_TransformLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_HasAuthority_ReturnValue_10) == 0x000B0C, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_HasAuthority_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, Temp_bool_Variable_1) == 0x000B0D, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_Add_VectorVector_ReturnValue) == 0x000B10, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_Not_PreBool_ReturnValue_7) == 0x000B1C, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_Not_PreBool_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_HasAuthority_ReturnValue_11) == 0x000B1D, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_HasAuthority_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, Temp_bool_Variable_2) == 0x000B1E, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_Not_PreBool_ReturnValue_8) == 0x000B1F, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_Not_PreBool_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_HasAuthority_ReturnValue_12) == 0x000B20, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_HasAuthority_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, K2Node_CreateDelegate_OutputDelegate_11) == 0x000B24, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::K2Node_CreateDelegate_OutputDelegate_11' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_HandleArtifactTagApplication_TagHandled_1) == 0x000B34, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_HandleArtifactTagApplication_TagHandled_1' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_HasAuthority_ReturnValue_13) == 0x000B35, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_HasAuthority_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_AddOrUpdateBlendable_InBlendableObject_CastInput_4) == 0x000B38, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_AddOrUpdateBlendable_InBlendableObject_CastInput_4' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_AddOrUpdateBlendable_InBlendableObject_CastInput_5) == 0x000B48, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_AddOrUpdateBlendable_InBlendableObject_CastInput_5' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_IsLocallyControlled_ReturnValue_3) == 0x000B58, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_IsLocallyControlled_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_Not_PreBool_ReturnValue_9) == 0x000B59, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_Not_PreBool_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_IsLocallyControlled_ReturnValue_4) == 0x000B5A, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_IsLocallyControlled_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_BooleanAND_ReturnValue_9) == 0x000B5B, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_BooleanAND_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_Not_PreBool_ReturnValue_10) == 0x000B5C, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_Not_PreBool_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_BooleanAND_ReturnValue_10) == 0x000B5D, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_BooleanAND_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, K2Node_CreateDelegate_OutputDelegate_12) == 0x000B60, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::K2Node_CreateDelegate_OutputDelegate_12' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_IsLocallyControlled_ReturnValue_5) == 0x000B70, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_IsLocallyControlled_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, Temp_struct_Variable_5) == 0x000B78, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::Temp_struct_Variable_5' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_Not_PreBool_ReturnValue_11) == 0x000B90, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_Not_PreBool_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_IsLocallyControlled_ReturnValue_6) == 0x000B91, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_IsLocallyControlled_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_BooleanAND_ReturnValue_11) == 0x000B92, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_BooleanAND_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_Not_PreBool_ReturnValue_12) == 0x000B93, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_Not_PreBool_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, K2Node_InputActionEvent_Key_3) == 0x000B98, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::K2Node_InputActionEvent_Key_3' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_BooleanAND_ReturnValue_12) == 0x000BB0, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_BooleanAND_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_IsLocallyControlled_ReturnValue_7) == 0x000BB1, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_IsLocallyControlled_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_IsLocallyControlled_ReturnValue_8) == 0x000BB2, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_IsLocallyControlled_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_Not_PreBool_ReturnValue_13) == 0x000BB3, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_Not_PreBool_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_BooleanAND_ReturnValue_13) == 0x000BB4, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_BooleanAND_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_Not_PreBool_ReturnValue_14) == 0x000BB5, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_Not_PreBool_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_BooleanAND_ReturnValue_14) == 0x000BB6, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_BooleanAND_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, K2Node_InputActionEvent_Key_4) == 0x000BB8, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::K2Node_InputActionEvent_Key_4' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_IsLocallyControlled_ReturnValue_9) == 0x000BD0, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_IsLocallyControlled_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_Not_PreBool_ReturnValue_15) == 0x000BD1, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_Not_PreBool_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_BooleanAND_ReturnValue_15) == 0x000BD2, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_BooleanAND_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_GetGameState_ReturnValue) == 0x000BD8, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, K2Node_DynamicCast_AsBP_Mariner_Game_State) == 0x000BE0, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::K2Node_DynamicCast_AsBP_Mariner_Game_State' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, K2Node_DynamicCast_bSuccess_8) == 0x000BE8, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::K2Node_DynamicCast_bSuccess_8' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, K2Node_CustomEvent_IsEnabled_1) == 0x000BE9, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::K2Node_CustomEvent_IsEnabled_1' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_Not_PreBool_ReturnValue_16) == 0x000BEA, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_Not_PreBool_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_IsLocallyControlled_ReturnValue_10) == 0x000BEB, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_IsLocallyControlled_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_IsValid_ReturnValue_2) == 0x000BEC, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_IsValid_ReturnValue_3) == 0x000BED, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, K2Node_CustomEvent_IsEnabled) == 0x000BEE, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::K2Node_CustomEvent_IsEnabled' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, K2Node_CustomEvent_SpawnProtectionDuration) == 0x000BF0, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::K2Node_CustomEvent_SpawnProtectionDuration' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000BF4, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, Temp_struct_Variable_6) == 0x000BF8, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::Temp_struct_Variable_6' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, K2Node_InputActionEvent_Key_5) == 0x000C10, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::K2Node_InputActionEvent_Key_5' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, K2Node_InputActionEvent_Key_6) == 0x000C28, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::K2Node_InputActionEvent_Key_6' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_TryAndGetLocalPlayerController_ReturnValue) == 0x000C40, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_TryAndGetLocalPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, Temp_struct_Variable_7) == 0x000C48, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::Temp_struct_Variable_7' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_IsValid_ReturnValue_4) == 0x000C60, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, K2Node_InputActionEvent_Key_7) == 0x000C68, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::K2Node_InputActionEvent_Key_7' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, K2Node_InputActionEvent_Key_8) == 0x000C80, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::K2Node_InputActionEvent_Key_8' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, K2Node_CreateDelegate_OutputDelegate_13) == 0x000C98, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::K2Node_CreateDelegate_OutputDelegate_13' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_HasAuthority_ReturnValue_14) == 0x000CA8, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_HasAuthority_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, K2Node_CreateDelegate_OutputDelegate_14) == 0x000CAC, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::K2Node_CreateDelegate_OutputDelegate_14' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_HasAuthority_ReturnValue_15) == 0x000CBC, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_HasAuthority_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, K2Node_CustomEvent_RelevantDamageableComponent) == 0x000CC0, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::K2Node_CustomEvent_RelevantDamageableComponent' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, K2Node_CustomEvent_CharacterExpectingMegablast) == 0x000CC8, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::K2Node_CustomEvent_CharacterExpectingMegablast' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, K2Node_Event_DeltaSeconds) == 0x000CD0, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_GetTeamIndex_ReturnValue_2) == 0x000CD4, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_GetTeamIndex_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_TryAndGetHostilityRelativeToLocalPlayer_ReturnValue) == 0x000CD8, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_TryAndGetHostilityRelativeToLocalPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, K2Node_Select_Default_1) == 0x000CDC, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_IsLocallyControlled_ReturnValue_11) == 0x000CE0, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_IsLocallyControlled_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_Not_PreBool_ReturnValue_17) == 0x000CE1, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_Not_PreBool_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_HasAuthority_ReturnValue_16) == 0x000CE2, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_HasAuthority_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_BooleanAND_ReturnValue_16) == 0x000CE3, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_BooleanAND_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_GetAnimInstance_ReturnValue_2) == 0x000CE8, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_GetAnimInstance_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, K2Node_Event_DodgeDirection) == 0x000CF0, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::K2Node_Event_DodgeDirection' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, K2Node_Event_DodgeDuration) == 0x000CF4, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::K2Node_Event_DodgeDuration' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, K2Node_DynamicCast_AsCharacter_Animation_Interface) == 0x000CF8, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::K2Node_DynamicCast_AsCharacter_Animation_Interface' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, K2Node_DynamicCast_bSuccess_9) == 0x000D08, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::K2Node_DynamicCast_bSuccess_9' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_Add_VectorVector_ReturnValue_1) == 0x000D0C, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, K2Node_ComponentBoundEvent_NewDirection) == 0x000D18, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::K2Node_ComponentBoundEvent_NewDirection' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, K2Node_ComponentBoundEvent_PreviousDirection) == 0x000D19, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::K2Node_ComponentBoundEvent_PreviousDirection' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_GetUserSettings_ReturnValue) == 0x000D20, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_GetUserSettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_HasAuthority_ReturnValue_17) == 0x000D28, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_HasAuthority_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_GetVibrationEnabled_ReturnValue) == 0x000D29, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_GetVibrationEnabled_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_HasAuthority_ReturnValue_18) == 0x000D2A, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_HasAuthority_ReturnValue_18' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, K2Node_CustomEvent_ItemName_2) == 0x000D30, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::K2Node_CustomEvent_ItemName_2' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_IsBuildShipping_ReturnValue) == 0x000D40, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_IsBuildShipping_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_Concat_StrStr_ReturnValue_3) == 0x000D48, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_Concat_StrStr_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, K2Node_CustomEvent_ItemName_1) == 0x000D58, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::K2Node_CustomEvent_ItemName_1' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, K2Node_CustomEvent_ItemName) == 0x000D68, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::K2Node_CustomEvent_ItemName' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, K2Node_CreateDelegate_OutputDelegate_15) == 0x000D78, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::K2Node_CreateDelegate_OutputDelegate_15' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_K2_SetTimerDelegate_ReturnValue_4) == 0x000D88, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_K2_SetTimerDelegate_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, K2Node_CreateDelegate_OutputDelegate_16) == 0x000D90, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::K2Node_CreateDelegate_OutputDelegate_16' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_HasAuthority_ReturnValue_19) == 0x000DA0, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_HasAuthority_ReturnValue_19' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, K2Node_MakeStruct_GameplayEffectQuery) == 0x000DA8, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::K2Node_MakeStruct_GameplayEffectQuery' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_GetActiveEffects_ReturnValue) == 0x000EE0, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_GetActiveEffects_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_Array_Get_Item) == 0x000EF0, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_Array_Length_ReturnValue) == 0x000EF8, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_GetActiveGameplayEffectRemainingDuration_ReturnValue) == 0x000EFC, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_GetActiveGameplayEffectRemainingDuration_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_Less_IntInt_ReturnValue) == 0x000F00, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_Conv_FloatToString_ReturnValue) == 0x000F08, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_Conv_FloatToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_Concat_StrStr_ReturnValue_4) == 0x000F18, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_Concat_StrStr_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_Greater_FloatFloat_ReturnValue_1) == 0x000F28, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_Greater_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_RemoveActiveGameplayEffect_ReturnValue) == 0x000F29, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_RemoveActiveGameplayEffect_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_IsBuildShipping_ReturnValue_1) == 0x000F2A, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_IsBuildShipping_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_IsBuildShipping_ReturnValue_2) == 0x000F2B, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_IsBuildShipping_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_HasAuthority_ReturnValue_20) == 0x000F2C, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_HasAuthority_ReturnValue_20' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, K2Node_CustomEvent_PlayerStateToView_1) == 0x000F30, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::K2Node_CustomEvent_PlayerStateToView_1' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, K2Node_CustomEvent_PlayerStateToView) == 0x000F38, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::K2Node_CustomEvent_PlayerStateToView' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_GetController_ReturnValue_5) == 0x000F40, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_GetController_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, K2Node_DynamicCast_AsMariner_Player_Controller_3) == 0x000F48, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::K2Node_DynamicCast_AsMariner_Player_Controller_3' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, K2Node_DynamicCast_bSuccess_10) == 0x000F50, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::K2Node_DynamicCast_bSuccess_10' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, K2Node_DynamicCast_AsMariner_Player_State) == 0x000F58, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::K2Node_DynamicCast_AsMariner_Player_State' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, K2Node_DynamicCast_bSuccess_11) == 0x000F60, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::K2Node_DynamicCast_bSuccess_11' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_TryAndGetControlledCharacter_ReturnValue) == 0x000F68, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_TryAndGetControlledCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_TryAndGetControlledCharacter_ReturnValue_1) == 0x000F70, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_TryAndGetControlledCharacter_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_IsValid_ReturnValue_5) == 0x000F78, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_GetDebugViewTargetActor_ViewTargetActor) == 0x000F80, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_GetDebugViewTargetActor_ViewTargetActor' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_GetDebugViewTargetActor_ViewTargetActor_1) == 0x000F88, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_GetDebugViewTargetActor_ViewTargetActor_1' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_EqualEqual_ObjectObject_ReturnValue_2) == 0x000F90, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_EqualEqual_ObjectObject_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_IsLocallyControlled_ReturnValue_12) == 0x000F91, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_IsLocallyControlled_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, K2Node_CustomEvent_AwardType_1) == 0x000F92, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::K2Node_CustomEvent_AwardType_1' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, K2Node_CustomEvent_Value_1) == 0x000F94, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::K2Node_CustomEvent_Value_1' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, K2Node_CustomEvent_StatTotal_1) == 0x000F98, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::K2Node_CustomEvent_StatTotal_1' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_Not_PreBool_ReturnValue_18) == 0x000F9C, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_Not_PreBool_ReturnValue_18' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_BooleanAND_ReturnValue_17) == 0x000F9D, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_BooleanAND_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, K2Node_DynamicCast_AsMariner_Player_State_1) == 0x000FA0, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::K2Node_DynamicCast_AsMariner_Player_State_1' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, K2Node_DynamicCast_bSuccess_12) == 0x000FA8, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::K2Node_DynamicCast_bSuccess_12' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_HasAuthority_ReturnValue_21) == 0x000FA9, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_HasAuthority_ReturnValue_21' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, Temp_int_Array_Index_Variable_5) == 0x000FAC, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::Temp_int_Array_Index_Variable_5' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, K2Node_CustomEvent_AwardType) == 0x000FB0, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::K2Node_CustomEvent_AwardType' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, K2Node_CustomEvent_Value) == 0x000FB4, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::K2Node_CustomEvent_Value' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, K2Node_CustomEvent_StatTotal) == 0x000FB8, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::K2Node_CustomEvent_StatTotal' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_GetAllActorsOfClass_OutActors) == 0x000FC0, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_Array_Get_Item_1) == 0x000FD0, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, K2Node_CreateDelegate_OutputDelegate_17) == 0x000FD8, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::K2Node_CreateDelegate_OutputDelegate_17' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, K2Node_CreateDelegate_OutputDelegate_18) == 0x000FE8, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::K2Node_CreateDelegate_OutputDelegate_18' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_IsReturningToArena_ReturnValue) == 0x000FF8, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_IsReturningToArena_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000FFC, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_Not_PreBool_ReturnValue_19) == 0x001000, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_Not_PreBool_ReturnValue_19' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_LessEqual_FloatFloat_ReturnValue_3) == 0x001001, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_LessEqual_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_BooleanAND_ReturnValue_18) == 0x001002, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_BooleanAND_ReturnValue_18' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, K2Node_CustomEvent_MarinerInputAction_1) == 0x001003, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::K2Node_CustomEvent_MarinerInputAction_1' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_BooleanAND_ReturnValue_19) == 0x001004, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_BooleanAND_ReturnValue_19' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, K2Node_CustomEvent_MarinerInputAction) == 0x001005, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::K2Node_CustomEvent_MarinerInputAction' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_BooleanAND_ReturnValue_20) == 0x001006, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_BooleanAND_ReturnValue_20' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_HasAuthority_ReturnValue_22) == 0x001007, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_HasAuthority_ReturnValue_22' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_HasAuthority_ReturnValue_23) == 0x001008, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_HasAuthority_ReturnValue_23' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, Temp_int_Loop_Counter_Variable_5) == 0x00100C, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::Temp_int_Loop_Counter_Variable_5' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_Add_IntInt_ReturnValue_5) == 0x001010, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_Add_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_IsBuildShipping_ReturnValue_3) == 0x001014, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_IsBuildShipping_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_IsLocallyControlled_ReturnValue_13) == 0x001015, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_IsLocallyControlled_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, Temp_delegate_Variable_4) == 0x001018, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::Temp_delegate_Variable_4' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, Temp_struct_Variable_8) == 0x001028, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::Temp_struct_Variable_8' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_PostAkEvent_ReturnValue_2) == 0x001038, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_PostAkEvent_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x00103C, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_Multiply_VectorFloat_ReturnValue_1) == 0x001040, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_Multiply_VectorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_Add_VectorVector_ReturnValue_2) == 0x00104C, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_Add_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_VLerp_ReturnValue) == 0x001058, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_VLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_K2_SetWorldLocation_SweepHitResult) == 0x001064, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_K2_SetWorldLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_VLerp_ReturnValue_1) == 0x0010EC, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_VLerp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_K2_SetWorldLocation_SweepHitResult_1) == 0x0010F8, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_K2_SetWorldLocation_SweepHitResult_1' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, K2Node_CreateDelegate_OutputDelegate_19) == 0x001180, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::K2Node_CreateDelegate_OutputDelegate_19' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, K2Node_CreateDelegate_OutputDelegate_20) == 0x001190, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::K2Node_CreateDelegate_OutputDelegate_20' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_Not_PreBool_ReturnValue_20) == 0x0011A0, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_Not_PreBool_ReturnValue_20' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, K2Node_CreateDelegate_OutputDelegate_21) == 0x0011A4, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::K2Node_CreateDelegate_OutputDelegate_21' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_NearlyEqual_FloatFloat_ReturnValue) == 0x0011B4, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_NearlyEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_CanInputQueueThrowPriorityItem_bCanInputQueue) == 0x0011B5, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_CanInputQueueThrowPriorityItem_bCanInputQueue' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, K2Node_CustomEvent_PostLaunchVelocity) == 0x0011B8, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::K2Node_CustomEvent_PostLaunchVelocity' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, K2Node_CustomEvent_bLaunchContainedHostileImpulse) == 0x0011C4, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::K2Node_CustomEvent_bLaunchContainedHostileImpulse' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, K2Node_CustomEvent_bLaunchWasMegablast) == 0x0011C5, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::K2Node_CustomEvent_bLaunchWasMegablast' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, K2Node_CreateDelegate_OutputDelegate_22) == 0x0011C8, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::K2Node_CreateDelegate_OutputDelegate_22' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, Temp_delegate_Variable_5) == 0x0011D8, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::Temp_delegate_Variable_5' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_K2_SetTimerDelegate_ReturnValue_5) == 0x0011E8, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_K2_SetTimerDelegate_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, K2Node_CustomEvent_JumpCount) == 0x0011F0, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::K2Node_CustomEvent_JumpCount' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_IsLocallyControlled_ReturnValue_14) == 0x0011F1, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_IsLocallyControlled_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, Temp_struct_Variable_9) == 0x0011F8, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::Temp_struct_Variable_9' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_PostAkEvent_ReturnValue_3) == 0x001208, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_PostAkEvent_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, K2Node_CreateDelegate_OutputDelegate_23) == 0x00120C, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::K2Node_CreateDelegate_OutputDelegate_23' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, K2Node_ComponentBoundEvent_CatchingCharacter) == 0x001220, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::K2Node_ComponentBoundEvent_CatchingCharacter' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, K2Node_ComponentBoundEvent_ItemSlot) == 0x001228, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::K2Node_ComponentBoundEvent_ItemSlot' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, Temp_int_Array_Index_Variable_6) == 0x00122C, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::Temp_int_Array_Index_Variable_6' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, K2Node_CustomEvent_Enable_1) == 0x001230, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::K2Node_CustomEvent_Enable_1' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_GetAllActorsOfClass_OutActors_1) == 0x001238, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_GetAllActorsOfClass_OutActors_1' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_Array_Get_Item_2) == 0x001248, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, K2Node_DynamicCast_AsMariner_Team_Affiliated_Object_Interface_2) == 0x001250, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::K2Node_DynamicCast_AsMariner_Team_Affiliated_Object_Interface_2' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, K2Node_DynamicCast_bSuccess_13) == 0x001260, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::K2Node_DynamicCast_bSuccess_13' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, K2Node_DynamicCast_AsMariner_Team_Affiliated_Object_Interface_3) == 0x001268, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::K2Node_DynamicCast_AsMariner_Team_Affiliated_Object_Interface_3' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, K2Node_DynamicCast_bSuccess_14) == 0x001278, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::K2Node_DynamicCast_bSuccess_14' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_GetTeamIndex_ReturnValue_3) == 0x00127C, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_GetTeamIndex_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_GetTeamIndex_ReturnValue_4) == 0x001280, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_GetTeamIndex_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_DoesImplementInterface_ReturnValue_2) == 0x001284, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_DoesImplementInterface_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_GetController_ReturnValue_6) == 0x001288, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_GetController_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_DoesImplementInterface_ReturnValue_3) == 0x001290, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_DoesImplementInterface_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, K2Node_DynamicCast_AsMariner_Player_Controller_4) == 0x001298, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::K2Node_DynamicCast_AsMariner_Player_Controller_4' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, K2Node_DynamicCast_bSuccess_15) == 0x0012A0, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::K2Node_DynamicCast_bSuccess_15' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_BooleanAND_ReturnValue_21) == 0x0012A1, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_BooleanAND_ReturnValue_21' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_Array_Length_ReturnValue_1) == 0x0012A4, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_Less_IntInt_ReturnValue_1) == 0x0012A8, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, K2Node_CustomEvent_Enable) == 0x0012A9, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::K2Node_CustomEvent_Enable' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, K2Node_CustomEvent_ItemUseType) == 0x0012AA, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::K2Node_CustomEvent_ItemUseType' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_GetAnimInstance_ReturnValue_3) == 0x0012B0, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_GetAnimInstance_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, K2Node_Event_ItemUseType) == 0x0012B8, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::K2Node_Event_ItemUseType' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, K2Node_DynamicCast_AsCharacter_Animation_Interface_1) == 0x0012C0, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::K2Node_DynamicCast_AsCharacter_Animation_Interface_1' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, K2Node_DynamicCast_bSuccess_16) == 0x0012D0, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::K2Node_DynamicCast_bSuccess_16' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, K2Node_CustomEvent_CatchingCharacter) == 0x0012D8, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::K2Node_CustomEvent_CatchingCharacter' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, K2Node_CustomEvent_ItemSlot_1) == 0x0012E0, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::K2Node_CustomEvent_ItemSlot_1' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, K2Node_CreateDelegate_OutputDelegate_24) == 0x0012E4, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::K2Node_CreateDelegate_OutputDelegate_24' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x0012F4, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, K2Node_CreateDelegate_OutputDelegate_25) == 0x0012F8, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::K2Node_CreateDelegate_OutputDelegate_25' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_IsIndependentCharacter_ReturnValue) == 0x001308, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_IsIndependentCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_IsIndependentCharacter_ReturnValue_1) == 0x001309, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_IsIndependentCharacter_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_BooleanAND_ReturnValue_22) == 0x00130A, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_BooleanAND_ReturnValue_22' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_BooleanAND_ReturnValue_23) == 0x00130B, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_BooleanAND_ReturnValue_23' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, K2Node_CustomEvent_Reality_1) == 0x001310, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::K2Node_CustomEvent_Reality_1' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, K2Node_SwitchString_CmpSuccess) == 0x001320, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::K2Node_SwitchString_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, K2Node_CreateDelegate_OutputDelegate_26) == 0x001324, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::K2Node_CreateDelegate_OutputDelegate_26' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, K2Node_CreateDelegate_OutputDelegate_27) == 0x001334, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::K2Node_CreateDelegate_OutputDelegate_27' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, Temp_byte_Variable_1) == 0x001344, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_IsBuildShipping_ReturnValue_4) == 0x001345, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_IsBuildShipping_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, K2Node_CustomEvent_Reality) == 0x001346, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::K2Node_CustomEvent_Reality' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_IsReturningToArena_ReturnValue_1) == 0x001347, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_IsReturningToArena_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_IsLocallyControlled_ReturnValue_15) == 0x001348, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_IsLocallyControlled_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_Not_PreBool_ReturnValue_21) == 0x001349, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_Not_PreBool_ReturnValue_21' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_GetDisplayName_ReturnValue) == 0x001350, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_GetPlayerName_ReturnValue) == 0x001360, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_GetPlayerName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_Concat_StrStr_ReturnValue_5) == 0x001370, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_Concat_StrStr_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, K2Node_CustomEvent_soundname_6) == 0x001380, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::K2Node_CustomEvent_soundname_6' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_Concat_StrStr_ReturnValue_6) == 0x001390, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_Concat_StrStr_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_Concat_StrStr_ReturnValue_7) == 0x0013A0, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_Concat_StrStr_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_Concat_StrStr_ReturnValue_8) == 0x0013B0, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_Concat_StrStr_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_IsBuildShipping_ReturnValue_5) == 0x0013C0, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_IsBuildShipping_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_Concat_StrStr_ReturnValue_9) == 0x0013C8, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_Concat_StrStr_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_Concat_StrStr_ReturnValue_10) == 0x0013D8, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_Concat_StrStr_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_IsBuildShipping_ReturnValue_6) == 0x0013E8, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_IsBuildShipping_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_IsBuildShipping_ReturnValue_7) == 0x0013E9, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_IsBuildShipping_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, K2Node_CustomEvent_soundname_5) == 0x0013F0, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::K2Node_CustomEvent_soundname_5' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, K2Node_CustomEvent_bLoop_2) == 0x001400, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::K2Node_CustomEvent_bLoop_2' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, K2Node_CustomEvent_LoopFrequency_4) == 0x001404, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::K2Node_CustomEvent_LoopFrequency_4' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, K2Node_CustomEvent_soundname_4) == 0x001408, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::K2Node_CustomEvent_soundname_4' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_Map_Find_Value) == 0x001418, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_Map_Find_ReturnValue) == 0x001420, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_IsBuildShipping_ReturnValue_8) == 0x001421, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_IsBuildShipping_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_GetDisplayName_ReturnValue_1) == 0x001428, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_GetDisplayName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, K2Node_CustomEvent_soundname_3) == 0x001438, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::K2Node_CustomEvent_soundname_3' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, K2Node_CustomEvent_bLoop_1) == 0x001448, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::K2Node_CustomEvent_bLoop_1' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, K2Node_CustomEvent_LoopFrequency_3) == 0x00144C, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::K2Node_CustomEvent_LoopFrequency_3' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_Concat_StrStr_ReturnValue_11) == 0x001450, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_Concat_StrStr_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, K2Node_CustomEvent_soundname_2) == 0x001460, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::K2Node_CustomEvent_soundname_2' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, K2Node_CustomEvent_bLoop) == 0x001470, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::K2Node_CustomEvent_bLoop' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, K2Node_CustomEvent_LoopFrequency_2) == 0x001474, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::K2Node_CustomEvent_LoopFrequency_2' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, K2Node_CustomEvent_soundname_1) == 0x001478, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::K2Node_CustomEvent_soundname_1' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, K2Node_CustomEvent_LoopFrequency_1) == 0x001488, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::K2Node_CustomEvent_LoopFrequency_1' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_K2_SetTimerDelegate_ReturnValue_6) == 0x001490, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_K2_SetTimerDelegate_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, K2Node_CustomEvent_soundname) == 0x001498, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::K2Node_CustomEvent_soundname' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, K2Node_CustomEvent_LoopFrequency) == 0x0014A8, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::K2Node_CustomEvent_LoopFrequency' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_Map_Values_Values) == 0x0014B0, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_Map_Values_Values' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_Array_Get_Item_3) == 0x0014C0, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_GetDisplayName_ReturnValue_2) == 0x0014C8, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_GetDisplayName_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_Map_Keys_Keys) == 0x0014D8, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, Temp_bool_Variable_3) == 0x0014E8, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_Array_Get_Item_4) == 0x0014F0, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_Array_Get_Item_4' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_Concat_StrStr_ReturnValue_12) == 0x001500, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_Concat_StrStr_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_Array_Length_ReturnValue_2) == 0x001510, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_Concat_StrStr_ReturnValue_13) == 0x001518, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_Concat_StrStr_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_Less_IntInt_ReturnValue_2) == 0x001528, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_Concat_StrStr_ReturnValue_14) == 0x001530, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_Concat_StrStr_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, Temp_int_Loop_Counter_Variable_6) == 0x001540, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::Temp_int_Loop_Counter_Variable_6' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_GetOrCreateDebugSoundShape_DebugSoundShape) == 0x001548, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_GetOrCreateDebugSoundShape_DebugSoundShape' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_Add_IntInt_ReturnValue_6) == 0x001550, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_Add_IntInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_GetOrCreateDebugSoundShape_DebugSoundShape_1) == 0x001558, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_GetOrCreateDebugSoundShape_DebugSoundShape_1' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_GetOrCreateDebugSoundShape_DebugSoundShape_2) == 0x001560, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_GetOrCreateDebugSoundShape_DebugSoundShape_2' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_GetOrCreateDebugSoundHolder_DebugSoundHolder) == 0x001568, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_GetOrCreateDebugSoundHolder_DebugSoundHolder' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_GetOrCreateDebugSoundShape_DebugSoundShape_3) == 0x001570, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_GetOrCreateDebugSoundShape_DebugSoundShape_3' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_K2_AttachToComponent_ReturnValue) == 0x001578, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_K2_AttachToComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x00157C, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_PostEventAtLocation_ReturnValue_1) == 0x001588, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_PostEventAtLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_BooleanOR_ReturnValue) == 0x00158C, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_GetScaledCapsuleRadius_ReturnValue) == 0x001590, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_GetScaledCapsuleRadius_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_GetScaledCapsuleHalfHeight_ReturnValue) == 0x001594, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_GetScaledCapsuleHalfHeight_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_Add_FloatFloat_ReturnValue) == 0x001598, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_Add_FloatFloat_ReturnValue_1) == 0x00159C, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_Add_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, Temp_byte_Variable_2) == 0x0015A0, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, K2Node_CustomEvent_ThrowingCharacter) == 0x0015A8, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::K2Node_CustomEvent_ThrowingCharacter' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, K2Node_CustomEvent_ItemSlot) == 0x0015B0, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::K2Node_CustomEvent_ItemSlot' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_IsLocallyControlled_ReturnValue_16) == 0x0015B1, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_IsLocallyControlled_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, K2Node_CustomEvent_Character_1) == 0x0015B8, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::K2Node_CustomEvent_Character_1' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, K2Node_CustomEvent_Number_1) == 0x0015C8, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::K2Node_CustomEvent_Number_1' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, K2Node_CustomEvent_Character) == 0x0015D8, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::K2Node_CustomEvent_Character' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, K2Node_CustomEvent_Number) == 0x0015E8, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::K2Node_CustomEvent_Number' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_IsBuildShipping_ReturnValue_9) == 0x0015F8, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_IsBuildShipping_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_GetAnimInstance_ReturnValue_4) == 0x001600, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_GetAnimInstance_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, K2Node_DynamicCast_AsCharacter_Animation_Interface_2) == 0x001608, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::K2Node_DynamicCast_AsCharacter_Animation_Interface_2' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, K2Node_DynamicCast_bSuccess_17) == 0x001618, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::K2Node_DynamicCast_bSuccess_17' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_DoesImplementInterface_ReturnValue_4) == 0x001619, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_DoesImplementInterface_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_IsLocallyControlled_ReturnValue_17) == 0x00161A, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_IsLocallyControlled_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_HasAuthority_ReturnValue_24) == 0x00161B, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_HasAuthority_ReturnValue_24' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_IsBuildShipping_ReturnValue_10) == 0x00161C, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_IsBuildShipping_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_IsBuildShipping_ReturnValue_11) == 0x00161D, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_IsBuildShipping_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_IsBuildShipping_ReturnValue_12) == 0x00161E, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_IsBuildShipping_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, K2Node_CustomEvent_Suppress) == 0x00161F, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::K2Node_CustomEvent_Suppress' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_GetDisplayName_ReturnValue_3) == 0x001620, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_GetDisplayName_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_GetDisplayName_ReturnValue_4) == 0x001630, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_GetDisplayName_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_Concat_StrStr_ReturnValue_15) == 0x001640, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_Concat_StrStr_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_Concat_StrStr_ReturnValue_16) == 0x001650, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_Concat_StrStr_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_IsLocallyControlled_ReturnValue_18) == 0x001660, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_IsLocallyControlled_ReturnValue_18' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_GetAllActorsOfClass_OutActors_2) == 0x001668, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_GetAllActorsOfClass_OutActors_2' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_Array_Get_Item_5) == 0x001678, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_Array_Get_Item_5' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_Array_Length_ReturnValue_3) == 0x001680, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_Less_IntInt_ReturnValue_3) == 0x001684, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_Less_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_GetAllActorsOfClass_OutActors_3) == 0x001688, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_GetAllActorsOfClass_OutActors_3' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_Array_Get_Item_6) == 0x001698, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_Array_Get_Item_6' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_Array_Length_ReturnValue_4) == 0x0016A0, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_Array_Length_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_Less_IntInt_ReturnValue_4) == 0x0016A4, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_Less_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, K2Node_InputAxisEvent_AxisValue_1) == 0x0016A8, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::K2Node_InputAxisEvent_AxisValue_1' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_PostEvent_ReturnValue) == 0x0016AC, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_PostEvent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_Greater_FloatFloat_ReturnValue_2) == 0x0016B0, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_Greater_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, K2Node_InputAxisEvent_AxisValue) == 0x0016B4, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::K2Node_InputAxisEvent_AxisValue' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_Greater_FloatFloat_ReturnValue_3) == 0x0016B8, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_Greater_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_Not_PreBool_ReturnValue_22) == 0x0016B9, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_Not_PreBool_ReturnValue_22' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_BooleanAND_ReturnValue_24) == 0x0016BA, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_BooleanAND_ReturnValue_24' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_Not_PreBool_ReturnValue_23) == 0x0016BB, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_Not_PreBool_ReturnValue_23' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_BooleanAND_ReturnValue_25) == 0x0016BC, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_BooleanAND_ReturnValue_25' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_Not_PreBool_ReturnValue_24) == 0x0016BD, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_Not_PreBool_ReturnValue_24' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_BooleanAND_ReturnValue_26) == 0x0016BE, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_BooleanAND_ReturnValue_26' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_IsLocallyControlled_ReturnValue_19) == 0x0016BF, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_IsLocallyControlled_ReturnValue_19' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_HasAuthority_ReturnValue_25) == 0x0016C0, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_HasAuthority_ReturnValue_25' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_HasAuthority_ReturnValue_26) == 0x0016C1, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_HasAuthority_ReturnValue_26' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_GetDodgeReplicationTrigger_ReturnValue) == 0x0016C2, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_GetDodgeReplicationTrigger_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, K2Node_MakeStruct_DodgeData) == 0x0016C4, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::K2Node_MakeStruct_DodgeData' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, K2Node_CustomEvent_AbilityActivated) == 0x0016D0, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::K2Node_CustomEvent_AbilityActivated' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_GetGameTimeInSeconds_ReturnValue) == 0x0016D4, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_GetGameTimeInSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_GetGameTimeInSeconds_ReturnValue_1) == 0x0016D8, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_GetGameTimeInSeconds_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_GetGameTimeInSeconds_ReturnValue_2) == 0x0016DC, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_GetGameTimeInSeconds_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x0016E0, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_IsLocallyControlled_ReturnValue_20) == 0x0016E4, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_IsLocallyControlled_ReturnValue_20' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_Not_PreBool_ReturnValue_25) == 0x0016E5, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_Not_PreBool_ReturnValue_25' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_AddOrUpdateBlendable_InBlendableObject_CastInput_6) == 0x0016E8, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_AddOrUpdateBlendable_InBlendableObject_CastInput_6' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_BooleanAND_ReturnValue_27) == 0x0016F8, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_BooleanAND_ReturnValue_27' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_Conv_BoolToFloat_ReturnValue) == 0x0016FC, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_Conv_BoolToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_Conv_BoolToFloat_ReturnValue_1) == 0x001700, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_Conv_BoolToFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_Conv_BoolToFloat_ReturnValue_2) == 0x001704, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_Conv_BoolToFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_NearlyEqual_FloatFloat_ReturnValue_1) == 0x001708, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_NearlyEqual_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_AddOrUpdateBlendable_InBlendableObject_CastInput_7) == 0x001710, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_AddOrUpdateBlendable_InBlendableObject_CastInput_7' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, Temp_byte_Variable_3) == 0x001720, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_FInterpTo_ReturnValue) == 0x001724, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_FInterpTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_FClamp_ReturnValue) == 0x001728, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_DebugGetFullValidItemTypeArray_ValidItemArray) == 0x001730, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_DebugGetFullValidItemTypeArray_ValidItemArray' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, Temp_bool_Variable_4) == 0x001740, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::Temp_bool_Variable_4' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_Array_Get_Item_7) == 0x001741, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_Array_Get_Item_7' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue) == 0x001748, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, K2Node_Select_Default_2) == 0x001758, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_Concat_StrStr_ReturnValue_17) == 0x001760, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_Concat_StrStr_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, K2Node_Select_Default_3) == 0x001770, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_Array_Length_ReturnValue_5) == 0x001774, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_Array_Length_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_Less_IntInt_ReturnValue_5) == 0x001778, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_Less_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_K2_GetActorLocation_ReturnValue_2) == 0x00177C, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_K2_GetActorLocation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_K2_SetActorLocation_SweepHitResult) == 0x001788, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_K2_SetActorLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_K2_SetActorLocation_ReturnValue) == 0x001810, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_K2_SetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, K2Node_CustomEvent_X) == 0x001814, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::K2Node_CustomEvent_X' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, K2Node_CustomEvent_Y) == 0x001818, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::K2Node_CustomEvent_Y' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, K2Node_CustomEvent_Z) == 0x00181C, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::K2Node_CustomEvent_Z' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, K2Node_CustomEvent_Pitch_1) == 0x001820, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::K2Node_CustomEvent_Pitch_1' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, K2Node_CustomEvent_Yaw_1) == 0x001824, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::K2Node_CustomEvent_Yaw_1' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, K2Node_CustomEvent_Roll_1) == 0x001828, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::K2Node_CustomEvent_Roll_1' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_MakeVector_ReturnValue_1) == 0x00182C, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_K2_SetActorLocation_SweepHitResult_1) == 0x001838, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_K2_SetActorLocation_SweepHitResult_1' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_K2_SetActorLocation_ReturnValue_1) == 0x0018C0, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_K2_SetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_GetController_ReturnValue_7) == 0x0018C8, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_GetController_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_GetControlRotation_ReturnValue) == 0x0018D0, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_GetControlRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, K2Node_CustomEvent_Pitch) == 0x0018DC, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::K2Node_CustomEvent_Pitch' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, K2Node_CustomEvent_Yaw) == 0x0018E0, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::K2Node_CustomEvent_Yaw' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, K2Node_CustomEvent_Roll) == 0x0018E4, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::K2Node_CustomEvent_Roll' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_GetController_ReturnValue_8) == 0x0018E8, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_GetController_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_MakeRotator_ReturnValue) == 0x0018F0, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_HasAuthority_ReturnValue_27) == 0x0018FC, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_HasAuthority_ReturnValue_27' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_IsLocallyControlled_ReturnValue_21) == 0x0018FD, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_IsLocallyControlled_ReturnValue_21' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_GetAllActorsOfClass_OutActors_4) == 0x001900, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_GetAllActorsOfClass_OutActors_4' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_Array_Get_Item_8) == 0x001910, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_Array_Get_Item_8' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_Array_Length_ReturnValue_6) == 0x001918, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_Array_Length_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, K2Node_DynamicCast_AsMariner_Team_Affiliated_Object_Interface_4) == 0x001920, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::K2Node_DynamicCast_AsMariner_Team_Affiliated_Object_Interface_4' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, K2Node_DynamicCast_bSuccess_18) == 0x001930, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::K2Node_DynamicCast_bSuccess_18' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_Less_IntInt_ReturnValue_6) == 0x001931, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_Less_IntInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_GetTeamIndex_ReturnValue_5) == 0x001934, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_GetTeamIndex_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_BooleanAND_ReturnValue_28) == 0x001938, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_BooleanAND_ReturnValue_28' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_DoesImplementInterface_ReturnValue_5) == 0x001939, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_DoesImplementInterface_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_GetController_ReturnValue_9) == 0x001940, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_GetController_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_HasAuthority_ReturnValue_28) == 0x001948, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_HasAuthority_ReturnValue_28' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, K2Node_DynamicCast_AsMariner_Team_Affiliated_Object_Interface_5) == 0x001950, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::K2Node_DynamicCast_AsMariner_Team_Affiliated_Object_Interface_5' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, K2Node_DynamicCast_bSuccess_19) == 0x001960, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::K2Node_DynamicCast_bSuccess_19' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_DoesImplementInterface_ReturnValue_6) == 0x001961, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_DoesImplementInterface_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_GetTeamIndex_ReturnValue_6) == 0x001964, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_GetTeamIndex_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_BooleanAND_ReturnValue_29) == 0x001968, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_BooleanAND_ReturnValue_29' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_GetActorEyesViewPoint_OutLocation) == 0x00196C, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_GetActorEyesViewPoint_OutLocation' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_GetActorEyesViewPoint_OutRotation) == 0x001978, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_GetActorEyesViewPoint_OutRotation' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_Conv_RotatorToVector_ReturnValue) == 0x001984, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_Conv_RotatorToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_K2_GetActorLocation_ReturnValue_3) == 0x001990, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_K2_GetActorLocation_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_Normal_ReturnValue_2) == 0x00199C, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_Normal_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_IsBuildShipping_ReturnValue_13) == 0x0019A8, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_IsBuildShipping_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_MakeHitResult_ReturnValue) == 0x0019AC, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_MakeHitResult_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, K2Node_InputActionEvent_Key_9) == 0x001A38, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::K2Node_InputActionEvent_Key_9' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_IsDedicatedServer_ReturnValue) == 0x001A50, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, K2Node_InputActionEvent_Key_10) == 0x001A58, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::K2Node_InputActionEvent_Key_10' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, K2Node_Event_GameplayEffect_1) == 0x001A70, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::K2Node_Event_GameplayEffect_1' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, K2Node_Event_PriorGameplayEffectCount_1) == 0x001A78, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::K2Node_Event_PriorGameplayEffectCount_1' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, K2Node_Event_GameplayEffectLevel_1) == 0x001A7C, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::K2Node_Event_GameplayEffectLevel_1' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, K2Node_CreateDelegate_OutputDelegate_28) == 0x001A80, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::K2Node_CreateDelegate_OutputDelegate_28' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_EqualEqual_ClassClass_ReturnValue_1) == 0x001A90, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_EqualEqual_ClassClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, K2Node_Event_GameplayEffect) == 0x001A98, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::K2Node_Event_GameplayEffect' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, K2Node_Event_PriorGameplayEffectCount) == 0x001AA0, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::K2Node_Event_PriorGameplayEffectCount' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, K2Node_Event_GameplayEffectLevel) == 0x001AA4, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::K2Node_Event_GameplayEffectLevel' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_EqualEqual_ClassClass_ReturnValue_2) == 0x001AA8, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_EqualEqual_ClassClass_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, K2Node_CreateDelegate_OutputDelegate_29) == 0x001AAC, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::K2Node_CreateDelegate_OutputDelegate_29' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_K2_SetTimerDelegate_ReturnValue_7) == 0x001AC0, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_K2_SetTimerDelegate_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_HasAuthority_ReturnValue_29) == 0x001AC8, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_HasAuthority_ReturnValue_29' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_GetActiveInputType_IsGamepadActive) == 0x001AC9, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_GetActiveInputType_IsGamepadActive' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_BP_ApplyGameplayEffectToSelf_ReturnValue_4) == 0x001ACC, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_BP_ApplyGameplayEffectToSelf_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_TryAndGetLocalPlayerController_ReturnValue_1) == 0x001AD8, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_TryAndGetLocalPlayerController_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_IsIndependentCharacter_ReturnValue_2) == 0x001AE0, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_IsIndependentCharacter_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_BooleanAND_ReturnValue_30) == 0x001AE1, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_BooleanAND_ReturnValue_30' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_SpawnEmitterAttached_ReturnValue) == 0x001AE8, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_SpawnEmitterAttached_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_PostAkEvent_ReturnValue_4) == 0x001AF0, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_PostAkEvent_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_IsLocallyControlled_ReturnValue_22) == 0x001AF4, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_IsLocallyControlled_ReturnValue_22' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_GetController_ReturnValue_10) == 0x001AF8, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_GetController_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, K2Node_DynamicCast_AsMariner_Player_Controller_5) == 0x001B00, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::K2Node_DynamicCast_AsMariner_Player_Controller_5' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, K2Node_DynamicCast_bSuccess_20) == 0x001B08, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::K2Node_DynamicCast_bSuccess_20' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_GetTimeSeconds_ReturnValue) == 0x001B0C, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_GetTimeSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_Conv_IntToFloat_ReturnValue) == 0x001B10, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_Divide_FloatFloat_ReturnValue) == 0x001B14, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_CanInputQueueThrowPriorityItem_bCanInputQueue_1) == 0x001B18, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_CanInputQueueThrowPriorityItem_bCanInputQueue_1' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, K2Node_Event_StatName) == 0x001B1C, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::K2Node_Event_StatName' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, K2Node_Event_Value) == 0x001B24, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::K2Node_Event_Value' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, K2Node_Event_bGiveGameplayAward) == 0x001B28, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::K2Node_Event_bGiveGameplayAward' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_GetStatValue_ReturnValue) == 0x001B2C, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_GetStatValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ExecuteUbergraph_BaseCharacter, CallFunc_GetGameplayAwardTypeFromStat_AwardType) == 0x001B30, "Member 'BaseCharacter_C_ExecuteUbergraph_BaseCharacter::CallFunc_GetGameplayAwardTypeFromStat_AwardType' has a wrong offset!");

// Function BaseCharacter.BaseCharacter_C.IncrementPlayerStat
// 0x0010 (0x0010 - 0x0000)
struct BaseCharacter_C_IncrementPlayerStat final
{
public:
	class FName                                   StatName;                                          // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Value;                                             // 0x0008(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bGiveGameplayAward;                                // 0x000C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BaseCharacter_C_IncrementPlayerStat) == 0x000004, "Wrong alignment on BaseCharacter_C_IncrementPlayerStat");
static_assert(sizeof(BaseCharacter_C_IncrementPlayerStat) == 0x000010, "Wrong size on BaseCharacter_C_IncrementPlayerStat");
static_assert(offsetof(BaseCharacter_C_IncrementPlayerStat, StatName) == 0x000000, "Member 'BaseCharacter_C_IncrementPlayerStat::StatName' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_IncrementPlayerStat, Value) == 0x000008, "Member 'BaseCharacter_C_IncrementPlayerStat::Value' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_IncrementPlayerStat, bGiveGameplayAward) == 0x00000C, "Member 'BaseCharacter_C_IncrementPlayerStat::bGiveGameplayAward' has a wrong offset!");

// Function BaseCharacter.BaseCharacter_C.BP_OnMoveAffectingGameplayEffectRemoved
// 0x0010 (0x0010 - 0x0000)
struct BaseCharacter_C_BP_OnMoveAffectingGameplayEffectRemoved final
{
public:
	TSubclassOf<class UGameplayEffect>            GameplayEffect;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	int32                                         PriorGameplayEffectCount;                          // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         GameplayEffectLevel;                               // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BaseCharacter_C_BP_OnMoveAffectingGameplayEffectRemoved) == 0x000008, "Wrong alignment on BaseCharacter_C_BP_OnMoveAffectingGameplayEffectRemoved");
static_assert(sizeof(BaseCharacter_C_BP_OnMoveAffectingGameplayEffectRemoved) == 0x000010, "Wrong size on BaseCharacter_C_BP_OnMoveAffectingGameplayEffectRemoved");
static_assert(offsetof(BaseCharacter_C_BP_OnMoveAffectingGameplayEffectRemoved, GameplayEffect) == 0x000000, "Member 'BaseCharacter_C_BP_OnMoveAffectingGameplayEffectRemoved::GameplayEffect' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_BP_OnMoveAffectingGameplayEffectRemoved, PriorGameplayEffectCount) == 0x000008, "Member 'BaseCharacter_C_BP_OnMoveAffectingGameplayEffectRemoved::PriorGameplayEffectCount' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_BP_OnMoveAffectingGameplayEffectRemoved, GameplayEffectLevel) == 0x00000C, "Member 'BaseCharacter_C_BP_OnMoveAffectingGameplayEffectRemoved::GameplayEffectLevel' has a wrong offset!");

// Function BaseCharacter.BaseCharacter_C.BP_OnMoveAffectingGameplayEffectApplied
// 0x0010 (0x0010 - 0x0000)
struct BaseCharacter_C_BP_OnMoveAffectingGameplayEffectApplied final
{
public:
	TSubclassOf<class UGameplayEffect>            GameplayEffect;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	int32                                         PriorGameplayEffectCount;                          // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         GameplayEffectLevel;                               // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BaseCharacter_C_BP_OnMoveAffectingGameplayEffectApplied) == 0x000008, "Wrong alignment on BaseCharacter_C_BP_OnMoveAffectingGameplayEffectApplied");
static_assert(sizeof(BaseCharacter_C_BP_OnMoveAffectingGameplayEffectApplied) == 0x000010, "Wrong size on BaseCharacter_C_BP_OnMoveAffectingGameplayEffectApplied");
static_assert(offsetof(BaseCharacter_C_BP_OnMoveAffectingGameplayEffectApplied, GameplayEffect) == 0x000000, "Member 'BaseCharacter_C_BP_OnMoveAffectingGameplayEffectApplied::GameplayEffect' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_BP_OnMoveAffectingGameplayEffectApplied, PriorGameplayEffectCount) == 0x000008, "Member 'BaseCharacter_C_BP_OnMoveAffectingGameplayEffectApplied::PriorGameplayEffectCount' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_BP_OnMoveAffectingGameplayEffectApplied, GameplayEffectLevel) == 0x00000C, "Member 'BaseCharacter_C_BP_OnMoveAffectingGameplayEffectApplied::GameplayEffectLevel' has a wrong offset!");

// Function BaseCharacter.BaseCharacter_C.DebugSetActorRotationOnClientWithRotator
// 0x000C (0x000C - 0x0000)
struct BaseCharacter_C_DebugSetActorRotationOnClientWithRotator final
{
public:
	float                                         Pitch;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Yaw;                                               // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Roll;                                              // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BaseCharacter_C_DebugSetActorRotationOnClientWithRotator) == 0x000004, "Wrong alignment on BaseCharacter_C_DebugSetActorRotationOnClientWithRotator");
static_assert(sizeof(BaseCharacter_C_DebugSetActorRotationOnClientWithRotator) == 0x00000C, "Wrong size on BaseCharacter_C_DebugSetActorRotationOnClientWithRotator");
static_assert(offsetof(BaseCharacter_C_DebugSetActorRotationOnClientWithRotator, Pitch) == 0x000000, "Member 'BaseCharacter_C_DebugSetActorRotationOnClientWithRotator::Pitch' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_DebugSetActorRotationOnClientWithRotator, Yaw) == 0x000004, "Member 'BaseCharacter_C_DebugSetActorRotationOnClientWithRotator::Yaw' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_DebugSetActorRotationOnClientWithRotator, Roll) == 0x000008, "Member 'BaseCharacter_C_DebugSetActorRotationOnClientWithRotator::Roll' has a wrong offset!");

// Function BaseCharacter.BaseCharacter_C.DebugSetActorRotation
// 0x000C (0x000C - 0x0000)
struct BaseCharacter_C_DebugSetActorRotation final
{
public:
	float                                         Pitch;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Yaw;                                               // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Roll;                                              // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BaseCharacter_C_DebugSetActorRotation) == 0x000004, "Wrong alignment on BaseCharacter_C_DebugSetActorRotation");
static_assert(sizeof(BaseCharacter_C_DebugSetActorRotation) == 0x00000C, "Wrong size on BaseCharacter_C_DebugSetActorRotation");
static_assert(offsetof(BaseCharacter_C_DebugSetActorRotation, Pitch) == 0x000000, "Member 'BaseCharacter_C_DebugSetActorRotation::Pitch' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_DebugSetActorRotation, Yaw) == 0x000004, "Member 'BaseCharacter_C_DebugSetActorRotation::Yaw' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_DebugSetActorRotation, Roll) == 0x000008, "Member 'BaseCharacter_C_DebugSetActorRotation::Roll' has a wrong offset!");

// Function BaseCharacter.BaseCharacter_C.DebugSetActorLocation
// 0x000C (0x000C - 0x0000)
struct BaseCharacter_C_DebugSetActorLocation final
{
public:
	float                                         X;                                                 // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Y;                                                 // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Z;                                                 // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BaseCharacter_C_DebugSetActorLocation) == 0x000004, "Wrong alignment on BaseCharacter_C_DebugSetActorLocation");
static_assert(sizeof(BaseCharacter_C_DebugSetActorLocation) == 0x00000C, "Wrong size on BaseCharacter_C_DebugSetActorLocation");
static_assert(offsetof(BaseCharacter_C_DebugSetActorLocation, X) == 0x000000, "Member 'BaseCharacter_C_DebugSetActorLocation::X' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_DebugSetActorLocation, Y) == 0x000004, "Member 'BaseCharacter_C_DebugSetActorLocation::Y' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_DebugSetActorLocation, Z) == 0x000008, "Member 'BaseCharacter_C_DebugSetActorLocation::Z' has a wrong offset!");

// Function BaseCharacter.BaseCharacter_C.ToggleDodgePostProcess
// 0x0001 (0x0001 - 0x0000)
struct BaseCharacter_C_ToggleDodgePostProcess final
{
public:
	bool                                          AbilityActivated;                                  // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BaseCharacter_C_ToggleDodgePostProcess) == 0x000001, "Wrong alignment on BaseCharacter_C_ToggleDodgePostProcess");
static_assert(sizeof(BaseCharacter_C_ToggleDodgePostProcess) == 0x000001, "Wrong size on BaseCharacter_C_ToggleDodgePostProcess");
static_assert(offsetof(BaseCharacter_C_ToggleDodgePostProcess, AbilityActivated) == 0x000000, "Member 'BaseCharacter_C_ToggleDodgePostProcess::AbilityActivated' has a wrong offset!");

// Function BaseCharacter.BaseCharacter_C.InpAxisEvt_AltFire_K2Node_InputAxisEvent_1
// 0x0004 (0x0004 - 0x0000)
struct BaseCharacter_C_InpAxisEvt_AltFire_K2Node_InputAxisEvent_1 final
{
public:
	float                                         AxisValue;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BaseCharacter_C_InpAxisEvt_AltFire_K2Node_InputAxisEvent_1) == 0x000004, "Wrong alignment on BaseCharacter_C_InpAxisEvt_AltFire_K2Node_InputAxisEvent_1");
static_assert(sizeof(BaseCharacter_C_InpAxisEvt_AltFire_K2Node_InputAxisEvent_1) == 0x000004, "Wrong size on BaseCharacter_C_InpAxisEvt_AltFire_K2Node_InputAxisEvent_1");
static_assert(offsetof(BaseCharacter_C_InpAxisEvt_AltFire_K2Node_InputAxisEvent_1, AxisValue) == 0x000000, "Member 'BaseCharacter_C_InpAxisEvt_AltFire_K2Node_InputAxisEvent_1::AxisValue' has a wrong offset!");

// Function BaseCharacter.BaseCharacter_C.InpAxisEvt_Fire_K2Node_InputAxisEvent_0
// 0x0004 (0x0004 - 0x0000)
struct BaseCharacter_C_InpAxisEvt_Fire_K2Node_InputAxisEvent_0 final
{
public:
	float                                         AxisValue;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BaseCharacter_C_InpAxisEvt_Fire_K2Node_InputAxisEvent_0) == 0x000004, "Wrong alignment on BaseCharacter_C_InpAxisEvt_Fire_K2Node_InputAxisEvent_0");
static_assert(sizeof(BaseCharacter_C_InpAxisEvt_Fire_K2Node_InputAxisEvent_0) == 0x000004, "Wrong size on BaseCharacter_C_InpAxisEvt_Fire_K2Node_InputAxisEvent_0");
static_assert(offsetof(BaseCharacter_C_InpAxisEvt_Fire_K2Node_InputAxisEvent_0, AxisValue) == 0x000000, "Member 'BaseCharacter_C_InpAxisEvt_Fire_K2Node_InputAxisEvent_0::AxisValue' has a wrong offset!");

// Function BaseCharacter.BaseCharacter_C.ServerToggleSuppression
// 0x0001 (0x0001 - 0x0000)
struct BaseCharacter_C_ServerToggleSuppression final
{
public:
	bool                                          Suppress;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BaseCharacter_C_ServerToggleSuppression) == 0x000001, "Wrong alignment on BaseCharacter_C_ServerToggleSuppression");
static_assert(sizeof(BaseCharacter_C_ServerToggleSuppression) == 0x000001, "Wrong size on BaseCharacter_C_ServerToggleSuppression");
static_assert(offsetof(BaseCharacter_C_ServerToggleSuppression, Suppress) == 0x000000, "Member 'BaseCharacter_C_ServerToggleSuppression::Suppress' has a wrong offset!");

// Function BaseCharacter.BaseCharacter_C.DebugPlayAnimation
// 0x0020 (0x0020 - 0x0000)
struct BaseCharacter_C_DebugPlayAnimation final
{
public:
	class FString                                 Character;                                         // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Number;                                            // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BaseCharacter_C_DebugPlayAnimation) == 0x000008, "Wrong alignment on BaseCharacter_C_DebugPlayAnimation");
static_assert(sizeof(BaseCharacter_C_DebugPlayAnimation) == 0x000020, "Wrong size on BaseCharacter_C_DebugPlayAnimation");
static_assert(offsetof(BaseCharacter_C_DebugPlayAnimation, Character) == 0x000000, "Member 'BaseCharacter_C_DebugPlayAnimation::Character' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_DebugPlayAnimation, Number) == 0x000010, "Member 'BaseCharacter_C_DebugPlayAnimation::Number' has a wrong offset!");

// Function BaseCharacter.BaseCharacter_C.ServerDebugPlayAnimation
// 0x0020 (0x0020 - 0x0000)
struct BaseCharacter_C_ServerDebugPlayAnimation final
{
public:
	class FString                                 Character;                                         // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Number;                                            // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BaseCharacter_C_ServerDebugPlayAnimation) == 0x000008, "Wrong alignment on BaseCharacter_C_ServerDebugPlayAnimation");
static_assert(sizeof(BaseCharacter_C_ServerDebugPlayAnimation) == 0x000020, "Wrong size on BaseCharacter_C_ServerDebugPlayAnimation");
static_assert(offsetof(BaseCharacter_C_ServerDebugPlayAnimation, Character) == 0x000000, "Member 'BaseCharacter_C_ServerDebugPlayAnimation::Character' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ServerDebugPlayAnimation, Number) == 0x000010, "Member 'BaseCharacter_C_ServerDebugPlayAnimation::Number' has a wrong offset!");

// Function BaseCharacter.BaseCharacter_C.OnThrowReleasedEvent
// 0x0010 (0x0010 - 0x0000)
struct BaseCharacter_C_OnThrowReleasedEvent final
{
public:
	class AMarinerCharacter*                      ThrowingCharacter;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMarinerItemSlot                              ItemSlot;                                          // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BaseCharacter_C_OnThrowReleasedEvent) == 0x000008, "Wrong alignment on BaseCharacter_C_OnThrowReleasedEvent");
static_assert(sizeof(BaseCharacter_C_OnThrowReleasedEvent) == 0x000010, "Wrong size on BaseCharacter_C_OnThrowReleasedEvent");
static_assert(offsetof(BaseCharacter_C_OnThrowReleasedEvent, ThrowingCharacter) == 0x000000, "Member 'BaseCharacter_C_OnThrowReleasedEvent::ThrowingCharacter' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_OnThrowReleasedEvent, ItemSlot) == 0x000008, "Member 'BaseCharacter_C_OnThrowReleasedEvent::ItemSlot' has a wrong offset!");

// Function BaseCharacter.BaseCharacter_C.debugplaysoundlocalloop
// 0x0018 (0x0018 - 0x0000)
struct BaseCharacter_C_Debugplaysoundlocalloop final
{
public:
	class FString                                 SoundName;                                         // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	float                                         LoopFrequency;                                     // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BaseCharacter_C_Debugplaysoundlocalloop) == 0x000008, "Wrong alignment on BaseCharacter_C_Debugplaysoundlocalloop");
static_assert(sizeof(BaseCharacter_C_Debugplaysoundlocalloop) == 0x000018, "Wrong size on BaseCharacter_C_Debugplaysoundlocalloop");
static_assert(offsetof(BaseCharacter_C_Debugplaysoundlocalloop, SoundName) == 0x000000, "Member 'BaseCharacter_C_Debugplaysoundlocalloop::SoundName' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_Debugplaysoundlocalloop, LoopFrequency) == 0x000010, "Member 'BaseCharacter_C_Debugplaysoundlocalloop::LoopFrequency' has a wrong offset!");

// Function BaseCharacter.BaseCharacter_C.debugplaysoundloop
// 0x0018 (0x0018 - 0x0000)
struct BaseCharacter_C_Debugplaysoundloop final
{
public:
	class FString                                 SoundName;                                         // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	float                                         LoopFrequency;                                     // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BaseCharacter_C_Debugplaysoundloop) == 0x000008, "Wrong alignment on BaseCharacter_C_Debugplaysoundloop");
static_assert(sizeof(BaseCharacter_C_Debugplaysoundloop) == 0x000018, "Wrong size on BaseCharacter_C_Debugplaysoundloop");
static_assert(offsetof(BaseCharacter_C_Debugplaysoundloop, SoundName) == 0x000000, "Member 'BaseCharacter_C_Debugplaysoundloop::SoundName' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_Debugplaysoundloop, LoopFrequency) == 0x000010, "Member 'BaseCharacter_C_Debugplaysoundloop::LoopFrequency' has a wrong offset!");

// Function BaseCharacter.BaseCharacter_C.Multicastdebugplaysound
// 0x0018 (0x0018 - 0x0000)
struct BaseCharacter_C_Multicastdebugplaysound final
{
public:
	class FString                                 SoundName;                                         // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          bLoop;                                             // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         LoopFrequency;                                     // 0x0014(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BaseCharacter_C_Multicastdebugplaysound) == 0x000008, "Wrong alignment on BaseCharacter_C_Multicastdebugplaysound");
static_assert(sizeof(BaseCharacter_C_Multicastdebugplaysound) == 0x000018, "Wrong size on BaseCharacter_C_Multicastdebugplaysound");
static_assert(offsetof(BaseCharacter_C_Multicastdebugplaysound, SoundName) == 0x000000, "Member 'BaseCharacter_C_Multicastdebugplaysound::SoundName' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_Multicastdebugplaysound, bLoop) == 0x000010, "Member 'BaseCharacter_C_Multicastdebugplaysound::bLoop' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_Multicastdebugplaysound, LoopFrequency) == 0x000014, "Member 'BaseCharacter_C_Multicastdebugplaysound::LoopFrequency' has a wrong offset!");

// Function BaseCharacter.BaseCharacter_C.serverdebugplaysound
// 0x0018 (0x0018 - 0x0000)
struct BaseCharacter_C_Serverdebugplaysound final
{
public:
	class FString                                 SoundName;                                         // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          bLoop;                                             // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         LoopFrequency;                                     // 0x0014(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BaseCharacter_C_Serverdebugplaysound) == 0x000008, "Wrong alignment on BaseCharacter_C_Serverdebugplaysound");
static_assert(sizeof(BaseCharacter_C_Serverdebugplaysound) == 0x000018, "Wrong size on BaseCharacter_C_Serverdebugplaysound");
static_assert(offsetof(BaseCharacter_C_Serverdebugplaysound, SoundName) == 0x000000, "Member 'BaseCharacter_C_Serverdebugplaysound::SoundName' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_Serverdebugplaysound, bLoop) == 0x000010, "Member 'BaseCharacter_C_Serverdebugplaysound::bLoop' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_Serverdebugplaysound, LoopFrequency) == 0x000014, "Member 'BaseCharacter_C_Serverdebugplaysound::LoopFrequency' has a wrong offset!");

// Function BaseCharacter.BaseCharacter_C.debugplaysound
// 0x0010 (0x0010 - 0x0000)
struct BaseCharacter_C_Debugplaysound final
{
public:
	class FString                                 SoundName;                                         // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BaseCharacter_C_Debugplaysound) == 0x000008, "Wrong alignment on BaseCharacter_C_Debugplaysound");
static_assert(sizeof(BaseCharacter_C_Debugplaysound) == 0x000010, "Wrong size on BaseCharacter_C_Debugplaysound");
static_assert(offsetof(BaseCharacter_C_Debugplaysound, SoundName) == 0x000000, "Member 'BaseCharacter_C_Debugplaysound::SoundName' has a wrong offset!");

// Function BaseCharacter.BaseCharacter_C.debugplaysoundinternal
// 0x0018 (0x0018 - 0x0000)
struct BaseCharacter_C_Debugplaysoundinternal final
{
public:
	class FString                                 SoundName;                                         // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          bLoop;                                             // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         LoopFrequency;                                     // 0x0014(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BaseCharacter_C_Debugplaysoundinternal) == 0x000008, "Wrong alignment on BaseCharacter_C_Debugplaysoundinternal");
static_assert(sizeof(BaseCharacter_C_Debugplaysoundinternal) == 0x000018, "Wrong size on BaseCharacter_C_Debugplaysoundinternal");
static_assert(offsetof(BaseCharacter_C_Debugplaysoundinternal, SoundName) == 0x000000, "Member 'BaseCharacter_C_Debugplaysoundinternal::SoundName' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_Debugplaysoundinternal, bLoop) == 0x000010, "Member 'BaseCharacter_C_Debugplaysoundinternal::bLoop' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_Debugplaysoundinternal, LoopFrequency) == 0x000014, "Member 'BaseCharacter_C_Debugplaysoundinternal::LoopFrequency' has a wrong offset!");

// Function BaseCharacter.BaseCharacter_C.debugplaysoundlocal
// 0x0010 (0x0010 - 0x0000)
struct BaseCharacter_C_Debugplaysoundlocal final
{
public:
	class FString                                 SoundName;                                         // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BaseCharacter_C_Debugplaysoundlocal) == 0x000008, "Wrong alignment on BaseCharacter_C_Debugplaysoundlocal");
static_assert(sizeof(BaseCharacter_C_Debugplaysoundlocal) == 0x000010, "Wrong size on BaseCharacter_C_Debugplaysoundlocal");
static_assert(offsetof(BaseCharacter_C_Debugplaysoundlocal, SoundName) == 0x000000, "Member 'BaseCharacter_C_Debugplaysoundlocal::SoundName' has a wrong offset!");

// Function BaseCharacter.BaseCharacter_C.ServerEnterReality
// 0x0001 (0x0001 - 0x0000)
struct BaseCharacter_C_ServerEnterReality final
{
public:
	EMarinerRealityState                          Reality;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BaseCharacter_C_ServerEnterReality) == 0x000001, "Wrong alignment on BaseCharacter_C_ServerEnterReality");
static_assert(sizeof(BaseCharacter_C_ServerEnterReality) == 0x000001, "Wrong size on BaseCharacter_C_ServerEnterReality");
static_assert(offsetof(BaseCharacter_C_ServerEnterReality, Reality) == 0x000000, "Member 'BaseCharacter_C_ServerEnterReality::Reality' has a wrong offset!");

// Function BaseCharacter.BaseCharacter_C.DebugEnterReality
// 0x0010 (0x0010 - 0x0000)
struct BaseCharacter_C_DebugEnterReality final
{
public:
	class FString                                 Reality;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BaseCharacter_C_DebugEnterReality) == 0x000008, "Wrong alignment on BaseCharacter_C_DebugEnterReality");
static_assert(sizeof(BaseCharacter_C_DebugEnterReality) == 0x000010, "Wrong size on BaseCharacter_C_DebugEnterReality");
static_assert(offsetof(BaseCharacter_C_DebugEnterReality, Reality) == 0x000000, "Member 'BaseCharacter_C_DebugEnterReality::Reality' has a wrong offset!");

// Function BaseCharacter.BaseCharacter_C.OnItemPickedUp
// 0x0010 (0x0010 - 0x0000)
struct BaseCharacter_C_OnItemPickedUp final
{
public:
	class AMarinerCharacter*                      CatchingCharacter;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMarinerItemSlot                              ItemSlot;                                          // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BaseCharacter_C_OnItemPickedUp) == 0x000008, "Wrong alignment on BaseCharacter_C_OnItemPickedUp");
static_assert(sizeof(BaseCharacter_C_OnItemPickedUp) == 0x000010, "Wrong size on BaseCharacter_C_OnItemPickedUp");
static_assert(offsetof(BaseCharacter_C_OnItemPickedUp, CatchingCharacter) == 0x000000, "Member 'BaseCharacter_C_OnItemPickedUp::CatchingCharacter' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_OnItemPickedUp, ItemSlot) == 0x000008, "Member 'BaseCharacter_C_OnItemPickedUp::ItemSlot' has a wrong offset!");

// Function BaseCharacter.BaseCharacter_C.HandleItemActivation
// 0x0001 (0x0001 - 0x0000)
struct BaseCharacter_C_HandleItemActivation final
{
public:
	E_ItemActivationTypes                         ItemUseType;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BaseCharacter_C_HandleItemActivation) == 0x000001, "Wrong alignment on BaseCharacter_C_HandleItemActivation");
static_assert(sizeof(BaseCharacter_C_HandleItemActivation) == 0x000001, "Wrong size on BaseCharacter_C_HandleItemActivation");
static_assert(offsetof(BaseCharacter_C_HandleItemActivation, ItemUseType) == 0x000000, "Member 'BaseCharacter_C_HandleItemActivation::ItemUseType' has a wrong offset!");

// Function BaseCharacter.BaseCharacter_C.HandleItemActivationAnims
// 0x0001 (0x0001 - 0x0000)
struct BaseCharacter_C_HandleItemActivationAnims final
{
public:
	E_ItemActivationTypes                         ItemUseType;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BaseCharacter_C_HandleItemActivationAnims) == 0x000001, "Wrong alignment on BaseCharacter_C_HandleItemActivationAnims");
static_assert(sizeof(BaseCharacter_C_HandleItemActivationAnims) == 0x000001, "Wrong size on BaseCharacter_C_HandleItemActivationAnims");
static_assert(offsetof(BaseCharacter_C_HandleItemActivationAnims, ItemUseType) == 0x000000, "Member 'BaseCharacter_C_HandleItemActivationAnims::ItemUseType' has a wrong offset!");

// Function BaseCharacter.BaseCharacter_C.DebugEnableUberCheating
// 0x0001 (0x0001 - 0x0000)
struct BaseCharacter_C_DebugEnableUberCheating final
{
public:
	bool                                          Enable;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BaseCharacter_C_DebugEnableUberCheating) == 0x000001, "Wrong alignment on BaseCharacter_C_DebugEnableUberCheating");
static_assert(sizeof(BaseCharacter_C_DebugEnableUberCheating) == 0x000001, "Wrong size on BaseCharacter_C_DebugEnableUberCheating");
static_assert(offsetof(BaseCharacter_C_DebugEnableUberCheating, Enable) == 0x000000, "Member 'BaseCharacter_C_DebugEnableUberCheating::Enable' has a wrong offset!");

// Function BaseCharacter.BaseCharacter_C.ToggleReturnTravelDistanceDebug
// 0x0001 (0x0001 - 0x0000)
struct BaseCharacter_C_ToggleReturnTravelDistanceDebug final
{
public:
	bool                                          Enable;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BaseCharacter_C_ToggleReturnTravelDistanceDebug) == 0x000001, "Wrong alignment on BaseCharacter_C_ToggleReturnTravelDistanceDebug");
static_assert(sizeof(BaseCharacter_C_ToggleReturnTravelDistanceDebug) == 0x000001, "Wrong size on BaseCharacter_C_ToggleReturnTravelDistanceDebug");
static_assert(offsetof(BaseCharacter_C_ToggleReturnTravelDistanceDebug, Enable) == 0x000000, "Member 'BaseCharacter_C_ToggleReturnTravelDistanceDebug::Enable' has a wrong offset!");

// Function BaseCharacter.BaseCharacter_C.BndEvt__ItemInteractionComponent_K2Node_ComponentBoundEvent_5_OnCatchCompletedSignature__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct BaseCharacter_C_BndEvt__ItemInteractionComponent_K2Node_ComponentBoundEvent_5_OnCatchCompletedSignature__DelegateSignature final
{
public:
	class AMarinerCharacter*                      CatchingCharacter;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMarinerItemSlot                              ItemSlot;                                          // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BaseCharacter_C_BndEvt__ItemInteractionComponent_K2Node_ComponentBoundEvent_5_OnCatchCompletedSignature__DelegateSignature) == 0x000008, "Wrong alignment on BaseCharacter_C_BndEvt__ItemInteractionComponent_K2Node_ComponentBoundEvent_5_OnCatchCompletedSignature__DelegateSignature");
static_assert(sizeof(BaseCharacter_C_BndEvt__ItemInteractionComponent_K2Node_ComponentBoundEvent_5_OnCatchCompletedSignature__DelegateSignature) == 0x000010, "Wrong size on BaseCharacter_C_BndEvt__ItemInteractionComponent_K2Node_ComponentBoundEvent_5_OnCatchCompletedSignature__DelegateSignature");
static_assert(offsetof(BaseCharacter_C_BndEvt__ItemInteractionComponent_K2Node_ComponentBoundEvent_5_OnCatchCompletedSignature__DelegateSignature, CatchingCharacter) == 0x000000, "Member 'BaseCharacter_C_BndEvt__ItemInteractionComponent_K2Node_ComponentBoundEvent_5_OnCatchCompletedSignature__DelegateSignature::CatchingCharacter' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_BndEvt__ItemInteractionComponent_K2Node_ComponentBoundEvent_5_OnCatchCompletedSignature__DelegateSignature, ItemSlot) == 0x000008, "Member 'BaseCharacter_C_BndEvt__ItemInteractionComponent_K2Node_ComponentBoundEvent_5_OnCatchCompletedSignature__DelegateSignature::ItemSlot' has a wrong offset!");

// Function BaseCharacter.BaseCharacter_C.OnJump
// 0x0001 (0x0001 - 0x0000)
struct BaseCharacter_C_OnJump final
{
public:
	uint8                                         JumpCount;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BaseCharacter_C_OnJump) == 0x000001, "Wrong alignment on BaseCharacter_C_OnJump");
static_assert(sizeof(BaseCharacter_C_OnJump) == 0x000001, "Wrong size on BaseCharacter_C_OnJump");
static_assert(offsetof(BaseCharacter_C_OnJump, JumpCount) == 0x000000, "Member 'BaseCharacter_C_OnJump::JumpCount' has a wrong offset!");

// Function BaseCharacter.BaseCharacter_C.OnLaunchedDelegate_Event_0
// 0x0010 (0x0010 - 0x0000)
struct BaseCharacter_C_OnLaunchedDelegate_Event_0 final
{
public:
	struct FVector                                PostLaunchVelocity;                                // 0x0000(0x000C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bLaunchContainedHostileImpulse;                    // 0x000C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bLaunchWasMegablast;                               // 0x000D(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BaseCharacter_C_OnLaunchedDelegate_Event_0) == 0x000004, "Wrong alignment on BaseCharacter_C_OnLaunchedDelegate_Event_0");
static_assert(sizeof(BaseCharacter_C_OnLaunchedDelegate_Event_0) == 0x000010, "Wrong size on BaseCharacter_C_OnLaunchedDelegate_Event_0");
static_assert(offsetof(BaseCharacter_C_OnLaunchedDelegate_Event_0, PostLaunchVelocity) == 0x000000, "Member 'BaseCharacter_C_OnLaunchedDelegate_Event_0::PostLaunchVelocity' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_OnLaunchedDelegate_Event_0, bLaunchContainedHostileImpulse) == 0x00000C, "Member 'BaseCharacter_C_OnLaunchedDelegate_Event_0::bLaunchContainedHostileImpulse' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_OnLaunchedDelegate_Event_0, bLaunchWasMegablast) == 0x00000D, "Member 'BaseCharacter_C_OnLaunchedDelegate_Event_0::bLaunchWasMegablast' has a wrong offset!");

// Function BaseCharacter.BaseCharacter_C.Character_Emote_MultiCast
// 0x0001 (0x0001 - 0x0000)
struct BaseCharacter_C_Character_Emote_MultiCast final
{
public:
	EMarinerInputActions                          MarinerInputAction;                                // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BaseCharacter_C_Character_Emote_MultiCast) == 0x000001, "Wrong alignment on BaseCharacter_C_Character_Emote_MultiCast");
static_assert(sizeof(BaseCharacter_C_Character_Emote_MultiCast) == 0x000001, "Wrong size on BaseCharacter_C_Character_Emote_MultiCast");
static_assert(offsetof(BaseCharacter_C_Character_Emote_MultiCast, MarinerInputAction) == 0x000000, "Member 'BaseCharacter_C_Character_Emote_MultiCast::MarinerInputAction' has a wrong offset!");

// Function BaseCharacter.BaseCharacter_C.Character_Emote_Server
// 0x0001 (0x0001 - 0x0000)
struct BaseCharacter_C_Character_Emote_Server final
{
public:
	EMarinerInputActions                          MarinerInputAction;                                // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BaseCharacter_C_Character_Emote_Server) == 0x000001, "Wrong alignment on BaseCharacter_C_Character_Emote_Server");
static_assert(sizeof(BaseCharacter_C_Character_Emote_Server) == 0x000001, "Wrong size on BaseCharacter_C_Character_Emote_Server");
static_assert(offsetof(BaseCharacter_C_Character_Emote_Server, MarinerInputAction) == 0x000000, "Member 'BaseCharacter_C_Character_Emote_Server::MarinerInputAction' has a wrong offset!");

// Function BaseCharacter.BaseCharacter_C.ServerGiveGamplayAward
// 0x000C (0x000C - 0x0000)
struct BaseCharacter_C_ServerGiveGamplayAward final
{
public:
	EGameplayAwardTypes                           AwardType;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Value;                                             // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         StatTotal;                                         // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BaseCharacter_C_ServerGiveGamplayAward) == 0x000004, "Wrong alignment on BaseCharacter_C_ServerGiveGamplayAward");
static_assert(sizeof(BaseCharacter_C_ServerGiveGamplayAward) == 0x00000C, "Wrong size on BaseCharacter_C_ServerGiveGamplayAward");
static_assert(offsetof(BaseCharacter_C_ServerGiveGamplayAward, AwardType) == 0x000000, "Member 'BaseCharacter_C_ServerGiveGamplayAward::AwardType' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ServerGiveGamplayAward, Value) == 0x000004, "Member 'BaseCharacter_C_ServerGiveGamplayAward::Value' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ServerGiveGamplayAward, StatTotal) == 0x000008, "Member 'BaseCharacter_C_ServerGiveGamplayAward::StatTotal' has a wrong offset!");

// Function BaseCharacter.BaseCharacter_C.ClientGiveGameplayAward
// 0x000C (0x000C - 0x0000)
struct BaseCharacter_C_ClientGiveGameplayAward final
{
public:
	EGameplayAwardTypes                           AwardType;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Value;                                             // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         StatTotal;                                         // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BaseCharacter_C_ClientGiveGameplayAward) == 0x000004, "Wrong alignment on BaseCharacter_C_ClientGiveGameplayAward");
static_assert(sizeof(BaseCharacter_C_ClientGiveGameplayAward) == 0x00000C, "Wrong size on BaseCharacter_C_ClientGiveGameplayAward");
static_assert(offsetof(BaseCharacter_C_ClientGiveGameplayAward, AwardType) == 0x000000, "Member 'BaseCharacter_C_ClientGiveGameplayAward::AwardType' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ClientGiveGameplayAward, Value) == 0x000004, "Member 'BaseCharacter_C_ClientGiveGameplayAward::Value' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ClientGiveGameplayAward, StatTotal) == 0x000008, "Member 'BaseCharacter_C_ClientGiveGameplayAward::StatTotal' has a wrong offset!");

// Function BaseCharacter.BaseCharacter_C.ServerDebugViewNextCharacter
// 0x0008 (0x0008 - 0x0000)
struct BaseCharacter_C_ServerDebugViewNextCharacter final
{
public:
	class APlayerState*                           PlayerStateToView;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BaseCharacter_C_ServerDebugViewNextCharacter) == 0x000008, "Wrong alignment on BaseCharacter_C_ServerDebugViewNextCharacter");
static_assert(sizeof(BaseCharacter_C_ServerDebugViewNextCharacter) == 0x000008, "Wrong size on BaseCharacter_C_ServerDebugViewNextCharacter");
static_assert(offsetof(BaseCharacter_C_ServerDebugViewNextCharacter, PlayerStateToView) == 0x000000, "Member 'BaseCharacter_C_ServerDebugViewNextCharacter::PlayerStateToView' has a wrong offset!");

// Function BaseCharacter.BaseCharacter_C.DebugViewNextCharacterLocal
// 0x0008 (0x0008 - 0x0000)
struct BaseCharacter_C_DebugViewNextCharacterLocal final
{
public:
	class APlayerState*                           PlayerStateToView;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BaseCharacter_C_DebugViewNextCharacterLocal) == 0x000008, "Wrong alignment on BaseCharacter_C_DebugViewNextCharacterLocal");
static_assert(sizeof(BaseCharacter_C_DebugViewNextCharacterLocal) == 0x000008, "Wrong size on BaseCharacter_C_DebugViewNextCharacterLocal");
static_assert(offsetof(BaseCharacter_C_DebugViewNextCharacterLocal, PlayerStateToView) == 0x000000, "Member 'BaseCharacter_C_DebugViewNextCharacterLocal::PlayerStateToView' has a wrong offset!");

// Function BaseCharacter.BaseCharacter_C.ServerDebugGiveItem
// 0x0010 (0x0010 - 0x0000)
struct BaseCharacter_C_ServerDebugGiveItem final
{
public:
	class FString                                 ItemName;                                          // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BaseCharacter_C_ServerDebugGiveItem) == 0x000008, "Wrong alignment on BaseCharacter_C_ServerDebugGiveItem");
static_assert(sizeof(BaseCharacter_C_ServerDebugGiveItem) == 0x000010, "Wrong size on BaseCharacter_C_ServerDebugGiveItem");
static_assert(offsetof(BaseCharacter_C_ServerDebugGiveItem, ItemName) == 0x000000, "Member 'BaseCharacter_C_ServerDebugGiveItem::ItemName' has a wrong offset!");

// Function BaseCharacter.BaseCharacter_C.DebugGiveItem
// 0x0010 (0x0010 - 0x0000)
struct BaseCharacter_C_DebugGiveItem final
{
public:
	class FString                                 ItemName;                                          // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BaseCharacter_C_DebugGiveItem) == 0x000008, "Wrong alignment on BaseCharacter_C_DebugGiveItem");
static_assert(sizeof(BaseCharacter_C_DebugGiveItem) == 0x000010, "Wrong size on BaseCharacter_C_DebugGiveItem");
static_assert(offsetof(BaseCharacter_C_DebugGiveItem, ItemName) == 0x000000, "Member 'BaseCharacter_C_DebugGiveItem::ItemName' has a wrong offset!");

// Function BaseCharacter.BaseCharacter_C.AuthorityDebugGiveItem
// 0x0010 (0x0010 - 0x0000)
struct BaseCharacter_C_AuthorityDebugGiveItem final
{
public:
	class FString                                 ItemName;                                          // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BaseCharacter_C_AuthorityDebugGiveItem) == 0x000008, "Wrong alignment on BaseCharacter_C_AuthorityDebugGiveItem");
static_assert(sizeof(BaseCharacter_C_AuthorityDebugGiveItem) == 0x000010, "Wrong size on BaseCharacter_C_AuthorityDebugGiveItem");
static_assert(offsetof(BaseCharacter_C_AuthorityDebugGiveItem, ItemName) == 0x000000, "Member 'BaseCharacter_C_AuthorityDebugGiveItem::ItemName' has a wrong offset!");

// Function BaseCharacter.BaseCharacter_C.BndEvt__MarinerCharacterMovement_K2Node_ComponentBoundEvent_2_OnChangesCardinalDirectionSignature__DelegateSignature
// 0x0002 (0x0002 - 0x0000)
struct BaseCharacter_C_BndEvt__MarinerCharacterMovement_K2Node_ComponentBoundEvent_2_OnChangesCardinalDirectionSignature__DelegateSignature final
{
public:
	EMarinerCardinalDirection                     NewDirection;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMarinerCardinalDirection                     PreviousDirection;                                 // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BaseCharacter_C_BndEvt__MarinerCharacterMovement_K2Node_ComponentBoundEvent_2_OnChangesCardinalDirectionSignature__DelegateSignature) == 0x000001, "Wrong alignment on BaseCharacter_C_BndEvt__MarinerCharacterMovement_K2Node_ComponentBoundEvent_2_OnChangesCardinalDirectionSignature__DelegateSignature");
static_assert(sizeof(BaseCharacter_C_BndEvt__MarinerCharacterMovement_K2Node_ComponentBoundEvent_2_OnChangesCardinalDirectionSignature__DelegateSignature) == 0x000002, "Wrong size on BaseCharacter_C_BndEvt__MarinerCharacterMovement_K2Node_ComponentBoundEvent_2_OnChangesCardinalDirectionSignature__DelegateSignature");
static_assert(offsetof(BaseCharacter_C_BndEvt__MarinerCharacterMovement_K2Node_ComponentBoundEvent_2_OnChangesCardinalDirectionSignature__DelegateSignature, NewDirection) == 0x000000, "Member 'BaseCharacter_C_BndEvt__MarinerCharacterMovement_K2Node_ComponentBoundEvent_2_OnChangesCardinalDirectionSignature__DelegateSignature::NewDirection' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_BndEvt__MarinerCharacterMovement_K2Node_ComponentBoundEvent_2_OnChangesCardinalDirectionSignature__DelegateSignature, PreviousDirection) == 0x000001, "Member 'BaseCharacter_C_BndEvt__MarinerCharacterMovement_K2Node_ComponentBoundEvent_2_OnChangesCardinalDirectionSignature__DelegateSignature::PreviousDirection' has a wrong offset!");

// Function BaseCharacter.BaseCharacter_C.TriggerDodgeFeedback
// 0x0008 (0x0008 - 0x0000)
struct BaseCharacter_C_TriggerDodgeFeedback final
{
public:
	EDodgeDirections                              DodgeDirection;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         DodgeDuration;                                     // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BaseCharacter_C_TriggerDodgeFeedback) == 0x000004, "Wrong alignment on BaseCharacter_C_TriggerDodgeFeedback");
static_assert(sizeof(BaseCharacter_C_TriggerDodgeFeedback) == 0x000008, "Wrong size on BaseCharacter_C_TriggerDodgeFeedback");
static_assert(offsetof(BaseCharacter_C_TriggerDodgeFeedback, DodgeDirection) == 0x000000, "Member 'BaseCharacter_C_TriggerDodgeFeedback::DodgeDirection' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_TriggerDodgeFeedback, DodgeDuration) == 0x000004, "Member 'BaseCharacter_C_TriggerDodgeFeedback::DodgeDuration' has a wrong offset!");

// Function BaseCharacter.BaseCharacter_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BaseCharacter_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BaseCharacter_C_ReceiveTick) == 0x000004, "Wrong alignment on BaseCharacter_C_ReceiveTick");
static_assert(sizeof(BaseCharacter_C_ReceiveTick) == 0x000004, "Wrong size on BaseCharacter_C_ReceiveTick");
static_assert(offsetof(BaseCharacter_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BaseCharacter_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BaseCharacter.BaseCharacter_C.SetImpendingMegablastStance
// 0x0010 (0x0010 - 0x0000)
struct BaseCharacter_C_SetImpendingMegablastStance final
{
public:
	const class UMarinerDamageableComponent*      RelevantDamageableComponent;                       // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class AMarinerCharacter*                CharacterExpectingMegablast;                       // 0x0008(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BaseCharacter_C_SetImpendingMegablastStance) == 0x000008, "Wrong alignment on BaseCharacter_C_SetImpendingMegablastStance");
static_assert(sizeof(BaseCharacter_C_SetImpendingMegablastStance) == 0x000010, "Wrong size on BaseCharacter_C_SetImpendingMegablastStance");
static_assert(offsetof(BaseCharacter_C_SetImpendingMegablastStance, RelevantDamageableComponent) == 0x000000, "Member 'BaseCharacter_C_SetImpendingMegablastStance::RelevantDamageableComponent' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_SetImpendingMegablastStance, CharacterExpectingMegablast) == 0x000008, "Member 'BaseCharacter_C_SetImpendingMegablastStance::CharacterExpectingMegablast' has a wrong offset!");

// Function BaseCharacter.BaseCharacter_C.ConsoleTestSpawnProtection
// 0x0008 (0x0008 - 0x0000)
struct BaseCharacter_C_ConsoleTestSpawnProtection final
{
public:
	bool                                          IsEnabled;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         SpawnProtectionDuration_0;                         // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BaseCharacter_C_ConsoleTestSpawnProtection) == 0x000004, "Wrong alignment on BaseCharacter_C_ConsoleTestSpawnProtection");
static_assert(sizeof(BaseCharacter_C_ConsoleTestSpawnProtection) == 0x000008, "Wrong size on BaseCharacter_C_ConsoleTestSpawnProtection");
static_assert(offsetof(BaseCharacter_C_ConsoleTestSpawnProtection, IsEnabled) == 0x000000, "Member 'BaseCharacter_C_ConsoleTestSpawnProtection::IsEnabled' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ConsoleTestSpawnProtection, SpawnProtectionDuration_0) == 0x000004, "Member 'BaseCharacter_C_ConsoleTestSpawnProtection::SpawnProtectionDuration_0' has a wrong offset!");

// Function BaseCharacter.BaseCharacter_C.OnRoundTransitionChange_Event_0
// 0x0001 (0x0001 - 0x0000)
struct BaseCharacter_C_OnRoundTransitionChange_Event_0 final
{
public:
	bool                                          IsEnabled;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BaseCharacter_C_OnRoundTransitionChange_Event_0) == 0x000001, "Wrong alignment on BaseCharacter_C_OnRoundTransitionChange_Event_0");
static_assert(sizeof(BaseCharacter_C_OnRoundTransitionChange_Event_0) == 0x000001, "Wrong size on BaseCharacter_C_OnRoundTransitionChange_Event_0");
static_assert(offsetof(BaseCharacter_C_OnRoundTransitionChange_Event_0, IsEnabled) == 0x000000, "Member 'BaseCharacter_C_OnRoundTransitionChange_Event_0::IsEnabled' has a wrong offset!");

// Function BaseCharacter.BaseCharacter_C.OnAnyKnockout
// 0x0018 (0x0018 - 0x0000)
struct BaseCharacter_C_OnAnyKnockout final
{
public:
	class AMarinerCharacter*                      KnockOutInstigator;                                // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bWasMegablast;                                     // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                KnockoutDir;                                       // 0x000C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BaseCharacter_C_OnAnyKnockout) == 0x000008, "Wrong alignment on BaseCharacter_C_OnAnyKnockout");
static_assert(sizeof(BaseCharacter_C_OnAnyKnockout) == 0x000018, "Wrong size on BaseCharacter_C_OnAnyKnockout");
static_assert(offsetof(BaseCharacter_C_OnAnyKnockout, KnockOutInstigator) == 0x000000, "Member 'BaseCharacter_C_OnAnyKnockout::KnockOutInstigator' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_OnAnyKnockout, bWasMegablast) == 0x000008, "Member 'BaseCharacter_C_OnAnyKnockout::bWasMegablast' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_OnAnyKnockout, KnockoutDir) == 0x00000C, "Member 'BaseCharacter_C_OnAnyKnockout::KnockoutDir' has a wrong offset!");

// Function BaseCharacter.BaseCharacter_C.BP_OnKnockedOutFromMegablast
// 0x0018 (0x0018 - 0x0000)
struct BaseCharacter_C_BP_OnKnockedOutFromMegablast final
{
public:
	class AMarinerCharacter*                      MegablastInstigator;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                KnockOutDirection;                                 // 0x0008(0x000C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BaseCharacter_C_BP_OnKnockedOutFromMegablast) == 0x000008, "Wrong alignment on BaseCharacter_C_BP_OnKnockedOutFromMegablast");
static_assert(sizeof(BaseCharacter_C_BP_OnKnockedOutFromMegablast) == 0x000018, "Wrong size on BaseCharacter_C_BP_OnKnockedOutFromMegablast");
static_assert(offsetof(BaseCharacter_C_BP_OnKnockedOutFromMegablast, MegablastInstigator) == 0x000000, "Member 'BaseCharacter_C_BP_OnKnockedOutFromMegablast::MegablastInstigator' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_BP_OnKnockedOutFromMegablast, KnockOutDirection) == 0x000008, "Member 'BaseCharacter_C_BP_OnKnockedOutFromMegablast::KnockOutDirection' has a wrong offset!");

// Function BaseCharacter.BaseCharacter_C.BP_OnKnockedOut
// 0x0018 (0x0018 - 0x0000)
struct BaseCharacter_C_BP_OnKnockedOut final
{
public:
	class AMarinerCharacter*                      KnockOutInstigator;                                // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                KnockOutDirection;                                 // 0x0008(0x000C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BaseCharacter_C_BP_OnKnockedOut) == 0x000008, "Wrong alignment on BaseCharacter_C_BP_OnKnockedOut");
static_assert(sizeof(BaseCharacter_C_BP_OnKnockedOut) == 0x000018, "Wrong size on BaseCharacter_C_BP_OnKnockedOut");
static_assert(offsetof(BaseCharacter_C_BP_OnKnockedOut, KnockOutInstigator) == 0x000000, "Member 'BaseCharacter_C_BP_OnKnockedOut::KnockOutInstigator' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_BP_OnKnockedOut, KnockOutDirection) == 0x000008, "Member 'BaseCharacter_C_BP_OnKnockedOut::KnockOutDirection' has a wrong offset!");

// Function BaseCharacter.BaseCharacter_C.OnGameplayTagRemoved
// 0x0010 (0x0010 - 0x0000)
struct BaseCharacter_C_OnGameplayTagRemoved final
{
public:
	class AMarinerCharacter*                      Character;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           GameplayTag;                                       // 0x0008(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BaseCharacter_C_OnGameplayTagRemoved) == 0x000008, "Wrong alignment on BaseCharacter_C_OnGameplayTagRemoved");
static_assert(sizeof(BaseCharacter_C_OnGameplayTagRemoved) == 0x000010, "Wrong size on BaseCharacter_C_OnGameplayTagRemoved");
static_assert(offsetof(BaseCharacter_C_OnGameplayTagRemoved, Character) == 0x000000, "Member 'BaseCharacter_C_OnGameplayTagRemoved::Character' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_OnGameplayTagRemoved, GameplayTag) == 0x000008, "Member 'BaseCharacter_C_OnGameplayTagRemoved::GameplayTag' has a wrong offset!");

// Function BaseCharacter.BaseCharacter_C.OnGameplayTagApplied
// 0x0010 (0x0010 - 0x0000)
struct BaseCharacter_C_OnGameplayTagApplied final
{
public:
	class AMarinerCharacter*                      Character;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           GameplayTag;                                       // 0x0008(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BaseCharacter_C_OnGameplayTagApplied) == 0x000008, "Wrong alignment on BaseCharacter_C_OnGameplayTagApplied");
static_assert(sizeof(BaseCharacter_C_OnGameplayTagApplied) == 0x000010, "Wrong size on BaseCharacter_C_OnGameplayTagApplied");
static_assert(offsetof(BaseCharacter_C_OnGameplayTagApplied, Character) == 0x000000, "Member 'BaseCharacter_C_OnGameplayTagApplied::Character' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_OnGameplayTagApplied, GameplayTag) == 0x000008, "Member 'BaseCharacter_C_OnGameplayTagApplied::GameplayTag' has a wrong offset!");

// Function BaseCharacter.BaseCharacter_C.RemoveManCannon
// 0x0018 (0x0018 - 0x0000)
struct BaseCharacter_C_RemoveManCannon final
{
public:
	class UClass*                                 GameplayEffect;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMarinerCharacter*                      Character;                                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         PriorGameplayEffectCount;                          // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         GameplayEffectLevel;                               // 0x0014(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BaseCharacter_C_RemoveManCannon) == 0x000008, "Wrong alignment on BaseCharacter_C_RemoveManCannon");
static_assert(sizeof(BaseCharacter_C_RemoveManCannon) == 0x000018, "Wrong size on BaseCharacter_C_RemoveManCannon");
static_assert(offsetof(BaseCharacter_C_RemoveManCannon, GameplayEffect) == 0x000000, "Member 'BaseCharacter_C_RemoveManCannon::GameplayEffect' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_RemoveManCannon, Character) == 0x000008, "Member 'BaseCharacter_C_RemoveManCannon::Character' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_RemoveManCannon, PriorGameplayEffectCount) == 0x000010, "Member 'BaseCharacter_C_RemoveManCannon::PriorGameplayEffectCount' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_RemoveManCannon, GameplayEffectLevel) == 0x000014, "Member 'BaseCharacter_C_RemoveManCannon::GameplayEffectLevel' has a wrong offset!");

// Function BaseCharacter.BaseCharacter_C.AddManCannon
// 0x0018 (0x0018 - 0x0000)
struct BaseCharacter_C_AddManCannon final
{
public:
	class UClass*                                 GameplayEffect;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMarinerCharacter*                      Character;                                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         PriorGameplayEffectCount;                          // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         GameplayEffectLevel;                               // 0x0014(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BaseCharacter_C_AddManCannon) == 0x000008, "Wrong alignment on BaseCharacter_C_AddManCannon");
static_assert(sizeof(BaseCharacter_C_AddManCannon) == 0x000018, "Wrong size on BaseCharacter_C_AddManCannon");
static_assert(offsetof(BaseCharacter_C_AddManCannon, GameplayEffect) == 0x000000, "Member 'BaseCharacter_C_AddManCannon::GameplayEffect' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_AddManCannon, Character) == 0x000008, "Member 'BaseCharacter_C_AddManCannon::Character' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_AddManCannon, PriorGameplayEffectCount) == 0x000010, "Member 'BaseCharacter_C_AddManCannon::PriorGameplayEffectCount' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_AddManCannon, GameplayEffectLevel) == 0x000014, "Member 'BaseCharacter_C_AddManCannon::GameplayEffectLevel' has a wrong offset!");

// Function BaseCharacter.BaseCharacter_C.DamageCaused
// 0x0028 (0x0028 - 0x0000)
struct BaseCharacter_C_DamageCaused final
{
public:
	class AActor*                                 DamagedActor;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bDamageWasAOE;                                     // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bDamageWasMegablast;                               // 0x0009(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 DamageType;                                        // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                ImpulseVector;                                     // 0x0018(0x000C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Damage;                                            // 0x0024(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BaseCharacter_C_DamageCaused) == 0x000008, "Wrong alignment on BaseCharacter_C_DamageCaused");
static_assert(sizeof(BaseCharacter_C_DamageCaused) == 0x000028, "Wrong size on BaseCharacter_C_DamageCaused");
static_assert(offsetof(BaseCharacter_C_DamageCaused, DamagedActor) == 0x000000, "Member 'BaseCharacter_C_DamageCaused::DamagedActor' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_DamageCaused, bDamageWasAOE) == 0x000008, "Member 'BaseCharacter_C_DamageCaused::bDamageWasAOE' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_DamageCaused, bDamageWasMegablast) == 0x000009, "Member 'BaseCharacter_C_DamageCaused::bDamageWasMegablast' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_DamageCaused, DamageType) == 0x000010, "Member 'BaseCharacter_C_DamageCaused::DamageType' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_DamageCaused, ImpulseVector) == 0x000018, "Member 'BaseCharacter_C_DamageCaused::ImpulseVector' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_DamageCaused, Damage) == 0x000024, "Member 'BaseCharacter_C_DamageCaused::Damage' has a wrong offset!");

// Function BaseCharacter.BaseCharacter_C.OnMoveAffectingGameplayEffectApplied
// 0x0018 (0x0018 - 0x0000)
struct BaseCharacter_C_OnMoveAffectingGameplayEffectApplied final
{
public:
	class UClass*                                 GameplayEffect;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMarinerCharacter*                      Character;                                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         PriorGameplayEffectCount;                          // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         GameplayEffectLevel;                               // 0x0014(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BaseCharacter_C_OnMoveAffectingGameplayEffectApplied) == 0x000008, "Wrong alignment on BaseCharacter_C_OnMoveAffectingGameplayEffectApplied");
static_assert(sizeof(BaseCharacter_C_OnMoveAffectingGameplayEffectApplied) == 0x000018, "Wrong size on BaseCharacter_C_OnMoveAffectingGameplayEffectApplied");
static_assert(offsetof(BaseCharacter_C_OnMoveAffectingGameplayEffectApplied, GameplayEffect) == 0x000000, "Member 'BaseCharacter_C_OnMoveAffectingGameplayEffectApplied::GameplayEffect' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_OnMoveAffectingGameplayEffectApplied, Character) == 0x000008, "Member 'BaseCharacter_C_OnMoveAffectingGameplayEffectApplied::Character' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_OnMoveAffectingGameplayEffectApplied, PriorGameplayEffectCount) == 0x000010, "Member 'BaseCharacter_C_OnMoveAffectingGameplayEffectApplied::PriorGameplayEffectCount' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_OnMoveAffectingGameplayEffectApplied, GameplayEffectLevel) == 0x000014, "Member 'BaseCharacter_C_OnMoveAffectingGameplayEffectApplied::GameplayEffectLevel' has a wrong offset!");

// Function BaseCharacter.BaseCharacter_C.OnAirJumpDelegate
// 0x0001 (0x0001 - 0x0000)
struct BaseCharacter_C_OnAirJumpDelegate final
{
public:
	uint8                                         JumpCount;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BaseCharacter_C_OnAirJumpDelegate) == 0x000001, "Wrong alignment on BaseCharacter_C_OnAirJumpDelegate");
static_assert(sizeof(BaseCharacter_C_OnAirJumpDelegate) == 0x000001, "Wrong size on BaseCharacter_C_OnAirJumpDelegate");
static_assert(offsetof(BaseCharacter_C_OnAirJumpDelegate, JumpCount) == 0x000000, "Member 'BaseCharacter_C_OnAirJumpDelegate::JumpCount' has a wrong offset!");

// Function BaseCharacter.BaseCharacter_C.ClientShieldHealthUpdate
// 0x0004 (0x0004 - 0x0000)
struct BaseCharacter_C_ClientShieldHealthUpdate final
{
public:
	float                                         ShieldHealth;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BaseCharacter_C_ClientShieldHealthUpdate) == 0x000004, "Wrong alignment on BaseCharacter_C_ClientShieldHealthUpdate");
static_assert(sizeof(BaseCharacter_C_ClientShieldHealthUpdate) == 0x000004, "Wrong size on BaseCharacter_C_ClientShieldHealthUpdate");
static_assert(offsetof(BaseCharacter_C_ClientShieldHealthUpdate, ShieldHealth) == 0x000000, "Member 'BaseCharacter_C_ClientShieldHealthUpdate::ShieldHealth' has a wrong offset!");

// Function BaseCharacter.BaseCharacter_C.ShieldTest
// 0x0028 (0x0028 - 0x0000)
struct BaseCharacter_C_ShieldTest final
{
public:
	class AActor*                                 DamagedActor;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Damage;                                            // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	const class UDamageType*                      DamageType;                                        // 0x0010(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AController*                            InstigatedBy;                                      // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 DamageCauser;                                      // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BaseCharacter_C_ShieldTest) == 0x000008, "Wrong alignment on BaseCharacter_C_ShieldTest");
static_assert(sizeof(BaseCharacter_C_ShieldTest) == 0x000028, "Wrong size on BaseCharacter_C_ShieldTest");
static_assert(offsetof(BaseCharacter_C_ShieldTest, DamagedActor) == 0x000000, "Member 'BaseCharacter_C_ShieldTest::DamagedActor' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ShieldTest, Damage) == 0x000008, "Member 'BaseCharacter_C_ShieldTest::Damage' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ShieldTest, DamageType) == 0x000010, "Member 'BaseCharacter_C_ShieldTest::DamageType' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ShieldTest, InstigatedBy) == 0x000018, "Member 'BaseCharacter_C_ShieldTest::InstigatedBy' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ShieldTest, DamageCauser) == 0x000020, "Member 'BaseCharacter_C_ShieldTest::DamageCauser' has a wrong offset!");

// Function BaseCharacter.BaseCharacter_C.BndEvt__DamageableComponent_K2Node_ComponentBoundEvent_3_OnMegablastStateChangedSignature__DelegateSignature
// 0x0018 (0x0018 - 0x0000)
struct BaseCharacter_C_BndEvt__DamageableComponent_K2Node_ComponentBoundEvent_3_OnMegablastStateChangedSignature__DelegateSignature final
{
public:
	const class UMarinerDamageableComponent*      RelevantDamageableComponent;                       // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class AMarinerPlayerState*              MegablastInstigator;                               // 0x0008(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bEnteredState;                                     // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BaseCharacter_C_BndEvt__DamageableComponent_K2Node_ComponentBoundEvent_3_OnMegablastStateChangedSignature__DelegateSignature) == 0x000008, "Wrong alignment on BaseCharacter_C_BndEvt__DamageableComponent_K2Node_ComponentBoundEvent_3_OnMegablastStateChangedSignature__DelegateSignature");
static_assert(sizeof(BaseCharacter_C_BndEvt__DamageableComponent_K2Node_ComponentBoundEvent_3_OnMegablastStateChangedSignature__DelegateSignature) == 0x000018, "Wrong size on BaseCharacter_C_BndEvt__DamageableComponent_K2Node_ComponentBoundEvent_3_OnMegablastStateChangedSignature__DelegateSignature");
static_assert(offsetof(BaseCharacter_C_BndEvt__DamageableComponent_K2Node_ComponentBoundEvent_3_OnMegablastStateChangedSignature__DelegateSignature, RelevantDamageableComponent) == 0x000000, "Member 'BaseCharacter_C_BndEvt__DamageableComponent_K2Node_ComponentBoundEvent_3_OnMegablastStateChangedSignature__DelegateSignature::RelevantDamageableComponent' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_BndEvt__DamageableComponent_K2Node_ComponentBoundEvent_3_OnMegablastStateChangedSignature__DelegateSignature, MegablastInstigator) == 0x000008, "Member 'BaseCharacter_C_BndEvt__DamageableComponent_K2Node_ComponentBoundEvent_3_OnMegablastStateChangedSignature__DelegateSignature::MegablastInstigator' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_BndEvt__DamageableComponent_K2Node_ComponentBoundEvent_3_OnMegablastStateChangedSignature__DelegateSignature, bEnteredState) == 0x000010, "Member 'BaseCharacter_C_BndEvt__DamageableComponent_K2Node_ComponentBoundEvent_3_OnMegablastStateChangedSignature__DelegateSignature::bEnteredState' has a wrong offset!");

// Function BaseCharacter.BaseCharacter_C.BndEvt__DamageableComponent_K2Node_ComponentBoundEvent_1_OnAccumulatedDamageChangedEvent__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct BaseCharacter_C_BndEvt__DamageableComponent_K2Node_ComponentBoundEvent_1_OnAccumulatedDamageChangedEvent__DelegateSignature final
{
public:
	const class UMarinerDamageableComponent*      RelevantDamageableComponent;                       // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         NewAmount;                                         // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         OldAmount;                                         // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BaseCharacter_C_BndEvt__DamageableComponent_K2Node_ComponentBoundEvent_1_OnAccumulatedDamageChangedEvent__DelegateSignature) == 0x000008, "Wrong alignment on BaseCharacter_C_BndEvt__DamageableComponent_K2Node_ComponentBoundEvent_1_OnAccumulatedDamageChangedEvent__DelegateSignature");
static_assert(sizeof(BaseCharacter_C_BndEvt__DamageableComponent_K2Node_ComponentBoundEvent_1_OnAccumulatedDamageChangedEvent__DelegateSignature) == 0x000010, "Wrong size on BaseCharacter_C_BndEvt__DamageableComponent_K2Node_ComponentBoundEvent_1_OnAccumulatedDamageChangedEvent__DelegateSignature");
static_assert(offsetof(BaseCharacter_C_BndEvt__DamageableComponent_K2Node_ComponentBoundEvent_1_OnAccumulatedDamageChangedEvent__DelegateSignature, RelevantDamageableComponent) == 0x000000, "Member 'BaseCharacter_C_BndEvt__DamageableComponent_K2Node_ComponentBoundEvent_1_OnAccumulatedDamageChangedEvent__DelegateSignature::RelevantDamageableComponent' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_BndEvt__DamageableComponent_K2Node_ComponentBoundEvent_1_OnAccumulatedDamageChangedEvent__DelegateSignature, NewAmount) == 0x000008, "Member 'BaseCharacter_C_BndEvt__DamageableComponent_K2Node_ComponentBoundEvent_1_OnAccumulatedDamageChangedEvent__DelegateSignature::NewAmount' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_BndEvt__DamageableComponent_K2Node_ComponentBoundEvent_1_OnAccumulatedDamageChangedEvent__DelegateSignature, OldAmount) == 0x00000C, "Member 'BaseCharacter_C_BndEvt__DamageableComponent_K2Node_ComponentBoundEvent_1_OnAccumulatedDamageChangedEvent__DelegateSignature::OldAmount' has a wrong offset!");

// Function BaseCharacter.BaseCharacter_C.BlastedTrailToggled
// 0x0014 (0x0014 - 0x0000)
struct BaseCharacter_C_BlastedTrailToggled final
{
public:
	bool                                          bTrailActive;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CurrentVelocity;                                   // 0x0004(0x000C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bMegablasted;                                      // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BaseCharacter_C_BlastedTrailToggled) == 0x000004, "Wrong alignment on BaseCharacter_C_BlastedTrailToggled");
static_assert(sizeof(BaseCharacter_C_BlastedTrailToggled) == 0x000014, "Wrong size on BaseCharacter_C_BlastedTrailToggled");
static_assert(offsetof(BaseCharacter_C_BlastedTrailToggled, bTrailActive) == 0x000000, "Member 'BaseCharacter_C_BlastedTrailToggled::bTrailActive' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_BlastedTrailToggled, CurrentVelocity) == 0x000004, "Member 'BaseCharacter_C_BlastedTrailToggled::CurrentVelocity' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_BlastedTrailToggled, bMegablasted) == 0x000010, "Member 'BaseCharacter_C_BlastedTrailToggled::bMegablasted' has a wrong offset!");

// Function BaseCharacter.BaseCharacter_C.OnHitStunApplied
// 0x0010 (0x0010 - 0x0000)
struct BaseCharacter_C_OnHitStunApplied final
{
public:
	struct FVector                                CurrentVelocity;                                   // 0x0000(0x000C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bMegablasted;                                      // 0x000C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BaseCharacter_C_OnHitStunApplied) == 0x000004, "Wrong alignment on BaseCharacter_C_OnHitStunApplied");
static_assert(sizeof(BaseCharacter_C_OnHitStunApplied) == 0x000010, "Wrong size on BaseCharacter_C_OnHitStunApplied");
static_assert(offsetof(BaseCharacter_C_OnHitStunApplied, CurrentVelocity) == 0x000000, "Member 'BaseCharacter_C_OnHitStunApplied::CurrentVelocity' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_OnHitStunApplied, bMegablasted) == 0x00000C, "Member 'BaseCharacter_C_OnHitStunApplied::bMegablasted' has a wrong offset!");

// Function BaseCharacter.BaseCharacter_C.NetBounceEvent
// 0x000C (0x000C - 0x0000)
struct BaseCharacter_C_NetBounceEvent final
{
public:
	struct FVector_NetQuantizeNormal              BounceDirection;                                   // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BaseCharacter_C_NetBounceEvent) == 0x000004, "Wrong alignment on BaseCharacter_C_NetBounceEvent");
static_assert(sizeof(BaseCharacter_C_NetBounceEvent) == 0x00000C, "Wrong size on BaseCharacter_C_NetBounceEvent");
static_assert(offsetof(BaseCharacter_C_NetBounceEvent, BounceDirection) == 0x000000, "Member 'BaseCharacter_C_NetBounceEvent::BounceDirection' has a wrong offset!");

// Function BaseCharacter.BaseCharacter_C.CallTempBounceDelegate
// 0x008C (0x008C - 0x0000)
struct BaseCharacter_C_CallTempBounceDelegate final
{
public:
	struct FHitResult                             BounceHitResult;                                   // 0x0000(0x0088)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          bBouncingWhileMegablasted;                         // 0x0088(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BaseCharacter_C_CallTempBounceDelegate) == 0x000004, "Wrong alignment on BaseCharacter_C_CallTempBounceDelegate");
static_assert(sizeof(BaseCharacter_C_CallTempBounceDelegate) == 0x00008C, "Wrong size on BaseCharacter_C_CallTempBounceDelegate");
static_assert(offsetof(BaseCharacter_C_CallTempBounceDelegate, BounceHitResult) == 0x000000, "Member 'BaseCharacter_C_CallTempBounceDelegate::BounceHitResult' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_CallTempBounceDelegate, bBouncingWhileMegablasted) == 0x000088, "Member 'BaseCharacter_C_CallTempBounceDelegate::bBouncingWhileMegablasted' has a wrong offset!");

// Function BaseCharacter.BaseCharacter_C.K2_OnMovementModeChanged
// 0x0004 (0x0004 - 0x0000)
struct BaseCharacter_C_K2_OnMovementModeChanged final
{
public:
	EMovementMode                                 PrevMovementMode;                                  // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMovementMode                                 NewMovementMode;                                   // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         PrevCustomMode;                                    // 0x0002(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         NewCustomMode;                                     // 0x0003(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BaseCharacter_C_K2_OnMovementModeChanged) == 0x000001, "Wrong alignment on BaseCharacter_C_K2_OnMovementModeChanged");
static_assert(sizeof(BaseCharacter_C_K2_OnMovementModeChanged) == 0x000004, "Wrong size on BaseCharacter_C_K2_OnMovementModeChanged");
static_assert(offsetof(BaseCharacter_C_K2_OnMovementModeChanged, PrevMovementMode) == 0x000000, "Member 'BaseCharacter_C_K2_OnMovementModeChanged::PrevMovementMode' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_K2_OnMovementModeChanged, NewMovementMode) == 0x000001, "Member 'BaseCharacter_C_K2_OnMovementModeChanged::NewMovementMode' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_K2_OnMovementModeChanged, PrevCustomMode) == 0x000002, "Member 'BaseCharacter_C_K2_OnMovementModeChanged::PrevCustomMode' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_K2_OnMovementModeChanged, NewCustomMode) == 0x000003, "Member 'BaseCharacter_C_K2_OnMovementModeChanged::NewCustomMode' has a wrong offset!");

// Function BaseCharacter.BaseCharacter_C.ComboMultiplierServer
// 0x0001 (0x0001 - 0x0000)
struct BaseCharacter_C_ComboMultiplierServer final
{
public:
	bool                                          IncreasedCombo;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BaseCharacter_C_ComboMultiplierServer) == 0x000001, "Wrong alignment on BaseCharacter_C_ComboMultiplierServer");
static_assert(sizeof(BaseCharacter_C_ComboMultiplierServer) == 0x000001, "Wrong size on BaseCharacter_C_ComboMultiplierServer");
static_assert(offsetof(BaseCharacter_C_ComboMultiplierServer, IncreasedCombo) == 0x000000, "Member 'BaseCharacter_C_ComboMultiplierServer::IncreasedCombo' has a wrong offset!");

// Function BaseCharacter.BaseCharacter_C.SendNotifyToClient
// 0x0028 (0x0028 - 0x0000)
struct BaseCharacter_C_SendNotifyToClient final
{
public:
	class UGameplayAbility*                       Ability;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTagContainer                  FailTags;                                          // 0x0008(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(BaseCharacter_C_SendNotifyToClient) == 0x000008, "Wrong alignment on BaseCharacter_C_SendNotifyToClient");
static_assert(sizeof(BaseCharacter_C_SendNotifyToClient) == 0x000028, "Wrong size on BaseCharacter_C_SendNotifyToClient");
static_assert(offsetof(BaseCharacter_C_SendNotifyToClient, Ability) == 0x000000, "Member 'BaseCharacter_C_SendNotifyToClient::Ability' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_SendNotifyToClient, FailTags) == 0x000008, "Member 'BaseCharacter_C_SendNotifyToClient::FailTags' has a wrong offset!");

// Function BaseCharacter.BaseCharacter_C.AbilityFailed
// 0x0028 (0x0028 - 0x0000)
struct BaseCharacter_C_AbilityFailed final
{
public:
	const class UGameplayAbility*                 Ability;                                           // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTagContainer                  FailTags;                                          // 0x0008(0x0020)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(BaseCharacter_C_AbilityFailed) == 0x000008, "Wrong alignment on BaseCharacter_C_AbilityFailed");
static_assert(sizeof(BaseCharacter_C_AbilityFailed) == 0x000028, "Wrong size on BaseCharacter_C_AbilityFailed");
static_assert(offsetof(BaseCharacter_C_AbilityFailed, Ability) == 0x000000, "Member 'BaseCharacter_C_AbilityFailed::Ability' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_AbilityFailed, FailTags) == 0x000008, "Member 'BaseCharacter_C_AbilityFailed::FailTags' has a wrong offset!");

// Function BaseCharacter.BaseCharacter_C.ServerSuppressInput
// 0x0018 (0x0018 - 0x0000)
struct BaseCharacter_C_ServerSuppressInput final
{
public:
	bool                                          Suppress;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 WhoSetME;                                          // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BaseCharacter_C_ServerSuppressInput) == 0x000008, "Wrong alignment on BaseCharacter_C_ServerSuppressInput");
static_assert(sizeof(BaseCharacter_C_ServerSuppressInput) == 0x000018, "Wrong size on BaseCharacter_C_ServerSuppressInput");
static_assert(offsetof(BaseCharacter_C_ServerSuppressInput, Suppress) == 0x000000, "Member 'BaseCharacter_C_ServerSuppressInput::Suppress' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ServerSuppressInput, WhoSetME) == 0x000008, "Member 'BaseCharacter_C_ServerSuppressInput::WhoSetME' has a wrong offset!");

// Function BaseCharacter.BaseCharacter_C.SuppressInput
// 0x0018 (0x0018 - 0x0000)
struct BaseCharacter_C_SuppressInput final
{
public:
	bool                                          Suppress;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 WhoSetME;                                          // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BaseCharacter_C_SuppressInput) == 0x000008, "Wrong alignment on BaseCharacter_C_SuppressInput");
static_assert(sizeof(BaseCharacter_C_SuppressInput) == 0x000018, "Wrong size on BaseCharacter_C_SuppressInput");
static_assert(offsetof(BaseCharacter_C_SuppressInput, Suppress) == 0x000000, "Member 'BaseCharacter_C_SuppressInput::Suppress' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_SuppressInput, WhoSetME) == 0x000008, "Member 'BaseCharacter_C_SuppressInput::WhoSetME' has a wrong offset!");

// Function BaseCharacter.BaseCharacter_C.OnCharacterRecovered_Event_0
// 0x0008 (0x0008 - 0x0000)
struct BaseCharacter_C_OnCharacterRecovered_Event_0 final
{
public:
	class AMarinerCharacter*                      RecoveredCharacter;                                // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BaseCharacter_C_OnCharacterRecovered_Event_0) == 0x000008, "Wrong alignment on BaseCharacter_C_OnCharacterRecovered_Event_0");
static_assert(sizeof(BaseCharacter_C_OnCharacterRecovered_Event_0) == 0x000008, "Wrong size on BaseCharacter_C_OnCharacterRecovered_Event_0");
static_assert(offsetof(BaseCharacter_C_OnCharacterRecovered_Event_0, RecoveredCharacter) == 0x000000, "Member 'BaseCharacter_C_OnCharacterRecovered_Event_0::RecoveredCharacter' has a wrong offset!");

// Function BaseCharacter.BaseCharacter_C.ReceiveAnyDamage
// 0x0020 (0x0020 - 0x0000)
struct BaseCharacter_C_ReceiveAnyDamage final
{
public:
	float                                         Damage;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	const class UDamageType*                      DamageType;                                        // 0x0008(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AController*                            InstigatedBy;                                      // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 DamageCauser;                                      // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BaseCharacter_C_ReceiveAnyDamage) == 0x000008, "Wrong alignment on BaseCharacter_C_ReceiveAnyDamage");
static_assert(sizeof(BaseCharacter_C_ReceiveAnyDamage) == 0x000020, "Wrong size on BaseCharacter_C_ReceiveAnyDamage");
static_assert(offsetof(BaseCharacter_C_ReceiveAnyDamage, Damage) == 0x000000, "Member 'BaseCharacter_C_ReceiveAnyDamage::Damage' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ReceiveAnyDamage, DamageType) == 0x000008, "Member 'BaseCharacter_C_ReceiveAnyDamage::DamageType' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ReceiveAnyDamage, InstigatedBy) == 0x000010, "Member 'BaseCharacter_C_ReceiveAnyDamage::InstigatedBy' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ReceiveAnyDamage, DamageCauser) == 0x000018, "Member 'BaseCharacter_C_ReceiveAnyDamage::DamageCauser' has a wrong offset!");

// Function BaseCharacter.BaseCharacter_C.ReceivePossessed
// 0x0008 (0x0008 - 0x0000)
struct BaseCharacter_C_ReceivePossessed final
{
public:
	class AController*                            NewController;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BaseCharacter_C_ReceivePossessed) == 0x000008, "Wrong alignment on BaseCharacter_C_ReceivePossessed");
static_assert(sizeof(BaseCharacter_C_ReceivePossessed) == 0x000008, "Wrong size on BaseCharacter_C_ReceivePossessed");
static_assert(offsetof(BaseCharacter_C_ReceivePossessed, NewController) == 0x000000, "Member 'BaseCharacter_C_ReceivePossessed::NewController' has a wrong offset!");

// Function BaseCharacter.BaseCharacter_C.SetDIServer
// 0x0010 (0x0010 - 0x0000)
struct BaseCharacter_C_SetDIServer final
{
public:
	int32                                         InputDI_0;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               DIRotation;                                        // 0x0004(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BaseCharacter_C_SetDIServer) == 0x000004, "Wrong alignment on BaseCharacter_C_SetDIServer");
static_assert(sizeof(BaseCharacter_C_SetDIServer) == 0x000010, "Wrong size on BaseCharacter_C_SetDIServer");
static_assert(offsetof(BaseCharacter_C_SetDIServer, InputDI_0) == 0x000000, "Member 'BaseCharacter_C_SetDIServer::InputDI_0' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_SetDIServer, DIRotation) == 0x000004, "Member 'BaseCharacter_C_SetDIServer::DIRotation' has a wrong offset!");

// Function BaseCharacter.BaseCharacter_C.BndEvt__ItemInteractionComponent_K2Node_ComponentBoundEvent_0_OnStealSignature__DelegateSignature
// 0x0018 (0x0018 - 0x0000)
struct BaseCharacter_C_BndEvt__ItemInteractionComponent_K2Node_ComponentBoundEvent_0_OnStealSignature__DelegateSignature final
{
public:
	class AMarinerCharacter*                      StealingCharacter;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMarinerCharacter*                      VictimCharacter;                                   // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMarinerItemSlot                              ItemSlot;                                          // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BaseCharacter_C_BndEvt__ItemInteractionComponent_K2Node_ComponentBoundEvent_0_OnStealSignature__DelegateSignature) == 0x000008, "Wrong alignment on BaseCharacter_C_BndEvt__ItemInteractionComponent_K2Node_ComponentBoundEvent_0_OnStealSignature__DelegateSignature");
static_assert(sizeof(BaseCharacter_C_BndEvt__ItemInteractionComponent_K2Node_ComponentBoundEvent_0_OnStealSignature__DelegateSignature) == 0x000018, "Wrong size on BaseCharacter_C_BndEvt__ItemInteractionComponent_K2Node_ComponentBoundEvent_0_OnStealSignature__DelegateSignature");
static_assert(offsetof(BaseCharacter_C_BndEvt__ItemInteractionComponent_K2Node_ComponentBoundEvent_0_OnStealSignature__DelegateSignature, StealingCharacter) == 0x000000, "Member 'BaseCharacter_C_BndEvt__ItemInteractionComponent_K2Node_ComponentBoundEvent_0_OnStealSignature__DelegateSignature::StealingCharacter' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_BndEvt__ItemInteractionComponent_K2Node_ComponentBoundEvent_0_OnStealSignature__DelegateSignature, VictimCharacter) == 0x000008, "Member 'BaseCharacter_C_BndEvt__ItemInteractionComponent_K2Node_ComponentBoundEvent_0_OnStealSignature__DelegateSignature::VictimCharacter' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_BndEvt__ItemInteractionComponent_K2Node_ComponentBoundEvent_0_OnStealSignature__DelegateSignature, ItemSlot) == 0x000010, "Member 'BaseCharacter_C_BndEvt__ItemInteractionComponent_K2Node_ComponentBoundEvent_0_OnStealSignature__DelegateSignature::ItemSlot' has a wrong offset!");

// Function BaseCharacter.BaseCharacter_C.OnLanded
// 0x0088 (0x0088 - 0x0000)
struct BaseCharacter_C_OnLanded final
{
public:
	struct FHitResult                             Hit;                                               // 0x0000(0x0088)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BaseCharacter_C_OnLanded) == 0x000004, "Wrong alignment on BaseCharacter_C_OnLanded");
static_assert(sizeof(BaseCharacter_C_OnLanded) == 0x000088, "Wrong size on BaseCharacter_C_OnLanded");
static_assert(offsetof(BaseCharacter_C_OnLanded, Hit) == 0x000000, "Member 'BaseCharacter_C_OnLanded::Hit' has a wrong offset!");

// Function BaseCharacter.BaseCharacter_C.ToggleDodgeCollision
// 0x0001 (0x0001 - 0x0000)
struct BaseCharacter_C_ToggleDodgeCollision final
{
public:
	bool                                          Enabled;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BaseCharacter_C_ToggleDodgeCollision) == 0x000001, "Wrong alignment on BaseCharacter_C_ToggleDodgeCollision");
static_assert(sizeof(BaseCharacter_C_ToggleDodgeCollision) == 0x000001, "Wrong size on BaseCharacter_C_ToggleDodgeCollision");
static_assert(offsetof(BaseCharacter_C_ToggleDodgeCollision, Enabled) == 0x000000, "Member 'BaseCharacter_C_ToggleDodgeCollision::Enabled' has a wrong offset!");

// Function BaseCharacter.BaseCharacter_C.InpActEvt_Home_K2Node_InputKeyEvent_0
// 0x0018 (0x0018 - 0x0000)
struct BaseCharacter_C_InpActEvt_Home_K2Node_InputKeyEvent_0 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BaseCharacter_C_InpActEvt_Home_K2Node_InputKeyEvent_0) == 0x000008, "Wrong alignment on BaseCharacter_C_InpActEvt_Home_K2Node_InputKeyEvent_0");
static_assert(sizeof(BaseCharacter_C_InpActEvt_Home_K2Node_InputKeyEvent_0) == 0x000018, "Wrong size on BaseCharacter_C_InpActEvt_Home_K2Node_InputKeyEvent_0");
static_assert(offsetof(BaseCharacter_C_InpActEvt_Home_K2Node_InputKeyEvent_0, Key) == 0x000000, "Member 'BaseCharacter_C_InpActEvt_Home_K2Node_InputKeyEvent_0::Key' has a wrong offset!");

// Function BaseCharacter.BaseCharacter_C.InpActEvt_End_K2Node_InputKeyEvent_1
// 0x0018 (0x0018 - 0x0000)
struct BaseCharacter_C_InpActEvt_End_K2Node_InputKeyEvent_1 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BaseCharacter_C_InpActEvt_End_K2Node_InputKeyEvent_1) == 0x000008, "Wrong alignment on BaseCharacter_C_InpActEvt_End_K2Node_InputKeyEvent_1");
static_assert(sizeof(BaseCharacter_C_InpActEvt_End_K2Node_InputKeyEvent_1) == 0x000018, "Wrong size on BaseCharacter_C_InpActEvt_End_K2Node_InputKeyEvent_1");
static_assert(offsetof(BaseCharacter_C_InpActEvt_End_K2Node_InputKeyEvent_1, Key) == 0x000000, "Member 'BaseCharacter_C_InpActEvt_End_K2Node_InputKeyEvent_1::Key' has a wrong offset!");

// Function BaseCharacter.BaseCharacter_C.InpActEvt_UseItem_K2Node_InputActionEvent_0
// 0x0018 (0x0018 - 0x0000)
struct BaseCharacter_C_InpActEvt_UseItem_K2Node_InputActionEvent_0 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BaseCharacter_C_InpActEvt_UseItem_K2Node_InputActionEvent_0) == 0x000008, "Wrong alignment on BaseCharacter_C_InpActEvt_UseItem_K2Node_InputActionEvent_0");
static_assert(sizeof(BaseCharacter_C_InpActEvt_UseItem_K2Node_InputActionEvent_0) == 0x000018, "Wrong size on BaseCharacter_C_InpActEvt_UseItem_K2Node_InputActionEvent_0");
static_assert(offsetof(BaseCharacter_C_InpActEvt_UseItem_K2Node_InputActionEvent_0, Key) == 0x000000, "Member 'BaseCharacter_C_InpActEvt_UseItem_K2Node_InputActionEvent_0::Key' has a wrong offset!");

// Function BaseCharacter.BaseCharacter_C.InpActEvt_ThrowBall_K2Node_InputActionEvent_1
// 0x0018 (0x0018 - 0x0000)
struct BaseCharacter_C_InpActEvt_ThrowBall_K2Node_InputActionEvent_1 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BaseCharacter_C_InpActEvt_ThrowBall_K2Node_InputActionEvent_1) == 0x000008, "Wrong alignment on BaseCharacter_C_InpActEvt_ThrowBall_K2Node_InputActionEvent_1");
static_assert(sizeof(BaseCharacter_C_InpActEvt_ThrowBall_K2Node_InputActionEvent_1) == 0x000018, "Wrong size on BaseCharacter_C_InpActEvt_ThrowBall_K2Node_InputActionEvent_1");
static_assert(offsetof(BaseCharacter_C_InpActEvt_ThrowBall_K2Node_InputActionEvent_1, Key) == 0x000000, "Member 'BaseCharacter_C_InpActEvt_ThrowBall_K2Node_InputActionEvent_1::Key' has a wrong offset!");

// Function BaseCharacter.BaseCharacter_C.InpActEvt_ThrowBall_K2Node_InputActionEvent_2
// 0x0018 (0x0018 - 0x0000)
struct BaseCharacter_C_InpActEvt_ThrowBall_K2Node_InputActionEvent_2 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BaseCharacter_C_InpActEvt_ThrowBall_K2Node_InputActionEvent_2) == 0x000008, "Wrong alignment on BaseCharacter_C_InpActEvt_ThrowBall_K2Node_InputActionEvent_2");
static_assert(sizeof(BaseCharacter_C_InpActEvt_ThrowBall_K2Node_InputActionEvent_2) == 0x000018, "Wrong size on BaseCharacter_C_InpActEvt_ThrowBall_K2Node_InputActionEvent_2");
static_assert(offsetof(BaseCharacter_C_InpActEvt_ThrowBall_K2Node_InputActionEvent_2, Key) == 0x000000, "Member 'BaseCharacter_C_InpActEvt_ThrowBall_K2Node_InputActionEvent_2::Key' has a wrong offset!");

// Function BaseCharacter.BaseCharacter_C.InpActEvt_SpecialAbility_K2Node_InputActionEvent_3
// 0x0018 (0x0018 - 0x0000)
struct BaseCharacter_C_InpActEvt_SpecialAbility_K2Node_InputActionEvent_3 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BaseCharacter_C_InpActEvt_SpecialAbility_K2Node_InputActionEvent_3) == 0x000008, "Wrong alignment on BaseCharacter_C_InpActEvt_SpecialAbility_K2Node_InputActionEvent_3");
static_assert(sizeof(BaseCharacter_C_InpActEvt_SpecialAbility_K2Node_InputActionEvent_3) == 0x000018, "Wrong size on BaseCharacter_C_InpActEvt_SpecialAbility_K2Node_InputActionEvent_3");
static_assert(offsetof(BaseCharacter_C_InpActEvt_SpecialAbility_K2Node_InputActionEvent_3, Key) == 0x000000, "Member 'BaseCharacter_C_InpActEvt_SpecialAbility_K2Node_InputActionEvent_3::Key' has a wrong offset!");

// Function BaseCharacter.BaseCharacter_C.InpActEvt_SpecialAbility_K2Node_InputActionEvent_4
// 0x0018 (0x0018 - 0x0000)
struct BaseCharacter_C_InpActEvt_SpecialAbility_K2Node_InputActionEvent_4 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BaseCharacter_C_InpActEvt_SpecialAbility_K2Node_InputActionEvent_4) == 0x000008, "Wrong alignment on BaseCharacter_C_InpActEvt_SpecialAbility_K2Node_InputActionEvent_4");
static_assert(sizeof(BaseCharacter_C_InpActEvt_SpecialAbility_K2Node_InputActionEvent_4) == 0x000018, "Wrong size on BaseCharacter_C_InpActEvt_SpecialAbility_K2Node_InputActionEvent_4");
static_assert(offsetof(BaseCharacter_C_InpActEvt_SpecialAbility_K2Node_InputActionEvent_4, Key) == 0x000000, "Member 'BaseCharacter_C_InpActEvt_SpecialAbility_K2Node_InputActionEvent_4::Key' has a wrong offset!");

// Function BaseCharacter.BaseCharacter_C.InpActEvt_AltFire_K2Node_InputActionEvent_5
// 0x0018 (0x0018 - 0x0000)
struct BaseCharacter_C_InpActEvt_AltFire_K2Node_InputActionEvent_5 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BaseCharacter_C_InpActEvt_AltFire_K2Node_InputActionEvent_5) == 0x000008, "Wrong alignment on BaseCharacter_C_InpActEvt_AltFire_K2Node_InputActionEvent_5");
static_assert(sizeof(BaseCharacter_C_InpActEvt_AltFire_K2Node_InputActionEvent_5) == 0x000018, "Wrong size on BaseCharacter_C_InpActEvt_AltFire_K2Node_InputActionEvent_5");
static_assert(offsetof(BaseCharacter_C_InpActEvt_AltFire_K2Node_InputActionEvent_5, Key) == 0x000000, "Member 'BaseCharacter_C_InpActEvt_AltFire_K2Node_InputActionEvent_5::Key' has a wrong offset!");

// Function BaseCharacter.BaseCharacter_C.InpActEvt_AltFire_K2Node_InputActionEvent_6
// 0x0018 (0x0018 - 0x0000)
struct BaseCharacter_C_InpActEvt_AltFire_K2Node_InputActionEvent_6 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BaseCharacter_C_InpActEvt_AltFire_K2Node_InputActionEvent_6) == 0x000008, "Wrong alignment on BaseCharacter_C_InpActEvt_AltFire_K2Node_InputActionEvent_6");
static_assert(sizeof(BaseCharacter_C_InpActEvt_AltFire_K2Node_InputActionEvent_6) == 0x000018, "Wrong size on BaseCharacter_C_InpActEvt_AltFire_K2Node_InputActionEvent_6");
static_assert(offsetof(BaseCharacter_C_InpActEvt_AltFire_K2Node_InputActionEvent_6, Key) == 0x000000, "Member 'BaseCharacter_C_InpActEvt_AltFire_K2Node_InputActionEvent_6::Key' has a wrong offset!");

// Function BaseCharacter.BaseCharacter_C.InpActEvt_Fire_K2Node_InputActionEvent_7
// 0x0018 (0x0018 - 0x0000)
struct BaseCharacter_C_InpActEvt_Fire_K2Node_InputActionEvent_7 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BaseCharacter_C_InpActEvt_Fire_K2Node_InputActionEvent_7) == 0x000008, "Wrong alignment on BaseCharacter_C_InpActEvt_Fire_K2Node_InputActionEvent_7");
static_assert(sizeof(BaseCharacter_C_InpActEvt_Fire_K2Node_InputActionEvent_7) == 0x000018, "Wrong size on BaseCharacter_C_InpActEvt_Fire_K2Node_InputActionEvent_7");
static_assert(offsetof(BaseCharacter_C_InpActEvt_Fire_K2Node_InputActionEvent_7, Key) == 0x000000, "Member 'BaseCharacter_C_InpActEvt_Fire_K2Node_InputActionEvent_7::Key' has a wrong offset!");

// Function BaseCharacter.BaseCharacter_C.InpActEvt_Fire_K2Node_InputActionEvent_8
// 0x0018 (0x0018 - 0x0000)
struct BaseCharacter_C_InpActEvt_Fire_K2Node_InputActionEvent_8 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BaseCharacter_C_InpActEvt_Fire_K2Node_InputActionEvent_8) == 0x000008, "Wrong alignment on BaseCharacter_C_InpActEvt_Fire_K2Node_InputActionEvent_8");
static_assert(sizeof(BaseCharacter_C_InpActEvt_Fire_K2Node_InputActionEvent_8) == 0x000018, "Wrong size on BaseCharacter_C_InpActEvt_Fire_K2Node_InputActionEvent_8");
static_assert(offsetof(BaseCharacter_C_InpActEvt_Fire_K2Node_InputActionEvent_8, Key) == 0x000000, "Member 'BaseCharacter_C_InpActEvt_Fire_K2Node_InputActionEvent_8::Key' has a wrong offset!");

// Function BaseCharacter.BaseCharacter_C.InpActEvt_SpecialAbility_K2Node_InputActionEvent_9
// 0x0018 (0x0018 - 0x0000)
struct BaseCharacter_C_InpActEvt_SpecialAbility_K2Node_InputActionEvent_9 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BaseCharacter_C_InpActEvt_SpecialAbility_K2Node_InputActionEvent_9) == 0x000008, "Wrong alignment on BaseCharacter_C_InpActEvt_SpecialAbility_K2Node_InputActionEvent_9");
static_assert(sizeof(BaseCharacter_C_InpActEvt_SpecialAbility_K2Node_InputActionEvent_9) == 0x000018, "Wrong size on BaseCharacter_C_InpActEvt_SpecialAbility_K2Node_InputActionEvent_9");
static_assert(offsetof(BaseCharacter_C_InpActEvt_SpecialAbility_K2Node_InputActionEvent_9, Key) == 0x000000, "Member 'BaseCharacter_C_InpActEvt_SpecialAbility_K2Node_InputActionEvent_9::Key' has a wrong offset!");

// Function BaseCharacter.BaseCharacter_C.InpActEvt_Jump_K2Node_InputActionEvent_10
// 0x0018 (0x0018 - 0x0000)
struct BaseCharacter_C_InpActEvt_Jump_K2Node_InputActionEvent_10 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BaseCharacter_C_InpActEvt_Jump_K2Node_InputActionEvent_10) == 0x000008, "Wrong alignment on BaseCharacter_C_InpActEvt_Jump_K2Node_InputActionEvent_10");
static_assert(sizeof(BaseCharacter_C_InpActEvt_Jump_K2Node_InputActionEvent_10) == 0x000018, "Wrong size on BaseCharacter_C_InpActEvt_Jump_K2Node_InputActionEvent_10");
static_assert(offsetof(BaseCharacter_C_InpActEvt_Jump_K2Node_InputActionEvent_10, Key) == 0x000000, "Member 'BaseCharacter_C_InpActEvt_Jump_K2Node_InputActionEvent_10::Key' has a wrong offset!");

// Function BaseCharacter.BaseCharacter_C.FreezeFieldCounter
// 0x0010 (0x0010 - 0x0000)
struct BaseCharacter_C_FreezeFieldCounter final
{
public:
	bool                                          EnterZone;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  Instigator_0;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BaseCharacter_C_FreezeFieldCounter) == 0x000008, "Wrong alignment on BaseCharacter_C_FreezeFieldCounter");
static_assert(sizeof(BaseCharacter_C_FreezeFieldCounter) == 0x000010, "Wrong size on BaseCharacter_C_FreezeFieldCounter");
static_assert(offsetof(BaseCharacter_C_FreezeFieldCounter, EnterZone) == 0x000000, "Member 'BaseCharacter_C_FreezeFieldCounter::EnterZone' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_FreezeFieldCounter, Instigator_0) == 0x000008, "Member 'BaseCharacter_C_FreezeFieldCounter::Instigator_0' has a wrong offset!");

// Function BaseCharacter.BaseCharacter_C.GetKnockoutHealthRecovery
// 0x0030 (0x0030 - 0x0000)
struct BaseCharacter_C_GetKnockoutHealthRecovery final
{
public:
	float                                         HealthToRecover;                                   // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AMarinerPlayerState*                    K2Node_DynamicCast_AsMariner_Player_State;         // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMarinerGameState*                      K2Node_DynamicCast_AsMariner_Game_State;           // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetHealthToRecoverOnKnockout_ReturnValue; // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BaseCharacter_C_GetKnockoutHealthRecovery) == 0x000008, "Wrong alignment on BaseCharacter_C_GetKnockoutHealthRecovery");
static_assert(sizeof(BaseCharacter_C_GetKnockoutHealthRecovery) == 0x000030, "Wrong size on BaseCharacter_C_GetKnockoutHealthRecovery");
static_assert(offsetof(BaseCharacter_C_GetKnockoutHealthRecovery, HealthToRecover) == 0x000000, "Member 'BaseCharacter_C_GetKnockoutHealthRecovery::HealthToRecover' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_GetKnockoutHealthRecovery, K2Node_DynamicCast_AsMariner_Player_State) == 0x000008, "Member 'BaseCharacter_C_GetKnockoutHealthRecovery::K2Node_DynamicCast_AsMariner_Player_State' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_GetKnockoutHealthRecovery, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'BaseCharacter_C_GetKnockoutHealthRecovery::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_GetKnockoutHealthRecovery, CallFunc_GetGameState_ReturnValue) == 0x000018, "Member 'BaseCharacter_C_GetKnockoutHealthRecovery::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_GetKnockoutHealthRecovery, K2Node_DynamicCast_AsMariner_Game_State) == 0x000020, "Member 'BaseCharacter_C_GetKnockoutHealthRecovery::K2Node_DynamicCast_AsMariner_Game_State' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_GetKnockoutHealthRecovery, K2Node_DynamicCast_bSuccess_1) == 0x000028, "Member 'BaseCharacter_C_GetKnockoutHealthRecovery::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_GetKnockoutHealthRecovery, CallFunc_GetHealthToRecoverOnKnockout_ReturnValue) == 0x00002C, "Member 'BaseCharacter_C_GetKnockoutHealthRecovery::CallFunc_GetHealthToRecoverOnKnockout_ReturnValue' has a wrong offset!");

// Function BaseCharacter.BaseCharacter_C.UpdateStockTimeSinceKnockedOutStat
// 0x0030 (0x0030 - 0x0000)
struct BaseCharacter_C_UpdateStockTimeSinceKnockedOutStat final
{
public:
	float                                         CallFunc_K2_GetTimerElapsedTimeHandle_ReturnValue; // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_GetInstigatorController_ReturnValue;      // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EExecutionPins                                CallFunc_IsEqualSoftReference_Branches;            // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_13[0x5];                                       // 0x0013(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AMarinerPlayerState*                    K2Node_DynamicCast_AsMariner_Player_State;         // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetStatValueAsFloat_ReturnValue;          // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BaseCharacter_C_UpdateStockTimeSinceKnockedOutStat) == 0x000008, "Wrong alignment on BaseCharacter_C_UpdateStockTimeSinceKnockedOutStat");
static_assert(sizeof(BaseCharacter_C_UpdateStockTimeSinceKnockedOutStat) == 0x000030, "Wrong size on BaseCharacter_C_UpdateStockTimeSinceKnockedOutStat");
static_assert(offsetof(BaseCharacter_C_UpdateStockTimeSinceKnockedOutStat, CallFunc_K2_GetTimerElapsedTimeHandle_ReturnValue) == 0x000000, "Member 'BaseCharacter_C_UpdateStockTimeSinceKnockedOutStat::CallFunc_K2_GetTimerElapsedTimeHandle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_UpdateStockTimeSinceKnockedOutStat, CallFunc_GetInstigatorController_ReturnValue) == 0x000008, "Member 'BaseCharacter_C_UpdateStockTimeSinceKnockedOutStat::CallFunc_GetInstigatorController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_UpdateStockTimeSinceKnockedOutStat, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'BaseCharacter_C_UpdateStockTimeSinceKnockedOutStat::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_UpdateStockTimeSinceKnockedOutStat, CallFunc_IsEqualSoftReference_Branches) == 0x000011, "Member 'BaseCharacter_C_UpdateStockTimeSinceKnockedOutStat::CallFunc_IsEqualSoftReference_Branches' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_UpdateStockTimeSinceKnockedOutStat, K2Node_SwitchEnum_CmpSuccess) == 0x000012, "Member 'BaseCharacter_C_UpdateStockTimeSinceKnockedOutStat::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_UpdateStockTimeSinceKnockedOutStat, K2Node_DynamicCast_AsMariner_Player_State) == 0x000018, "Member 'BaseCharacter_C_UpdateStockTimeSinceKnockedOutStat::K2Node_DynamicCast_AsMariner_Player_State' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_UpdateStockTimeSinceKnockedOutStat, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BaseCharacter_C_UpdateStockTimeSinceKnockedOutStat::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_UpdateStockTimeSinceKnockedOutStat, CallFunc_GetStatValueAsFloat_ReturnValue) == 0x000024, "Member 'BaseCharacter_C_UpdateStockTimeSinceKnockedOutStat::CallFunc_GetStatValueAsFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_UpdateStockTimeSinceKnockedOutStat, CallFunc_Less_FloatFloat_ReturnValue) == 0x000028, "Member 'BaseCharacter_C_UpdateStockTimeSinceKnockedOutStat::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");

// Function BaseCharacter.BaseCharacter_C.SetStockKnockedOutTimer
// 0x0008 (0x0008 - 0x0000)
struct BaseCharacter_C_SetStockKnockedOutTimer final
{
public:
	struct FTimerHandle                           CallFunc_K2_SetTimer_ReturnValue;                  // 0x0000(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BaseCharacter_C_SetStockKnockedOutTimer) == 0x000008, "Wrong alignment on BaseCharacter_C_SetStockKnockedOutTimer");
static_assert(sizeof(BaseCharacter_C_SetStockKnockedOutTimer) == 0x000008, "Wrong size on BaseCharacter_C_SetStockKnockedOutTimer");
static_assert(offsetof(BaseCharacter_C_SetStockKnockedOutTimer, CallFunc_K2_SetTimer_ReturnValue) == 0x000000, "Member 'BaseCharacter_C_SetStockKnockedOutTimer::CallFunc_K2_SetTimer_ReturnValue' has a wrong offset!");

// Function BaseCharacter.BaseCharacter_C.ToggleAlternateAbilityIcon
// 0x0010 (0x0010 - 0x0000)
struct BaseCharacter_C_ToggleAlternateAbilityIcon final
{
public:
	bool                                          bIsAlternate;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 AbilityClass;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BaseCharacter_C_ToggleAlternateAbilityIcon) == 0x000008, "Wrong alignment on BaseCharacter_C_ToggleAlternateAbilityIcon");
static_assert(sizeof(BaseCharacter_C_ToggleAlternateAbilityIcon) == 0x000010, "Wrong size on BaseCharacter_C_ToggleAlternateAbilityIcon");
static_assert(offsetof(BaseCharacter_C_ToggleAlternateAbilityIcon, bIsAlternate) == 0x000000, "Member 'BaseCharacter_C_ToggleAlternateAbilityIcon::bIsAlternate' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ToggleAlternateAbilityIcon, AbilityClass) == 0x000008, "Member 'BaseCharacter_C_ToggleAlternateAbilityIcon::AbilityClass' has a wrong offset!");

// Function BaseCharacter.BaseCharacter_C.UpdateHighestPercentStat
// 0x0030 (0x0030 - 0x0000)
struct BaseCharacter_C_UpdateHighestPercentStat final
{
public:
	class AController*                            CallFunc_GetInstigatorController_ReturnValue;      // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetAccumulatedDamage_ReturnValue;         // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AMarinerPlayerState*                    K2Node_DynamicCast_AsMariner_Player_State;         // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetStatValue_ReturnValue;                 // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BaseCharacter_C_UpdateHighestPercentStat) == 0x000008, "Wrong alignment on BaseCharacter_C_UpdateHighestPercentStat");
static_assert(sizeof(BaseCharacter_C_UpdateHighestPercentStat) == 0x000030, "Wrong size on BaseCharacter_C_UpdateHighestPercentStat");
static_assert(offsetof(BaseCharacter_C_UpdateHighestPercentStat, CallFunc_GetInstigatorController_ReturnValue) == 0x000000, "Member 'BaseCharacter_C_UpdateHighestPercentStat::CallFunc_GetInstigatorController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_UpdateHighestPercentStat, CallFunc_GetAccumulatedDamage_ReturnValue) == 0x000008, "Member 'BaseCharacter_C_UpdateHighestPercentStat::CallFunc_GetAccumulatedDamage_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_UpdateHighestPercentStat, CallFunc_IsValid_ReturnValue) == 0x00000C, "Member 'BaseCharacter_C_UpdateHighestPercentStat::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_UpdateHighestPercentStat, CallFunc_FTrunc_ReturnValue) == 0x000010, "Member 'BaseCharacter_C_UpdateHighestPercentStat::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_UpdateHighestPercentStat, K2Node_DynamicCast_AsMariner_Player_State) == 0x000018, "Member 'BaseCharacter_C_UpdateHighestPercentStat::K2Node_DynamicCast_AsMariner_Player_State' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_UpdateHighestPercentStat, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BaseCharacter_C_UpdateHighestPercentStat::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_UpdateHighestPercentStat, CallFunc_GetStatValue_ReturnValue) == 0x000024, "Member 'BaseCharacter_C_UpdateHighestPercentStat::CallFunc_GetStatValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_UpdateHighestPercentStat, CallFunc_Less_IntInt_ReturnValue) == 0x000028, "Member 'BaseCharacter_C_UpdateHighestPercentStat::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BaseCharacter.BaseCharacter_C.TeamColorMegaBlastThresholdFX
// 0x003C (0x003C - 0x0000)
struct BaseCharacter_C_TeamColorMegaBlastThresholdFX final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Temp_struct_Variable;                              // 0x0004(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_1;                            // 0x0014(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetTeamIndex_ReturnValue;                 // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMarinerHostility                             CallFunc_TryAndGetHostilityRelativeToLocalPlayer_ReturnValue; // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2A[0x2];                                       // 0x002A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           K2Node_Select_Default;                             // 0x002C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BaseCharacter_C_TeamColorMegaBlastThresholdFX) == 0x000004, "Wrong alignment on BaseCharacter_C_TeamColorMegaBlastThresholdFX");
static_assert(sizeof(BaseCharacter_C_TeamColorMegaBlastThresholdFX) == 0x00003C, "Wrong size on BaseCharacter_C_TeamColorMegaBlastThresholdFX");
static_assert(offsetof(BaseCharacter_C_TeamColorMegaBlastThresholdFX, Temp_bool_Variable) == 0x000000, "Member 'BaseCharacter_C_TeamColorMegaBlastThresholdFX::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_TeamColorMegaBlastThresholdFX, Temp_struct_Variable) == 0x000004, "Member 'BaseCharacter_C_TeamColorMegaBlastThresholdFX::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_TeamColorMegaBlastThresholdFX, Temp_struct_Variable_1) == 0x000014, "Member 'BaseCharacter_C_TeamColorMegaBlastThresholdFX::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_TeamColorMegaBlastThresholdFX, CallFunc_GetTeamIndex_ReturnValue) == 0x000024, "Member 'BaseCharacter_C_TeamColorMegaBlastThresholdFX::CallFunc_GetTeamIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_TeamColorMegaBlastThresholdFX, CallFunc_TryAndGetHostilityRelativeToLocalPlayer_ReturnValue) == 0x000028, "Member 'BaseCharacter_C_TeamColorMegaBlastThresholdFX::CallFunc_TryAndGetHostilityRelativeToLocalPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_TeamColorMegaBlastThresholdFX, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000029, "Member 'BaseCharacter_C_TeamColorMegaBlastThresholdFX::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_TeamColorMegaBlastThresholdFX, K2Node_Select_Default) == 0x00002C, "Member 'BaseCharacter_C_TeamColorMegaBlastThresholdFX::K2Node_Select_Default' has a wrong offset!");

// Function BaseCharacter.BaseCharacter_C.GetDangerThreshold
// 0x0004 (0x0004 - 0x0000)
struct BaseCharacter_C_GetDangerThreshold final
{
public:
	float                                         Threshold;                                         // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BaseCharacter_C_GetDangerThreshold) == 0x000004, "Wrong alignment on BaseCharacter_C_GetDangerThreshold");
static_assert(sizeof(BaseCharacter_C_GetDangerThreshold) == 0x000004, "Wrong size on BaseCharacter_C_GetDangerThreshold");
static_assert(offsetof(BaseCharacter_C_GetDangerThreshold, Threshold) == 0x000000, "Member 'BaseCharacter_C_GetDangerThreshold::Threshold' has a wrong offset!");

// Function BaseCharacter.BaseCharacter_C.HandleShieldItemDamage
// 0x0010 (0x0010 - 0x0000)
struct BaseCharacter_C_HandleShieldItemDamage final
{
public:
	float                                         IncomingDamage;                                    // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsShieldDepleted;                                  // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BaseCharacter_C_HandleShieldItemDamage) == 0x000004, "Wrong alignment on BaseCharacter_C_HandleShieldItemDamage");
static_assert(sizeof(BaseCharacter_C_HandleShieldItemDamage) == 0x000010, "Wrong size on BaseCharacter_C_HandleShieldItemDamage");
static_assert(offsetof(BaseCharacter_C_HandleShieldItemDamage, IncomingDamage) == 0x000000, "Member 'BaseCharacter_C_HandleShieldItemDamage::IncomingDamage' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_HandleShieldItemDamage, IsShieldDepleted) == 0x000004, "Member 'BaseCharacter_C_HandleShieldItemDamage::IsShieldDepleted' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_HandleShieldItemDamage, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000008, "Member 'BaseCharacter_C_HandleShieldItemDamage::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_HandleShieldItemDamage, CallFunc_Greater_FloatFloat_ReturnValue) == 0x00000C, "Member 'BaseCharacter_C_HandleShieldItemDamage::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");

// Function BaseCharacter.BaseCharacter_C.SetShieldItemStartingHealth
// 0x0020 (0x0020 - 0x0000)
struct BaseCharacter_C_SetShieldItemStartingHealth final
{
public:
	float                                         StartingHealth;                                    // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0018(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BaseCharacter_C_SetShieldItemStartingHealth) == 0x000008, "Wrong alignment on BaseCharacter_C_SetShieldItemStartingHealth");
static_assert(sizeof(BaseCharacter_C_SetShieldItemStartingHealth) == 0x000020, "Wrong size on BaseCharacter_C_SetShieldItemStartingHealth");
static_assert(offsetof(BaseCharacter_C_SetShieldItemStartingHealth, StartingHealth) == 0x000000, "Member 'BaseCharacter_C_SetShieldItemStartingHealth::StartingHealth' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_SetShieldItemStartingHealth, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'BaseCharacter_C_SetShieldItemStartingHealth::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_SetShieldItemStartingHealth, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000018, "Member 'BaseCharacter_C_SetShieldItemStartingHealth::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");

// Function BaseCharacter.BaseCharacter_C.EndShieldItemAbility
// 0x0004 (0x0004 - 0x0000)
struct BaseCharacter_C_EndShieldItemAbility final
{
public:
	int32                                         CallFunc_RemoveActiveEffectsWithTags_ReturnValue;  // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BaseCharacter_C_EndShieldItemAbility) == 0x000004, "Wrong alignment on BaseCharacter_C_EndShieldItemAbility");
static_assert(sizeof(BaseCharacter_C_EndShieldItemAbility) == 0x000004, "Wrong size on BaseCharacter_C_EndShieldItemAbility");
static_assert(offsetof(BaseCharacter_C_EndShieldItemAbility, CallFunc_RemoveActiveEffectsWithTags_ReturnValue) == 0x000000, "Member 'BaseCharacter_C_EndShieldItemAbility::CallFunc_RemoveActiveEffectsWithTags_ReturnValue' has a wrong offset!");

// Function BaseCharacter.BaseCharacter_C.AdjustSpawnHeight
// 0x01F0 (0x01F0 - 0x0000)
struct BaseCharacter_C_AdjustSpawnHeight final
{
public:
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0000(0x0010)(ConstParm, ZeroConstructor, ReferenceParm)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0014(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0020(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetScaledCapsuleSize_OutRadius;           // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetScaledCapsuleSize_OutHalfHeight;       // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0034(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_CapsuleTraceSingle_OutHit;                // 0x0044(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_CapsuleTraceSingle_ReturnValue;           // 0x00CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_CD[0x3];                                       // 0x00CD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x00D0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x00DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x00DD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_DE[0x2];                                       // 0x00DE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x00E8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x00F4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0100(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x010C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0128(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x013C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0140(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x014C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0158(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetActorLocation_SweepHitResult;       // 0x0164(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorLocation_ReturnValue;          // 0x01EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BaseCharacter_C_AdjustSpawnHeight) == 0x000008, "Wrong alignment on BaseCharacter_C_AdjustSpawnHeight");
static_assert(sizeof(BaseCharacter_C_AdjustSpawnHeight) == 0x0001F0, "Wrong size on BaseCharacter_C_AdjustSpawnHeight");
static_assert(offsetof(BaseCharacter_C_AdjustSpawnHeight, Temp_object_Variable) == 0x000000, "Member 'BaseCharacter_C_AdjustSpawnHeight::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_AdjustSpawnHeight, CallFunc_HasAuthority_ReturnValue) == 0x000010, "Member 'BaseCharacter_C_AdjustSpawnHeight::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_AdjustSpawnHeight, CallFunc_MakeVector_ReturnValue) == 0x000014, "Member 'BaseCharacter_C_AdjustSpawnHeight::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_AdjustSpawnHeight, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000020, "Member 'BaseCharacter_C_AdjustSpawnHeight::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_AdjustSpawnHeight, CallFunc_GetScaledCapsuleSize_OutRadius) == 0x00002C, "Member 'BaseCharacter_C_AdjustSpawnHeight::CallFunc_GetScaledCapsuleSize_OutRadius' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_AdjustSpawnHeight, CallFunc_GetScaledCapsuleSize_OutHalfHeight) == 0x000030, "Member 'BaseCharacter_C_AdjustSpawnHeight::CallFunc_GetScaledCapsuleSize_OutHalfHeight' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_AdjustSpawnHeight, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000034, "Member 'BaseCharacter_C_AdjustSpawnHeight::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_AdjustSpawnHeight, CallFunc_Add_FloatFloat_ReturnValue) == 0x000040, "Member 'BaseCharacter_C_AdjustSpawnHeight::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_AdjustSpawnHeight, CallFunc_CapsuleTraceSingle_OutHit) == 0x000044, "Member 'BaseCharacter_C_AdjustSpawnHeight::CallFunc_CapsuleTraceSingle_OutHit' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_AdjustSpawnHeight, CallFunc_CapsuleTraceSingle_ReturnValue) == 0x0000CC, "Member 'BaseCharacter_C_AdjustSpawnHeight::CallFunc_CapsuleTraceSingle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_AdjustSpawnHeight, CallFunc_MakeVector_ReturnValue_1) == 0x0000D0, "Member 'BaseCharacter_C_AdjustSpawnHeight::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_AdjustSpawnHeight, CallFunc_BreakHitResult_bBlockingHit) == 0x0000DC, "Member 'BaseCharacter_C_AdjustSpawnHeight::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_AdjustSpawnHeight, CallFunc_BreakHitResult_bInitialOverlap) == 0x0000DD, "Member 'BaseCharacter_C_AdjustSpawnHeight::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_AdjustSpawnHeight, CallFunc_BreakHitResult_Time) == 0x0000E0, "Member 'BaseCharacter_C_AdjustSpawnHeight::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_AdjustSpawnHeight, CallFunc_BreakHitResult_Distance) == 0x0000E4, "Member 'BaseCharacter_C_AdjustSpawnHeight::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_AdjustSpawnHeight, CallFunc_BreakHitResult_Location) == 0x0000E8, "Member 'BaseCharacter_C_AdjustSpawnHeight::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_AdjustSpawnHeight, CallFunc_BreakHitResult_ImpactPoint) == 0x0000F4, "Member 'BaseCharacter_C_AdjustSpawnHeight::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_AdjustSpawnHeight, CallFunc_BreakHitResult_Normal) == 0x000100, "Member 'BaseCharacter_C_AdjustSpawnHeight::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_AdjustSpawnHeight, CallFunc_BreakHitResult_ImpactNormal) == 0x00010C, "Member 'BaseCharacter_C_AdjustSpawnHeight::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_AdjustSpawnHeight, CallFunc_BreakHitResult_PhysMat) == 0x000118, "Member 'BaseCharacter_C_AdjustSpawnHeight::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_AdjustSpawnHeight, CallFunc_BreakHitResult_HitActor) == 0x000120, "Member 'BaseCharacter_C_AdjustSpawnHeight::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_AdjustSpawnHeight, CallFunc_BreakHitResult_HitComponent) == 0x000128, "Member 'BaseCharacter_C_AdjustSpawnHeight::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_AdjustSpawnHeight, CallFunc_BreakHitResult_HitBoneName) == 0x000130, "Member 'BaseCharacter_C_AdjustSpawnHeight::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_AdjustSpawnHeight, CallFunc_BreakHitResult_HitItem) == 0x000138, "Member 'BaseCharacter_C_AdjustSpawnHeight::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_AdjustSpawnHeight, CallFunc_BreakHitResult_FaceIndex) == 0x00013C, "Member 'BaseCharacter_C_AdjustSpawnHeight::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_AdjustSpawnHeight, CallFunc_BreakHitResult_TraceStart) == 0x000140, "Member 'BaseCharacter_C_AdjustSpawnHeight::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_AdjustSpawnHeight, CallFunc_BreakHitResult_TraceEnd) == 0x00014C, "Member 'BaseCharacter_C_AdjustSpawnHeight::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_AdjustSpawnHeight, CallFunc_Add_VectorVector_ReturnValue) == 0x000158, "Member 'BaseCharacter_C_AdjustSpawnHeight::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_AdjustSpawnHeight, CallFunc_K2_SetActorLocation_SweepHitResult) == 0x000164, "Member 'BaseCharacter_C_AdjustSpawnHeight::CallFunc_K2_SetActorLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_AdjustSpawnHeight, CallFunc_K2_SetActorLocation_ReturnValue) == 0x0001EC, "Member 'BaseCharacter_C_AdjustSpawnHeight::CallFunc_K2_SetActorLocation_ReturnValue' has a wrong offset!");

// Function BaseCharacter.BaseCharacter_C.GetMegaBlastControlRotation
// 0x0054 (0x0054 - 0x0000)
struct BaseCharacter_C_GetMegaBlastControlRotation final
{
public:
	struct FRotator                               ReturnValue;                                       // 0x0000(0x000C)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x000C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x0018(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_NegateVector_ReturnValue;                 // 0x0024(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0030(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x003C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_FindLookAtRotation_ReturnValue;           // 0x0048(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BaseCharacter_C_GetMegaBlastControlRotation) == 0x000004, "Wrong alignment on BaseCharacter_C_GetMegaBlastControlRotation");
static_assert(sizeof(BaseCharacter_C_GetMegaBlastControlRotation) == 0x000054, "Wrong size on BaseCharacter_C_GetMegaBlastControlRotation");
static_assert(offsetof(BaseCharacter_C_GetMegaBlastControlRotation, ReturnValue) == 0x000000, "Member 'BaseCharacter_C_GetMegaBlastControlRotation::ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_GetMegaBlastControlRotation, CallFunc_K2_GetActorLocation_ReturnValue) == 0x00000C, "Member 'BaseCharacter_C_GetMegaBlastControlRotation::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_GetMegaBlastControlRotation, CallFunc_Normal_ReturnValue) == 0x000018, "Member 'BaseCharacter_C_GetMegaBlastControlRotation::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_GetMegaBlastControlRotation, CallFunc_NegateVector_ReturnValue) == 0x000024, "Member 'BaseCharacter_C_GetMegaBlastControlRotation::CallFunc_NegateVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_GetMegaBlastControlRotation, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000030, "Member 'BaseCharacter_C_GetMegaBlastControlRotation::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_GetMegaBlastControlRotation, CallFunc_Add_VectorVector_ReturnValue) == 0x00003C, "Member 'BaseCharacter_C_GetMegaBlastControlRotation::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_GetMegaBlastControlRotation, CallFunc_FindLookAtRotation_ReturnValue) == 0x000048, "Member 'BaseCharacter_C_GetMegaBlastControlRotation::CallFunc_FindLookAtRotation_ReturnValue' has a wrong offset!");

// Function BaseCharacter.BaseCharacter_C.ToggleMegaBlastCamera
// 0x0001 (0x0001 - 0x0000)
struct BaseCharacter_C_ToggleMegaBlastCamera final
{
public:
	bool                                          ThirdPerson;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BaseCharacter_C_ToggleMegaBlastCamera) == 0x000001, "Wrong alignment on BaseCharacter_C_ToggleMegaBlastCamera");
static_assert(sizeof(BaseCharacter_C_ToggleMegaBlastCamera) == 0x000001, "Wrong size on BaseCharacter_C_ToggleMegaBlastCamera");
static_assert(offsetof(BaseCharacter_C_ToggleMegaBlastCamera, ThirdPerson) == 0x000000, "Member 'BaseCharacter_C_ToggleMegaBlastCamera::ThirdPerson' has a wrong offset!");

// Function BaseCharacter.BaseCharacter_C.GetJumpFXParticleSystemComponent
// 0x0018 (0x0018 - 0x0000)
struct BaseCharacter_C_GetJumpFXParticleSystemComponent final
{
public:
	int32                                         CurrentJumpCount;                                  // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystemComponent*               ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BaseCharacter_C_GetJumpFXParticleSystemComponent) == 0x000008, "Wrong alignment on BaseCharacter_C_GetJumpFXParticleSystemComponent");
static_assert(sizeof(BaseCharacter_C_GetJumpFXParticleSystemComponent) == 0x000018, "Wrong size on BaseCharacter_C_GetJumpFXParticleSystemComponent");
static_assert(offsetof(BaseCharacter_C_GetJumpFXParticleSystemComponent, CurrentJumpCount) == 0x000000, "Member 'BaseCharacter_C_GetJumpFXParticleSystemComponent::CurrentJumpCount' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_GetJumpFXParticleSystemComponent, ReturnValue) == 0x000008, "Member 'BaseCharacter_C_GetJumpFXParticleSystemComponent::ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_GetJumpFXParticleSystemComponent, CallFunc_Greater_IntInt_ReturnValue) == 0x000010, "Member 'BaseCharacter_C_GetJumpFXParticleSystemComponent::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

// Function BaseCharacter.BaseCharacter_C.HandleMoveAffectingGameplayEffectApplied
// 0x0010 (0x0010 - 0x0000)
struct BaseCharacter_C_HandleMoveAffectingGameplayEffectApplied final
{
public:
	class UClass*                                 Effect;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ClassClass_ReturnValue;        // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BaseCharacter_C_HandleMoveAffectingGameplayEffectApplied) == 0x000008, "Wrong alignment on BaseCharacter_C_HandleMoveAffectingGameplayEffectApplied");
static_assert(sizeof(BaseCharacter_C_HandleMoveAffectingGameplayEffectApplied) == 0x000010, "Wrong size on BaseCharacter_C_HandleMoveAffectingGameplayEffectApplied");
static_assert(offsetof(BaseCharacter_C_HandleMoveAffectingGameplayEffectApplied, Effect) == 0x000000, "Member 'BaseCharacter_C_HandleMoveAffectingGameplayEffectApplied::Effect' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_HandleMoveAffectingGameplayEffectApplied, CallFunc_EqualEqual_ClassClass_ReturnValue) == 0x000008, "Member 'BaseCharacter_C_HandleMoveAffectingGameplayEffectApplied::CallFunc_EqualEqual_ClassClass_ReturnValue' has a wrong offset!");

// Function BaseCharacter.BaseCharacter_C.HandleKnockedOutEnemyEffectApplied
// 0x0001 (0x0001 - 0x0000)
struct BaseCharacter_C_HandleKnockedOutEnemyEffectApplied final
{
public:
	bool                                          CallFunc_IsLocallyControlled_ReturnValue;          // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BaseCharacter_C_HandleKnockedOutEnemyEffectApplied) == 0x000001, "Wrong alignment on BaseCharacter_C_HandleKnockedOutEnemyEffectApplied");
static_assert(sizeof(BaseCharacter_C_HandleKnockedOutEnemyEffectApplied) == 0x000001, "Wrong size on BaseCharacter_C_HandleKnockedOutEnemyEffectApplied");
static_assert(offsetof(BaseCharacter_C_HandleKnockedOutEnemyEffectApplied, CallFunc_IsLocallyControlled_ReturnValue) == 0x000000, "Member 'BaseCharacter_C_HandleKnockedOutEnemyEffectApplied::CallFunc_IsLocallyControlled_ReturnValue' has a wrong offset!");

// Function BaseCharacter.BaseCharacter_C.DebugDamageCaused
// 0x0118 (0x0118 - 0x0000)
struct BaseCharacter_C_DebugDamageCaused final
{
public:
	const class UObject*                          Object;                                            // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          InBool;                                            // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          InBool2;                                           // 0x0009(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 Class_0;                                           // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                InVec;                                             // 0x0018(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         InFloat;                                           // 0x0024(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_FloatToString_ReturnValue;           // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_VectorToString_ReturnValue;          // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetClassDisplayName_ReturnValue;          // 0x0048(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_BoolToString_ReturnValue;            // 0x0058(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_BoolToString_ReturnValue_1;          // 0x0068(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x0078(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0088(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0098(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x00A8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_3;              // 0x00B8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_4;              // 0x00C8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_5;              // 0x00D8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_6;              // 0x00E8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_7;              // 0x00F8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_8;              // 0x0108(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BaseCharacter_C_DebugDamageCaused) == 0x000008, "Wrong alignment on BaseCharacter_C_DebugDamageCaused");
static_assert(sizeof(BaseCharacter_C_DebugDamageCaused) == 0x000118, "Wrong size on BaseCharacter_C_DebugDamageCaused");
static_assert(offsetof(BaseCharacter_C_DebugDamageCaused, Object) == 0x000000, "Member 'BaseCharacter_C_DebugDamageCaused::Object' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_DebugDamageCaused, InBool) == 0x000008, "Member 'BaseCharacter_C_DebugDamageCaused::InBool' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_DebugDamageCaused, InBool2) == 0x000009, "Member 'BaseCharacter_C_DebugDamageCaused::InBool2' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_DebugDamageCaused, Class_0) == 0x000010, "Member 'BaseCharacter_C_DebugDamageCaused::Class_0' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_DebugDamageCaused, InVec) == 0x000018, "Member 'BaseCharacter_C_DebugDamageCaused::InVec' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_DebugDamageCaused, InFloat) == 0x000024, "Member 'BaseCharacter_C_DebugDamageCaused::InFloat' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_DebugDamageCaused, CallFunc_Conv_FloatToString_ReturnValue) == 0x000028, "Member 'BaseCharacter_C_DebugDamageCaused::CallFunc_Conv_FloatToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_DebugDamageCaused, CallFunc_Conv_VectorToString_ReturnValue) == 0x000038, "Member 'BaseCharacter_C_DebugDamageCaused::CallFunc_Conv_VectorToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_DebugDamageCaused, CallFunc_GetClassDisplayName_ReturnValue) == 0x000048, "Member 'BaseCharacter_C_DebugDamageCaused::CallFunc_GetClassDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_DebugDamageCaused, CallFunc_Conv_BoolToString_ReturnValue) == 0x000058, "Member 'BaseCharacter_C_DebugDamageCaused::CallFunc_Conv_BoolToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_DebugDamageCaused, CallFunc_Conv_BoolToString_ReturnValue_1) == 0x000068, "Member 'BaseCharacter_C_DebugDamageCaused::CallFunc_Conv_BoolToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_DebugDamageCaused, CallFunc_GetDisplayName_ReturnValue) == 0x000078, "Member 'BaseCharacter_C_DebugDamageCaused::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_DebugDamageCaused, CallFunc_Concat_StrStr_ReturnValue) == 0x000088, "Member 'BaseCharacter_C_DebugDamageCaused::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_DebugDamageCaused, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000098, "Member 'BaseCharacter_C_DebugDamageCaused::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_DebugDamageCaused, CallFunc_Concat_StrStr_ReturnValue_2) == 0x0000A8, "Member 'BaseCharacter_C_DebugDamageCaused::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_DebugDamageCaused, CallFunc_Concat_StrStr_ReturnValue_3) == 0x0000B8, "Member 'BaseCharacter_C_DebugDamageCaused::CallFunc_Concat_StrStr_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_DebugDamageCaused, CallFunc_Concat_StrStr_ReturnValue_4) == 0x0000C8, "Member 'BaseCharacter_C_DebugDamageCaused::CallFunc_Concat_StrStr_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_DebugDamageCaused, CallFunc_Concat_StrStr_ReturnValue_5) == 0x0000D8, "Member 'BaseCharacter_C_DebugDamageCaused::CallFunc_Concat_StrStr_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_DebugDamageCaused, CallFunc_Concat_StrStr_ReturnValue_6) == 0x0000E8, "Member 'BaseCharacter_C_DebugDamageCaused::CallFunc_Concat_StrStr_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_DebugDamageCaused, CallFunc_Concat_StrStr_ReturnValue_7) == 0x0000F8, "Member 'BaseCharacter_C_DebugDamageCaused::CallFunc_Concat_StrStr_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_DebugDamageCaused, CallFunc_Concat_StrStr_ReturnValue_8) == 0x000108, "Member 'BaseCharacter_C_DebugDamageCaused::CallFunc_Concat_StrStr_ReturnValue_8' has a wrong offset!");

// Function BaseCharacter.BaseCharacter_C.EnableManCannonChangeDirection
// 0x0048 (0x0048 - 0x0000)
struct BaseCharacter_C_EnableManCannonChangeDirection final
{
public:
	TArray<struct FGameplayTag>                   K2Node_MakeArray_Array;                            // 0x0000(0x0010)(ConstParm, ZeroConstructor, ReferenceParm)
	struct FGameplayTagContainer                  CallFunc_MakeGameplayTagContainerFromArray_ReturnValue; // 0x0010(0x0020)()
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasAllMatchingGameplayTags_self_CastInput; // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAllMatchingGameplayTags_ReturnValue;   // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BaseCharacter_C_EnableManCannonChangeDirection) == 0x000008, "Wrong alignment on BaseCharacter_C_EnableManCannonChangeDirection");
static_assert(sizeof(BaseCharacter_C_EnableManCannonChangeDirection) == 0x000048, "Wrong size on BaseCharacter_C_EnableManCannonChangeDirection");
static_assert(offsetof(BaseCharacter_C_EnableManCannonChangeDirection, K2Node_MakeArray_Array) == 0x000000, "Member 'BaseCharacter_C_EnableManCannonChangeDirection::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_EnableManCannonChangeDirection, CallFunc_MakeGameplayTagContainerFromArray_ReturnValue) == 0x000010, "Member 'BaseCharacter_C_EnableManCannonChangeDirection::CallFunc_MakeGameplayTagContainerFromArray_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_EnableManCannonChangeDirection, CallFunc_HasAllMatchingGameplayTags_self_CastInput) == 0x000030, "Member 'BaseCharacter_C_EnableManCannonChangeDirection::CallFunc_HasAllMatchingGameplayTags_self_CastInput' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_EnableManCannonChangeDirection, CallFunc_HasAllMatchingGameplayTags_ReturnValue) == 0x000040, "Member 'BaseCharacter_C_EnableManCannonChangeDirection::CallFunc_HasAllMatchingGameplayTags_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_EnableManCannonChangeDirection, CallFunc_BooleanAND_ReturnValue) == 0x000041, "Member 'BaseCharacter_C_EnableManCannonChangeDirection::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BaseCharacter.BaseCharacter_C.HandleManCannonEffectAdded
// 0x0010 (0x0010 - 0x0000)
struct BaseCharacter_C_HandleManCannonEffectAdded final
{
public:
	class UClass*                                 GameplayEffect;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ClassClass_ReturnValue;        // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BaseCharacter_C_HandleManCannonEffectAdded) == 0x000008, "Wrong alignment on BaseCharacter_C_HandleManCannonEffectAdded");
static_assert(sizeof(BaseCharacter_C_HandleManCannonEffectAdded) == 0x000010, "Wrong size on BaseCharacter_C_HandleManCannonEffectAdded");
static_assert(offsetof(BaseCharacter_C_HandleManCannonEffectAdded, GameplayEffect) == 0x000000, "Member 'BaseCharacter_C_HandleManCannonEffectAdded::GameplayEffect' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_HandleManCannonEffectAdded, CallFunc_EqualEqual_ClassClass_ReturnValue) == 0x000008, "Member 'BaseCharacter_C_HandleManCannonEffectAdded::CallFunc_EqualEqual_ClassClass_ReturnValue' has a wrong offset!");

// Function BaseCharacter.BaseCharacter_C.HandleManCannonEffectRemoved
// 0x0010 (0x0010 - 0x0000)
struct BaseCharacter_C_HandleManCannonEffectRemoved final
{
public:
	class UClass*                                 GameplayEffect;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ClassClass_ReturnValue;        // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BaseCharacter_C_HandleManCannonEffectRemoved) == 0x000008, "Wrong alignment on BaseCharacter_C_HandleManCannonEffectRemoved");
static_assert(sizeof(BaseCharacter_C_HandleManCannonEffectRemoved) == 0x000010, "Wrong size on BaseCharacter_C_HandleManCannonEffectRemoved");
static_assert(offsetof(BaseCharacter_C_HandleManCannonEffectRemoved, GameplayEffect) == 0x000000, "Member 'BaseCharacter_C_HandleManCannonEffectRemoved::GameplayEffect' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_HandleManCannonEffectRemoved, CallFunc_EqualEqual_ClassClass_ReturnValue) == 0x000008, "Member 'BaseCharacter_C_HandleManCannonEffectRemoved::CallFunc_EqualEqual_ClassClass_ReturnValue' has a wrong offset!");

// Function BaseCharacter.BaseCharacter_C.HandleArtifactTagApplication
// 0x001C (0x001C - 0x0000)
struct BaseCharacter_C_HandleArtifactTagApplication final
{
public:
	struct FGameplayTag                           GameplayTag;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	bool                                          TagHandled;                                        // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_GetTagName_ReturnValue;                   // 0x000C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchName_CmpSuccess;                      // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue;          // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0016(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0017(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_GameplayTag_ReturnValue;         // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue_1;        // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BaseCharacter_C_HandleArtifactTagApplication) == 0x000004, "Wrong alignment on BaseCharacter_C_HandleArtifactTagApplication");
static_assert(sizeof(BaseCharacter_C_HandleArtifactTagApplication) == 0x00001C, "Wrong size on BaseCharacter_C_HandleArtifactTagApplication");
static_assert(offsetof(BaseCharacter_C_HandleArtifactTagApplication, GameplayTag) == 0x000000, "Member 'BaseCharacter_C_HandleArtifactTagApplication::GameplayTag' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_HandleArtifactTagApplication, TagHandled) == 0x000008, "Member 'BaseCharacter_C_HandleArtifactTagApplication::TagHandled' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_HandleArtifactTagApplication, CallFunc_GetTagName_ReturnValue) == 0x00000C, "Member 'BaseCharacter_C_HandleArtifactTagApplication::CallFunc_GetTagName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_HandleArtifactTagApplication, K2Node_SwitchName_CmpSuccess) == 0x000014, "Member 'BaseCharacter_C_HandleArtifactTagApplication::K2Node_SwitchName_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_HandleArtifactTagApplication, CallFunc_IsLocallyControlled_ReturnValue) == 0x000015, "Member 'BaseCharacter_C_HandleArtifactTagApplication::CallFunc_IsLocallyControlled_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_HandleArtifactTagApplication, CallFunc_Not_PreBool_ReturnValue) == 0x000016, "Member 'BaseCharacter_C_HandleArtifactTagApplication::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_HandleArtifactTagApplication, CallFunc_BooleanAND_ReturnValue) == 0x000017, "Member 'BaseCharacter_C_HandleArtifactTagApplication::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_HandleArtifactTagApplication, CallFunc_NotEqual_GameplayTag_ReturnValue) == 0x000018, "Member 'BaseCharacter_C_HandleArtifactTagApplication::CallFunc_NotEqual_GameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_HandleArtifactTagApplication, CallFunc_IsLocallyControlled_ReturnValue_1) == 0x000019, "Member 'BaseCharacter_C_HandleArtifactTagApplication::CallFunc_IsLocallyControlled_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_HandleArtifactTagApplication, CallFunc_Not_PreBool_ReturnValue_1) == 0x00001A, "Member 'BaseCharacter_C_HandleArtifactTagApplication::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_HandleArtifactTagApplication, CallFunc_BooleanAND_ReturnValue_1) == 0x00001B, "Member 'BaseCharacter_C_HandleArtifactTagApplication::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");

// Function BaseCharacter.BaseCharacter_C.HandleArtifactTagRemoval
// 0x0038 (0x0038 - 0x0000)
struct BaseCharacter_C_HandleArtifactTagRemoval final
{
public:
	struct FGameplayTag                           GameplayTag;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	bool                                          TagHandled;                                        // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_GetTagName_ReturnValue;                   // 0x000C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchName_CmpSuccess;                      // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue;          // 0x0016(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0017(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x001C(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0030(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BaseCharacter_C_HandleArtifactTagRemoval) == 0x000008, "Wrong alignment on BaseCharacter_C_HandleArtifactTagRemoval");
static_assert(sizeof(BaseCharacter_C_HandleArtifactTagRemoval) == 0x000038, "Wrong size on BaseCharacter_C_HandleArtifactTagRemoval");
static_assert(offsetof(BaseCharacter_C_HandleArtifactTagRemoval, GameplayTag) == 0x000000, "Member 'BaseCharacter_C_HandleArtifactTagRemoval::GameplayTag' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_HandleArtifactTagRemoval, TagHandled) == 0x000008, "Member 'BaseCharacter_C_HandleArtifactTagRemoval::TagHandled' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_HandleArtifactTagRemoval, CallFunc_GetTagName_ReturnValue) == 0x00000C, "Member 'BaseCharacter_C_HandleArtifactTagRemoval::CallFunc_GetTagName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_HandleArtifactTagRemoval, K2Node_SwitchName_CmpSuccess) == 0x000014, "Member 'BaseCharacter_C_HandleArtifactTagRemoval::K2Node_SwitchName_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_HandleArtifactTagRemoval, CallFunc_Not_PreBool_ReturnValue) == 0x000015, "Member 'BaseCharacter_C_HandleArtifactTagRemoval::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_HandleArtifactTagRemoval, CallFunc_IsLocallyControlled_ReturnValue) == 0x000016, "Member 'BaseCharacter_C_HandleArtifactTagRemoval::CallFunc_IsLocallyControlled_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_HandleArtifactTagRemoval, CallFunc_BooleanAND_ReturnValue) == 0x000017, "Member 'BaseCharacter_C_HandleArtifactTagRemoval::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_HandleArtifactTagRemoval, CallFunc_BooleanAND_ReturnValue_1) == 0x000018, "Member 'BaseCharacter_C_HandleArtifactTagRemoval::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_HandleArtifactTagRemoval, K2Node_CreateDelegate_OutputDelegate) == 0x00001C, "Member 'BaseCharacter_C_HandleArtifactTagRemoval::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_HandleArtifactTagRemoval, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000030, "Member 'BaseCharacter_C_HandleArtifactTagRemoval::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");

// Function BaseCharacter.BaseCharacter_C.InitializeArtifactGlowValues
// 0x00C0 (0x00C0 - 0x0000)
struct BaseCharacter_C_InitializeArtifactGlowValues final
{
public:
	struct FGameplayTag                           TagType;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           GlowColor;                                         // 0x0008(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_GetTagName_ReturnValue;                   // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchName_CmpSuccess;                      // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_1;                               // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetNumMaterials_ReturnValue;              // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     CallFunc_GetMaterial_ReturnValue;                  // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetNumMaterials_ReturnValue_1;            // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61[0x3];                                       // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_2;                               // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_3;                               // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     CallFunc_GetMaterial_ReturnValue_1;                // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     CallFunc_GetMaterial_ReturnValue_2;                // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue_1; // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue_2; // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetNumMaterials_ReturnValue_2;            // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_2;            // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_2;           // 0x0099(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9A[0x2];                                       // 0x009A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     CallFunc_GetMaterial_ReturnValue_3;                // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetNumMaterials_ReturnValue_3;            // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AC[0x4];                                       // 0x00AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue_3; // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_3;            // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_3;           // 0x00BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BaseCharacter_C_InitializeArtifactGlowValues) == 0x000008, "Wrong alignment on BaseCharacter_C_InitializeArtifactGlowValues");
static_assert(sizeof(BaseCharacter_C_InitializeArtifactGlowValues) == 0x0000C0, "Wrong size on BaseCharacter_C_InitializeArtifactGlowValues");
static_assert(offsetof(BaseCharacter_C_InitializeArtifactGlowValues, TagType) == 0x000000, "Member 'BaseCharacter_C_InitializeArtifactGlowValues::TagType' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_InitializeArtifactGlowValues, GlowColor) == 0x000008, "Member 'BaseCharacter_C_InitializeArtifactGlowValues::GlowColor' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_InitializeArtifactGlowValues, CallFunc_GetTagName_ReturnValue) == 0x000018, "Member 'BaseCharacter_C_InitializeArtifactGlowValues::CallFunc_GetTagName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_InitializeArtifactGlowValues, Temp_int_Variable) == 0x000020, "Member 'BaseCharacter_C_InitializeArtifactGlowValues::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_InitializeArtifactGlowValues, K2Node_SwitchName_CmpSuccess) == 0x000024, "Member 'BaseCharacter_C_InitializeArtifactGlowValues::K2Node_SwitchName_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_InitializeArtifactGlowValues, CallFunc_Add_IntInt_ReturnValue) == 0x000028, "Member 'BaseCharacter_C_InitializeArtifactGlowValues::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_InitializeArtifactGlowValues, CallFunc_Not_PreBool_ReturnValue) == 0x00002C, "Member 'BaseCharacter_C_InitializeArtifactGlowValues::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_InitializeArtifactGlowValues, Temp_int_Variable_1) == 0x000030, "Member 'BaseCharacter_C_InitializeArtifactGlowValues::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_InitializeArtifactGlowValues, CallFunc_Add_IntInt_ReturnValue_1) == 0x000034, "Member 'BaseCharacter_C_InitializeArtifactGlowValues::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_InitializeArtifactGlowValues, CallFunc_GetNumMaterials_ReturnValue) == 0x000038, "Member 'BaseCharacter_C_InitializeArtifactGlowValues::CallFunc_GetNumMaterials_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_InitializeArtifactGlowValues, CallFunc_GetMaterial_ReturnValue) == 0x000040, "Member 'BaseCharacter_C_InitializeArtifactGlowValues::CallFunc_GetMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_InitializeArtifactGlowValues, CallFunc_Subtract_IntInt_ReturnValue) == 0x000048, "Member 'BaseCharacter_C_InitializeArtifactGlowValues::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_InitializeArtifactGlowValues, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000050, "Member 'BaseCharacter_C_InitializeArtifactGlowValues::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_InitializeArtifactGlowValues, CallFunc_GetNumMaterials_ReturnValue_1) == 0x000058, "Member 'BaseCharacter_C_InitializeArtifactGlowValues::CallFunc_GetNumMaterials_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_InitializeArtifactGlowValues, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x00005C, "Member 'BaseCharacter_C_InitializeArtifactGlowValues::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_InitializeArtifactGlowValues, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000060, "Member 'BaseCharacter_C_InitializeArtifactGlowValues::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_InitializeArtifactGlowValues, Temp_int_Variable_2) == 0x000064, "Member 'BaseCharacter_C_InitializeArtifactGlowValues::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_InitializeArtifactGlowValues, CallFunc_Add_IntInt_ReturnValue_2) == 0x000068, "Member 'BaseCharacter_C_InitializeArtifactGlowValues::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_InitializeArtifactGlowValues, Temp_int_Variable_3) == 0x00006C, "Member 'BaseCharacter_C_InitializeArtifactGlowValues::Temp_int_Variable_3' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_InitializeArtifactGlowValues, CallFunc_GetMaterial_ReturnValue_1) == 0x000070, "Member 'BaseCharacter_C_InitializeArtifactGlowValues::CallFunc_GetMaterial_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_InitializeArtifactGlowValues, CallFunc_GetMaterial_ReturnValue_2) == 0x000078, "Member 'BaseCharacter_C_InitializeArtifactGlowValues::CallFunc_GetMaterial_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_InitializeArtifactGlowValues, CallFunc_CreateDynamicMaterialInstance_ReturnValue_1) == 0x000080, "Member 'BaseCharacter_C_InitializeArtifactGlowValues::CallFunc_CreateDynamicMaterialInstance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_InitializeArtifactGlowValues, CallFunc_CreateDynamicMaterialInstance_ReturnValue_2) == 0x000088, "Member 'BaseCharacter_C_InitializeArtifactGlowValues::CallFunc_CreateDynamicMaterialInstance_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_InitializeArtifactGlowValues, CallFunc_GetNumMaterials_ReturnValue_2) == 0x000090, "Member 'BaseCharacter_C_InitializeArtifactGlowValues::CallFunc_GetNumMaterials_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_InitializeArtifactGlowValues, CallFunc_Subtract_IntInt_ReturnValue_2) == 0x000094, "Member 'BaseCharacter_C_InitializeArtifactGlowValues::CallFunc_Subtract_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_InitializeArtifactGlowValues, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x000098, "Member 'BaseCharacter_C_InitializeArtifactGlowValues::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_InitializeArtifactGlowValues, CallFunc_LessEqual_IntInt_ReturnValue_2) == 0x000099, "Member 'BaseCharacter_C_InitializeArtifactGlowValues::CallFunc_LessEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_InitializeArtifactGlowValues, CallFunc_Add_IntInt_ReturnValue_3) == 0x00009C, "Member 'BaseCharacter_C_InitializeArtifactGlowValues::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_InitializeArtifactGlowValues, CallFunc_GetMaterial_ReturnValue_3) == 0x0000A0, "Member 'BaseCharacter_C_InitializeArtifactGlowValues::CallFunc_GetMaterial_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_InitializeArtifactGlowValues, CallFunc_GetNumMaterials_ReturnValue_3) == 0x0000A8, "Member 'BaseCharacter_C_InitializeArtifactGlowValues::CallFunc_GetNumMaterials_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_InitializeArtifactGlowValues, CallFunc_CreateDynamicMaterialInstance_ReturnValue_3) == 0x0000B0, "Member 'BaseCharacter_C_InitializeArtifactGlowValues::CallFunc_CreateDynamicMaterialInstance_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_InitializeArtifactGlowValues, CallFunc_Subtract_IntInt_ReturnValue_3) == 0x0000B8, "Member 'BaseCharacter_C_InitializeArtifactGlowValues::CallFunc_Subtract_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_InitializeArtifactGlowValues, CallFunc_LessEqual_IntInt_ReturnValue_3) == 0x0000BC, "Member 'BaseCharacter_C_InitializeArtifactGlowValues::CallFunc_LessEqual_IntInt_ReturnValue_3' has a wrong offset!");

// Function BaseCharacter.BaseCharacter_C.SetupSharedPostProcess
// 0x0010 (0x0010 - 0x0000)
struct BaseCharacter_C_SetupSharedPostProcess final
{
public:
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue_1; // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BaseCharacter_C_SetupSharedPostProcess) == 0x000008, "Wrong alignment on BaseCharacter_C_SetupSharedPostProcess");
static_assert(sizeof(BaseCharacter_C_SetupSharedPostProcess) == 0x000010, "Wrong size on BaseCharacter_C_SetupSharedPostProcess");
static_assert(offsetof(BaseCharacter_C_SetupSharedPostProcess, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000000, "Member 'BaseCharacter_C_SetupSharedPostProcess::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_SetupSharedPostProcess, CallFunc_CreateDynamicMaterialInstance_ReturnValue_1) == 0x000008, "Member 'BaseCharacter_C_SetupSharedPostProcess::CallFunc_CreateDynamicMaterialInstance_ReturnValue_1' has a wrong offset!");

// Function BaseCharacter.BaseCharacter_C.HandleGameplayTagApplication
// 0x0070 (0x0070 - 0x0000)
struct BaseCharacter_C_HandleGameplayTagApplication final
{
public:
	struct FGameplayTag                           GameplayTag;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	bool                                          TagHandled;                                        // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  PrimaryAbilityTags;                                // 0x0010(0x0020)(Edit, BlueprintVisible)
	class FName                                   CallFunc_GetTagName_ReturnValue;                   // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchName_CmpSuccess;                      // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4A[0x6];                                       // 0x004A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue_1;            // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UAnimMontage* Montage)>  K2Node_CreateDelegate_OutputDelegate;              // 0x0058(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_3;                // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue;          // 0x006A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x006B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue_1;        // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x006D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x006E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BaseCharacter_C_HandleGameplayTagApplication) == 0x000008, "Wrong alignment on BaseCharacter_C_HandleGameplayTagApplication");
static_assert(sizeof(BaseCharacter_C_HandleGameplayTagApplication) == 0x000070, "Wrong size on BaseCharacter_C_HandleGameplayTagApplication");
static_assert(offsetof(BaseCharacter_C_HandleGameplayTagApplication, GameplayTag) == 0x000000, "Member 'BaseCharacter_C_HandleGameplayTagApplication::GameplayTag' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_HandleGameplayTagApplication, TagHandled) == 0x000008, "Member 'BaseCharacter_C_HandleGameplayTagApplication::TagHandled' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_HandleGameplayTagApplication, PrimaryAbilityTags) == 0x000010, "Member 'BaseCharacter_C_HandleGameplayTagApplication::PrimaryAbilityTags' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_HandleGameplayTagApplication, CallFunc_GetTagName_ReturnValue) == 0x000030, "Member 'BaseCharacter_C_HandleGameplayTagApplication::CallFunc_GetTagName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_HandleGameplayTagApplication, K2Node_SwitchName_CmpSuccess) == 0x000038, "Member 'BaseCharacter_C_HandleGameplayTagApplication::K2Node_SwitchName_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_HandleGameplayTagApplication, CallFunc_GetAnimInstance_ReturnValue) == 0x000040, "Member 'BaseCharacter_C_HandleGameplayTagApplication::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_HandleGameplayTagApplication, CallFunc_Not_PreBool_ReturnValue) == 0x000048, "Member 'BaseCharacter_C_HandleGameplayTagApplication::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_HandleGameplayTagApplication, CallFunc_Not_PreBool_ReturnValue_1) == 0x000049, "Member 'BaseCharacter_C_HandleGameplayTagApplication::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_HandleGameplayTagApplication, CallFunc_GetAnimInstance_ReturnValue_1) == 0x000050, "Member 'BaseCharacter_C_HandleGameplayTagApplication::CallFunc_GetAnimInstance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_HandleGameplayTagApplication, K2Node_CreateDelegate_OutputDelegate) == 0x000058, "Member 'BaseCharacter_C_HandleGameplayTagApplication::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_HandleGameplayTagApplication, CallFunc_Not_PreBool_ReturnValue_2) == 0x000068, "Member 'BaseCharacter_C_HandleGameplayTagApplication::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_HandleGameplayTagApplication, CallFunc_Not_PreBool_ReturnValue_3) == 0x000069, "Member 'BaseCharacter_C_HandleGameplayTagApplication::CallFunc_Not_PreBool_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_HandleGameplayTagApplication, CallFunc_IsLocallyControlled_ReturnValue) == 0x00006A, "Member 'BaseCharacter_C_HandleGameplayTagApplication::CallFunc_IsLocallyControlled_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_HandleGameplayTagApplication, CallFunc_BooleanAND_ReturnValue) == 0x00006B, "Member 'BaseCharacter_C_HandleGameplayTagApplication::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_HandleGameplayTagApplication, CallFunc_IsLocallyControlled_ReturnValue_1) == 0x00006C, "Member 'BaseCharacter_C_HandleGameplayTagApplication::CallFunc_IsLocallyControlled_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_HandleGameplayTagApplication, CallFunc_BooleanAND_ReturnValue_1) == 0x00006D, "Member 'BaseCharacter_C_HandleGameplayTagApplication::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_HandleGameplayTagApplication, CallFunc_BooleanAND_ReturnValue_2) == 0x00006E, "Member 'BaseCharacter_C_HandleGameplayTagApplication::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");

// Function BaseCharacter.BaseCharacter_C.HandleGameplayTagRemoval
// 0x00A8 (0x00A8 - 0x0000)
struct BaseCharacter_C_HandleGameplayTagRemoval final
{
public:
	struct FGameplayTag                           GameplayTag;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	bool                                          TagHandled;                                        // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  PrimaryAbilityTags;                                // 0x0010(0x0020)(Edit, BlueprintVisible)
	class FName                                   CallFunc_GetTagName_ReturnValue;                   // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchName_CmpSuccess;                      // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class UAnimMontage* Montage)>  K2Node_CreateDelegate_OutputDelegate;              // 0x0044(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue_1;            // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  CallFunc_MakeLiteralGameplayTagContainer_ReturnValue; // 0x0068(0x0020)()
	bool                                          CallFunc_MatchesAnyTags_ReturnValue;               // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x008A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue;          // 0x008B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x008C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x008D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue_1;        // 0x008E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x008F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x0090(0x0010)(ZeroConstructor, NoDestructor)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x00A0(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BaseCharacter_C_HandleGameplayTagRemoval) == 0x000008, "Wrong alignment on BaseCharacter_C_HandleGameplayTagRemoval");
static_assert(sizeof(BaseCharacter_C_HandleGameplayTagRemoval) == 0x0000A8, "Wrong size on BaseCharacter_C_HandleGameplayTagRemoval");
static_assert(offsetof(BaseCharacter_C_HandleGameplayTagRemoval, GameplayTag) == 0x000000, "Member 'BaseCharacter_C_HandleGameplayTagRemoval::GameplayTag' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_HandleGameplayTagRemoval, TagHandled) == 0x000008, "Member 'BaseCharacter_C_HandleGameplayTagRemoval::TagHandled' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_HandleGameplayTagRemoval, PrimaryAbilityTags) == 0x000010, "Member 'BaseCharacter_C_HandleGameplayTagRemoval::PrimaryAbilityTags' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_HandleGameplayTagRemoval, CallFunc_GetTagName_ReturnValue) == 0x000030, "Member 'BaseCharacter_C_HandleGameplayTagRemoval::CallFunc_GetTagName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_HandleGameplayTagRemoval, CallFunc_GetAnimInstance_ReturnValue) == 0x000038, "Member 'BaseCharacter_C_HandleGameplayTagRemoval::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_HandleGameplayTagRemoval, K2Node_SwitchName_CmpSuccess) == 0x000040, "Member 'BaseCharacter_C_HandleGameplayTagRemoval::K2Node_SwitchName_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_HandleGameplayTagRemoval, K2Node_CreateDelegate_OutputDelegate) == 0x000044, "Member 'BaseCharacter_C_HandleGameplayTagRemoval::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_HandleGameplayTagRemoval, CallFunc_GetAnimInstance_ReturnValue_1) == 0x000058, "Member 'BaseCharacter_C_HandleGameplayTagRemoval::CallFunc_GetAnimInstance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_HandleGameplayTagRemoval, CallFunc_Not_PreBool_ReturnValue) == 0x000060, "Member 'BaseCharacter_C_HandleGameplayTagRemoval::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_HandleGameplayTagRemoval, CallFunc_MakeLiteralGameplayTagContainer_ReturnValue) == 0x000068, "Member 'BaseCharacter_C_HandleGameplayTagRemoval::CallFunc_MakeLiteralGameplayTagContainer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_HandleGameplayTagRemoval, CallFunc_MatchesAnyTags_ReturnValue) == 0x000088, "Member 'BaseCharacter_C_HandleGameplayTagRemoval::CallFunc_MatchesAnyTags_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_HandleGameplayTagRemoval, CallFunc_Not_PreBool_ReturnValue_1) == 0x000089, "Member 'BaseCharacter_C_HandleGameplayTagRemoval::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_HandleGameplayTagRemoval, CallFunc_Not_PreBool_ReturnValue_2) == 0x00008A, "Member 'BaseCharacter_C_HandleGameplayTagRemoval::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_HandleGameplayTagRemoval, CallFunc_IsLocallyControlled_ReturnValue) == 0x00008B, "Member 'BaseCharacter_C_HandleGameplayTagRemoval::CallFunc_IsLocallyControlled_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_HandleGameplayTagRemoval, CallFunc_BooleanAND_ReturnValue) == 0x00008C, "Member 'BaseCharacter_C_HandleGameplayTagRemoval::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_HandleGameplayTagRemoval, CallFunc_BooleanAND_ReturnValue_1) == 0x00008D, "Member 'BaseCharacter_C_HandleGameplayTagRemoval::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_HandleGameplayTagRemoval, CallFunc_IsLocallyControlled_ReturnValue_1) == 0x00008E, "Member 'BaseCharacter_C_HandleGameplayTagRemoval::CallFunc_IsLocallyControlled_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_HandleGameplayTagRemoval, CallFunc_BooleanAND_ReturnValue_2) == 0x00008F, "Member 'BaseCharacter_C_HandleGameplayTagRemoval::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_HandleGameplayTagRemoval, K2Node_CreateDelegate_OutputDelegate_1) == 0x000090, "Member 'BaseCharacter_C_HandleGameplayTagRemoval::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_HandleGameplayTagRemoval, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x0000A0, "Member 'BaseCharacter_C_HandleGameplayTagRemoval::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");

// Function BaseCharacter.BaseCharacter_C.InitializeArtifactPostProcess
// 0x0048 (0x0048 - 0x0000)
struct BaseCharacter_C_InitializeArtifactPostProcess final
{
public:
	struct FGameplayTag                           GameplayTag;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_GetTagName_ReturnValue;                   // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchName_CmpSuccess;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue;          // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1B[0x5];                                       // 0x001B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue_1; // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue_2; // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue_3; // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue_4; // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue_5; // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BaseCharacter_C_InitializeArtifactPostProcess) == 0x000008, "Wrong alignment on BaseCharacter_C_InitializeArtifactPostProcess");
static_assert(sizeof(BaseCharacter_C_InitializeArtifactPostProcess) == 0x000048, "Wrong size on BaseCharacter_C_InitializeArtifactPostProcess");
static_assert(offsetof(BaseCharacter_C_InitializeArtifactPostProcess, GameplayTag) == 0x000000, "Member 'BaseCharacter_C_InitializeArtifactPostProcess::GameplayTag' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_InitializeArtifactPostProcess, CallFunc_GetTagName_ReturnValue) == 0x000008, "Member 'BaseCharacter_C_InitializeArtifactPostProcess::CallFunc_GetTagName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_InitializeArtifactPostProcess, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000010, "Member 'BaseCharacter_C_InitializeArtifactPostProcess::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_InitializeArtifactPostProcess, K2Node_SwitchName_CmpSuccess) == 0x000018, "Member 'BaseCharacter_C_InitializeArtifactPostProcess::K2Node_SwitchName_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_InitializeArtifactPostProcess, CallFunc_IsLocallyControlled_ReturnValue) == 0x000019, "Member 'BaseCharacter_C_InitializeArtifactPostProcess::CallFunc_IsLocallyControlled_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_InitializeArtifactPostProcess, CallFunc_IsValid_ReturnValue) == 0x00001A, "Member 'BaseCharacter_C_InitializeArtifactPostProcess::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_InitializeArtifactPostProcess, CallFunc_CreateDynamicMaterialInstance_ReturnValue_1) == 0x000020, "Member 'BaseCharacter_C_InitializeArtifactPostProcess::CallFunc_CreateDynamicMaterialInstance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_InitializeArtifactPostProcess, CallFunc_CreateDynamicMaterialInstance_ReturnValue_2) == 0x000028, "Member 'BaseCharacter_C_InitializeArtifactPostProcess::CallFunc_CreateDynamicMaterialInstance_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_InitializeArtifactPostProcess, CallFunc_CreateDynamicMaterialInstance_ReturnValue_3) == 0x000030, "Member 'BaseCharacter_C_InitializeArtifactPostProcess::CallFunc_CreateDynamicMaterialInstance_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_InitializeArtifactPostProcess, CallFunc_CreateDynamicMaterialInstance_ReturnValue_4) == 0x000038, "Member 'BaseCharacter_C_InitializeArtifactPostProcess::CallFunc_CreateDynamicMaterialInstance_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_InitializeArtifactPostProcess, CallFunc_CreateDynamicMaterialInstance_ReturnValue_5) == 0x000040, "Member 'BaseCharacter_C_InitializeArtifactPostProcess::CallFunc_CreateDynamicMaterialInstance_ReturnValue_5' has a wrong offset!");

// Function BaseCharacter.BaseCharacter_C.UpdateSpeedPostProcess
// 0x0018 (0x0018 - 0x0000)
struct BaseCharacter_C_UpdateSpeedPostProcess final
{
public:
	float                                         MinSpeedToUse;                                     // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue;                        // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BaseCharacter_C_UpdateSpeedPostProcess) == 0x000004, "Wrong alignment on BaseCharacter_C_UpdateSpeedPostProcess");
static_assert(sizeof(BaseCharacter_C_UpdateSpeedPostProcess) == 0x000018, "Wrong size on BaseCharacter_C_UpdateSpeedPostProcess");
static_assert(offsetof(BaseCharacter_C_UpdateSpeedPostProcess, MinSpeedToUse) == 0x000000, "Member 'BaseCharacter_C_UpdateSpeedPostProcess::MinSpeedToUse' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_UpdateSpeedPostProcess, CallFunc_VSize_ReturnValue) == 0x000004, "Member 'BaseCharacter_C_UpdateSpeedPostProcess::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_UpdateSpeedPostProcess, CallFunc_FClamp_ReturnValue) == 0x000008, "Member 'BaseCharacter_C_UpdateSpeedPostProcess::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_UpdateSpeedPostProcess, CallFunc_Divide_FloatFloat_ReturnValue) == 0x00000C, "Member 'BaseCharacter_C_UpdateSpeedPostProcess::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_UpdateSpeedPostProcess, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000010, "Member 'BaseCharacter_C_UpdateSpeedPostProcess::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_UpdateSpeedPostProcess, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x000014, "Member 'BaseCharacter_C_UpdateSpeedPostProcess::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");

// Function BaseCharacter.BaseCharacter_C.UpdateArtifactGlowFadeIn
// 0x0020 (0x0020 - 0x0000)
struct BaseCharacter_C_UpdateArtifactGlowFadeIn final
{
public:
	float                                         FullGlowIntensity1st;                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         FresnelGate1st;                                    // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         FullGlowIntensity3rd;                              // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         FresnelGate3rd;                                    // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_2;        // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_3;        // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BaseCharacter_C_UpdateArtifactGlowFadeIn) == 0x000004, "Wrong alignment on BaseCharacter_C_UpdateArtifactGlowFadeIn");
static_assert(sizeof(BaseCharacter_C_UpdateArtifactGlowFadeIn) == 0x000020, "Wrong size on BaseCharacter_C_UpdateArtifactGlowFadeIn");
static_assert(offsetof(BaseCharacter_C_UpdateArtifactGlowFadeIn, FullGlowIntensity1st) == 0x000000, "Member 'BaseCharacter_C_UpdateArtifactGlowFadeIn::FullGlowIntensity1st' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_UpdateArtifactGlowFadeIn, FresnelGate1st) == 0x000004, "Member 'BaseCharacter_C_UpdateArtifactGlowFadeIn::FresnelGate1st' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_UpdateArtifactGlowFadeIn, FullGlowIntensity3rd) == 0x000008, "Member 'BaseCharacter_C_UpdateArtifactGlowFadeIn::FullGlowIntensity3rd' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_UpdateArtifactGlowFadeIn, FresnelGate3rd) == 0x00000C, "Member 'BaseCharacter_C_UpdateArtifactGlowFadeIn::FresnelGate3rd' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_UpdateArtifactGlowFadeIn, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000010, "Member 'BaseCharacter_C_UpdateArtifactGlowFadeIn::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_UpdateArtifactGlowFadeIn, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x000014, "Member 'BaseCharacter_C_UpdateArtifactGlowFadeIn::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_UpdateArtifactGlowFadeIn, CallFunc_Multiply_FloatFloat_ReturnValue_2) == 0x000018, "Member 'BaseCharacter_C_UpdateArtifactGlowFadeIn::CallFunc_Multiply_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_UpdateArtifactGlowFadeIn, CallFunc_Multiply_FloatFloat_ReturnValue_3) == 0x00001C, "Member 'BaseCharacter_C_UpdateArtifactGlowFadeIn::CallFunc_Multiply_FloatFloat_ReturnValue_3' has a wrong offset!");

// Function BaseCharacter.BaseCharacter_C.UpdateArtifactGlowFadeOut
// 0x0020 (0x0020 - 0x0000)
struct BaseCharacter_C_UpdateArtifactGlowFadeOut final
{
public:
	float                                         FullGlowIntensity1st;                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         FresnelGate1st;                                    // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         FullGlowIntensity3rd;                              // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         FresnelGate3rd;                                    // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_2;        // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_3;        // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BaseCharacter_C_UpdateArtifactGlowFadeOut) == 0x000004, "Wrong alignment on BaseCharacter_C_UpdateArtifactGlowFadeOut");
static_assert(sizeof(BaseCharacter_C_UpdateArtifactGlowFadeOut) == 0x000020, "Wrong size on BaseCharacter_C_UpdateArtifactGlowFadeOut");
static_assert(offsetof(BaseCharacter_C_UpdateArtifactGlowFadeOut, FullGlowIntensity1st) == 0x000000, "Member 'BaseCharacter_C_UpdateArtifactGlowFadeOut::FullGlowIntensity1st' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_UpdateArtifactGlowFadeOut, FresnelGate1st) == 0x000004, "Member 'BaseCharacter_C_UpdateArtifactGlowFadeOut::FresnelGate1st' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_UpdateArtifactGlowFadeOut, FullGlowIntensity3rd) == 0x000008, "Member 'BaseCharacter_C_UpdateArtifactGlowFadeOut::FullGlowIntensity3rd' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_UpdateArtifactGlowFadeOut, FresnelGate3rd) == 0x00000C, "Member 'BaseCharacter_C_UpdateArtifactGlowFadeOut::FresnelGate3rd' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_UpdateArtifactGlowFadeOut, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000010, "Member 'BaseCharacter_C_UpdateArtifactGlowFadeOut::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_UpdateArtifactGlowFadeOut, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x000014, "Member 'BaseCharacter_C_UpdateArtifactGlowFadeOut::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_UpdateArtifactGlowFadeOut, CallFunc_Multiply_FloatFloat_ReturnValue_2) == 0x000018, "Member 'BaseCharacter_C_UpdateArtifactGlowFadeOut::CallFunc_Multiply_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_UpdateArtifactGlowFadeOut, CallFunc_Multiply_FloatFloat_ReturnValue_3) == 0x00001C, "Member 'BaseCharacter_C_UpdateArtifactGlowFadeOut::CallFunc_Multiply_FloatFloat_ReturnValue_3' has a wrong offset!");

// Function BaseCharacter.BaseCharacter_C.SetSpeedBoostPostProcessColor
// 0x000C (0x000C - 0x0000)
struct BaseCharacter_C_SetSpeedBoostPostProcessColor final
{
public:
	float                                         Radius;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SpeedBlend;                                        // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Weight;                                            // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BaseCharacter_C_SetSpeedBoostPostProcessColor) == 0x000004, "Wrong alignment on BaseCharacter_C_SetSpeedBoostPostProcessColor");
static_assert(sizeof(BaseCharacter_C_SetSpeedBoostPostProcessColor) == 0x00000C, "Wrong size on BaseCharacter_C_SetSpeedBoostPostProcessColor");
static_assert(offsetof(BaseCharacter_C_SetSpeedBoostPostProcessColor, Radius) == 0x000000, "Member 'BaseCharacter_C_SetSpeedBoostPostProcessColor::Radius' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_SetSpeedBoostPostProcessColor, SpeedBlend) == 0x000004, "Member 'BaseCharacter_C_SetSpeedBoostPostProcessColor::SpeedBlend' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_SetSpeedBoostPostProcessColor, Weight) == 0x000008, "Member 'BaseCharacter_C_SetSpeedBoostPostProcessColor::Weight' has a wrong offset!");

// Function BaseCharacter.BaseCharacter_C.OnRep_CurrentArtifactGameplayTag
// 0x0003 (0x0003 - 0x0000)
struct BaseCharacter_C_OnRep_CurrentArtifactGameplayTag final
{
public:
	bool                                          CallFunc_NotEqual_GameplayTag_ReturnValue;         // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HandleArtifactTagApplication_TagHandled;  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BaseCharacter_C_OnRep_CurrentArtifactGameplayTag) == 0x000001, "Wrong alignment on BaseCharacter_C_OnRep_CurrentArtifactGameplayTag");
static_assert(sizeof(BaseCharacter_C_OnRep_CurrentArtifactGameplayTag) == 0x000003, "Wrong size on BaseCharacter_C_OnRep_CurrentArtifactGameplayTag");
static_assert(offsetof(BaseCharacter_C_OnRep_CurrentArtifactGameplayTag, CallFunc_NotEqual_GameplayTag_ReturnValue) == 0x000000, "Member 'BaseCharacter_C_OnRep_CurrentArtifactGameplayTag::CallFunc_NotEqual_GameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_OnRep_CurrentArtifactGameplayTag, CallFunc_HandleArtifactTagApplication_TagHandled) == 0x000001, "Member 'BaseCharacter_C_OnRep_CurrentArtifactGameplayTag::CallFunc_HandleArtifactTagApplication_TagHandled' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_OnRep_CurrentArtifactGameplayTag, CallFunc_Not_PreBool_ReturnValue) == 0x000002, "Member 'BaseCharacter_C_OnRep_CurrentArtifactGameplayTag::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function BaseCharacter.BaseCharacter_C.CheckForAppliedArtifactOnBeginPlay
// 0x0060 (0x0060 - 0x0000)
struct BaseCharacter_C_CheckForAppliedArtifactOnBeginPlay final
{
public:
	bool                                          CallFunc_HandleArtifactTagApplication_TagHandled;  // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  CallFunc_MakeLiteralGameplayTagContainer_ReturnValue; // 0x0008(0x0020)()
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_GetOwnedGameplayTags_self_CastInput;      // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FGameplayTagContainer                  CallFunc_GetOwnedGameplayTags_TagContainer;        // 0x0038(0x0020)()
	bool                                          CallFunc_HasAnyTags_ReturnValue;                   // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BaseCharacter_C_CheckForAppliedArtifactOnBeginPlay) == 0x000008, "Wrong alignment on BaseCharacter_C_CheckForAppliedArtifactOnBeginPlay");
static_assert(sizeof(BaseCharacter_C_CheckForAppliedArtifactOnBeginPlay) == 0x000060, "Wrong size on BaseCharacter_C_CheckForAppliedArtifactOnBeginPlay");
static_assert(offsetof(BaseCharacter_C_CheckForAppliedArtifactOnBeginPlay, CallFunc_HandleArtifactTagApplication_TagHandled) == 0x000000, "Member 'BaseCharacter_C_CheckForAppliedArtifactOnBeginPlay::CallFunc_HandleArtifactTagApplication_TagHandled' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_CheckForAppliedArtifactOnBeginPlay, CallFunc_Not_PreBool_ReturnValue) == 0x000001, "Member 'BaseCharacter_C_CheckForAppliedArtifactOnBeginPlay::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_CheckForAppliedArtifactOnBeginPlay, CallFunc_MakeLiteralGameplayTagContainer_ReturnValue) == 0x000008, "Member 'BaseCharacter_C_CheckForAppliedArtifactOnBeginPlay::CallFunc_MakeLiteralGameplayTagContainer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_CheckForAppliedArtifactOnBeginPlay, CallFunc_GetOwnedGameplayTags_self_CastInput) == 0x000028, "Member 'BaseCharacter_C_CheckForAppliedArtifactOnBeginPlay::CallFunc_GetOwnedGameplayTags_self_CastInput' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_CheckForAppliedArtifactOnBeginPlay, CallFunc_GetOwnedGameplayTags_TagContainer) == 0x000038, "Member 'BaseCharacter_C_CheckForAppliedArtifactOnBeginPlay::CallFunc_GetOwnedGameplayTags_TagContainer' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_CheckForAppliedArtifactOnBeginPlay, CallFunc_HasAnyTags_ReturnValue) == 0x000058, "Member 'BaseCharacter_C_CheckForAppliedArtifactOnBeginPlay::CallFunc_HasAnyTags_ReturnValue' has a wrong offset!");

// Function BaseCharacter.BaseCharacter_C.ModifyAttackSpeedMontagePlayRate
// 0x0048 (0x0048 - 0x0000)
struct BaseCharacter_C_ModifyAttackSpeedMontagePlayRate final
{
public:
	class UAnimMontage*                           Montage;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTagContainer                  AttackSpeedModifierTags;                           // 0x0008(0x0020)(Edit, BlueprintVisible)
	bool                                          CallFunc_IsPrimaryMontage_MontageFound;            // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetFireRateMultiplier_ReturnValue;        // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFireRateMultiplier_ReturnValue_1;      // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPrimaryMontage_MontageFound_1;          // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35[0x3];                                       // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue_1;            // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BaseCharacter_C_ModifyAttackSpeedMontagePlayRate) == 0x000008, "Wrong alignment on BaseCharacter_C_ModifyAttackSpeedMontagePlayRate");
static_assert(sizeof(BaseCharacter_C_ModifyAttackSpeedMontagePlayRate) == 0x000048, "Wrong size on BaseCharacter_C_ModifyAttackSpeedMontagePlayRate");
static_assert(offsetof(BaseCharacter_C_ModifyAttackSpeedMontagePlayRate, Montage) == 0x000000, "Member 'BaseCharacter_C_ModifyAttackSpeedMontagePlayRate::Montage' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ModifyAttackSpeedMontagePlayRate, AttackSpeedModifierTags) == 0x000008, "Member 'BaseCharacter_C_ModifyAttackSpeedMontagePlayRate::AttackSpeedModifierTags' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ModifyAttackSpeedMontagePlayRate, CallFunc_IsPrimaryMontage_MontageFound) == 0x000028, "Member 'BaseCharacter_C_ModifyAttackSpeedMontagePlayRate::CallFunc_IsPrimaryMontage_MontageFound' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ModifyAttackSpeedMontagePlayRate, CallFunc_GetFireRateMultiplier_ReturnValue) == 0x00002C, "Member 'BaseCharacter_C_ModifyAttackSpeedMontagePlayRate::CallFunc_GetFireRateMultiplier_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ModifyAttackSpeedMontagePlayRate, CallFunc_GetFireRateMultiplier_ReturnValue_1) == 0x000030, "Member 'BaseCharacter_C_ModifyAttackSpeedMontagePlayRate::CallFunc_GetFireRateMultiplier_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ModifyAttackSpeedMontagePlayRate, CallFunc_IsPrimaryMontage_MontageFound_1) == 0x000034, "Member 'BaseCharacter_C_ModifyAttackSpeedMontagePlayRate::CallFunc_IsPrimaryMontage_MontageFound_1' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ModifyAttackSpeedMontagePlayRate, CallFunc_GetAnimInstance_ReturnValue) == 0x000038, "Member 'BaseCharacter_C_ModifyAttackSpeedMontagePlayRate::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ModifyAttackSpeedMontagePlayRate, CallFunc_GetAnimInstance_ReturnValue_1) == 0x000040, "Member 'BaseCharacter_C_ModifyAttackSpeedMontagePlayRate::CallFunc_GetAnimInstance_ReturnValue_1' has a wrong offset!");

// Function BaseCharacter.BaseCharacter_C.ClearCameraShakes
// 0x0018 (0x0018 - 0x0000)
struct BaseCharacter_C_ClearCameraShakes final
{
public:
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      K2Node_DynamicCast_AsPlayer_Controller;            // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BaseCharacter_C_ClearCameraShakes) == 0x000008, "Wrong alignment on BaseCharacter_C_ClearCameraShakes");
static_assert(sizeof(BaseCharacter_C_ClearCameraShakes) == 0x000018, "Wrong size on BaseCharacter_C_ClearCameraShakes");
static_assert(offsetof(BaseCharacter_C_ClearCameraShakes, CallFunc_GetController_ReturnValue) == 0x000000, "Member 'BaseCharacter_C_ClearCameraShakes::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ClearCameraShakes, K2Node_DynamicCast_AsPlayer_Controller) == 0x000008, "Member 'BaseCharacter_C_ClearCameraShakes::K2Node_DynamicCast_AsPlayer_Controller' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ClearCameraShakes, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'BaseCharacter_C_ClearCameraShakes::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BaseCharacter.BaseCharacter_C.OnRep_SpawnProtectionEnabled
// 0x0018 (0x0018 - 0x0000)
struct BaseCharacter_C_OnRep_SpawnProtectionEnabled final
{
public:
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetServerWorldTimeSeconds_ReturnValue;    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FActiveGameplayEffectHandle            CallFunc_BP_ApplyGameplayEffectToSelf_ReturnValue; // 0x000C(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue;          // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BaseCharacter_C_OnRep_SpawnProtectionEnabled) == 0x000008, "Wrong alignment on BaseCharacter_C_OnRep_SpawnProtectionEnabled");
static_assert(sizeof(BaseCharacter_C_OnRep_SpawnProtectionEnabled) == 0x000018, "Wrong size on BaseCharacter_C_OnRep_SpawnProtectionEnabled");
static_assert(offsetof(BaseCharacter_C_OnRep_SpawnProtectionEnabled, CallFunc_GetGameState_ReturnValue) == 0x000000, "Member 'BaseCharacter_C_OnRep_SpawnProtectionEnabled::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_OnRep_SpawnProtectionEnabled, CallFunc_GetServerWorldTimeSeconds_ReturnValue) == 0x000008, "Member 'BaseCharacter_C_OnRep_SpawnProtectionEnabled::CallFunc_GetServerWorldTimeSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_OnRep_SpawnProtectionEnabled, CallFunc_BP_ApplyGameplayEffectToSelf_ReturnValue) == 0x00000C, "Member 'BaseCharacter_C_OnRep_SpawnProtectionEnabled::CallFunc_BP_ApplyGameplayEffectToSelf_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_OnRep_SpawnProtectionEnabled, CallFunc_IsLocallyControlled_ReturnValue) == 0x000014, "Member 'BaseCharacter_C_OnRep_SpawnProtectionEnabled::CallFunc_IsLocallyControlled_ReturnValue' has a wrong offset!");

// Function BaseCharacter.BaseCharacter_C.ServerSetSpawnProtectionEnabled
// 0x0028 (0x0028 - 0x0000)
struct BaseCharacter_C_ServerSetSpawnProtectionEnabled final
{
public:
	bool                                          IsEnabled;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0018(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BaseCharacter_C_ServerSetSpawnProtectionEnabled) == 0x000008, "Wrong alignment on BaseCharacter_C_ServerSetSpawnProtectionEnabled");
static_assert(sizeof(BaseCharacter_C_ServerSetSpawnProtectionEnabled) == 0x000028, "Wrong size on BaseCharacter_C_ServerSetSpawnProtectionEnabled");
static_assert(offsetof(BaseCharacter_C_ServerSetSpawnProtectionEnabled, IsEnabled) == 0x000000, "Member 'BaseCharacter_C_ServerSetSpawnProtectionEnabled::IsEnabled' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ServerSetSpawnProtectionEnabled, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'BaseCharacter_C_ServerSetSpawnProtectionEnabled::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ServerSetSpawnProtectionEnabled, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000018, "Member 'BaseCharacter_C_ServerSetSpawnProtectionEnabled::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ServerSetSpawnProtectionEnabled, CallFunc_HasAuthority_ReturnValue) == 0x000020, "Member 'BaseCharacter_C_ServerSetSpawnProtectionEnabled::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");

// Function BaseCharacter.BaseCharacter_C.AddEnemyToRecentlyDamageByList
// 0x0010 (0x0010 - 0x0000)
struct BaseCharacter_C_AddEnemyToRecentlyDamageByList final
{
public:
	class AController*                            DamagedByController;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         IndexToUse;                                        // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BaseCharacter_C_AddEnemyToRecentlyDamageByList) == 0x000008, "Wrong alignment on BaseCharacter_C_AddEnemyToRecentlyDamageByList");
static_assert(sizeof(BaseCharacter_C_AddEnemyToRecentlyDamageByList) == 0x000010, "Wrong size on BaseCharacter_C_AddEnemyToRecentlyDamageByList");
static_assert(offsetof(BaseCharacter_C_AddEnemyToRecentlyDamageByList, DamagedByController) == 0x000000, "Member 'BaseCharacter_C_AddEnemyToRecentlyDamageByList::DamagedByController' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_AddEnemyToRecentlyDamageByList, IndexToUse) == 0x000008, "Member 'BaseCharacter_C_AddEnemyToRecentlyDamageByList::IndexToUse' has a wrong offset!");

// Function BaseCharacter.BaseCharacter_C.AwardAssistsOnKOed
// 0x0008 (0x0008 - 0x0000)
struct BaseCharacter_C_AwardAssistsOnKOed final
{
public:
	class AMarinerCharacter*                      KnockOutInstigator;                                // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BaseCharacter_C_AwardAssistsOnKOed) == 0x000008, "Wrong alignment on BaseCharacter_C_AwardAssistsOnKOed");
static_assert(sizeof(BaseCharacter_C_AwardAssistsOnKOed) == 0x000008, "Wrong size on BaseCharacter_C_AwardAssistsOnKOed");
static_assert(offsetof(BaseCharacter_C_AwardAssistsOnKOed, KnockOutInstigator) == 0x000000, "Member 'BaseCharacter_C_AwardAssistsOnKOed::KnockOutInstigator' has a wrong offset!");

// Function BaseCharacter.BaseCharacter_C.WasRecentlyDamagedByPlayer
// 0x0010 (0x0010 - 0x0000)
struct BaseCharacter_C_WasRecentlyDamagedByPlayer final
{
public:
	class AController*                            ControllerToCheck;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TimeLimit;                                         // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          RecentlyDamaged;                                   // 0x000C(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BaseCharacter_C_WasRecentlyDamagedByPlayer) == 0x000008, "Wrong alignment on BaseCharacter_C_WasRecentlyDamagedByPlayer");
static_assert(sizeof(BaseCharacter_C_WasRecentlyDamagedByPlayer) == 0x000010, "Wrong size on BaseCharacter_C_WasRecentlyDamagedByPlayer");
static_assert(offsetof(BaseCharacter_C_WasRecentlyDamagedByPlayer, ControllerToCheck) == 0x000000, "Member 'BaseCharacter_C_WasRecentlyDamagedByPlayer::ControllerToCheck' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_WasRecentlyDamagedByPlayer, TimeLimit) == 0x000008, "Member 'BaseCharacter_C_WasRecentlyDamagedByPlayer::TimeLimit' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_WasRecentlyDamagedByPlayer, RecentlyDamaged) == 0x00000C, "Member 'BaseCharacter_C_WasRecentlyDamagedByPlayer::RecentlyDamaged' has a wrong offset!");

// Function BaseCharacter.BaseCharacter_C.HandleGroundedSpeedEffect
// 0x0038 (0x0038 - 0x0000)
struct BaseCharacter_C_HandleGroundedSpeedEffect final
{
public:
	EMovementMode                                 MovementMode;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_GetGroundedSpeedEffect_GroundedSpeedEffect; // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValidClass_ReturnValue;                 // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_GetGroundedSpeedEffect_GroundedSpeedEffect_1; // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 CallFunc_GetGroundedSpeedEffect_GroundedSpeedEffect_2; // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FActiveGameplayEffectHandle            CallFunc_BP_ApplyGameplayEffectToSelf_ReturnValue; // 0x002C(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BaseCharacter_C_HandleGroundedSpeedEffect) == 0x000008, "Wrong alignment on BaseCharacter_C_HandleGroundedSpeedEffect");
static_assert(sizeof(BaseCharacter_C_HandleGroundedSpeedEffect) == 0x000038, "Wrong size on BaseCharacter_C_HandleGroundedSpeedEffect");
static_assert(offsetof(BaseCharacter_C_HandleGroundedSpeedEffect, MovementMode) == 0x000000, "Member 'BaseCharacter_C_HandleGroundedSpeedEffect::MovementMode' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_HandleGroundedSpeedEffect, CallFunc_GetGroundedSpeedEffect_GroundedSpeedEffect) == 0x000008, "Member 'BaseCharacter_C_HandleGroundedSpeedEffect::CallFunc_GetGroundedSpeedEffect_GroundedSpeedEffect' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_HandleGroundedSpeedEffect, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000010, "Member 'BaseCharacter_C_HandleGroundedSpeedEffect::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_HandleGroundedSpeedEffect, CallFunc_IsValidClass_ReturnValue) == 0x000011, "Member 'BaseCharacter_C_HandleGroundedSpeedEffect::CallFunc_IsValidClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_HandleGroundedSpeedEffect, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000012, "Member 'BaseCharacter_C_HandleGroundedSpeedEffect::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_HandleGroundedSpeedEffect, CallFunc_BooleanOR_ReturnValue) == 0x000013, "Member 'BaseCharacter_C_HandleGroundedSpeedEffect::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_HandleGroundedSpeedEffect, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x000014, "Member 'BaseCharacter_C_HandleGroundedSpeedEffect::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_HandleGroundedSpeedEffect, CallFunc_GetGroundedSpeedEffect_GroundedSpeedEffect_1) == 0x000018, "Member 'BaseCharacter_C_HandleGroundedSpeedEffect::CallFunc_GetGroundedSpeedEffect_GroundedSpeedEffect_1' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_HandleGroundedSpeedEffect, CallFunc_GetGroundedSpeedEffect_GroundedSpeedEffect_2) == 0x000020, "Member 'BaseCharacter_C_HandleGroundedSpeedEffect::CallFunc_GetGroundedSpeedEffect_GroundedSpeedEffect_2' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_HandleGroundedSpeedEffect, CallFunc_HasAuthority_ReturnValue) == 0x000028, "Member 'BaseCharacter_C_HandleGroundedSpeedEffect::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_HandleGroundedSpeedEffect, CallFunc_BP_ApplyGameplayEffectToSelf_ReturnValue) == 0x00002C, "Member 'BaseCharacter_C_HandleGroundedSpeedEffect::CallFunc_BP_ApplyGameplayEffectToSelf_ReturnValue' has a wrong offset!");

// Function BaseCharacter.BaseCharacter_C.GetGroundedSpeedEffect
// 0x0008 (0x0008 - 0x0000)
struct BaseCharacter_C_GetGroundedSpeedEffect final
{
public:
	class UClass*                                 GroundedSpeedEffect_0;                             // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BaseCharacter_C_GetGroundedSpeedEffect) == 0x000008, "Wrong alignment on BaseCharacter_C_GetGroundedSpeedEffect");
static_assert(sizeof(BaseCharacter_C_GetGroundedSpeedEffect) == 0x000008, "Wrong size on BaseCharacter_C_GetGroundedSpeedEffect");
static_assert(offsetof(BaseCharacter_C_GetGroundedSpeedEffect, GroundedSpeedEffect_0) == 0x000000, "Member 'BaseCharacter_C_GetGroundedSpeedEffect::GroundedSpeedEffect_0' has a wrong offset!");

// Function BaseCharacter.BaseCharacter_C.ActiveGameplayEffectQuerySignature_Cooldown
// 0x0378 (0x0378 - 0x0000)
struct BaseCharacter_C_ActiveGameplayEffectQuerySignature_Cooldown final
{
public:
	struct FActiveGameplayEffect                  GameplayEffect;                                    // 0x0000(0x0370)(BlueprintVisible, BlueprintReadOnly, Parm)
	bool                                          Bool;                                              // 0x0370(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BaseCharacter_C_ActiveGameplayEffectQuerySignature_Cooldown) == 0x000008, "Wrong alignment on BaseCharacter_C_ActiveGameplayEffectQuerySignature_Cooldown");
static_assert(sizeof(BaseCharacter_C_ActiveGameplayEffectQuerySignature_Cooldown) == 0x000378, "Wrong size on BaseCharacter_C_ActiveGameplayEffectQuerySignature_Cooldown");
static_assert(offsetof(BaseCharacter_C_ActiveGameplayEffectQuerySignature_Cooldown, GameplayEffect) == 0x000000, "Member 'BaseCharacter_C_ActiveGameplayEffectQuerySignature_Cooldown::GameplayEffect' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ActiveGameplayEffectQuerySignature_Cooldown, Bool) == 0x000370, "Member 'BaseCharacter_C_ActiveGameplayEffectQuerySignature_Cooldown::Bool' has a wrong offset!");

// Function BaseCharacter.BaseCharacter_C.GetNextDebugViewTarget
// 0x00E0 (0x00E0 - 0x0000)
struct BaseCharacter_C_GetNextDebugViewTarget final
{
public:
	int32                                         TargetIndex;                                       // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CurrentIndex;                                      // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_16[0x2];                                       // 0x0016(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable_1;        // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_True_if_break_was_hit_Variable_2;        // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x002E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x002F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerState*                           CallFunc_Array_Get_Item;                           // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_55[0x3];                                       // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue_1;               // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61[0x3];                                       // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6A[0x6];                                       // 0x006A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue_2;               // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerState*                           CallFunc_Array_Get_Item_1;                         // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_89[0x3];                                       // 0x0089(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0094(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_95[0x3];                                       // 0x0095(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x009C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9D[0x3];                                       // 0x009D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue_3;               // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AC[0x4];                                       // 0x00AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerState*                           CallFunc_Array_Get_Item_2;                         // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B9[0x7];                                       // 0x00B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AMarinerPlayerState*                    K2Node_DynamicCast_AsMariner_Player_State;         // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x00C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_CA[0x6];                                       // 0x00CA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AMarinerCharacter*                      CallFunc_TryAndGetControlledCharacter_ReturnValue; // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x00D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BaseCharacter_C_GetNextDebugViewTarget) == 0x000008, "Wrong alignment on BaseCharacter_C_GetNextDebugViewTarget");
static_assert(sizeof(BaseCharacter_C_GetNextDebugViewTarget) == 0x0000E0, "Wrong size on BaseCharacter_C_GetNextDebugViewTarget");
static_assert(offsetof(BaseCharacter_C_GetNextDebugViewTarget, TargetIndex) == 0x000000, "Member 'BaseCharacter_C_GetNextDebugViewTarget::TargetIndex' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_GetNextDebugViewTarget, CurrentIndex) == 0x000004, "Member 'BaseCharacter_C_GetNextDebugViewTarget::CurrentIndex' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_GetNextDebugViewTarget, Temp_int_Array_Index_Variable) == 0x000008, "Member 'BaseCharacter_C_GetNextDebugViewTarget::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_GetNextDebugViewTarget, Temp_int_Array_Index_Variable_1) == 0x00000C, "Member 'BaseCharacter_C_GetNextDebugViewTarget::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_GetNextDebugViewTarget, Temp_int_Loop_Counter_Variable) == 0x000010, "Member 'BaseCharacter_C_GetNextDebugViewTarget::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_GetNextDebugViewTarget, Temp_bool_True_if_break_was_hit_Variable) == 0x000014, "Member 'BaseCharacter_C_GetNextDebugViewTarget::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_GetNextDebugViewTarget, CallFunc_Not_PreBool_ReturnValue) == 0x000015, "Member 'BaseCharacter_C_GetNextDebugViewTarget::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_GetNextDebugViewTarget, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'BaseCharacter_C_GetNextDebugViewTarget::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_GetNextDebugViewTarget, Temp_int_Loop_Counter_Variable_1) == 0x00001C, "Member 'BaseCharacter_C_GetNextDebugViewTarget::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_GetNextDebugViewTarget, CallFunc_Add_IntInt_ReturnValue_1) == 0x000020, "Member 'BaseCharacter_C_GetNextDebugViewTarget::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_GetNextDebugViewTarget, Temp_bool_True_if_break_was_hit_Variable_1) == 0x000024, "Member 'BaseCharacter_C_GetNextDebugViewTarget::Temp_bool_True_if_break_was_hit_Variable_1' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_GetNextDebugViewTarget, Temp_int_Array_Index_Variable_2) == 0x000028, "Member 'BaseCharacter_C_GetNextDebugViewTarget::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_GetNextDebugViewTarget, CallFunc_Not_PreBool_ReturnValue_1) == 0x00002C, "Member 'BaseCharacter_C_GetNextDebugViewTarget::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_GetNextDebugViewTarget, Temp_bool_True_if_break_was_hit_Variable_2) == 0x00002D, "Member 'BaseCharacter_C_GetNextDebugViewTarget::Temp_bool_True_if_break_was_hit_Variable_2' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_GetNextDebugViewTarget, CallFunc_IsValid_ReturnValue) == 0x00002E, "Member 'BaseCharacter_C_GetNextDebugViewTarget::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_GetNextDebugViewTarget, CallFunc_Not_PreBool_ReturnValue_2) == 0x00002F, "Member 'BaseCharacter_C_GetNextDebugViewTarget::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_GetNextDebugViewTarget, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000030, "Member 'BaseCharacter_C_GetNextDebugViewTarget::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_GetNextDebugViewTarget, CallFunc_GetGameState_ReturnValue) == 0x000038, "Member 'BaseCharacter_C_GetNextDebugViewTarget::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_GetNextDebugViewTarget, CallFunc_Add_IntInt_ReturnValue_2) == 0x000040, "Member 'BaseCharacter_C_GetNextDebugViewTarget::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_GetNextDebugViewTarget, CallFunc_Array_Get_Item) == 0x000048, "Member 'BaseCharacter_C_GetNextDebugViewTarget::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_GetNextDebugViewTarget, CallFunc_Array_Length_ReturnValue) == 0x000050, "Member 'BaseCharacter_C_GetNextDebugViewTarget::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_GetNextDebugViewTarget, CallFunc_Less_IntInt_ReturnValue) == 0x000054, "Member 'BaseCharacter_C_GetNextDebugViewTarget::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_GetNextDebugViewTarget, CallFunc_GetGameState_ReturnValue_1) == 0x000058, "Member 'BaseCharacter_C_GetNextDebugViewTarget::CallFunc_GetGameState_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_GetNextDebugViewTarget, CallFunc_BooleanAND_ReturnValue) == 0x000060, "Member 'BaseCharacter_C_GetNextDebugViewTarget::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_GetNextDebugViewTarget, CallFunc_Array_LastIndex_ReturnValue) == 0x000064, "Member 'BaseCharacter_C_GetNextDebugViewTarget::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_GetNextDebugViewTarget, CallFunc_Greater_IntInt_ReturnValue) == 0x000068, "Member 'BaseCharacter_C_GetNextDebugViewTarget::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_GetNextDebugViewTarget, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000069, "Member 'BaseCharacter_C_GetNextDebugViewTarget::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_GetNextDebugViewTarget, CallFunc_GetGameState_ReturnValue_2) == 0x000070, "Member 'BaseCharacter_C_GetNextDebugViewTarget::CallFunc_GetGameState_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_GetNextDebugViewTarget, CallFunc_IsValid_ReturnValue_1) == 0x000078, "Member 'BaseCharacter_C_GetNextDebugViewTarget::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_GetNextDebugViewTarget, CallFunc_Array_Get_Item_1) == 0x000080, "Member 'BaseCharacter_C_GetNextDebugViewTarget::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_GetNextDebugViewTarget, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000088, "Member 'BaseCharacter_C_GetNextDebugViewTarget::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_GetNextDebugViewTarget, CallFunc_Array_Length_ReturnValue_1) == 0x00008C, "Member 'BaseCharacter_C_GetNextDebugViewTarget::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_GetNextDebugViewTarget, Temp_int_Loop_Counter_Variable_2) == 0x000090, "Member 'BaseCharacter_C_GetNextDebugViewTarget::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_GetNextDebugViewTarget, CallFunc_Less_IntInt_ReturnValue_1) == 0x000094, "Member 'BaseCharacter_C_GetNextDebugViewTarget::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_GetNextDebugViewTarget, CallFunc_Add_IntInt_ReturnValue_3) == 0x000098, "Member 'BaseCharacter_C_GetNextDebugViewTarget::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_GetNextDebugViewTarget, CallFunc_BooleanAND_ReturnValue_1) == 0x00009C, "Member 'BaseCharacter_C_GetNextDebugViewTarget::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_GetNextDebugViewTarget, CallFunc_GetGameState_ReturnValue_3) == 0x0000A0, "Member 'BaseCharacter_C_GetNextDebugViewTarget::CallFunc_GetGameState_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_GetNextDebugViewTarget, CallFunc_Array_Length_ReturnValue_2) == 0x0000A8, "Member 'BaseCharacter_C_GetNextDebugViewTarget::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_GetNextDebugViewTarget, CallFunc_Array_Get_Item_2) == 0x0000B0, "Member 'BaseCharacter_C_GetNextDebugViewTarget::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_GetNextDebugViewTarget, CallFunc_Less_IntInt_ReturnValue_2) == 0x0000B8, "Member 'BaseCharacter_C_GetNextDebugViewTarget::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_GetNextDebugViewTarget, K2Node_DynamicCast_AsMariner_Player_State) == 0x0000C0, "Member 'BaseCharacter_C_GetNextDebugViewTarget::K2Node_DynamicCast_AsMariner_Player_State' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_GetNextDebugViewTarget, K2Node_DynamicCast_bSuccess) == 0x0000C8, "Member 'BaseCharacter_C_GetNextDebugViewTarget::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_GetNextDebugViewTarget, CallFunc_BooleanAND_ReturnValue_2) == 0x0000C9, "Member 'BaseCharacter_C_GetNextDebugViewTarget::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_GetNextDebugViewTarget, CallFunc_TryAndGetControlledCharacter_ReturnValue) == 0x0000D0, "Member 'BaseCharacter_C_GetNextDebugViewTarget::CallFunc_TryAndGetControlledCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_GetNextDebugViewTarget, CallFunc_IsValid_ReturnValue_2) == 0x0000D8, "Member 'BaseCharacter_C_GetNextDebugViewTarget::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_GetNextDebugViewTarget, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x0000D9, "Member 'BaseCharacter_C_GetNextDebugViewTarget::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");

// Function BaseCharacter.BaseCharacter_C.GetDebugViewTargetActor
// 0x0060 (0x0060 - 0x0000)
struct BaseCharacter_C_GetDebugViewTargetActor final
{
public:
	class AViewTargetActor_C*                     ViewTargetActor_0;                                 // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8[0x8];                                        // 0x0008(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0010(0x0030)(IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AViewTargetActor_C*                     CallFunc_FinishSpawningActor_ReturnValue;          // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BaseCharacter_C_GetDebugViewTargetActor) == 0x000010, "Wrong alignment on BaseCharacter_C_GetDebugViewTargetActor");
static_assert(sizeof(BaseCharacter_C_GetDebugViewTargetActor) == 0x000060, "Wrong size on BaseCharacter_C_GetDebugViewTargetActor");
static_assert(offsetof(BaseCharacter_C_GetDebugViewTargetActor, ViewTargetActor_0) == 0x000000, "Member 'BaseCharacter_C_GetDebugViewTargetActor::ViewTargetActor_0' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_GetDebugViewTargetActor, CallFunc_MakeTransform_ReturnValue) == 0x000010, "Member 'BaseCharacter_C_GetDebugViewTargetActor::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_GetDebugViewTargetActor, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000040, "Member 'BaseCharacter_C_GetDebugViewTargetActor::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_GetDebugViewTargetActor, CallFunc_IsValid_ReturnValue) == 0x000048, "Member 'BaseCharacter_C_GetDebugViewTargetActor::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_GetDebugViewTargetActor, CallFunc_FinishSpawningActor_ReturnValue) == 0x000050, "Member 'BaseCharacter_C_GetDebugViewTargetActor::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");

// Function BaseCharacter.BaseCharacter_C.DebugPrintAllOfActorType
// 0x0098 (0x0098 - 0x0000)
struct BaseCharacter_C_DebugPrintAllOfActorType final
{
public:
	class UClass*                                 ActorClass;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetClassDisplayName_ReturnValue;          // 0x0008(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TArray<class AActor*>                         CallFunc_GetAllActorsOfClass_OutActors;            // 0x0018(0x0010)(ZeroConstructor, ReferenceParm)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0040(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x0060(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_74[0x4];                                       // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x0078(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_89[0x3];                                       // 0x0089(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsBuildShipping_ReturnValue;              // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue;          // 0x0092(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0093(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BaseCharacter_C_DebugPrintAllOfActorType) == 0x000008, "Wrong alignment on BaseCharacter_C_DebugPrintAllOfActorType");
static_assert(sizeof(BaseCharacter_C_DebugPrintAllOfActorType) == 0x000098, "Wrong size on BaseCharacter_C_DebugPrintAllOfActorType");
static_assert(offsetof(BaseCharacter_C_DebugPrintAllOfActorType, ActorClass) == 0x000000, "Member 'BaseCharacter_C_DebugPrintAllOfActorType::ActorClass' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_DebugPrintAllOfActorType, CallFunc_GetClassDisplayName_ReturnValue) == 0x000008, "Member 'BaseCharacter_C_DebugPrintAllOfActorType::CallFunc_GetClassDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_DebugPrintAllOfActorType, CallFunc_GetAllActorsOfClass_OutActors) == 0x000018, "Member 'BaseCharacter_C_DebugPrintAllOfActorType::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_DebugPrintAllOfActorType, CallFunc_Concat_StrStr_ReturnValue) == 0x000028, "Member 'BaseCharacter_C_DebugPrintAllOfActorType::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_DebugPrintAllOfActorType, CallFunc_Array_Length_ReturnValue) == 0x000038, "Member 'BaseCharacter_C_DebugPrintAllOfActorType::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_DebugPrintAllOfActorType, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000040, "Member 'BaseCharacter_C_DebugPrintAllOfActorType::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_DebugPrintAllOfActorType, Temp_int_Array_Index_Variable) == 0x000050, "Member 'BaseCharacter_C_DebugPrintAllOfActorType::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_DebugPrintAllOfActorType, CallFunc_Array_Get_Item) == 0x000058, "Member 'BaseCharacter_C_DebugPrintAllOfActorType::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_DebugPrintAllOfActorType, CallFunc_GetDisplayName_ReturnValue) == 0x000060, "Member 'BaseCharacter_C_DebugPrintAllOfActorType::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_DebugPrintAllOfActorType, Temp_int_Loop_Counter_Variable) == 0x000070, "Member 'BaseCharacter_C_DebugPrintAllOfActorType::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_DebugPrintAllOfActorType, CallFunc_Concat_StrStr_ReturnValue_2) == 0x000078, "Member 'BaseCharacter_C_DebugPrintAllOfActorType::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_DebugPrintAllOfActorType, CallFunc_Less_IntInt_ReturnValue) == 0x000088, "Member 'BaseCharacter_C_DebugPrintAllOfActorType::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_DebugPrintAllOfActorType, CallFunc_Add_IntInt_ReturnValue) == 0x00008C, "Member 'BaseCharacter_C_DebugPrintAllOfActorType::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_DebugPrintAllOfActorType, CallFunc_IsBuildShipping_ReturnValue) == 0x000090, "Member 'BaseCharacter_C_DebugPrintAllOfActorType::CallFunc_IsBuildShipping_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_DebugPrintAllOfActorType, CallFunc_Not_PreBool_ReturnValue) == 0x000091, "Member 'BaseCharacter_C_DebugPrintAllOfActorType::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_DebugPrintAllOfActorType, CallFunc_IsLocallyControlled_ReturnValue) == 0x000092, "Member 'BaseCharacter_C_DebugPrintAllOfActorType::CallFunc_IsLocallyControlled_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_DebugPrintAllOfActorType, CallFunc_BooleanAND_ReturnValue) == 0x000093, "Member 'BaseCharacter_C_DebugPrintAllOfActorType::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BaseCharacter.BaseCharacter_C.UpdateAwardsOnDamageCaused
// 0x0080 (0x0080 - 0x0000)
struct BaseCharacter_C_UpdateAwardsOnDamageCaused final
{
public:
	const class AActor*                           DamagedActor;                                      // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          DamageWasAoE;                                      // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          DamageWasMegablast;                                // 0x0009(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 DamageType;                                        // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                ImpulseVector;                                     // 0x0018(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Damage;                                            // 0x0024(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          WasBigHit;                                         // 0x0028(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AMarinerCharacter*                      K2Node_DynamicCast_AsMariner_Character;            // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakVector_X;                            // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasAnyMatchingGameplayTags_self_CastInput; // 0x0048(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAnyMatchingGameplayTags_ReturnValue;   // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x005A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x005B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x005D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5E[0x2];                                       // 0x005E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class AMarinerPlayerState*                    K2Node_DynamicCast_AsMariner_Player_State;         // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_69[0x3];                                       // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetStatValue_ReturnValue;                 // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue;                        // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetDistanceTo_ReturnValue;                // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue_1;    // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x007A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue_2;    // 0x007B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BaseCharacter_C_UpdateAwardsOnDamageCaused) == 0x000008, "Wrong alignment on BaseCharacter_C_UpdateAwardsOnDamageCaused");
static_assert(sizeof(BaseCharacter_C_UpdateAwardsOnDamageCaused) == 0x000080, "Wrong size on BaseCharacter_C_UpdateAwardsOnDamageCaused");
static_assert(offsetof(BaseCharacter_C_UpdateAwardsOnDamageCaused, DamagedActor) == 0x000000, "Member 'BaseCharacter_C_UpdateAwardsOnDamageCaused::DamagedActor' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_UpdateAwardsOnDamageCaused, DamageWasAoE) == 0x000008, "Member 'BaseCharacter_C_UpdateAwardsOnDamageCaused::DamageWasAoE' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_UpdateAwardsOnDamageCaused, DamageWasMegablast) == 0x000009, "Member 'BaseCharacter_C_UpdateAwardsOnDamageCaused::DamageWasMegablast' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_UpdateAwardsOnDamageCaused, DamageType) == 0x000010, "Member 'BaseCharacter_C_UpdateAwardsOnDamageCaused::DamageType' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_UpdateAwardsOnDamageCaused, ImpulseVector) == 0x000018, "Member 'BaseCharacter_C_UpdateAwardsOnDamageCaused::ImpulseVector' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_UpdateAwardsOnDamageCaused, Damage) == 0x000024, "Member 'BaseCharacter_C_UpdateAwardsOnDamageCaused::Damage' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_UpdateAwardsOnDamageCaused, WasBigHit) == 0x000028, "Member 'BaseCharacter_C_UpdateAwardsOnDamageCaused::WasBigHit' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_UpdateAwardsOnDamageCaused, K2Node_DynamicCast_AsMariner_Character) == 0x000030, "Member 'BaseCharacter_C_UpdateAwardsOnDamageCaused::K2Node_DynamicCast_AsMariner_Character' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_UpdateAwardsOnDamageCaused, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'BaseCharacter_C_UpdateAwardsOnDamageCaused::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_UpdateAwardsOnDamageCaused, CallFunc_BreakVector_X) == 0x00003C, "Member 'BaseCharacter_C_UpdateAwardsOnDamageCaused::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_UpdateAwardsOnDamageCaused, CallFunc_BreakVector_Y) == 0x000040, "Member 'BaseCharacter_C_UpdateAwardsOnDamageCaused::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_UpdateAwardsOnDamageCaused, CallFunc_BreakVector_Z) == 0x000044, "Member 'BaseCharacter_C_UpdateAwardsOnDamageCaused::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_UpdateAwardsOnDamageCaused, CallFunc_HasAnyMatchingGameplayTags_self_CastInput) == 0x000048, "Member 'BaseCharacter_C_UpdateAwardsOnDamageCaused::CallFunc_HasAnyMatchingGameplayTags_self_CastInput' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_UpdateAwardsOnDamageCaused, CallFunc_HasAnyMatchingGameplayTags_ReturnValue) == 0x000058, "Member 'BaseCharacter_C_UpdateAwardsOnDamageCaused::CallFunc_HasAnyMatchingGameplayTags_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_UpdateAwardsOnDamageCaused, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x000059, "Member 'BaseCharacter_C_UpdateAwardsOnDamageCaused::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_UpdateAwardsOnDamageCaused, CallFunc_Not_PreBool_ReturnValue) == 0x00005A, "Member 'BaseCharacter_C_UpdateAwardsOnDamageCaused::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_UpdateAwardsOnDamageCaused, CallFunc_Not_PreBool_ReturnValue_1) == 0x00005B, "Member 'BaseCharacter_C_UpdateAwardsOnDamageCaused::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_UpdateAwardsOnDamageCaused, CallFunc_BooleanOR_ReturnValue) == 0x00005C, "Member 'BaseCharacter_C_UpdateAwardsOnDamageCaused::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_UpdateAwardsOnDamageCaused, CallFunc_Not_PreBool_ReturnValue_2) == 0x00005D, "Member 'BaseCharacter_C_UpdateAwardsOnDamageCaused::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_UpdateAwardsOnDamageCaused, K2Node_DynamicCast_AsMariner_Player_State) == 0x000060, "Member 'BaseCharacter_C_UpdateAwardsOnDamageCaused::K2Node_DynamicCast_AsMariner_Player_State' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_UpdateAwardsOnDamageCaused, K2Node_DynamicCast_bSuccess_1) == 0x000068, "Member 'BaseCharacter_C_UpdateAwardsOnDamageCaused::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_UpdateAwardsOnDamageCaused, CallFunc_GetStatValue_ReturnValue) == 0x00006C, "Member 'BaseCharacter_C_UpdateAwardsOnDamageCaused::CallFunc_GetStatValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_UpdateAwardsOnDamageCaused, CallFunc_VSize_ReturnValue) == 0x000070, "Member 'BaseCharacter_C_UpdateAwardsOnDamageCaused::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_UpdateAwardsOnDamageCaused, CallFunc_GetDistanceTo_ReturnValue) == 0x000074, "Member 'BaseCharacter_C_UpdateAwardsOnDamageCaused::CallFunc_GetDistanceTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_UpdateAwardsOnDamageCaused, CallFunc_GreaterEqual_FloatFloat_ReturnValue_1) == 0x000078, "Member 'BaseCharacter_C_UpdateAwardsOnDamageCaused::CallFunc_GreaterEqual_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_UpdateAwardsOnDamageCaused, CallFunc_BooleanAND_ReturnValue) == 0x000079, "Member 'BaseCharacter_C_UpdateAwardsOnDamageCaused::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_UpdateAwardsOnDamageCaused, CallFunc_BooleanAND_ReturnValue_1) == 0x00007A, "Member 'BaseCharacter_C_UpdateAwardsOnDamageCaused::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_UpdateAwardsOnDamageCaused, CallFunc_GreaterEqual_FloatFloat_ReturnValue_2) == 0x00007B, "Member 'BaseCharacter_C_UpdateAwardsOnDamageCaused::CallFunc_GreaterEqual_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_UpdateAwardsOnDamageCaused, CallFunc_BooleanAND_ReturnValue_2) == 0x00007C, "Member 'BaseCharacter_C_UpdateAwardsOnDamageCaused::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");

// Function BaseCharacter.BaseCharacter_C.UpdateRecoveryAwardOnHitStunRemoved
// 0x0648 (0x0648 - 0x0000)
struct BaseCharacter_C_UpdateRecoveryAwardOnHitStunRemoved final
{
public:
	struct FVector                                InitialHorizontalTraceDirection;                   // 0x0000(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         HorizontalDeltaRotation;                           // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TempHorizontalRotation;                            // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         NumHorizontalTraces;                               // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                TempTracePoint;                                    // 0x0018(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsReturningToArena_ReturnValue;           // 0x0026(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0027(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         Temp_int_Variable;                                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0030(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x003C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue;        // 0x004C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0058(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeLiteralFloat_ReturnValue;             // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0075(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_76[0x2];                                       // 0x0076(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0078(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GreaterGreater_VectorRotator_ReturnValue; // 0x0084(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_1;       // 0x0090(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x009C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x00A8(0x0010)(ConstParm, ZeroConstructor, ReferenceParm)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_2;        // 0x00B8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_IsPointInsideArenaBounds_OutDistToClosestSurface; // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_IsPointInsideArenaBounds_OutPointOnClosestSurface; // 0x00C8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_IsPointInsideArenaBounds_OutSurfaceNormal; // 0x00D4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPointInsideArenaBounds_ReturnValue;     // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x00E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E2[0x2];                                       // 0x00E2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x00E4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         Temp_object_Variable_1;                            // 0x00F0(0x0010)(ConstParm, ZeroConstructor, ReferenceParm)
	TArray<class AActor*>                         Temp_object_Variable_2;                            // 0x0100(0x0010)(ConstParm, ZeroConstructor, ReferenceParm)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_3;        // 0x0110(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_IsPointInsideArenaBounds_OutDistToClosestSurface_1; // 0x011C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_IsPointInsideArenaBounds_OutPointOnClosestSurface_1; // 0x0120(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_IsPointInsideArenaBounds_OutSurfaceNormal_1; // 0x012C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPointInsideArenaBounds_ReturnValue_1;   // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_139[0x3];                                      // 0x0139(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x013C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_3;                // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_149[0x3];                                      // 0x0149(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_4;        // 0x014C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_LineTraceSingle_OutHit;                   // 0x0158(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingle_ReturnValue;              // 0x01E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1E1[0x7];                                      // 0x01E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         Temp_object_Variable_3;                            // 0x01E8(0x0010)(ConstParm, ZeroConstructor, ReferenceParm)
	bool                                          CallFunc_Not_PreBool_ReturnValue_4;                // 0x01F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1F9[0x3];                                      // 0x01F9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_LineTraceSingle_OutHit_1;                 // 0x01FC(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingle_ReturnValue_1;            // 0x0284(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_5;                // 0x0285(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0286(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x0287(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakHitResult_Time;                      // 0x0288(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x028C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0290(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x029C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x02A8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x02B4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x02C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x02C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x02D0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x02D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x02E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x02E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x02E8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x02F4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit_1;            // 0x0300(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap_1;         // 0x0301(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_302[0x2];                                      // 0x0302(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time_1;                    // 0x0304(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance_1;                // 0x0308(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location_1;                // 0x030C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint_1;             // 0x0318(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal_1;                  // 0x0324(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal_1;            // 0x0330(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_33C[0x4];                                      // 0x033C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat_1;                 // 0x0340(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor_1;                // 0x0348(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent_1;            // 0x0350(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName_1;             // 0x0358(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem_1;                 // 0x0360(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex_1;               // 0x0364(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart_1;              // 0x0368(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd_1;                // 0x0374(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x0380(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_2;       // 0x038C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x0398(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_IsPointInsideArenaBounds_OutDistToClosestSurface_2; // 0x03A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_IsPointInsideArenaBounds_OutPointOnClosestSurface_2; // 0x03A8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_IsPointInsideArenaBounds_OutSurfaceNormal_2; // 0x03B4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPointInsideArenaBounds_ReturnValue_2;   // 0x03C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_6;                // 0x03C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C2[0x2];                                      // 0x03C2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_5;        // 0x03C4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_1;      // 0x03D0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_6;        // 0x03DC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_LineTraceSingle_OutHit_2;                 // 0x03E8(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingle_ReturnValue_2;            // 0x0470(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_7;                // 0x0471(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bBlockingHit_2;            // 0x0472(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap_2;         // 0x0473(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakHitResult_Time_2;                    // 0x0474(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance_2;                // 0x0478(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location_2;                // 0x047C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint_2;             // 0x0488(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal_2;                  // 0x0494(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal_2;            // 0x04A0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4AC[0x4];                                      // 0x04AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat_2;                 // 0x04B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor_2;                // 0x04B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent_2;            // 0x04C0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName_2;             // 0x04C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem_2;                 // 0x04D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex_2;               // 0x04D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart_2;              // 0x04D8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd_2;                // 0x04E4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_IsPointInsideArenaBounds_OutDistToClosestSurface_3; // 0x04F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_IsPointInsideArenaBounds_OutPointOnClosestSurface_3; // 0x04F4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_IsPointInsideArenaBounds_OutSurfaceNormal_3; // 0x0500(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPointInsideArenaBounds_ReturnValue_3;   // 0x050C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_8;                // 0x050D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_50E[0x2];                                      // 0x050E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_MakeVector_ReturnValue_2;                 // 0x0510(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_7;        // 0x051C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_8;        // 0x0528(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_2;           // 0x0534(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_LineTraceSingle_OutHit_3;                 // 0x0540(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingle_ReturnValue_3;            // 0x05C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_9;                // 0x05C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bBlockingHit_3;            // 0x05CA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap_3;         // 0x05CB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakHitResult_Time_3;                    // 0x05CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance_3;                // 0x05D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location_3;                // 0x05D4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint_3;             // 0x05E0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal_3;                  // 0x05EC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal_3;            // 0x05F8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_604[0x4];                                      // 0x0604(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat_3;                 // 0x0608(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor_3;                // 0x0610(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent_3;            // 0x0618(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName_3;             // 0x0620(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem_3;                 // 0x0628(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex_3;               // 0x062C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart_3;              // 0x0630(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd_3;                // 0x063C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BaseCharacter_C_UpdateRecoveryAwardOnHitStunRemoved) == 0x000008, "Wrong alignment on BaseCharacter_C_UpdateRecoveryAwardOnHitStunRemoved");
static_assert(sizeof(BaseCharacter_C_UpdateRecoveryAwardOnHitStunRemoved) == 0x000648, "Wrong size on BaseCharacter_C_UpdateRecoveryAwardOnHitStunRemoved");
static_assert(offsetof(BaseCharacter_C_UpdateRecoveryAwardOnHitStunRemoved, InitialHorizontalTraceDirection) == 0x000000, "Member 'BaseCharacter_C_UpdateRecoveryAwardOnHitStunRemoved::InitialHorizontalTraceDirection' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_UpdateRecoveryAwardOnHitStunRemoved, HorizontalDeltaRotation) == 0x00000C, "Member 'BaseCharacter_C_UpdateRecoveryAwardOnHitStunRemoved::HorizontalDeltaRotation' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_UpdateRecoveryAwardOnHitStunRemoved, TempHorizontalRotation) == 0x000010, "Member 'BaseCharacter_C_UpdateRecoveryAwardOnHitStunRemoved::TempHorizontalRotation' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_UpdateRecoveryAwardOnHitStunRemoved, NumHorizontalTraces) == 0x000014, "Member 'BaseCharacter_C_UpdateRecoveryAwardOnHitStunRemoved::NumHorizontalTraces' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_UpdateRecoveryAwardOnHitStunRemoved, TempTracePoint) == 0x000018, "Member 'BaseCharacter_C_UpdateRecoveryAwardOnHitStunRemoved::TempTracePoint' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_UpdateRecoveryAwardOnHitStunRemoved, Temp_bool_Variable) == 0x000024, "Member 'BaseCharacter_C_UpdateRecoveryAwardOnHitStunRemoved::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_UpdateRecoveryAwardOnHitStunRemoved, CallFunc_Not_PreBool_ReturnValue) == 0x000025, "Member 'BaseCharacter_C_UpdateRecoveryAwardOnHitStunRemoved::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_UpdateRecoveryAwardOnHitStunRemoved, CallFunc_IsReturningToArena_ReturnValue) == 0x000026, "Member 'BaseCharacter_C_UpdateRecoveryAwardOnHitStunRemoved::CallFunc_IsReturningToArena_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_UpdateRecoveryAwardOnHitStunRemoved, CallFunc_Not_PreBool_ReturnValue_1) == 0x000027, "Member 'BaseCharacter_C_UpdateRecoveryAwardOnHitStunRemoved::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_UpdateRecoveryAwardOnHitStunRemoved, Temp_int_Variable) == 0x000028, "Member 'BaseCharacter_C_UpdateRecoveryAwardOnHitStunRemoved::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_UpdateRecoveryAwardOnHitStunRemoved, CallFunc_Add_IntInt_ReturnValue) == 0x00002C, "Member 'BaseCharacter_C_UpdateRecoveryAwardOnHitStunRemoved::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_UpdateRecoveryAwardOnHitStunRemoved, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000030, "Member 'BaseCharacter_C_UpdateRecoveryAwardOnHitStunRemoved::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_UpdateRecoveryAwardOnHitStunRemoved, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x00003C, "Member 'BaseCharacter_C_UpdateRecoveryAwardOnHitStunRemoved::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_UpdateRecoveryAwardOnHitStunRemoved, CallFunc_Add_FloatFloat_ReturnValue) == 0x000048, "Member 'BaseCharacter_C_UpdateRecoveryAwardOnHitStunRemoved::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_UpdateRecoveryAwardOnHitStunRemoved, CallFunc_GetActorForwardVector_ReturnValue) == 0x00004C, "Member 'BaseCharacter_C_UpdateRecoveryAwardOnHitStunRemoved::CallFunc_GetActorForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_UpdateRecoveryAwardOnHitStunRemoved, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000058, "Member 'BaseCharacter_C_UpdateRecoveryAwardOnHitStunRemoved::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_UpdateRecoveryAwardOnHitStunRemoved, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000064, "Member 'BaseCharacter_C_UpdateRecoveryAwardOnHitStunRemoved::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_UpdateRecoveryAwardOnHitStunRemoved, CallFunc_MakeLiteralFloat_ReturnValue) == 0x000068, "Member 'BaseCharacter_C_UpdateRecoveryAwardOnHitStunRemoved::CallFunc_MakeLiteralFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_UpdateRecoveryAwardOnHitStunRemoved, CallFunc_Divide_FloatFloat_ReturnValue) == 0x00006C, "Member 'BaseCharacter_C_UpdateRecoveryAwardOnHitStunRemoved::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_UpdateRecoveryAwardOnHitStunRemoved, CallFunc_Subtract_IntInt_ReturnValue) == 0x000070, "Member 'BaseCharacter_C_UpdateRecoveryAwardOnHitStunRemoved::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_UpdateRecoveryAwardOnHitStunRemoved, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000074, "Member 'BaseCharacter_C_UpdateRecoveryAwardOnHitStunRemoved::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_UpdateRecoveryAwardOnHitStunRemoved, CallFunc_BooleanAND_ReturnValue) == 0x000075, "Member 'BaseCharacter_C_UpdateRecoveryAwardOnHitStunRemoved::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_UpdateRecoveryAwardOnHitStunRemoved, CallFunc_MakeRotator_ReturnValue) == 0x000078, "Member 'BaseCharacter_C_UpdateRecoveryAwardOnHitStunRemoved::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_UpdateRecoveryAwardOnHitStunRemoved, CallFunc_GreaterGreater_VectorRotator_ReturnValue) == 0x000084, "Member 'BaseCharacter_C_UpdateRecoveryAwardOnHitStunRemoved::CallFunc_GreaterGreater_VectorRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_UpdateRecoveryAwardOnHitStunRemoved, CallFunc_Multiply_VectorFloat_ReturnValue_1) == 0x000090, "Member 'BaseCharacter_C_UpdateRecoveryAwardOnHitStunRemoved::CallFunc_Multiply_VectorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_UpdateRecoveryAwardOnHitStunRemoved, CallFunc_Add_VectorVector_ReturnValue) == 0x00009C, "Member 'BaseCharacter_C_UpdateRecoveryAwardOnHitStunRemoved::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_UpdateRecoveryAwardOnHitStunRemoved, Temp_object_Variable) == 0x0000A8, "Member 'BaseCharacter_C_UpdateRecoveryAwardOnHitStunRemoved::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_UpdateRecoveryAwardOnHitStunRemoved, CallFunc_K2_GetActorLocation_ReturnValue_2) == 0x0000B8, "Member 'BaseCharacter_C_UpdateRecoveryAwardOnHitStunRemoved::CallFunc_K2_GetActorLocation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_UpdateRecoveryAwardOnHitStunRemoved, CallFunc_IsPointInsideArenaBounds_OutDistToClosestSurface) == 0x0000C4, "Member 'BaseCharacter_C_UpdateRecoveryAwardOnHitStunRemoved::CallFunc_IsPointInsideArenaBounds_OutDistToClosestSurface' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_UpdateRecoveryAwardOnHitStunRemoved, CallFunc_IsPointInsideArenaBounds_OutPointOnClosestSurface) == 0x0000C8, "Member 'BaseCharacter_C_UpdateRecoveryAwardOnHitStunRemoved::CallFunc_IsPointInsideArenaBounds_OutPointOnClosestSurface' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_UpdateRecoveryAwardOnHitStunRemoved, CallFunc_IsPointInsideArenaBounds_OutSurfaceNormal) == 0x0000D4, "Member 'BaseCharacter_C_UpdateRecoveryAwardOnHitStunRemoved::CallFunc_IsPointInsideArenaBounds_OutSurfaceNormal' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_UpdateRecoveryAwardOnHitStunRemoved, CallFunc_IsPointInsideArenaBounds_ReturnValue) == 0x0000E0, "Member 'BaseCharacter_C_UpdateRecoveryAwardOnHitStunRemoved::CallFunc_IsPointInsideArenaBounds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_UpdateRecoveryAwardOnHitStunRemoved, CallFunc_Not_PreBool_ReturnValue_2) == 0x0000E1, "Member 'BaseCharacter_C_UpdateRecoveryAwardOnHitStunRemoved::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_UpdateRecoveryAwardOnHitStunRemoved, CallFunc_MakeVector_ReturnValue) == 0x0000E4, "Member 'BaseCharacter_C_UpdateRecoveryAwardOnHitStunRemoved::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_UpdateRecoveryAwardOnHitStunRemoved, Temp_object_Variable_1) == 0x0000F0, "Member 'BaseCharacter_C_UpdateRecoveryAwardOnHitStunRemoved::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_UpdateRecoveryAwardOnHitStunRemoved, Temp_object_Variable_2) == 0x000100, "Member 'BaseCharacter_C_UpdateRecoveryAwardOnHitStunRemoved::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_UpdateRecoveryAwardOnHitStunRemoved, CallFunc_K2_GetActorLocation_ReturnValue_3) == 0x000110, "Member 'BaseCharacter_C_UpdateRecoveryAwardOnHitStunRemoved::CallFunc_K2_GetActorLocation_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_UpdateRecoveryAwardOnHitStunRemoved, CallFunc_IsPointInsideArenaBounds_OutDistToClosestSurface_1) == 0x00011C, "Member 'BaseCharacter_C_UpdateRecoveryAwardOnHitStunRemoved::CallFunc_IsPointInsideArenaBounds_OutDistToClosestSurface_1' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_UpdateRecoveryAwardOnHitStunRemoved, CallFunc_IsPointInsideArenaBounds_OutPointOnClosestSurface_1) == 0x000120, "Member 'BaseCharacter_C_UpdateRecoveryAwardOnHitStunRemoved::CallFunc_IsPointInsideArenaBounds_OutPointOnClosestSurface_1' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_UpdateRecoveryAwardOnHitStunRemoved, CallFunc_IsPointInsideArenaBounds_OutSurfaceNormal_1) == 0x00012C, "Member 'BaseCharacter_C_UpdateRecoveryAwardOnHitStunRemoved::CallFunc_IsPointInsideArenaBounds_OutSurfaceNormal_1' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_UpdateRecoveryAwardOnHitStunRemoved, CallFunc_IsPointInsideArenaBounds_ReturnValue_1) == 0x000138, "Member 'BaseCharacter_C_UpdateRecoveryAwardOnHitStunRemoved::CallFunc_IsPointInsideArenaBounds_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_UpdateRecoveryAwardOnHitStunRemoved, CallFunc_Subtract_VectorVector_ReturnValue) == 0x00013C, "Member 'BaseCharacter_C_UpdateRecoveryAwardOnHitStunRemoved::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_UpdateRecoveryAwardOnHitStunRemoved, CallFunc_Not_PreBool_ReturnValue_3) == 0x000148, "Member 'BaseCharacter_C_UpdateRecoveryAwardOnHitStunRemoved::CallFunc_Not_PreBool_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_UpdateRecoveryAwardOnHitStunRemoved, CallFunc_K2_GetActorLocation_ReturnValue_4) == 0x00014C, "Member 'BaseCharacter_C_UpdateRecoveryAwardOnHitStunRemoved::CallFunc_K2_GetActorLocation_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_UpdateRecoveryAwardOnHitStunRemoved, CallFunc_LineTraceSingle_OutHit) == 0x000158, "Member 'BaseCharacter_C_UpdateRecoveryAwardOnHitStunRemoved::CallFunc_LineTraceSingle_OutHit' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_UpdateRecoveryAwardOnHitStunRemoved, CallFunc_LineTraceSingle_ReturnValue) == 0x0001E0, "Member 'BaseCharacter_C_UpdateRecoveryAwardOnHitStunRemoved::CallFunc_LineTraceSingle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_UpdateRecoveryAwardOnHitStunRemoved, Temp_object_Variable_3) == 0x0001E8, "Member 'BaseCharacter_C_UpdateRecoveryAwardOnHitStunRemoved::Temp_object_Variable_3' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_UpdateRecoveryAwardOnHitStunRemoved, CallFunc_Not_PreBool_ReturnValue_4) == 0x0001F8, "Member 'BaseCharacter_C_UpdateRecoveryAwardOnHitStunRemoved::CallFunc_Not_PreBool_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_UpdateRecoveryAwardOnHitStunRemoved, CallFunc_LineTraceSingle_OutHit_1) == 0x0001FC, "Member 'BaseCharacter_C_UpdateRecoveryAwardOnHitStunRemoved::CallFunc_LineTraceSingle_OutHit_1' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_UpdateRecoveryAwardOnHitStunRemoved, CallFunc_LineTraceSingle_ReturnValue_1) == 0x000284, "Member 'BaseCharacter_C_UpdateRecoveryAwardOnHitStunRemoved::CallFunc_LineTraceSingle_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_UpdateRecoveryAwardOnHitStunRemoved, CallFunc_Not_PreBool_ReturnValue_5) == 0x000285, "Member 'BaseCharacter_C_UpdateRecoveryAwardOnHitStunRemoved::CallFunc_Not_PreBool_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_UpdateRecoveryAwardOnHitStunRemoved, CallFunc_BreakHitResult_bBlockingHit) == 0x000286, "Member 'BaseCharacter_C_UpdateRecoveryAwardOnHitStunRemoved::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_UpdateRecoveryAwardOnHitStunRemoved, CallFunc_BreakHitResult_bInitialOverlap) == 0x000287, "Member 'BaseCharacter_C_UpdateRecoveryAwardOnHitStunRemoved::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_UpdateRecoveryAwardOnHitStunRemoved, CallFunc_BreakHitResult_Time) == 0x000288, "Member 'BaseCharacter_C_UpdateRecoveryAwardOnHitStunRemoved::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_UpdateRecoveryAwardOnHitStunRemoved, CallFunc_BreakHitResult_Distance) == 0x00028C, "Member 'BaseCharacter_C_UpdateRecoveryAwardOnHitStunRemoved::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_UpdateRecoveryAwardOnHitStunRemoved, CallFunc_BreakHitResult_Location) == 0x000290, "Member 'BaseCharacter_C_UpdateRecoveryAwardOnHitStunRemoved::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_UpdateRecoveryAwardOnHitStunRemoved, CallFunc_BreakHitResult_ImpactPoint) == 0x00029C, "Member 'BaseCharacter_C_UpdateRecoveryAwardOnHitStunRemoved::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_UpdateRecoveryAwardOnHitStunRemoved, CallFunc_BreakHitResult_Normal) == 0x0002A8, "Member 'BaseCharacter_C_UpdateRecoveryAwardOnHitStunRemoved::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_UpdateRecoveryAwardOnHitStunRemoved, CallFunc_BreakHitResult_ImpactNormal) == 0x0002B4, "Member 'BaseCharacter_C_UpdateRecoveryAwardOnHitStunRemoved::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_UpdateRecoveryAwardOnHitStunRemoved, CallFunc_BreakHitResult_PhysMat) == 0x0002C0, "Member 'BaseCharacter_C_UpdateRecoveryAwardOnHitStunRemoved::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_UpdateRecoveryAwardOnHitStunRemoved, CallFunc_BreakHitResult_HitActor) == 0x0002C8, "Member 'BaseCharacter_C_UpdateRecoveryAwardOnHitStunRemoved::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_UpdateRecoveryAwardOnHitStunRemoved, CallFunc_BreakHitResult_HitComponent) == 0x0002D0, "Member 'BaseCharacter_C_UpdateRecoveryAwardOnHitStunRemoved::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_UpdateRecoveryAwardOnHitStunRemoved, CallFunc_BreakHitResult_HitBoneName) == 0x0002D8, "Member 'BaseCharacter_C_UpdateRecoveryAwardOnHitStunRemoved::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_UpdateRecoveryAwardOnHitStunRemoved, CallFunc_BreakHitResult_HitItem) == 0x0002E0, "Member 'BaseCharacter_C_UpdateRecoveryAwardOnHitStunRemoved::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_UpdateRecoveryAwardOnHitStunRemoved, CallFunc_BreakHitResult_FaceIndex) == 0x0002E4, "Member 'BaseCharacter_C_UpdateRecoveryAwardOnHitStunRemoved::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_UpdateRecoveryAwardOnHitStunRemoved, CallFunc_BreakHitResult_TraceStart) == 0x0002E8, "Member 'BaseCharacter_C_UpdateRecoveryAwardOnHitStunRemoved::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_UpdateRecoveryAwardOnHitStunRemoved, CallFunc_BreakHitResult_TraceEnd) == 0x0002F4, "Member 'BaseCharacter_C_UpdateRecoveryAwardOnHitStunRemoved::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_UpdateRecoveryAwardOnHitStunRemoved, CallFunc_BreakHitResult_bBlockingHit_1) == 0x000300, "Member 'BaseCharacter_C_UpdateRecoveryAwardOnHitStunRemoved::CallFunc_BreakHitResult_bBlockingHit_1' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_UpdateRecoveryAwardOnHitStunRemoved, CallFunc_BreakHitResult_bInitialOverlap_1) == 0x000301, "Member 'BaseCharacter_C_UpdateRecoveryAwardOnHitStunRemoved::CallFunc_BreakHitResult_bInitialOverlap_1' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_UpdateRecoveryAwardOnHitStunRemoved, CallFunc_BreakHitResult_Time_1) == 0x000304, "Member 'BaseCharacter_C_UpdateRecoveryAwardOnHitStunRemoved::CallFunc_BreakHitResult_Time_1' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_UpdateRecoveryAwardOnHitStunRemoved, CallFunc_BreakHitResult_Distance_1) == 0x000308, "Member 'BaseCharacter_C_UpdateRecoveryAwardOnHitStunRemoved::CallFunc_BreakHitResult_Distance_1' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_UpdateRecoveryAwardOnHitStunRemoved, CallFunc_BreakHitResult_Location_1) == 0x00030C, "Member 'BaseCharacter_C_UpdateRecoveryAwardOnHitStunRemoved::CallFunc_BreakHitResult_Location_1' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_UpdateRecoveryAwardOnHitStunRemoved, CallFunc_BreakHitResult_ImpactPoint_1) == 0x000318, "Member 'BaseCharacter_C_UpdateRecoveryAwardOnHitStunRemoved::CallFunc_BreakHitResult_ImpactPoint_1' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_UpdateRecoveryAwardOnHitStunRemoved, CallFunc_BreakHitResult_Normal_1) == 0x000324, "Member 'BaseCharacter_C_UpdateRecoveryAwardOnHitStunRemoved::CallFunc_BreakHitResult_Normal_1' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_UpdateRecoveryAwardOnHitStunRemoved, CallFunc_BreakHitResult_ImpactNormal_1) == 0x000330, "Member 'BaseCharacter_C_UpdateRecoveryAwardOnHitStunRemoved::CallFunc_BreakHitResult_ImpactNormal_1' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_UpdateRecoveryAwardOnHitStunRemoved, CallFunc_BreakHitResult_PhysMat_1) == 0x000340, "Member 'BaseCharacter_C_UpdateRecoveryAwardOnHitStunRemoved::CallFunc_BreakHitResult_PhysMat_1' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_UpdateRecoveryAwardOnHitStunRemoved, CallFunc_BreakHitResult_HitActor_1) == 0x000348, "Member 'BaseCharacter_C_UpdateRecoveryAwardOnHitStunRemoved::CallFunc_BreakHitResult_HitActor_1' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_UpdateRecoveryAwardOnHitStunRemoved, CallFunc_BreakHitResult_HitComponent_1) == 0x000350, "Member 'BaseCharacter_C_UpdateRecoveryAwardOnHitStunRemoved::CallFunc_BreakHitResult_HitComponent_1' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_UpdateRecoveryAwardOnHitStunRemoved, CallFunc_BreakHitResult_HitBoneName_1) == 0x000358, "Member 'BaseCharacter_C_UpdateRecoveryAwardOnHitStunRemoved::CallFunc_BreakHitResult_HitBoneName_1' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_UpdateRecoveryAwardOnHitStunRemoved, CallFunc_BreakHitResult_HitItem_1) == 0x000360, "Member 'BaseCharacter_C_UpdateRecoveryAwardOnHitStunRemoved::CallFunc_BreakHitResult_HitItem_1' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_UpdateRecoveryAwardOnHitStunRemoved, CallFunc_BreakHitResult_FaceIndex_1) == 0x000364, "Member 'BaseCharacter_C_UpdateRecoveryAwardOnHitStunRemoved::CallFunc_BreakHitResult_FaceIndex_1' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_UpdateRecoveryAwardOnHitStunRemoved, CallFunc_BreakHitResult_TraceStart_1) == 0x000368, "Member 'BaseCharacter_C_UpdateRecoveryAwardOnHitStunRemoved::CallFunc_BreakHitResult_TraceStart_1' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_UpdateRecoveryAwardOnHitStunRemoved, CallFunc_BreakHitResult_TraceEnd_1) == 0x000374, "Member 'BaseCharacter_C_UpdateRecoveryAwardOnHitStunRemoved::CallFunc_BreakHitResult_TraceEnd_1' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_UpdateRecoveryAwardOnHitStunRemoved, CallFunc_MakeVector_ReturnValue_1) == 0x000380, "Member 'BaseCharacter_C_UpdateRecoveryAwardOnHitStunRemoved::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_UpdateRecoveryAwardOnHitStunRemoved, CallFunc_Multiply_VectorFloat_ReturnValue_2) == 0x00038C, "Member 'BaseCharacter_C_UpdateRecoveryAwardOnHitStunRemoved::CallFunc_Multiply_VectorFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_UpdateRecoveryAwardOnHitStunRemoved, CallFunc_Add_VectorVector_ReturnValue_1) == 0x000398, "Member 'BaseCharacter_C_UpdateRecoveryAwardOnHitStunRemoved::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_UpdateRecoveryAwardOnHitStunRemoved, CallFunc_IsPointInsideArenaBounds_OutDistToClosestSurface_2) == 0x0003A4, "Member 'BaseCharacter_C_UpdateRecoveryAwardOnHitStunRemoved::CallFunc_IsPointInsideArenaBounds_OutDistToClosestSurface_2' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_UpdateRecoveryAwardOnHitStunRemoved, CallFunc_IsPointInsideArenaBounds_OutPointOnClosestSurface_2) == 0x0003A8, "Member 'BaseCharacter_C_UpdateRecoveryAwardOnHitStunRemoved::CallFunc_IsPointInsideArenaBounds_OutPointOnClosestSurface_2' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_UpdateRecoveryAwardOnHitStunRemoved, CallFunc_IsPointInsideArenaBounds_OutSurfaceNormal_2) == 0x0003B4, "Member 'BaseCharacter_C_UpdateRecoveryAwardOnHitStunRemoved::CallFunc_IsPointInsideArenaBounds_OutSurfaceNormal_2' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_UpdateRecoveryAwardOnHitStunRemoved, CallFunc_IsPointInsideArenaBounds_ReturnValue_2) == 0x0003C0, "Member 'BaseCharacter_C_UpdateRecoveryAwardOnHitStunRemoved::CallFunc_IsPointInsideArenaBounds_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_UpdateRecoveryAwardOnHitStunRemoved, CallFunc_Not_PreBool_ReturnValue_6) == 0x0003C1, "Member 'BaseCharacter_C_UpdateRecoveryAwardOnHitStunRemoved::CallFunc_Not_PreBool_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_UpdateRecoveryAwardOnHitStunRemoved, CallFunc_K2_GetActorLocation_ReturnValue_5) == 0x0003C4, "Member 'BaseCharacter_C_UpdateRecoveryAwardOnHitStunRemoved::CallFunc_K2_GetActorLocation_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_UpdateRecoveryAwardOnHitStunRemoved, CallFunc_Subtract_VectorVector_ReturnValue_1) == 0x0003D0, "Member 'BaseCharacter_C_UpdateRecoveryAwardOnHitStunRemoved::CallFunc_Subtract_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_UpdateRecoveryAwardOnHitStunRemoved, CallFunc_K2_GetActorLocation_ReturnValue_6) == 0x0003DC, "Member 'BaseCharacter_C_UpdateRecoveryAwardOnHitStunRemoved::CallFunc_K2_GetActorLocation_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_UpdateRecoveryAwardOnHitStunRemoved, CallFunc_LineTraceSingle_OutHit_2) == 0x0003E8, "Member 'BaseCharacter_C_UpdateRecoveryAwardOnHitStunRemoved::CallFunc_LineTraceSingle_OutHit_2' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_UpdateRecoveryAwardOnHitStunRemoved, CallFunc_LineTraceSingle_ReturnValue_2) == 0x000470, "Member 'BaseCharacter_C_UpdateRecoveryAwardOnHitStunRemoved::CallFunc_LineTraceSingle_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_UpdateRecoveryAwardOnHitStunRemoved, CallFunc_Not_PreBool_ReturnValue_7) == 0x000471, "Member 'BaseCharacter_C_UpdateRecoveryAwardOnHitStunRemoved::CallFunc_Not_PreBool_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_UpdateRecoveryAwardOnHitStunRemoved, CallFunc_BreakHitResult_bBlockingHit_2) == 0x000472, "Member 'BaseCharacter_C_UpdateRecoveryAwardOnHitStunRemoved::CallFunc_BreakHitResult_bBlockingHit_2' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_UpdateRecoveryAwardOnHitStunRemoved, CallFunc_BreakHitResult_bInitialOverlap_2) == 0x000473, "Member 'BaseCharacter_C_UpdateRecoveryAwardOnHitStunRemoved::CallFunc_BreakHitResult_bInitialOverlap_2' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_UpdateRecoveryAwardOnHitStunRemoved, CallFunc_BreakHitResult_Time_2) == 0x000474, "Member 'BaseCharacter_C_UpdateRecoveryAwardOnHitStunRemoved::CallFunc_BreakHitResult_Time_2' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_UpdateRecoveryAwardOnHitStunRemoved, CallFunc_BreakHitResult_Distance_2) == 0x000478, "Member 'BaseCharacter_C_UpdateRecoveryAwardOnHitStunRemoved::CallFunc_BreakHitResult_Distance_2' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_UpdateRecoveryAwardOnHitStunRemoved, CallFunc_BreakHitResult_Location_2) == 0x00047C, "Member 'BaseCharacter_C_UpdateRecoveryAwardOnHitStunRemoved::CallFunc_BreakHitResult_Location_2' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_UpdateRecoveryAwardOnHitStunRemoved, CallFunc_BreakHitResult_ImpactPoint_2) == 0x000488, "Member 'BaseCharacter_C_UpdateRecoveryAwardOnHitStunRemoved::CallFunc_BreakHitResult_ImpactPoint_2' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_UpdateRecoveryAwardOnHitStunRemoved, CallFunc_BreakHitResult_Normal_2) == 0x000494, "Member 'BaseCharacter_C_UpdateRecoveryAwardOnHitStunRemoved::CallFunc_BreakHitResult_Normal_2' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_UpdateRecoveryAwardOnHitStunRemoved, CallFunc_BreakHitResult_ImpactNormal_2) == 0x0004A0, "Member 'BaseCharacter_C_UpdateRecoveryAwardOnHitStunRemoved::CallFunc_BreakHitResult_ImpactNormal_2' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_UpdateRecoveryAwardOnHitStunRemoved, CallFunc_BreakHitResult_PhysMat_2) == 0x0004B0, "Member 'BaseCharacter_C_UpdateRecoveryAwardOnHitStunRemoved::CallFunc_BreakHitResult_PhysMat_2' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_UpdateRecoveryAwardOnHitStunRemoved, CallFunc_BreakHitResult_HitActor_2) == 0x0004B8, "Member 'BaseCharacter_C_UpdateRecoveryAwardOnHitStunRemoved::CallFunc_BreakHitResult_HitActor_2' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_UpdateRecoveryAwardOnHitStunRemoved, CallFunc_BreakHitResult_HitComponent_2) == 0x0004C0, "Member 'BaseCharacter_C_UpdateRecoveryAwardOnHitStunRemoved::CallFunc_BreakHitResult_HitComponent_2' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_UpdateRecoveryAwardOnHitStunRemoved, CallFunc_BreakHitResult_HitBoneName_2) == 0x0004C8, "Member 'BaseCharacter_C_UpdateRecoveryAwardOnHitStunRemoved::CallFunc_BreakHitResult_HitBoneName_2' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_UpdateRecoveryAwardOnHitStunRemoved, CallFunc_BreakHitResult_HitItem_2) == 0x0004D0, "Member 'BaseCharacter_C_UpdateRecoveryAwardOnHitStunRemoved::CallFunc_BreakHitResult_HitItem_2' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_UpdateRecoveryAwardOnHitStunRemoved, CallFunc_BreakHitResult_FaceIndex_2) == 0x0004D4, "Member 'BaseCharacter_C_UpdateRecoveryAwardOnHitStunRemoved::CallFunc_BreakHitResult_FaceIndex_2' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_UpdateRecoveryAwardOnHitStunRemoved, CallFunc_BreakHitResult_TraceStart_2) == 0x0004D8, "Member 'BaseCharacter_C_UpdateRecoveryAwardOnHitStunRemoved::CallFunc_BreakHitResult_TraceStart_2' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_UpdateRecoveryAwardOnHitStunRemoved, CallFunc_BreakHitResult_TraceEnd_2) == 0x0004E4, "Member 'BaseCharacter_C_UpdateRecoveryAwardOnHitStunRemoved::CallFunc_BreakHitResult_TraceEnd_2' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_UpdateRecoveryAwardOnHitStunRemoved, CallFunc_IsPointInsideArenaBounds_OutDistToClosestSurface_3) == 0x0004F0, "Member 'BaseCharacter_C_UpdateRecoveryAwardOnHitStunRemoved::CallFunc_IsPointInsideArenaBounds_OutDistToClosestSurface_3' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_UpdateRecoveryAwardOnHitStunRemoved, CallFunc_IsPointInsideArenaBounds_OutPointOnClosestSurface_3) == 0x0004F4, "Member 'BaseCharacter_C_UpdateRecoveryAwardOnHitStunRemoved::CallFunc_IsPointInsideArenaBounds_OutPointOnClosestSurface_3' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_UpdateRecoveryAwardOnHitStunRemoved, CallFunc_IsPointInsideArenaBounds_OutSurfaceNormal_3) == 0x000500, "Member 'BaseCharacter_C_UpdateRecoveryAwardOnHitStunRemoved::CallFunc_IsPointInsideArenaBounds_OutSurfaceNormal_3' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_UpdateRecoveryAwardOnHitStunRemoved, CallFunc_IsPointInsideArenaBounds_ReturnValue_3) == 0x00050C, "Member 'BaseCharacter_C_UpdateRecoveryAwardOnHitStunRemoved::CallFunc_IsPointInsideArenaBounds_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_UpdateRecoveryAwardOnHitStunRemoved, CallFunc_Not_PreBool_ReturnValue_8) == 0x00050D, "Member 'BaseCharacter_C_UpdateRecoveryAwardOnHitStunRemoved::CallFunc_Not_PreBool_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_UpdateRecoveryAwardOnHitStunRemoved, CallFunc_MakeVector_ReturnValue_2) == 0x000510, "Member 'BaseCharacter_C_UpdateRecoveryAwardOnHitStunRemoved::CallFunc_MakeVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_UpdateRecoveryAwardOnHitStunRemoved, CallFunc_K2_GetActorLocation_ReturnValue_7) == 0x00051C, "Member 'BaseCharacter_C_UpdateRecoveryAwardOnHitStunRemoved::CallFunc_K2_GetActorLocation_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_UpdateRecoveryAwardOnHitStunRemoved, CallFunc_K2_GetActorLocation_ReturnValue_8) == 0x000528, "Member 'BaseCharacter_C_UpdateRecoveryAwardOnHitStunRemoved::CallFunc_K2_GetActorLocation_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_UpdateRecoveryAwardOnHitStunRemoved, CallFunc_Add_VectorVector_ReturnValue_2) == 0x000534, "Member 'BaseCharacter_C_UpdateRecoveryAwardOnHitStunRemoved::CallFunc_Add_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_UpdateRecoveryAwardOnHitStunRemoved, CallFunc_LineTraceSingle_OutHit_3) == 0x000540, "Member 'BaseCharacter_C_UpdateRecoveryAwardOnHitStunRemoved::CallFunc_LineTraceSingle_OutHit_3' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_UpdateRecoveryAwardOnHitStunRemoved, CallFunc_LineTraceSingle_ReturnValue_3) == 0x0005C8, "Member 'BaseCharacter_C_UpdateRecoveryAwardOnHitStunRemoved::CallFunc_LineTraceSingle_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_UpdateRecoveryAwardOnHitStunRemoved, CallFunc_Not_PreBool_ReturnValue_9) == 0x0005C9, "Member 'BaseCharacter_C_UpdateRecoveryAwardOnHitStunRemoved::CallFunc_Not_PreBool_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_UpdateRecoveryAwardOnHitStunRemoved, CallFunc_BreakHitResult_bBlockingHit_3) == 0x0005CA, "Member 'BaseCharacter_C_UpdateRecoveryAwardOnHitStunRemoved::CallFunc_BreakHitResult_bBlockingHit_3' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_UpdateRecoveryAwardOnHitStunRemoved, CallFunc_BreakHitResult_bInitialOverlap_3) == 0x0005CB, "Member 'BaseCharacter_C_UpdateRecoveryAwardOnHitStunRemoved::CallFunc_BreakHitResult_bInitialOverlap_3' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_UpdateRecoveryAwardOnHitStunRemoved, CallFunc_BreakHitResult_Time_3) == 0x0005CC, "Member 'BaseCharacter_C_UpdateRecoveryAwardOnHitStunRemoved::CallFunc_BreakHitResult_Time_3' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_UpdateRecoveryAwardOnHitStunRemoved, CallFunc_BreakHitResult_Distance_3) == 0x0005D0, "Member 'BaseCharacter_C_UpdateRecoveryAwardOnHitStunRemoved::CallFunc_BreakHitResult_Distance_3' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_UpdateRecoveryAwardOnHitStunRemoved, CallFunc_BreakHitResult_Location_3) == 0x0005D4, "Member 'BaseCharacter_C_UpdateRecoveryAwardOnHitStunRemoved::CallFunc_BreakHitResult_Location_3' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_UpdateRecoveryAwardOnHitStunRemoved, CallFunc_BreakHitResult_ImpactPoint_3) == 0x0005E0, "Member 'BaseCharacter_C_UpdateRecoveryAwardOnHitStunRemoved::CallFunc_BreakHitResult_ImpactPoint_3' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_UpdateRecoveryAwardOnHitStunRemoved, CallFunc_BreakHitResult_Normal_3) == 0x0005EC, "Member 'BaseCharacter_C_UpdateRecoveryAwardOnHitStunRemoved::CallFunc_BreakHitResult_Normal_3' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_UpdateRecoveryAwardOnHitStunRemoved, CallFunc_BreakHitResult_ImpactNormal_3) == 0x0005F8, "Member 'BaseCharacter_C_UpdateRecoveryAwardOnHitStunRemoved::CallFunc_BreakHitResult_ImpactNormal_3' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_UpdateRecoveryAwardOnHitStunRemoved, CallFunc_BreakHitResult_PhysMat_3) == 0x000608, "Member 'BaseCharacter_C_UpdateRecoveryAwardOnHitStunRemoved::CallFunc_BreakHitResult_PhysMat_3' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_UpdateRecoveryAwardOnHitStunRemoved, CallFunc_BreakHitResult_HitActor_3) == 0x000610, "Member 'BaseCharacter_C_UpdateRecoveryAwardOnHitStunRemoved::CallFunc_BreakHitResult_HitActor_3' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_UpdateRecoveryAwardOnHitStunRemoved, CallFunc_BreakHitResult_HitComponent_3) == 0x000618, "Member 'BaseCharacter_C_UpdateRecoveryAwardOnHitStunRemoved::CallFunc_BreakHitResult_HitComponent_3' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_UpdateRecoveryAwardOnHitStunRemoved, CallFunc_BreakHitResult_HitBoneName_3) == 0x000620, "Member 'BaseCharacter_C_UpdateRecoveryAwardOnHitStunRemoved::CallFunc_BreakHitResult_HitBoneName_3' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_UpdateRecoveryAwardOnHitStunRemoved, CallFunc_BreakHitResult_HitItem_3) == 0x000628, "Member 'BaseCharacter_C_UpdateRecoveryAwardOnHitStunRemoved::CallFunc_BreakHitResult_HitItem_3' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_UpdateRecoveryAwardOnHitStunRemoved, CallFunc_BreakHitResult_FaceIndex_3) == 0x00062C, "Member 'BaseCharacter_C_UpdateRecoveryAwardOnHitStunRemoved::CallFunc_BreakHitResult_FaceIndex_3' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_UpdateRecoveryAwardOnHitStunRemoved, CallFunc_BreakHitResult_TraceStart_3) == 0x000630, "Member 'BaseCharacter_C_UpdateRecoveryAwardOnHitStunRemoved::CallFunc_BreakHitResult_TraceStart_3' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_UpdateRecoveryAwardOnHitStunRemoved, CallFunc_BreakHitResult_TraceEnd_3) == 0x00063C, "Member 'BaseCharacter_C_UpdateRecoveryAwardOnHitStunRemoved::CallFunc_BreakHitResult_TraceEnd_3' has a wrong offset!");

// Function BaseCharacter.BaseCharacter_C.GetJumpParticlesOffset
// 0x0050 (0x0050 - 0x0000)
struct BaseCharacter_C_GetJumpParticlesOffset final
{
public:
	struct FVector                                ReturnValue;                                       // 0x0000(0x000C)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetCurrentJumpCount_ReturnValue;          // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetScaledCapsuleHalfHeight_ReturnValue;   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0020(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetJumpParticlesOffset_ReturnValue;       // 0x002C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0038(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Select_Default;                             // 0x0044(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BaseCharacter_C_GetJumpParticlesOffset) == 0x000004, "Wrong alignment on BaseCharacter_C_GetJumpParticlesOffset");
static_assert(sizeof(BaseCharacter_C_GetJumpParticlesOffset) == 0x000050, "Wrong size on BaseCharacter_C_GetJumpParticlesOffset");
static_assert(offsetof(BaseCharacter_C_GetJumpParticlesOffset, ReturnValue) == 0x000000, "Member 'BaseCharacter_C_GetJumpParticlesOffset::ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_GetJumpParticlesOffset, Temp_bool_Variable) == 0x00000C, "Member 'BaseCharacter_C_GetJumpParticlesOffset::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_GetJumpParticlesOffset, CallFunc_GetCurrentJumpCount_ReturnValue) == 0x000010, "Member 'BaseCharacter_C_GetJumpParticlesOffset::CallFunc_GetCurrentJumpCount_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_GetJumpParticlesOffset, CallFunc_GetScaledCapsuleHalfHeight_ReturnValue) == 0x000014, "Member 'BaseCharacter_C_GetJumpParticlesOffset::CallFunc_GetScaledCapsuleHalfHeight_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_GetJumpParticlesOffset, CallFunc_Greater_IntInt_ReturnValue) == 0x000018, "Member 'BaseCharacter_C_GetJumpParticlesOffset::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_GetJumpParticlesOffset, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x00001C, "Member 'BaseCharacter_C_GetJumpParticlesOffset::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_GetJumpParticlesOffset, CallFunc_MakeVector_ReturnValue) == 0x000020, "Member 'BaseCharacter_C_GetJumpParticlesOffset::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_GetJumpParticlesOffset, CallFunc_GetJumpParticlesOffset_ReturnValue) == 0x00002C, "Member 'BaseCharacter_C_GetJumpParticlesOffset::CallFunc_GetJumpParticlesOffset_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_GetJumpParticlesOffset, CallFunc_Add_VectorVector_ReturnValue) == 0x000038, "Member 'BaseCharacter_C_GetJumpParticlesOffset::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_GetJumpParticlesOffset, K2Node_Select_Default) == 0x000044, "Member 'BaseCharacter_C_GetJumpParticlesOffset::K2Node_Select_Default' has a wrong offset!");

// Function BaseCharacter.BaseCharacter_C.GetGameplayAwardTypeFromStat
// 0x000C (0x000C - 0x0000)
struct BaseCharacter_C_GetGameplayAwardTypeFromStat final
{
public:
	class FName                                   Stat;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EGameplayAwardTypes                           AwardType;                                         // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchName_CmpSuccess;                      // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BaseCharacter_C_GetGameplayAwardTypeFromStat) == 0x000004, "Wrong alignment on BaseCharacter_C_GetGameplayAwardTypeFromStat");
static_assert(sizeof(BaseCharacter_C_GetGameplayAwardTypeFromStat) == 0x00000C, "Wrong size on BaseCharacter_C_GetGameplayAwardTypeFromStat");
static_assert(offsetof(BaseCharacter_C_GetGameplayAwardTypeFromStat, Stat) == 0x000000, "Member 'BaseCharacter_C_GetGameplayAwardTypeFromStat::Stat' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_GetGameplayAwardTypeFromStat, AwardType) == 0x000008, "Member 'BaseCharacter_C_GetGameplayAwardTypeFromStat::AwardType' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_GetGameplayAwardTypeFromStat, K2Node_SwitchName_CmpSuccess) == 0x000009, "Member 'BaseCharacter_C_GetGameplayAwardTypeFromStat::K2Node_SwitchName_CmpSuccess' has a wrong offset!");

// Function BaseCharacter.BaseCharacter_C.DebugPrintGameplayEffectLevel
// 0x0060 (0x0060 - 0x0000)
struct BaseCharacter_C_DebugPrintGameplayEffectLevel final
{
public:
	class UClass*                                 Effect;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DeltaTime;                                         // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetClassDisplayName_ReturnValue;          // 0x0010(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetGameplayEffectLevel_ReturnValue;       // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0040(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0050(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BaseCharacter_C_DebugPrintGameplayEffectLevel) == 0x000008, "Wrong alignment on BaseCharacter_C_DebugPrintGameplayEffectLevel");
static_assert(sizeof(BaseCharacter_C_DebugPrintGameplayEffectLevel) == 0x000060, "Wrong size on BaseCharacter_C_DebugPrintGameplayEffectLevel");
static_assert(offsetof(BaseCharacter_C_DebugPrintGameplayEffectLevel, Effect) == 0x000000, "Member 'BaseCharacter_C_DebugPrintGameplayEffectLevel::Effect' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_DebugPrintGameplayEffectLevel, DeltaTime) == 0x000008, "Member 'BaseCharacter_C_DebugPrintGameplayEffectLevel::DeltaTime' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_DebugPrintGameplayEffectLevel, CallFunc_GetClassDisplayName_ReturnValue) == 0x000010, "Member 'BaseCharacter_C_DebugPrintGameplayEffectLevel::CallFunc_GetClassDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_DebugPrintGameplayEffectLevel, CallFunc_GetGameplayEffectLevel_ReturnValue) == 0x000020, "Member 'BaseCharacter_C_DebugPrintGameplayEffectLevel::CallFunc_GetGameplayEffectLevel_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_DebugPrintGameplayEffectLevel, CallFunc_Concat_StrStr_ReturnValue) == 0x000028, "Member 'BaseCharacter_C_DebugPrintGameplayEffectLevel::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_DebugPrintGameplayEffectLevel, CallFunc_Greater_IntInt_ReturnValue) == 0x000038, "Member 'BaseCharacter_C_DebugPrintGameplayEffectLevel::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_DebugPrintGameplayEffectLevel, CallFunc_Conv_IntToString_ReturnValue) == 0x000040, "Member 'BaseCharacter_C_DebugPrintGameplayEffectLevel::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_DebugPrintGameplayEffectLevel, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000050, "Member 'BaseCharacter_C_DebugPrintGameplayEffectLevel::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");

// Function BaseCharacter.BaseCharacter_C.DebugPrintGameplayEffectLevels
// 0x0020 (0x0020 - 0x0000)
struct BaseCharacter_C_DebugPrintGameplayEffectLevels final
{
public:
	float                                         DeltaTime;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BaseCharacter_C_DebugPrintGameplayEffectLevels) == 0x000008, "Wrong alignment on BaseCharacter_C_DebugPrintGameplayEffectLevels");
static_assert(sizeof(BaseCharacter_C_DebugPrintGameplayEffectLevels) == 0x000020, "Wrong size on BaseCharacter_C_DebugPrintGameplayEffectLevels");
static_assert(offsetof(BaseCharacter_C_DebugPrintGameplayEffectLevels, DeltaTime) == 0x000000, "Member 'BaseCharacter_C_DebugPrintGameplayEffectLevels::DeltaTime' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_DebugPrintGameplayEffectLevels, Temp_int_Array_Index_Variable) == 0x000004, "Member 'BaseCharacter_C_DebugPrintGameplayEffectLevels::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_DebugPrintGameplayEffectLevels, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'BaseCharacter_C_DebugPrintGameplayEffectLevels::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_DebugPrintGameplayEffectLevels, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'BaseCharacter_C_DebugPrintGameplayEffectLevels::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_DebugPrintGameplayEffectLevels, CallFunc_Array_Get_Item) == 0x000010, "Member 'BaseCharacter_C_DebugPrintGameplayEffectLevels::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_DebugPrintGameplayEffectLevels, CallFunc_Array_Length_ReturnValue) == 0x000018, "Member 'BaseCharacter_C_DebugPrintGameplayEffectLevels::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_DebugPrintGameplayEffectLevels, CallFunc_Less_IntInt_ReturnValue) == 0x00001C, "Member 'BaseCharacter_C_DebugPrintGameplayEffectLevels::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BaseCharacter.BaseCharacter_C.DodgeCollisionToggleInternal
// 0x000A (0x000A - 0x0000)
struct BaseCharacter_C_DodgeCollisionToggleInternal final
{
public:
	bool                                          CollisionEnabled;                                  // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	ECollisionResponse                            Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ECollisionResponse                            Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ECollisionResponse                            Temp_byte_Variable_2;                              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECollisionResponse                            Temp_byte_Variable_3;                              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ECollisionResponse                            K2Node_Select_Default;                             // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECollisionResponse                            K2Node_Select_Default_1;                           // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BaseCharacter_C_DodgeCollisionToggleInternal) == 0x000001, "Wrong alignment on BaseCharacter_C_DodgeCollisionToggleInternal");
static_assert(sizeof(BaseCharacter_C_DodgeCollisionToggleInternal) == 0x00000A, "Wrong size on BaseCharacter_C_DodgeCollisionToggleInternal");
static_assert(offsetof(BaseCharacter_C_DodgeCollisionToggleInternal, CollisionEnabled) == 0x000000, "Member 'BaseCharacter_C_DodgeCollisionToggleInternal::CollisionEnabled' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_DodgeCollisionToggleInternal, Temp_byte_Variable) == 0x000001, "Member 'BaseCharacter_C_DodgeCollisionToggleInternal::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_DodgeCollisionToggleInternal, CallFunc_Not_PreBool_ReturnValue) == 0x000002, "Member 'BaseCharacter_C_DodgeCollisionToggleInternal::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_DodgeCollisionToggleInternal, Temp_byte_Variable_1) == 0x000003, "Member 'BaseCharacter_C_DodgeCollisionToggleInternal::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_DodgeCollisionToggleInternal, Temp_bool_Variable) == 0x000004, "Member 'BaseCharacter_C_DodgeCollisionToggleInternal::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_DodgeCollisionToggleInternal, Temp_byte_Variable_2) == 0x000005, "Member 'BaseCharacter_C_DodgeCollisionToggleInternal::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_DodgeCollisionToggleInternal, Temp_byte_Variable_3) == 0x000006, "Member 'BaseCharacter_C_DodgeCollisionToggleInternal::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_DodgeCollisionToggleInternal, Temp_bool_Variable_1) == 0x000007, "Member 'BaseCharacter_C_DodgeCollisionToggleInternal::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_DodgeCollisionToggleInternal, K2Node_Select_Default) == 0x000008, "Member 'BaseCharacter_C_DodgeCollisionToggleInternal::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_DodgeCollisionToggleInternal, K2Node_Select_Default_1) == 0x000009, "Member 'BaseCharacter_C_DodgeCollisionToggleInternal::K2Node_Select_Default_1' has a wrong offset!");

// Function BaseCharacter.BaseCharacter_C.RemoveDodgeFX
// 0x0008 (0x0008 - 0x0000)
struct BaseCharacter_C_RemoveDodgeFX final
{
public:
	class USkeletalMeshComponent*                 CallFunc_GetPawnMesh_ReturnValue;                  // 0x0000(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BaseCharacter_C_RemoveDodgeFX) == 0x000008, "Wrong alignment on BaseCharacter_C_RemoveDodgeFX");
static_assert(sizeof(BaseCharacter_C_RemoveDodgeFX) == 0x000008, "Wrong size on BaseCharacter_C_RemoveDodgeFX");
static_assert(offsetof(BaseCharacter_C_RemoveDodgeFX, CallFunc_GetPawnMesh_ReturnValue) == 0x000000, "Member 'BaseCharacter_C_RemoveDodgeFX::CallFunc_GetPawnMesh_ReturnValue' has a wrong offset!");

// Function BaseCharacter.BaseCharacter_C.UpdateDodgeMaterial
// 0x001C (0x001C - 0x0000)
struct BaseCharacter_C_UpdateDodgeMaterial final
{
public:
	float                                         CallFunc_GetTimeSeconds_ReturnValue;               // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Percent_FloatFloat_ReturnValue;           // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetFloatValue_ReturnValue;                // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BaseCharacter_C_UpdateDodgeMaterial) == 0x000004, "Wrong alignment on BaseCharacter_C_UpdateDodgeMaterial");
static_assert(sizeof(BaseCharacter_C_UpdateDodgeMaterial) == 0x00001C, "Wrong size on BaseCharacter_C_UpdateDodgeMaterial");
static_assert(offsetof(BaseCharacter_C_UpdateDodgeMaterial, CallFunc_GetTimeSeconds_ReturnValue) == 0x000000, "Member 'BaseCharacter_C_UpdateDodgeMaterial::CallFunc_GetTimeSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_UpdateDodgeMaterial, CallFunc_IsDedicatedServer_ReturnValue) == 0x000004, "Member 'BaseCharacter_C_UpdateDodgeMaterial::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_UpdateDodgeMaterial, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000008, "Member 'BaseCharacter_C_UpdateDodgeMaterial::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_UpdateDodgeMaterial, CallFunc_Not_PreBool_ReturnValue) == 0x00000C, "Member 'BaseCharacter_C_UpdateDodgeMaterial::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_UpdateDodgeMaterial, CallFunc_Percent_FloatFloat_ReturnValue) == 0x000010, "Member 'BaseCharacter_C_UpdateDodgeMaterial::CallFunc_Percent_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_UpdateDodgeMaterial, CallFunc_BooleanAND_ReturnValue) == 0x000014, "Member 'BaseCharacter_C_UpdateDodgeMaterial::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_UpdateDodgeMaterial, CallFunc_GetFloatValue_ReturnValue) == 0x000018, "Member 'BaseCharacter_C_UpdateDodgeMaterial::CallFunc_GetFloatValue_ReturnValue' has a wrong offset!");

// Function BaseCharacter.BaseCharacter_C.IgnoreActorTypesForDodge
// 0x00A8 (0x00A8 - 0x0000)
struct BaseCharacter_C_IgnoreActorTypesForDodge final
{
public:
	bool                                          bIgnore;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSoftClassPtr<class UClass>                   CallFunc_Array_Get_Item;                           // 0x0018(0x0028)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_Conv_SoftClassReferenceToClass_ReturnValue; // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 K2Node_ClassDynamicCast_AsActor;                   // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ClassDynamicCast_bSuccess;                  // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         CallFunc_GetAllActorsOfClass_OutActors;            // 0x0068(0x0010)(ZeroConstructor, ReferenceParm)
	bool                                          CallFunc_IsValidSoftClassReference_ReturnValue;    // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_Array_Get_Item_1;                         // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        CallFunc_K2_GetRootComponent_ReturnValue;          // 0x0088(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_94[0x4];                                       // 0x0094(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_DynamicCast_AsPrimitive_Component;          // 0x0098(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x00A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A2[0x2];                                       // 0x00A2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BaseCharacter_C_IgnoreActorTypesForDodge) == 0x000008, "Wrong alignment on BaseCharacter_C_IgnoreActorTypesForDodge");
static_assert(sizeof(BaseCharacter_C_IgnoreActorTypesForDodge) == 0x0000A8, "Wrong size on BaseCharacter_C_IgnoreActorTypesForDodge");
static_assert(offsetof(BaseCharacter_C_IgnoreActorTypesForDodge, bIgnore) == 0x000000, "Member 'BaseCharacter_C_IgnoreActorTypesForDodge::bIgnore' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_IgnoreActorTypesForDodge, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'BaseCharacter_C_IgnoreActorTypesForDodge::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_IgnoreActorTypesForDodge, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BaseCharacter_C_IgnoreActorTypesForDodge::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_IgnoreActorTypesForDodge, Temp_int_Array_Index_Variable) == 0x00000C, "Member 'BaseCharacter_C_IgnoreActorTypesForDodge::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_IgnoreActorTypesForDodge, Temp_int_Array_Index_Variable_1) == 0x000010, "Member 'BaseCharacter_C_IgnoreActorTypesForDodge::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_IgnoreActorTypesForDodge, Temp_int_Loop_Counter_Variable_1) == 0x000014, "Member 'BaseCharacter_C_IgnoreActorTypesForDodge::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_IgnoreActorTypesForDodge, CallFunc_Array_Get_Item) == 0x000018, "Member 'BaseCharacter_C_IgnoreActorTypesForDodge::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_IgnoreActorTypesForDodge, CallFunc_Array_Length_ReturnValue) == 0x000040, "Member 'BaseCharacter_C_IgnoreActorTypesForDodge::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_IgnoreActorTypesForDodge, CallFunc_Conv_SoftClassReferenceToClass_ReturnValue) == 0x000048, "Member 'BaseCharacter_C_IgnoreActorTypesForDodge::CallFunc_Conv_SoftClassReferenceToClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_IgnoreActorTypesForDodge, CallFunc_Less_IntInt_ReturnValue) == 0x000050, "Member 'BaseCharacter_C_IgnoreActorTypesForDodge::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_IgnoreActorTypesForDodge, K2Node_ClassDynamicCast_AsActor) == 0x000058, "Member 'BaseCharacter_C_IgnoreActorTypesForDodge::K2Node_ClassDynamicCast_AsActor' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_IgnoreActorTypesForDodge, K2Node_ClassDynamicCast_bSuccess) == 0x000060, "Member 'BaseCharacter_C_IgnoreActorTypesForDodge::K2Node_ClassDynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_IgnoreActorTypesForDodge, CallFunc_GetAllActorsOfClass_OutActors) == 0x000068, "Member 'BaseCharacter_C_IgnoreActorTypesForDodge::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_IgnoreActorTypesForDodge, CallFunc_IsValidSoftClassReference_ReturnValue) == 0x000078, "Member 'BaseCharacter_C_IgnoreActorTypesForDodge::CallFunc_IsValidSoftClassReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_IgnoreActorTypesForDodge, CallFunc_Array_Get_Item_1) == 0x000080, "Member 'BaseCharacter_C_IgnoreActorTypesForDodge::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_IgnoreActorTypesForDodge, CallFunc_K2_GetRootComponent_ReturnValue) == 0x000088, "Member 'BaseCharacter_C_IgnoreActorTypesForDodge::CallFunc_K2_GetRootComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_IgnoreActorTypesForDodge, CallFunc_Array_Length_ReturnValue_1) == 0x000090, "Member 'BaseCharacter_C_IgnoreActorTypesForDodge::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_IgnoreActorTypesForDodge, K2Node_DynamicCast_AsPrimitive_Component) == 0x000098, "Member 'BaseCharacter_C_IgnoreActorTypesForDodge::K2Node_DynamicCast_AsPrimitive_Component' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_IgnoreActorTypesForDodge, K2Node_DynamicCast_bSuccess) == 0x0000A0, "Member 'BaseCharacter_C_IgnoreActorTypesForDodge::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_IgnoreActorTypesForDodge, CallFunc_Less_IntInt_ReturnValue_1) == 0x0000A1, "Member 'BaseCharacter_C_IgnoreActorTypesForDodge::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_IgnoreActorTypesForDodge, CallFunc_Add_IntInt_ReturnValue_1) == 0x0000A4, "Member 'BaseCharacter_C_IgnoreActorTypesForDodge::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");

// Function BaseCharacter.BaseCharacter_C.ApplyJumpFFE
// 0x0028 (0x0028 - 0x0000)
struct BaseCharacter_C_ApplyJumpFFE final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMarinerBasePlayerController*           K2Node_DynamicCast_AsMariner_Base_Player_Controller; // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A[0x6];                                       // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UForceFeedbackEffect*                   K2Node_Select_Default;                             // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BaseCharacter_C_ApplyJumpFFE) == 0x000008, "Wrong alignment on BaseCharacter_C_ApplyJumpFFE");
static_assert(sizeof(BaseCharacter_C_ApplyJumpFFE) == 0x000028, "Wrong size on BaseCharacter_C_ApplyJumpFFE");
static_assert(offsetof(BaseCharacter_C_ApplyJumpFFE, Temp_bool_Variable) == 0x000000, "Member 'BaseCharacter_C_ApplyJumpFFE::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ApplyJumpFFE, CallFunc_GetController_ReturnValue) == 0x000008, "Member 'BaseCharacter_C_ApplyJumpFFE::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ApplyJumpFFE, K2Node_DynamicCast_AsMariner_Base_Player_Controller) == 0x000010, "Member 'BaseCharacter_C_ApplyJumpFFE::K2Node_DynamicCast_AsMariner_Base_Player_Controller' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ApplyJumpFFE, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BaseCharacter_C_ApplyJumpFFE::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ApplyJumpFFE, CallFunc_Greater_IntInt_ReturnValue) == 0x000019, "Member 'BaseCharacter_C_ApplyJumpFFE::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ApplyJumpFFE, K2Node_Select_Default) == 0x000020, "Member 'BaseCharacter_C_ApplyJumpFFE::K2Node_Select_Default' has a wrong offset!");

// Function BaseCharacter.BaseCharacter_C.ApplyLandedFFE
// 0x0040 (0x0040 - 0x0000)
struct BaseCharacter_C_ApplyLandedFFE final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMarinerBasePlayerController*           K2Node_DynamicCast_AsMariner_Base_Player_Controller; // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetVelocity_ReturnValue;                  // 0x001C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35[0x3];                                       // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UForceFeedbackEffect*                   K2Node_Select_Default;                             // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BaseCharacter_C_ApplyLandedFFE) == 0x000008, "Wrong alignment on BaseCharacter_C_ApplyLandedFFE");
static_assert(sizeof(BaseCharacter_C_ApplyLandedFFE) == 0x000040, "Wrong size on BaseCharacter_C_ApplyLandedFFE");
static_assert(offsetof(BaseCharacter_C_ApplyLandedFFE, Temp_bool_Variable) == 0x000000, "Member 'BaseCharacter_C_ApplyLandedFFE::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ApplyLandedFFE, CallFunc_GetController_ReturnValue) == 0x000008, "Member 'BaseCharacter_C_ApplyLandedFFE::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ApplyLandedFFE, K2Node_DynamicCast_AsMariner_Base_Player_Controller) == 0x000010, "Member 'BaseCharacter_C_ApplyLandedFFE::K2Node_DynamicCast_AsMariner_Base_Player_Controller' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ApplyLandedFFE, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BaseCharacter_C_ApplyLandedFFE::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ApplyLandedFFE, CallFunc_GetVelocity_ReturnValue) == 0x00001C, "Member 'BaseCharacter_C_ApplyLandedFFE::CallFunc_GetVelocity_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ApplyLandedFFE, CallFunc_BreakVector_X) == 0x000028, "Member 'BaseCharacter_C_ApplyLandedFFE::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ApplyLandedFFE, CallFunc_BreakVector_Y) == 0x00002C, "Member 'BaseCharacter_C_ApplyLandedFFE::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ApplyLandedFFE, CallFunc_BreakVector_Z) == 0x000030, "Member 'BaseCharacter_C_ApplyLandedFFE::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ApplyLandedFFE, CallFunc_Less_FloatFloat_ReturnValue) == 0x000034, "Member 'BaseCharacter_C_ApplyLandedFFE::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ApplyLandedFFE, K2Node_Select_Default) == 0x000038, "Member 'BaseCharacter_C_ApplyLandedFFE::K2Node_Select_Default' has a wrong offset!");

// Function BaseCharacter.BaseCharacter_C.ApplyKnockoutFFE
// 0x0018 (0x0018 - 0x0000)
struct BaseCharacter_C_ApplyKnockoutFFE final
{
public:
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMarinerBasePlayerController*           K2Node_DynamicCast_AsMariner_Base_Player_Controller; // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BaseCharacter_C_ApplyKnockoutFFE) == 0x000008, "Wrong alignment on BaseCharacter_C_ApplyKnockoutFFE");
static_assert(sizeof(BaseCharacter_C_ApplyKnockoutFFE) == 0x000018, "Wrong size on BaseCharacter_C_ApplyKnockoutFFE");
static_assert(offsetof(BaseCharacter_C_ApplyKnockoutFFE, CallFunc_GetController_ReturnValue) == 0x000000, "Member 'BaseCharacter_C_ApplyKnockoutFFE::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ApplyKnockoutFFE, K2Node_DynamicCast_AsMariner_Base_Player_Controller) == 0x000008, "Member 'BaseCharacter_C_ApplyKnockoutFFE::K2Node_DynamicCast_AsMariner_Base_Player_Controller' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ApplyKnockoutFFE, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'BaseCharacter_C_ApplyKnockoutFFE::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BaseCharacter.BaseCharacter_C.StartMegablastFFE
// 0x0018 (0x0018 - 0x0000)
struct BaseCharacter_C_StartMegablastFFE final
{
public:
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMarinerBasePlayerController*           K2Node_DynamicCast_AsMariner_Base_Player_Controller; // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BaseCharacter_C_StartMegablastFFE) == 0x000008, "Wrong alignment on BaseCharacter_C_StartMegablastFFE");
static_assert(sizeof(BaseCharacter_C_StartMegablastFFE) == 0x000018, "Wrong size on BaseCharacter_C_StartMegablastFFE");
static_assert(offsetof(BaseCharacter_C_StartMegablastFFE, CallFunc_GetController_ReturnValue) == 0x000000, "Member 'BaseCharacter_C_StartMegablastFFE::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_StartMegablastFFE, K2Node_DynamicCast_AsMariner_Base_Player_Controller) == 0x000008, "Member 'BaseCharacter_C_StartMegablastFFE::K2Node_DynamicCast_AsMariner_Base_Player_Controller' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_StartMegablastFFE, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'BaseCharacter_C_StartMegablastFFE::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BaseCharacter.BaseCharacter_C.StopMegablastFFE
// 0x0018 (0x0018 - 0x0000)
struct BaseCharacter_C_StopMegablastFFE final
{
public:
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMarinerBasePlayerController*           K2Node_DynamicCast_AsMariner_Base_Player_Controller; // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BaseCharacter_C_StopMegablastFFE) == 0x000008, "Wrong alignment on BaseCharacter_C_StopMegablastFFE");
static_assert(sizeof(BaseCharacter_C_StopMegablastFFE) == 0x000018, "Wrong size on BaseCharacter_C_StopMegablastFFE");
static_assert(offsetof(BaseCharacter_C_StopMegablastFFE, CallFunc_GetController_ReturnValue) == 0x000000, "Member 'BaseCharacter_C_StopMegablastFFE::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_StopMegablastFFE, K2Node_DynamicCast_AsMariner_Base_Player_Controller) == 0x000008, "Member 'BaseCharacter_C_StopMegablastFFE::K2Node_DynamicCast_AsMariner_Base_Player_Controller' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_StopMegablastFFE, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'BaseCharacter_C_StopMegablastFFE::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BaseCharacter.BaseCharacter_C.ApplyItemPickupFFE
// 0x0018 (0x0018 - 0x0000)
struct BaseCharacter_C_ApplyItemPickupFFE final
{
public:
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMarinerBasePlayerController*           K2Node_DynamicCast_AsMariner_Base_Player_Controller; // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BaseCharacter_C_ApplyItemPickupFFE) == 0x000008, "Wrong alignment on BaseCharacter_C_ApplyItemPickupFFE");
static_assert(sizeof(BaseCharacter_C_ApplyItemPickupFFE) == 0x000018, "Wrong size on BaseCharacter_C_ApplyItemPickupFFE");
static_assert(offsetof(BaseCharacter_C_ApplyItemPickupFFE, CallFunc_GetController_ReturnValue) == 0x000000, "Member 'BaseCharacter_C_ApplyItemPickupFFE::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ApplyItemPickupFFE, K2Node_DynamicCast_AsMariner_Base_Player_Controller) == 0x000008, "Member 'BaseCharacter_C_ApplyItemPickupFFE::K2Node_DynamicCast_AsMariner_Base_Player_Controller' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ApplyItemPickupFFE, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'BaseCharacter_C_ApplyItemPickupFFE::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BaseCharacter.BaseCharacter_C.BP_OnChangePerspective
// 0x02C0 (0x02C0 - 0x0000)
struct BaseCharacter_C_BP_OnChangePerspective final
{
public:
	class FName                                   PerspectiveName;                                   // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FMarinerCameraPerspective              Perspective;                                       // 0x0008(0x00A8)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
	struct FMarinerCameraPerspective              ReturnValue;                                       // 0x00B0(0x00A8)(Parm, OutParm, ReturnParm, NoDestructor)
	struct FViewTargetTransitionParams            K2Node_MakeStruct_ViewTargetTransitionParams;      // 0x0158(0x0010)(NoDestructor)
	bool                                          K2Node_SwitchName_CmpSuccess;                      // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_169[0x7];                                      // 0x0169(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMarinerCameraPerspective              CallFunc_FindPerspective_ReturnValue;              // 0x0170(0x00A8)(NoDestructor)
	struct FMarinerCameraPerspective              K2Node_MakeStruct_MarinerCameraPerspective;        // 0x0218(0x00A8)(NoDestructor)
};
static_assert(alignof(BaseCharacter_C_BP_OnChangePerspective) == 0x000008, "Wrong alignment on BaseCharacter_C_BP_OnChangePerspective");
static_assert(sizeof(BaseCharacter_C_BP_OnChangePerspective) == 0x0002C0, "Wrong size on BaseCharacter_C_BP_OnChangePerspective");
static_assert(offsetof(BaseCharacter_C_BP_OnChangePerspective, PerspectiveName) == 0x000000, "Member 'BaseCharacter_C_BP_OnChangePerspective::PerspectiveName' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_BP_OnChangePerspective, Perspective) == 0x000008, "Member 'BaseCharacter_C_BP_OnChangePerspective::Perspective' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_BP_OnChangePerspective, ReturnValue) == 0x0000B0, "Member 'BaseCharacter_C_BP_OnChangePerspective::ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_BP_OnChangePerspective, K2Node_MakeStruct_ViewTargetTransitionParams) == 0x000158, "Member 'BaseCharacter_C_BP_OnChangePerspective::K2Node_MakeStruct_ViewTargetTransitionParams' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_BP_OnChangePerspective, K2Node_SwitchName_CmpSuccess) == 0x000168, "Member 'BaseCharacter_C_BP_OnChangePerspective::K2Node_SwitchName_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_BP_OnChangePerspective, CallFunc_FindPerspective_ReturnValue) == 0x000170, "Member 'BaseCharacter_C_BP_OnChangePerspective::CallFunc_FindPerspective_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_BP_OnChangePerspective, K2Node_MakeStruct_MarinerCameraPerspective) == 0x000218, "Member 'BaseCharacter_C_BP_OnChangePerspective::K2Node_MakeStruct_MarinerCameraPerspective' has a wrong offset!");

// Function BaseCharacter.BaseCharacter_C.GetOrCreateDebugSoundShape
// 0x0060 (0x0060 - 0x0000)
struct BaseCharacter_C_GetOrCreateDebugSoundShape final
{
public:
	class UStaticMeshComponent*                   DebugSoundShape_0;                                 // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetStaticMesh_ReturnValue;                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneComponent*                        CallFunc_GetOrCreateDebugSoundHolder_DebugSoundHolder; // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        CallFunc_GetOrCreateDebugSoundHolder_DebugSoundHolder_1; // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_GetRelativeTransform_ReturnValue;         // 0x0020(0x0030)(IsPlainOldData, NoDestructor)
	class UStaticMeshComponent*                   CallFunc_AddComponent_ReturnValue;                 // 0x0050(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_AttachToComponent_ReturnValue;         // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BaseCharacter_C_GetOrCreateDebugSoundShape) == 0x000010, "Wrong alignment on BaseCharacter_C_GetOrCreateDebugSoundShape");
static_assert(sizeof(BaseCharacter_C_GetOrCreateDebugSoundShape) == 0x000060, "Wrong size on BaseCharacter_C_GetOrCreateDebugSoundShape");
static_assert(offsetof(BaseCharacter_C_GetOrCreateDebugSoundShape, DebugSoundShape_0) == 0x000000, "Member 'BaseCharacter_C_GetOrCreateDebugSoundShape::DebugSoundShape_0' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_GetOrCreateDebugSoundShape, CallFunc_SetStaticMesh_ReturnValue) == 0x000008, "Member 'BaseCharacter_C_GetOrCreateDebugSoundShape::CallFunc_SetStaticMesh_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_GetOrCreateDebugSoundShape, CallFunc_GetOrCreateDebugSoundHolder_DebugSoundHolder) == 0x000010, "Member 'BaseCharacter_C_GetOrCreateDebugSoundShape::CallFunc_GetOrCreateDebugSoundHolder_DebugSoundHolder' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_GetOrCreateDebugSoundShape, CallFunc_GetOrCreateDebugSoundHolder_DebugSoundHolder_1) == 0x000018, "Member 'BaseCharacter_C_GetOrCreateDebugSoundShape::CallFunc_GetOrCreateDebugSoundHolder_DebugSoundHolder_1' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_GetOrCreateDebugSoundShape, CallFunc_GetRelativeTransform_ReturnValue) == 0x000020, "Member 'BaseCharacter_C_GetOrCreateDebugSoundShape::CallFunc_GetRelativeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_GetOrCreateDebugSoundShape, CallFunc_AddComponent_ReturnValue) == 0x000050, "Member 'BaseCharacter_C_GetOrCreateDebugSoundShape::CallFunc_AddComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_GetOrCreateDebugSoundShape, CallFunc_K2_AttachToComponent_ReturnValue) == 0x000058, "Member 'BaseCharacter_C_GetOrCreateDebugSoundShape::CallFunc_K2_AttachToComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_GetOrCreateDebugSoundShape, CallFunc_IsValid_ReturnValue) == 0x000059, "Member 'BaseCharacter_C_GetOrCreateDebugSoundShape::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BaseCharacter.BaseCharacter_C.GetOrCreateDebugSoundHolder
// 0x0060 (0x0060 - 0x0000)
struct BaseCharacter_C_GetOrCreateDebugSoundHolder final
{
public:
	class USceneComponent*                        DebugSoundHolder;                                  // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetScaledCapsuleHalfHeight_ReturnValue;   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_AttachToComponent_ReturnValue;         // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0010(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0020(0x0030)(IsPlainOldData, NoDestructor)
	class USceneComponent*                        CallFunc_AddComponent_ReturnValue;                 // 0x0050(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BaseCharacter_C_GetOrCreateDebugSoundHolder) == 0x000010, "Wrong alignment on BaseCharacter_C_GetOrCreateDebugSoundHolder");
static_assert(sizeof(BaseCharacter_C_GetOrCreateDebugSoundHolder) == 0x000060, "Wrong size on BaseCharacter_C_GetOrCreateDebugSoundHolder");
static_assert(offsetof(BaseCharacter_C_GetOrCreateDebugSoundHolder, DebugSoundHolder) == 0x000000, "Member 'BaseCharacter_C_GetOrCreateDebugSoundHolder::DebugSoundHolder' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_GetOrCreateDebugSoundHolder, CallFunc_GetScaledCapsuleHalfHeight_ReturnValue) == 0x000008, "Member 'BaseCharacter_C_GetOrCreateDebugSoundHolder::CallFunc_GetScaledCapsuleHalfHeight_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_GetOrCreateDebugSoundHolder, CallFunc_K2_AttachToComponent_ReturnValue) == 0x00000C, "Member 'BaseCharacter_C_GetOrCreateDebugSoundHolder::CallFunc_K2_AttachToComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_GetOrCreateDebugSoundHolder, CallFunc_MakeVector_ReturnValue) == 0x000010, "Member 'BaseCharacter_C_GetOrCreateDebugSoundHolder::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_GetOrCreateDebugSoundHolder, CallFunc_MakeTransform_ReturnValue) == 0x000020, "Member 'BaseCharacter_C_GetOrCreateDebugSoundHolder::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_GetOrCreateDebugSoundHolder, CallFunc_AddComponent_ReturnValue) == 0x000050, "Member 'BaseCharacter_C_GetOrCreateDebugSoundHolder::CallFunc_AddComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_GetOrCreateDebugSoundHolder, CallFunc_IsValid_ReturnValue) == 0x000058, "Member 'BaseCharacter_C_GetOrCreateDebugSoundHolder::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BaseCharacter.BaseCharacter_C.ApplyItemDropFFE
// 0x0018 (0x0018 - 0x0000)
struct BaseCharacter_C_ApplyItemDropFFE final
{
public:
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMarinerBasePlayerController*           K2Node_DynamicCast_AsMariner_Base_Player_Controller; // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BaseCharacter_C_ApplyItemDropFFE) == 0x000008, "Wrong alignment on BaseCharacter_C_ApplyItemDropFFE");
static_assert(sizeof(BaseCharacter_C_ApplyItemDropFFE) == 0x000018, "Wrong size on BaseCharacter_C_ApplyItemDropFFE");
static_assert(offsetof(BaseCharacter_C_ApplyItemDropFFE, CallFunc_GetController_ReturnValue) == 0x000000, "Member 'BaseCharacter_C_ApplyItemDropFFE::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ApplyItemDropFFE, K2Node_DynamicCast_AsMariner_Base_Player_Controller) == 0x000008, "Member 'BaseCharacter_C_ApplyItemDropFFE::K2Node_DynamicCast_AsMariner_Base_Player_Controller' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ApplyItemDropFFE, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'BaseCharacter_C_ApplyItemDropFFE::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BaseCharacter.BaseCharacter_C.SetDodgeData
// 0x0010 (0x0010 - 0x0000)
struct BaseCharacter_C_SetDodgeData final
{
public:
	struct FDodgeData                             DodgeData_0;                                       // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue;          // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BaseCharacter_C_SetDodgeData) == 0x000004, "Wrong alignment on BaseCharacter_C_SetDodgeData");
static_assert(sizeof(BaseCharacter_C_SetDodgeData) == 0x000010, "Wrong size on BaseCharacter_C_SetDodgeData");
static_assert(offsetof(BaseCharacter_C_SetDodgeData, DodgeData_0) == 0x000000, "Member 'BaseCharacter_C_SetDodgeData::DodgeData_0' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_SetDodgeData, CallFunc_IsLocallyControlled_ReturnValue) == 0x00000C, "Member 'BaseCharacter_C_SetDodgeData::CallFunc_IsLocallyControlled_ReturnValue' has a wrong offset!");

// Function BaseCharacter.BaseCharacter_C.DebugTryToSpawnItem
// 0x0190 (0x0190 - 0x0000)
struct BaseCharacter_C_DebugTryToSpawnItem final
{
public:
	class FString                                 DesiredItem;                                       // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0010(0x0018)()
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<TSoftClassPtr<class UClass>>           CallFunc_DebugGetFullValidItemPickupArray_ItemPickupArray; // 0x0038(0x0010)(ZeroConstructor, ReferenceParm)
	TSoftClassPtr<class UClass>                   CallFunc_Array_Get_Item;                           // 0x0048(0x0028)(HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_74[0x4];                                       // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_Conv_SoftClassReferenceToClass_ReturnValue; // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 K2Node_ClassDynamicCast_AsBP_Consumable_Item;      // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ClassDynamicCast_bSuccess;                  // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_89[0x7];                                       // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EItemBoxTypes>                         CallFunc_DebugGetFullValidItemTypeArray_ValidItemArray; // 0x0090(0x0010)(ZeroConstructor, ReferenceParm)
	EItemBoxTypes                                 CallFunc_Array_Get_Item_1;                         // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A1[0x3];                                       // 0x00A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue; // 0x00A8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B9[0x7];                                       // 0x00B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_1;          // 0x00C0(0x0018)()
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IgnoreCase_TextText_ReturnValue; // 0x00D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_DA[0x2];                                       // 0x00DA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x00DC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x00E8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	uint8                                         Pad_F8[0x8];                                       // 0x00F8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0100(0x0030)(IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_ConsumableItem_C*                   CallFunc_FinishSpawningActor_ReturnValue;          // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_AuthorityTryReceiveItem_ReturnValue;      // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_141[0x7];                                      // 0x0141(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetDisplayName_ReturnValue_1;             // 0x0148(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0158(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0168(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x0178(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BaseCharacter_C_DebugTryToSpawnItem) == 0x000010, "Wrong alignment on BaseCharacter_C_DebugTryToSpawnItem");
static_assert(sizeof(BaseCharacter_C_DebugTryToSpawnItem) == 0x000190, "Wrong size on BaseCharacter_C_DebugTryToSpawnItem");
static_assert(offsetof(BaseCharacter_C_DebugTryToSpawnItem, DesiredItem) == 0x000000, "Member 'BaseCharacter_C_DebugTryToSpawnItem::DesiredItem' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_DebugTryToSpawnItem, CallFunc_Conv_StringToText_ReturnValue) == 0x000010, "Member 'BaseCharacter_C_DebugTryToSpawnItem::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_DebugTryToSpawnItem, Temp_bool_True_if_break_was_hit_Variable) == 0x000028, "Member 'BaseCharacter_C_DebugTryToSpawnItem::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_DebugTryToSpawnItem, Temp_int_Array_Index_Variable) == 0x00002C, "Member 'BaseCharacter_C_DebugTryToSpawnItem::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_DebugTryToSpawnItem, CallFunc_Not_PreBool_ReturnValue) == 0x000030, "Member 'BaseCharacter_C_DebugTryToSpawnItem::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_DebugTryToSpawnItem, Temp_int_Loop_Counter_Variable) == 0x000034, "Member 'BaseCharacter_C_DebugTryToSpawnItem::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_DebugTryToSpawnItem, CallFunc_DebugGetFullValidItemPickupArray_ItemPickupArray) == 0x000038, "Member 'BaseCharacter_C_DebugTryToSpawnItem::CallFunc_DebugGetFullValidItemPickupArray_ItemPickupArray' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_DebugTryToSpawnItem, CallFunc_Array_Get_Item) == 0x000048, "Member 'BaseCharacter_C_DebugTryToSpawnItem::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_DebugTryToSpawnItem, CallFunc_Add_IntInt_ReturnValue) == 0x000070, "Member 'BaseCharacter_C_DebugTryToSpawnItem::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_DebugTryToSpawnItem, CallFunc_Conv_SoftClassReferenceToClass_ReturnValue) == 0x000078, "Member 'BaseCharacter_C_DebugTryToSpawnItem::CallFunc_Conv_SoftClassReferenceToClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_DebugTryToSpawnItem, K2Node_ClassDynamicCast_AsBP_Consumable_Item) == 0x000080, "Member 'BaseCharacter_C_DebugTryToSpawnItem::K2Node_ClassDynamicCast_AsBP_Consumable_Item' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_DebugTryToSpawnItem, K2Node_ClassDynamicCast_bSuccess) == 0x000088, "Member 'BaseCharacter_C_DebugTryToSpawnItem::K2Node_ClassDynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_DebugTryToSpawnItem, CallFunc_DebugGetFullValidItemTypeArray_ValidItemArray) == 0x000090, "Member 'BaseCharacter_C_DebugTryToSpawnItem::CallFunc_DebugGetFullValidItemTypeArray_ValidItemArray' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_DebugTryToSpawnItem, CallFunc_Array_Get_Item_1) == 0x0000A0, "Member 'BaseCharacter_C_DebugTryToSpawnItem::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_DebugTryToSpawnItem, CallFunc_Array_Length_ReturnValue) == 0x0000A4, "Member 'BaseCharacter_C_DebugTryToSpawnItem::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_DebugTryToSpawnItem, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue) == 0x0000A8, "Member 'BaseCharacter_C_DebugTryToSpawnItem::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_DebugTryToSpawnItem, CallFunc_Less_IntInt_ReturnValue) == 0x0000B8, "Member 'BaseCharacter_C_DebugTryToSpawnItem::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_DebugTryToSpawnItem, CallFunc_Conv_StringToText_ReturnValue_1) == 0x0000C0, "Member 'BaseCharacter_C_DebugTryToSpawnItem::CallFunc_Conv_StringToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_DebugTryToSpawnItem, CallFunc_BooleanAND_ReturnValue) == 0x0000D8, "Member 'BaseCharacter_C_DebugTryToSpawnItem::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_DebugTryToSpawnItem, CallFunc_EqualEqual_IgnoreCase_TextText_ReturnValue) == 0x0000D9, "Member 'BaseCharacter_C_DebugTryToSpawnItem::CallFunc_EqualEqual_IgnoreCase_TextText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_DebugTryToSpawnItem, CallFunc_K2_GetActorLocation_ReturnValue) == 0x0000DC, "Member 'BaseCharacter_C_DebugTryToSpawnItem::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_DebugTryToSpawnItem, CallFunc_GetDisplayName_ReturnValue) == 0x0000E8, "Member 'BaseCharacter_C_DebugTryToSpawnItem::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_DebugTryToSpawnItem, CallFunc_MakeTransform_ReturnValue) == 0x000100, "Member 'BaseCharacter_C_DebugTryToSpawnItem::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_DebugTryToSpawnItem, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000130, "Member 'BaseCharacter_C_DebugTryToSpawnItem::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_DebugTryToSpawnItem, CallFunc_FinishSpawningActor_ReturnValue) == 0x000138, "Member 'BaseCharacter_C_DebugTryToSpawnItem::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_DebugTryToSpawnItem, CallFunc_AuthorityTryReceiveItem_ReturnValue) == 0x000140, "Member 'BaseCharacter_C_DebugTryToSpawnItem::CallFunc_AuthorityTryReceiveItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_DebugTryToSpawnItem, CallFunc_GetDisplayName_ReturnValue_1) == 0x000148, "Member 'BaseCharacter_C_DebugTryToSpawnItem::CallFunc_GetDisplayName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_DebugTryToSpawnItem, CallFunc_Concat_StrStr_ReturnValue) == 0x000158, "Member 'BaseCharacter_C_DebugTryToSpawnItem::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_DebugTryToSpawnItem, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000168, "Member 'BaseCharacter_C_DebugTryToSpawnItem::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_DebugTryToSpawnItem, CallFunc_Concat_StrStr_ReturnValue_2) == 0x000178, "Member 'BaseCharacter_C_DebugTryToSpawnItem::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");

// Function BaseCharacter.BaseCharacter_C.DebugGetFullValidItemTypeArray
// 0x0080 (0x0080 - 0x0000)
struct BaseCharacter_C_DebugGetFullValidItemTypeArray final
{
public:
	TArray<EItemBoxTypes>                         ValidItemArray;                                    // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor)
	TArray<EItemBoxTypes>                         FullValidItemTypeArray;                            // 0x0010(0x0010)(Edit, BlueprintVisible, ZeroConstructor)
	TMap<EItemBoxTypes, TSoftClassPtr<class UClass>> CallFunc_GetDebugItemMap_ItemMap;                  // 0x0020(0x0050)(ZeroConstructor)
	TArray<EItemBoxTypes>                         CallFunc_Map_Keys_Keys;                            // 0x0070(0x0010)(ZeroConstructor, ReferenceParm)
};
static_assert(alignof(BaseCharacter_C_DebugGetFullValidItemTypeArray) == 0x000008, "Wrong alignment on BaseCharacter_C_DebugGetFullValidItemTypeArray");
static_assert(sizeof(BaseCharacter_C_DebugGetFullValidItemTypeArray) == 0x000080, "Wrong size on BaseCharacter_C_DebugGetFullValidItemTypeArray");
static_assert(offsetof(BaseCharacter_C_DebugGetFullValidItemTypeArray, ValidItemArray) == 0x000000, "Member 'BaseCharacter_C_DebugGetFullValidItemTypeArray::ValidItemArray' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_DebugGetFullValidItemTypeArray, FullValidItemTypeArray) == 0x000010, "Member 'BaseCharacter_C_DebugGetFullValidItemTypeArray::FullValidItemTypeArray' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_DebugGetFullValidItemTypeArray, CallFunc_GetDebugItemMap_ItemMap) == 0x000020, "Member 'BaseCharacter_C_DebugGetFullValidItemTypeArray::CallFunc_GetDebugItemMap_ItemMap' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_DebugGetFullValidItemTypeArray, CallFunc_Map_Keys_Keys) == 0x000070, "Member 'BaseCharacter_C_DebugGetFullValidItemTypeArray::CallFunc_Map_Keys_Keys' has a wrong offset!");

// Function BaseCharacter.BaseCharacter_C.DebugGetFullValidItemPickupArray
// 0x0080 (0x0080 - 0x0000)
struct BaseCharacter_C_DebugGetFullValidItemPickupArray final
{
public:
	TArray<TSoftClassPtr<class UClass>>           ItemPickupArray;                                   // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor)
	TArray<TSoftClassPtr<class UClass>>           FullItemPickupArray;                               // 0x0010(0x0010)(Edit, BlueprintVisible, ZeroConstructor)
	TMap<EItemBoxTypes, TSoftClassPtr<class UClass>> CallFunc_GetDebugItemMap_ItemMap;                  // 0x0020(0x0050)(ZeroConstructor)
	TArray<TSoftClassPtr<class UClass>>           CallFunc_Map_Values_Values;                        // 0x0070(0x0010)(ZeroConstructor, ReferenceParm)
};
static_assert(alignof(BaseCharacter_C_DebugGetFullValidItemPickupArray) == 0x000008, "Wrong alignment on BaseCharacter_C_DebugGetFullValidItemPickupArray");
static_assert(sizeof(BaseCharacter_C_DebugGetFullValidItemPickupArray) == 0x000080, "Wrong size on BaseCharacter_C_DebugGetFullValidItemPickupArray");
static_assert(offsetof(BaseCharacter_C_DebugGetFullValidItemPickupArray, ItemPickupArray) == 0x000000, "Member 'BaseCharacter_C_DebugGetFullValidItemPickupArray::ItemPickupArray' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_DebugGetFullValidItemPickupArray, FullItemPickupArray) == 0x000010, "Member 'BaseCharacter_C_DebugGetFullValidItemPickupArray::FullItemPickupArray' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_DebugGetFullValidItemPickupArray, CallFunc_GetDebugItemMap_ItemMap) == 0x000020, "Member 'BaseCharacter_C_DebugGetFullValidItemPickupArray::CallFunc_GetDebugItemMap_ItemMap' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_DebugGetFullValidItemPickupArray, CallFunc_Map_Values_Values) == 0x000070, "Member 'BaseCharacter_C_DebugGetFullValidItemPickupArray::CallFunc_Map_Values_Values' has a wrong offset!");

// Function BaseCharacter.BaseCharacter_C.HandleRemoveSpawnProtection
// 0x0005 (0x0005 - 0x0000)
struct BaseCharacter_C_HandleRemoveSpawnProtection final
{
public:
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue;          // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BaseCharacter_C_HandleRemoveSpawnProtection) == 0x000001, "Wrong alignment on BaseCharacter_C_HandleRemoveSpawnProtection");
static_assert(sizeof(BaseCharacter_C_HandleRemoveSpawnProtection) == 0x000005, "Wrong size on BaseCharacter_C_HandleRemoveSpawnProtection");
static_assert(offsetof(BaseCharacter_C_HandleRemoveSpawnProtection, CallFunc_BooleanOR_ReturnValue) == 0x000000, "Member 'BaseCharacter_C_HandleRemoveSpawnProtection::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_HandleRemoveSpawnProtection, CallFunc_Not_PreBool_ReturnValue) == 0x000001, "Member 'BaseCharacter_C_HandleRemoveSpawnProtection::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_HandleRemoveSpawnProtection, CallFunc_BooleanOR_ReturnValue_1) == 0x000002, "Member 'BaseCharacter_C_HandleRemoveSpawnProtection::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_HandleRemoveSpawnProtection, CallFunc_BooleanAND_ReturnValue) == 0x000003, "Member 'BaseCharacter_C_HandleRemoveSpawnProtection::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_HandleRemoveSpawnProtection, CallFunc_IsLocallyControlled_ReturnValue) == 0x000004, "Member 'BaseCharacter_C_HandleRemoveSpawnProtection::CallFunc_IsLocallyControlled_ReturnValue' has a wrong offset!");

// Function BaseCharacter.BaseCharacter_C.ClientSetSpawnProtectionVFXEnabled
// 0x0020 (0x0020 - 0x0000)
struct BaseCharacter_C_ClientSetSpawnProtectionVFXEnabled final
{
public:
	bool                                          IsEnabled;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AMarinerPlayerState*                    K2Node_DynamicCast_AsMariner_Player_State;         // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetTeamIndex_ReturnValue;                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMarinerHostility                             CallFunc_TryAndGetHostilityRelativeToLocalPlayer_ReturnValue; // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BaseCharacter_C_ClientSetSpawnProtectionVFXEnabled) == 0x000008, "Wrong alignment on BaseCharacter_C_ClientSetSpawnProtectionVFXEnabled");
static_assert(sizeof(BaseCharacter_C_ClientSetSpawnProtectionVFXEnabled) == 0x000020, "Wrong size on BaseCharacter_C_ClientSetSpawnProtectionVFXEnabled");
static_assert(offsetof(BaseCharacter_C_ClientSetSpawnProtectionVFXEnabled, IsEnabled) == 0x000000, "Member 'BaseCharacter_C_ClientSetSpawnProtectionVFXEnabled::IsEnabled' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ClientSetSpawnProtectionVFXEnabled, CallFunc_Not_PreBool_ReturnValue) == 0x000001, "Member 'BaseCharacter_C_ClientSetSpawnProtectionVFXEnabled::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ClientSetSpawnProtectionVFXEnabled, K2Node_DynamicCast_AsMariner_Player_State) == 0x000008, "Member 'BaseCharacter_C_ClientSetSpawnProtectionVFXEnabled::K2Node_DynamicCast_AsMariner_Player_State' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ClientSetSpawnProtectionVFXEnabled, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'BaseCharacter_C_ClientSetSpawnProtectionVFXEnabled::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ClientSetSpawnProtectionVFXEnabled, CallFunc_GetTeamIndex_ReturnValue) == 0x000014, "Member 'BaseCharacter_C_ClientSetSpawnProtectionVFXEnabled::CallFunc_GetTeamIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ClientSetSpawnProtectionVFXEnabled, CallFunc_TryAndGetHostilityRelativeToLocalPlayer_ReturnValue) == 0x000018, "Member 'BaseCharacter_C_ClientSetSpawnProtectionVFXEnabled::CallFunc_TryAndGetHostilityRelativeToLocalPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ClientSetSpawnProtectionVFXEnabled, K2Node_SwitchEnum_CmpSuccess) == 0x000019, "Member 'BaseCharacter_C_ClientSetSpawnProtectionVFXEnabled::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function BaseCharacter.BaseCharacter_C.ServerSetSpawnProtectionVFXEnabled
// 0x0002 (0x0002 - 0x0000)
struct BaseCharacter_C_ServerSetSpawnProtectionVFXEnabled final
{
public:
	bool                                          IsEnabled;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BaseCharacter_C_ServerSetSpawnProtectionVFXEnabled) == 0x000001, "Wrong alignment on BaseCharacter_C_ServerSetSpawnProtectionVFXEnabled");
static_assert(sizeof(BaseCharacter_C_ServerSetSpawnProtectionVFXEnabled) == 0x000002, "Wrong size on BaseCharacter_C_ServerSetSpawnProtectionVFXEnabled");
static_assert(offsetof(BaseCharacter_C_ServerSetSpawnProtectionVFXEnabled, IsEnabled) == 0x000000, "Member 'BaseCharacter_C_ServerSetSpawnProtectionVFXEnabled::IsEnabled' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ServerSetSpawnProtectionVFXEnabled, CallFunc_HasAuthority_ReturnValue) == 0x000001, "Member 'BaseCharacter_C_ServerSetSpawnProtectionVFXEnabled::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");

// Function BaseCharacter.BaseCharacter_C.DestroyBlastballFXOnDrop
// 0x0010 (0x0010 - 0x0000)
struct BaseCharacter_C_DestroyBlastballFXOnDrop final
{
public:
	class UParticleSystemComponent*               HoldingBlastballFX;                                // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, InstancedReference, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BaseCharacter_C_DestroyBlastballFXOnDrop) == 0x000008, "Wrong alignment on BaseCharacter_C_DestroyBlastballFXOnDrop");
static_assert(sizeof(BaseCharacter_C_DestroyBlastballFXOnDrop) == 0x000010, "Wrong size on BaseCharacter_C_DestroyBlastballFXOnDrop");
static_assert(offsetof(BaseCharacter_C_DestroyBlastballFXOnDrop, HoldingBlastballFX) == 0x000000, "Member 'BaseCharacter_C_DestroyBlastballFXOnDrop::HoldingBlastballFX' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_DestroyBlastballFXOnDrop, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'BaseCharacter_C_DestroyBlastballFXOnDrop::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BaseCharacter.BaseCharacter_C.CanInputQueueThrowPriorityItem
// 0x0018 (0x0018 - 0x0000)
struct BaseCharacter_C_CanInputQueueThrowPriorityItem final
{
public:
	bool                                          bCanInputQueue;                                    // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue;          // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3[0x5];                                        // 0x0003(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AMarinerItem*                           CallFunc_GetItemBySlot_ReturnValue;                // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BaseCharacter_C_CanInputQueueThrowPriorityItem) == 0x000008, "Wrong alignment on BaseCharacter_C_CanInputQueueThrowPriorityItem");
static_assert(sizeof(BaseCharacter_C_CanInputQueueThrowPriorityItem) == 0x000018, "Wrong size on BaseCharacter_C_CanInputQueueThrowPriorityItem");
static_assert(offsetof(BaseCharacter_C_CanInputQueueThrowPriorityItem, bCanInputQueue) == 0x000000, "Member 'BaseCharacter_C_CanInputQueueThrowPriorityItem::bCanInputQueue' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_CanInputQueueThrowPriorityItem, CallFunc_IsLocallyControlled_ReturnValue) == 0x000001, "Member 'BaseCharacter_C_CanInputQueueThrowPriorityItem::CallFunc_IsLocallyControlled_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_CanInputQueueThrowPriorityItem, CallFunc_BooleanAND_ReturnValue) == 0x000002, "Member 'BaseCharacter_C_CanInputQueueThrowPriorityItem::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_CanInputQueueThrowPriorityItem, CallFunc_GetItemBySlot_ReturnValue) == 0x000008, "Member 'BaseCharacter_C_CanInputQueueThrowPriorityItem::CallFunc_GetItemBySlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_CanInputQueueThrowPriorityItem, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'BaseCharacter_C_CanInputQueueThrowPriorityItem::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_CanInputQueueThrowPriorityItem, CallFunc_BooleanAND_ReturnValue_1) == 0x000011, "Member 'BaseCharacter_C_CanInputQueueThrowPriorityItem::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");

// Function BaseCharacter.BaseCharacter_C.ShouldKnockoutInitiateSplat
// 0x0038 (0x0038 - 0x0000)
struct BaseCharacter_C_ShouldKnockoutInitiateSplat final
{
public:
	bool                                          bWasKnockoutDueToMegablast;                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          ReturnValue;                                       // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_ShouldKnockoutInitiateSplat_ReturnValue;  // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3[0x5];                                        // 0x0003(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue;                  // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMarinerAIController*                   K2Node_DynamicCast_AsMariner_AIController;         // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AMarinerGameMode*                       K2Node_DynamicCast_AsMariner_Game_Mode;            // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0033(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BaseCharacter_C_ShouldKnockoutInitiateSplat) == 0x000008, "Wrong alignment on BaseCharacter_C_ShouldKnockoutInitiateSplat");
static_assert(sizeof(BaseCharacter_C_ShouldKnockoutInitiateSplat) == 0x000038, "Wrong size on BaseCharacter_C_ShouldKnockoutInitiateSplat");
static_assert(offsetof(BaseCharacter_C_ShouldKnockoutInitiateSplat, bWasKnockoutDueToMegablast) == 0x000000, "Member 'BaseCharacter_C_ShouldKnockoutInitiateSplat::bWasKnockoutDueToMegablast' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ShouldKnockoutInitiateSplat, ReturnValue) == 0x000001, "Member 'BaseCharacter_C_ShouldKnockoutInitiateSplat::ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ShouldKnockoutInitiateSplat, CallFunc_ShouldKnockoutInitiateSplat_ReturnValue) == 0x000002, "Member 'BaseCharacter_C_ShouldKnockoutInitiateSplat::CallFunc_ShouldKnockoutInitiateSplat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ShouldKnockoutInitiateSplat, CallFunc_GetController_ReturnValue) == 0x000008, "Member 'BaseCharacter_C_ShouldKnockoutInitiateSplat::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ShouldKnockoutInitiateSplat, CallFunc_GetGameMode_ReturnValue) == 0x000010, "Member 'BaseCharacter_C_ShouldKnockoutInitiateSplat::CallFunc_GetGameMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ShouldKnockoutInitiateSplat, K2Node_DynamicCast_AsMariner_AIController) == 0x000018, "Member 'BaseCharacter_C_ShouldKnockoutInitiateSplat::K2Node_DynamicCast_AsMariner_AIController' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ShouldKnockoutInitiateSplat, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BaseCharacter_C_ShouldKnockoutInitiateSplat::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ShouldKnockoutInitiateSplat, K2Node_DynamicCast_AsMariner_Game_Mode) == 0x000028, "Member 'BaseCharacter_C_ShouldKnockoutInitiateSplat::K2Node_DynamicCast_AsMariner_Game_Mode' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ShouldKnockoutInitiateSplat, K2Node_DynamicCast_bSuccess_1) == 0x000030, "Member 'BaseCharacter_C_ShouldKnockoutInitiateSplat::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ShouldKnockoutInitiateSplat, CallFunc_Not_PreBool_ReturnValue) == 0x000031, "Member 'BaseCharacter_C_ShouldKnockoutInitiateSplat::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ShouldKnockoutInitiateSplat, CallFunc_Not_PreBool_ReturnValue_1) == 0x000032, "Member 'BaseCharacter_C_ShouldKnockoutInitiateSplat::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_ShouldKnockoutInitiateSplat, CallFunc_BooleanAND_ReturnValue) == 0x000033, "Member 'BaseCharacter_C_ShouldKnockoutInitiateSplat::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BaseCharacter.BaseCharacter_C.GetDodgeReplicationTrigger
// 0x0002 (0x0002 - 0x0000)
struct BaseCharacter_C_GetDodgeReplicationTrigger final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BaseCharacter_C_GetDodgeReplicationTrigger) == 0x000001, "Wrong alignment on BaseCharacter_C_GetDodgeReplicationTrigger");
static_assert(sizeof(BaseCharacter_C_GetDodgeReplicationTrigger) == 0x000002, "Wrong size on BaseCharacter_C_GetDodgeReplicationTrigger");
static_assert(offsetof(BaseCharacter_C_GetDodgeReplicationTrigger, ReturnValue) == 0x000000, "Member 'BaseCharacter_C_GetDodgeReplicationTrigger::ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseCharacter_C_GetDodgeReplicationTrigger, CallFunc_Not_PreBool_ReturnValue) == 0x000001, "Member 'BaseCharacter_C_GetDodgeReplicationTrigger::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

}

