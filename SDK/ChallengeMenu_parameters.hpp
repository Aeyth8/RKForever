#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ChallengeMenu

#include "Basic.hpp"

#include "Mariner_structs.hpp"
#include "MangoClient_structs.hpp"


namespace SDK::Params
{

// Function ChallengeMenu.ChallengeMenu_C.ExecuteUbergraph_ChallengeMenu
// 0x01A8 (0x01A8 - 0x0000)
struct ChallengeMenu_C_ExecuteUbergraph_ChallengeMenu final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(TArray<struct FMangoQuestDescription>& Quests)> K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMangoQuestManager*                     CallFunc_Get_ReturnValue;                          // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IMarinerInputInterface> CallFunc_SetActiveInputWidget_InputWidget_CastInput; // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<struct FMangoQuestDescription>         K2Node_CustomEvent_Quests;                         // 0x0030(0x0010)(ConstParm, ZeroConstructor, ReferenceParm)
	bool                                          K2Node_Event_bToSubLayer;                          // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bFromSubMenu;                         // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_42[0x6];                                       // 0x0042(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UMangoQuestManager*                     CallFunc_Get_ReturnValue_1;                        // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IMarinerInputInterface> CallFunc_GetHighlightedObject_ReturnValue;         // 0x0050(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UChallengeButton_C*                     K2Node_DynamicCast_AsChallenge_Button;             // 0x0060(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMangoQuestReward                      CallFunc_GetRewards_Reward;                        // 0x0070(0x00C8)()
	struct FMangoQuest                            CallFunc_GetRewards_BlastPassXp;                   // 0x0138(0x0068)()
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x01A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EPlayerInputType                              K2Node_Event_InputType;                            // 0x01A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerInputType                              CallFunc_GetActiveInputType_ReturnValue;           // 0x01A2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x01A3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ChallengeMenu_C_ExecuteUbergraph_ChallengeMenu) == 0x000008, "Wrong alignment on ChallengeMenu_C_ExecuteUbergraph_ChallengeMenu");
static_assert(sizeof(ChallengeMenu_C_ExecuteUbergraph_ChallengeMenu) == 0x0001A8, "Wrong size on ChallengeMenu_C_ExecuteUbergraph_ChallengeMenu");
static_assert(offsetof(ChallengeMenu_C_ExecuteUbergraph_ChallengeMenu, EntryPoint) == 0x000000, "Member 'ChallengeMenu_C_ExecuteUbergraph_ChallengeMenu::EntryPoint' has a wrong offset!");
static_assert(offsetof(ChallengeMenu_C_ExecuteUbergraph_ChallengeMenu, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'ChallengeMenu_C_ExecuteUbergraph_ChallengeMenu::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(ChallengeMenu_C_ExecuteUbergraph_ChallengeMenu, CallFunc_Get_ReturnValue) == 0x000018, "Member 'ChallengeMenu_C_ExecuteUbergraph_ChallengeMenu::CallFunc_Get_ReturnValue' has a wrong offset!");
static_assert(offsetof(ChallengeMenu_C_ExecuteUbergraph_ChallengeMenu, CallFunc_SetActiveInputWidget_InputWidget_CastInput) == 0x000020, "Member 'ChallengeMenu_C_ExecuteUbergraph_ChallengeMenu::CallFunc_SetActiveInputWidget_InputWidget_CastInput' has a wrong offset!");
static_assert(offsetof(ChallengeMenu_C_ExecuteUbergraph_ChallengeMenu, K2Node_CustomEvent_Quests) == 0x000030, "Member 'ChallengeMenu_C_ExecuteUbergraph_ChallengeMenu::K2Node_CustomEvent_Quests' has a wrong offset!");
static_assert(offsetof(ChallengeMenu_C_ExecuteUbergraph_ChallengeMenu, K2Node_Event_bToSubLayer) == 0x000040, "Member 'ChallengeMenu_C_ExecuteUbergraph_ChallengeMenu::K2Node_Event_bToSubLayer' has a wrong offset!");
static_assert(offsetof(ChallengeMenu_C_ExecuteUbergraph_ChallengeMenu, K2Node_Event_bFromSubMenu) == 0x000041, "Member 'ChallengeMenu_C_ExecuteUbergraph_ChallengeMenu::K2Node_Event_bFromSubMenu' has a wrong offset!");
static_assert(offsetof(ChallengeMenu_C_ExecuteUbergraph_ChallengeMenu, CallFunc_Get_ReturnValue_1) == 0x000048, "Member 'ChallengeMenu_C_ExecuteUbergraph_ChallengeMenu::CallFunc_Get_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ChallengeMenu_C_ExecuteUbergraph_ChallengeMenu, CallFunc_GetHighlightedObject_ReturnValue) == 0x000050, "Member 'ChallengeMenu_C_ExecuteUbergraph_ChallengeMenu::CallFunc_GetHighlightedObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(ChallengeMenu_C_ExecuteUbergraph_ChallengeMenu, K2Node_DynamicCast_AsChallenge_Button) == 0x000060, "Member 'ChallengeMenu_C_ExecuteUbergraph_ChallengeMenu::K2Node_DynamicCast_AsChallenge_Button' has a wrong offset!");
static_assert(offsetof(ChallengeMenu_C_ExecuteUbergraph_ChallengeMenu, K2Node_DynamicCast_bSuccess) == 0x000068, "Member 'ChallengeMenu_C_ExecuteUbergraph_ChallengeMenu::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ChallengeMenu_C_ExecuteUbergraph_ChallengeMenu, CallFunc_GetRewards_Reward) == 0x000070, "Member 'ChallengeMenu_C_ExecuteUbergraph_ChallengeMenu::CallFunc_GetRewards_Reward' has a wrong offset!");
static_assert(offsetof(ChallengeMenu_C_ExecuteUbergraph_ChallengeMenu, CallFunc_GetRewards_BlastPassXp) == 0x000138, "Member 'ChallengeMenu_C_ExecuteUbergraph_ChallengeMenu::CallFunc_GetRewards_BlastPassXp' has a wrong offset!");
static_assert(offsetof(ChallengeMenu_C_ExecuteUbergraph_ChallengeMenu, CallFunc_IsValid_ReturnValue) == 0x0001A0, "Member 'ChallengeMenu_C_ExecuteUbergraph_ChallengeMenu::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ChallengeMenu_C_ExecuteUbergraph_ChallengeMenu, K2Node_Event_InputType) == 0x0001A1, "Member 'ChallengeMenu_C_ExecuteUbergraph_ChallengeMenu::K2Node_Event_InputType' has a wrong offset!");
static_assert(offsetof(ChallengeMenu_C_ExecuteUbergraph_ChallengeMenu, CallFunc_GetActiveInputType_ReturnValue) == 0x0001A2, "Member 'ChallengeMenu_C_ExecuteUbergraph_ChallengeMenu::CallFunc_GetActiveInputType_ReturnValue' has a wrong offset!");
static_assert(offsetof(ChallengeMenu_C_ExecuteUbergraph_ChallengeMenu, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0001A3, "Member 'ChallengeMenu_C_ExecuteUbergraph_ChallengeMenu::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function ChallengeMenu.ChallengeMenu_C.BP_OnEntered
// 0x0001 (0x0001 - 0x0000)
struct ChallengeMenu_C_BP_OnEntered final
{
public:
	bool                                          bFromSubMenu;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ChallengeMenu_C_BP_OnEntered) == 0x000001, "Wrong alignment on ChallengeMenu_C_BP_OnEntered");
static_assert(sizeof(ChallengeMenu_C_BP_OnEntered) == 0x000001, "Wrong size on ChallengeMenu_C_BP_OnEntered");
static_assert(offsetof(ChallengeMenu_C_BP_OnEntered, bFromSubMenu) == 0x000000, "Member 'ChallengeMenu_C_BP_OnEntered::bFromSubMenu' has a wrong offset!");

// Function ChallengeMenu.ChallengeMenu_C.BP_OnExited
// 0x0001 (0x0001 - 0x0000)
struct ChallengeMenu_C_BP_OnExited final
{
public:
	bool                                          bToSubLayer;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ChallengeMenu_C_BP_OnExited) == 0x000001, "Wrong alignment on ChallengeMenu_C_BP_OnExited");
static_assert(sizeof(ChallengeMenu_C_BP_OnExited) == 0x000001, "Wrong size on ChallengeMenu_C_BP_OnExited");
static_assert(offsetof(ChallengeMenu_C_BP_OnExited, bToSubLayer) == 0x000000, "Member 'ChallengeMenu_C_BP_OnExited::bToSubLayer' has a wrong offset!");

// Function ChallengeMenu.ChallengeMenu_C.OnGetQuestsCompleted
// 0x0010 (0x0010 - 0x0000)
struct ChallengeMenu_C_OnGetQuestsCompleted final
{
public:
	TArray<struct FMangoQuestDescription>         Quests;                                            // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm)
};
static_assert(alignof(ChallengeMenu_C_OnGetQuestsCompleted) == 0x000008, "Wrong alignment on ChallengeMenu_C_OnGetQuestsCompleted");
static_assert(sizeof(ChallengeMenu_C_OnGetQuestsCompleted) == 0x000010, "Wrong size on ChallengeMenu_C_OnGetQuestsCompleted");
static_assert(offsetof(ChallengeMenu_C_OnGetQuestsCompleted, Quests) == 0x000000, "Member 'ChallengeMenu_C_OnGetQuestsCompleted::Quests' has a wrong offset!");

// Function ChallengeMenu.ChallengeMenu_C.HandleInputDeviceChanged
// 0x0001 (0x0001 - 0x0000)
struct ChallengeMenu_C_HandleInputDeviceChanged final
{
public:
	EPlayerInputType                              InputType;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ChallengeMenu_C_HandleInputDeviceChanged) == 0x000001, "Wrong alignment on ChallengeMenu_C_HandleInputDeviceChanged");
static_assert(sizeof(ChallengeMenu_C_HandleInputDeviceChanged) == 0x000001, "Wrong size on ChallengeMenu_C_HandleInputDeviceChanged");
static_assert(offsetof(ChallengeMenu_C_HandleInputDeviceChanged, InputType) == 0x000000, "Member 'ChallengeMenu_C_HandleInputDeviceChanged::InputType' has a wrong offset!");

// Function ChallengeMenu.ChallengeMenu_C.PopulateQuests
// 0x02B8 (0x02B8 - 0x0000)
struct ChallengeMenu_C_PopulateQuests final
{
public:
	bool                                          RefreshInPlace;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMangoQuestDescription                 Quest;                                             // 0x0008(0x0118)(Edit, BlueprintVisible)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0124(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12C[0x4];                                      // 0x012C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UChallengeGroup_C*                      Temp_object_Variable;                              // 0x0130(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMangoQuestSlot                               Temp_byte_Variable;                                // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_139[0x7];                                      // 0x0139(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMangoQuestManager*                     CallFunc_Get_ReturnValue;                          // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FMangoQuestDescription>         CallFunc_GetQuests_ReturnValue;                    // 0x0148(0x0010)(ConstParm, ZeroConstructor, ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0158(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15C[0x4];                                      // 0x015C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMangoQuestDescription                 CallFunc_Array_Get_Item;                           // 0x0160(0x0118)()
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0278(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0279(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_27A[0x6];                                      // 0x027A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UChallengeGroup_C*                      K2Node_Select_Default;                             // 0x0280(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UChallengeButton_C*                     CallFunc_AddChallenge_ButtonInstance;              // 0x0288(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsVisible_ReturnValue;                    // 0x0290(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0291(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_292[0x6];                                      // 0x0292(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                CallFunc_GetChildAt_ReturnValue;                   // 0x0298(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetChildrenCount_ReturnValue;             // 0x02A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A4[0x4];                                      // 0x02A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UChallengeButton_C*                     K2Node_DynamicCast_AsChallenge_Button;             // 0x02A8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x02B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x02B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x02B2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x02B3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ChallengeMenu_C_PopulateQuests) == 0x000008, "Wrong alignment on ChallengeMenu_C_PopulateQuests");
static_assert(sizeof(ChallengeMenu_C_PopulateQuests) == 0x0002B8, "Wrong size on ChallengeMenu_C_PopulateQuests");
static_assert(offsetof(ChallengeMenu_C_PopulateQuests, RefreshInPlace) == 0x000000, "Member 'ChallengeMenu_C_PopulateQuests::RefreshInPlace' has a wrong offset!");
static_assert(offsetof(ChallengeMenu_C_PopulateQuests, Quest) == 0x000008, "Member 'ChallengeMenu_C_PopulateQuests::Quest' has a wrong offset!");
static_assert(offsetof(ChallengeMenu_C_PopulateQuests, Temp_int_Array_Index_Variable) == 0x000120, "Member 'ChallengeMenu_C_PopulateQuests::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(ChallengeMenu_C_PopulateQuests, Temp_int_Loop_Counter_Variable) == 0x000124, "Member 'ChallengeMenu_C_PopulateQuests::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(ChallengeMenu_C_PopulateQuests, CallFunc_Add_IntInt_ReturnValue) == 0x000128, "Member 'ChallengeMenu_C_PopulateQuests::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ChallengeMenu_C_PopulateQuests, Temp_object_Variable) == 0x000130, "Member 'ChallengeMenu_C_PopulateQuests::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(ChallengeMenu_C_PopulateQuests, Temp_byte_Variable) == 0x000138, "Member 'ChallengeMenu_C_PopulateQuests::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(ChallengeMenu_C_PopulateQuests, CallFunc_Get_ReturnValue) == 0x000140, "Member 'ChallengeMenu_C_PopulateQuests::CallFunc_Get_ReturnValue' has a wrong offset!");
static_assert(offsetof(ChallengeMenu_C_PopulateQuests, CallFunc_GetQuests_ReturnValue) == 0x000148, "Member 'ChallengeMenu_C_PopulateQuests::CallFunc_GetQuests_ReturnValue' has a wrong offset!");
static_assert(offsetof(ChallengeMenu_C_PopulateQuests, CallFunc_Array_Length_ReturnValue) == 0x000158, "Member 'ChallengeMenu_C_PopulateQuests::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(ChallengeMenu_C_PopulateQuests, CallFunc_Array_Get_Item) == 0x000160, "Member 'ChallengeMenu_C_PopulateQuests::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(ChallengeMenu_C_PopulateQuests, CallFunc_Less_IntInt_ReturnValue) == 0x000278, "Member 'ChallengeMenu_C_PopulateQuests::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ChallengeMenu_C_PopulateQuests, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000279, "Member 'ChallengeMenu_C_PopulateQuests::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(ChallengeMenu_C_PopulateQuests, K2Node_Select_Default) == 0x000280, "Member 'ChallengeMenu_C_PopulateQuests::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(ChallengeMenu_C_PopulateQuests, CallFunc_AddChallenge_ButtonInstance) == 0x000288, "Member 'ChallengeMenu_C_PopulateQuests::CallFunc_AddChallenge_ButtonInstance' has a wrong offset!");
static_assert(offsetof(ChallengeMenu_C_PopulateQuests, CallFunc_IsVisible_ReturnValue) == 0x000290, "Member 'ChallengeMenu_C_PopulateQuests::CallFunc_IsVisible_ReturnValue' has a wrong offset!");
static_assert(offsetof(ChallengeMenu_C_PopulateQuests, CallFunc_Not_PreBool_ReturnValue) == 0x000291, "Member 'ChallengeMenu_C_PopulateQuests::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(ChallengeMenu_C_PopulateQuests, CallFunc_GetChildAt_ReturnValue) == 0x000298, "Member 'ChallengeMenu_C_PopulateQuests::CallFunc_GetChildAt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ChallengeMenu_C_PopulateQuests, CallFunc_GetChildrenCount_ReturnValue) == 0x0002A0, "Member 'ChallengeMenu_C_PopulateQuests::CallFunc_GetChildrenCount_ReturnValue' has a wrong offset!");
static_assert(offsetof(ChallengeMenu_C_PopulateQuests, K2Node_DynamicCast_AsChallenge_Button) == 0x0002A8, "Member 'ChallengeMenu_C_PopulateQuests::K2Node_DynamicCast_AsChallenge_Button' has a wrong offset!");
static_assert(offsetof(ChallengeMenu_C_PopulateQuests, K2Node_DynamicCast_bSuccess) == 0x0002B0, "Member 'ChallengeMenu_C_PopulateQuests::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ChallengeMenu_C_PopulateQuests, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x0002B1, "Member 'ChallengeMenu_C_PopulateQuests::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ChallengeMenu_C_PopulateQuests, CallFunc_BooleanAND_ReturnValue) == 0x0002B2, "Member 'ChallengeMenu_C_PopulateQuests::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(ChallengeMenu_C_PopulateQuests, CallFunc_Not_PreBool_ReturnValue_1) == 0x0002B3, "Member 'ChallengeMenu_C_PopulateQuests::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");

// Function ChallengeMenu.ChallengeMenu_C.UpdatePrompts
// 0x0358 (0x0358 - 0x0000)
struct ChallengeMenu_C_UpdatePrompts final
{
public:
	struct FMarinerPromptData                     K2Node_MakeStruct_MarinerPromptData;               // 0x0000(0x0118)()
	struct FMarinerPromptData                     K2Node_MakeStruct_MarinerPromptData_1;             // 0x0118(0x0118)()
	bool                                          CallFunc_AddHostPrompt_ReturnValue;                // 0x0230(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_AddHostPrompt_ReturnValue_1;              // 0x0231(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetHighlightedChallengeState_CanClaim;    // 0x0232(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetHighlightedChallengeState_CanDismiss;  // 0x0233(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetHighlightedChallengeState_CanSelect;   // 0x0234(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_235[0x3];                                      // 0x0235(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMarinerPromptData                     K2Node_MakeStruct_MarinerPromptData_2;             // 0x0238(0x0118)()
	bool                                          CallFunc_AddHostPrompt_ReturnValue_2;              // 0x0350(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_ClearHostPrompts_ReturnValue;             // 0x0351(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ChallengeMenu_C_UpdatePrompts) == 0x000008, "Wrong alignment on ChallengeMenu_C_UpdatePrompts");
static_assert(sizeof(ChallengeMenu_C_UpdatePrompts) == 0x000358, "Wrong size on ChallengeMenu_C_UpdatePrompts");
static_assert(offsetof(ChallengeMenu_C_UpdatePrompts, K2Node_MakeStruct_MarinerPromptData) == 0x000000, "Member 'ChallengeMenu_C_UpdatePrompts::K2Node_MakeStruct_MarinerPromptData' has a wrong offset!");
static_assert(offsetof(ChallengeMenu_C_UpdatePrompts, K2Node_MakeStruct_MarinerPromptData_1) == 0x000118, "Member 'ChallengeMenu_C_UpdatePrompts::K2Node_MakeStruct_MarinerPromptData_1' has a wrong offset!");
static_assert(offsetof(ChallengeMenu_C_UpdatePrompts, CallFunc_AddHostPrompt_ReturnValue) == 0x000230, "Member 'ChallengeMenu_C_UpdatePrompts::CallFunc_AddHostPrompt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ChallengeMenu_C_UpdatePrompts, CallFunc_AddHostPrompt_ReturnValue_1) == 0x000231, "Member 'ChallengeMenu_C_UpdatePrompts::CallFunc_AddHostPrompt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ChallengeMenu_C_UpdatePrompts, CallFunc_GetHighlightedChallengeState_CanClaim) == 0x000232, "Member 'ChallengeMenu_C_UpdatePrompts::CallFunc_GetHighlightedChallengeState_CanClaim' has a wrong offset!");
static_assert(offsetof(ChallengeMenu_C_UpdatePrompts, CallFunc_GetHighlightedChallengeState_CanDismiss) == 0x000233, "Member 'ChallengeMenu_C_UpdatePrompts::CallFunc_GetHighlightedChallengeState_CanDismiss' has a wrong offset!");
static_assert(offsetof(ChallengeMenu_C_UpdatePrompts, CallFunc_GetHighlightedChallengeState_CanSelect) == 0x000234, "Member 'ChallengeMenu_C_UpdatePrompts::CallFunc_GetHighlightedChallengeState_CanSelect' has a wrong offset!");
static_assert(offsetof(ChallengeMenu_C_UpdatePrompts, K2Node_MakeStruct_MarinerPromptData_2) == 0x000238, "Member 'ChallengeMenu_C_UpdatePrompts::K2Node_MakeStruct_MarinerPromptData_2' has a wrong offset!");
static_assert(offsetof(ChallengeMenu_C_UpdatePrompts, CallFunc_AddHostPrompt_ReturnValue_2) == 0x000350, "Member 'ChallengeMenu_C_UpdatePrompts::CallFunc_AddHostPrompt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ChallengeMenu_C_UpdatePrompts, CallFunc_ClearHostPrompts_ReturnValue) == 0x000351, "Member 'ChallengeMenu_C_UpdatePrompts::CallFunc_ClearHostPrompts_ReturnValue' has a wrong offset!");

// Function ChallengeMenu.ChallengeMenu_C.GetHighlightedChallengeState
// 0x0040 (0x0040 - 0x0000)
struct ChallengeMenu_C_GetHighlightedChallengeState final
{
public:
	bool                                          CanClaim;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CanDismiss;                                        // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CanSelect;                                         // 0x0002(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3[0x5];                                        // 0x0003(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IMarinerInputInterface> CallFunc_GetHighlightedObject_ReturnValue;         // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UChallengeButton_C*                     K2Node_DynamicCast_AsChallenge_Button;             // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ULoginRewardButton_C*                   K2Node_DynamicCast_AsLogin_Reward_Button;          // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsClaimable_CanClaim;                     // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_32[0x2];                                       // 0x0032(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_IsClaimable_Progress;                     // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_IsClaimable_Goal;                         // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsClaimable_IsClaimable;                  // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDismissable_CanDismiss;                 // 0x003D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x003E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ChallengeMenu_C_GetHighlightedChallengeState) == 0x000008, "Wrong alignment on ChallengeMenu_C_GetHighlightedChallengeState");
static_assert(sizeof(ChallengeMenu_C_GetHighlightedChallengeState) == 0x000040, "Wrong size on ChallengeMenu_C_GetHighlightedChallengeState");
static_assert(offsetof(ChallengeMenu_C_GetHighlightedChallengeState, CanClaim) == 0x000000, "Member 'ChallengeMenu_C_GetHighlightedChallengeState::CanClaim' has a wrong offset!");
static_assert(offsetof(ChallengeMenu_C_GetHighlightedChallengeState, CanDismiss) == 0x000001, "Member 'ChallengeMenu_C_GetHighlightedChallengeState::CanDismiss' has a wrong offset!");
static_assert(offsetof(ChallengeMenu_C_GetHighlightedChallengeState, CanSelect) == 0x000002, "Member 'ChallengeMenu_C_GetHighlightedChallengeState::CanSelect' has a wrong offset!");
static_assert(offsetof(ChallengeMenu_C_GetHighlightedChallengeState, CallFunc_GetHighlightedObject_ReturnValue) == 0x000008, "Member 'ChallengeMenu_C_GetHighlightedChallengeState::CallFunc_GetHighlightedObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(ChallengeMenu_C_GetHighlightedChallengeState, K2Node_DynamicCast_AsChallenge_Button) == 0x000018, "Member 'ChallengeMenu_C_GetHighlightedChallengeState::K2Node_DynamicCast_AsChallenge_Button' has a wrong offset!");
static_assert(offsetof(ChallengeMenu_C_GetHighlightedChallengeState, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'ChallengeMenu_C_GetHighlightedChallengeState::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ChallengeMenu_C_GetHighlightedChallengeState, K2Node_DynamicCast_AsLogin_Reward_Button) == 0x000028, "Member 'ChallengeMenu_C_GetHighlightedChallengeState::K2Node_DynamicCast_AsLogin_Reward_Button' has a wrong offset!");
static_assert(offsetof(ChallengeMenu_C_GetHighlightedChallengeState, K2Node_DynamicCast_bSuccess_1) == 0x000030, "Member 'ChallengeMenu_C_GetHighlightedChallengeState::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(ChallengeMenu_C_GetHighlightedChallengeState, CallFunc_IsClaimable_CanClaim) == 0x000031, "Member 'ChallengeMenu_C_GetHighlightedChallengeState::CallFunc_IsClaimable_CanClaim' has a wrong offset!");
static_assert(offsetof(ChallengeMenu_C_GetHighlightedChallengeState, CallFunc_IsClaimable_Progress) == 0x000034, "Member 'ChallengeMenu_C_GetHighlightedChallengeState::CallFunc_IsClaimable_Progress' has a wrong offset!");
static_assert(offsetof(ChallengeMenu_C_GetHighlightedChallengeState, CallFunc_IsClaimable_Goal) == 0x000038, "Member 'ChallengeMenu_C_GetHighlightedChallengeState::CallFunc_IsClaimable_Goal' has a wrong offset!");
static_assert(offsetof(ChallengeMenu_C_GetHighlightedChallengeState, CallFunc_IsClaimable_IsClaimable) == 0x00003C, "Member 'ChallengeMenu_C_GetHighlightedChallengeState::CallFunc_IsClaimable_IsClaimable' has a wrong offset!");
static_assert(offsetof(ChallengeMenu_C_GetHighlightedChallengeState, CallFunc_IsDismissable_CanDismiss) == 0x00003D, "Member 'ChallengeMenu_C_GetHighlightedChallengeState::CallFunc_IsDismissable_CanDismiss' has a wrong offset!");
static_assert(offsetof(ChallengeMenu_C_GetHighlightedChallengeState, CallFunc_IsValid_ReturnValue) == 0x00003E, "Member 'ChallengeMenu_C_GetHighlightedChallengeState::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function ChallengeMenu.ChallengeMenu_C.InitFirstQuestPreviewRewards
// 0x0168 (0x0168 - 0x0000)
struct ChallengeMenu_C_InitFirstQuestPreviewRewards final
{
public:
	bool                                          NewLocalVar_0;                                     // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMangoCMSManager*                       CallFunc_Get_ReturnValue;                          // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMangoQuestManager*                     CallFunc_Get_ReturnValue_1;                        // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FMangoQuestDescription>         CallFunc_GetQuests_ReturnValue;                    // 0x0018(0x0010)(ConstParm, ZeroConstructor, ReferenceParm)
	struct FMangoQuest                            CallFunc_GetQuest_OutQuest;                        // 0x0028(0x0068)()
	bool                                          CallFunc_GetQuest_ReturnValue;                     // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_91[0x7];                                       // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMangoQuestReward                      CallFunc_GetQuestReward_OutQuestReward;            // 0x0098(0x00C8)()
	bool                                          CallFunc_GetQuestReward_ReturnValue;               // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0161(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ChallengeMenu_C_InitFirstQuestPreviewRewards) == 0x000008, "Wrong alignment on ChallengeMenu_C_InitFirstQuestPreviewRewards");
static_assert(sizeof(ChallengeMenu_C_InitFirstQuestPreviewRewards) == 0x000168, "Wrong size on ChallengeMenu_C_InitFirstQuestPreviewRewards");
static_assert(offsetof(ChallengeMenu_C_InitFirstQuestPreviewRewards, NewLocalVar_0) == 0x000000, "Member 'ChallengeMenu_C_InitFirstQuestPreviewRewards::NewLocalVar_0' has a wrong offset!");
static_assert(offsetof(ChallengeMenu_C_InitFirstQuestPreviewRewards, CallFunc_Get_ReturnValue) == 0x000008, "Member 'ChallengeMenu_C_InitFirstQuestPreviewRewards::CallFunc_Get_ReturnValue' has a wrong offset!");
static_assert(offsetof(ChallengeMenu_C_InitFirstQuestPreviewRewards, CallFunc_Get_ReturnValue_1) == 0x000010, "Member 'ChallengeMenu_C_InitFirstQuestPreviewRewards::CallFunc_Get_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ChallengeMenu_C_InitFirstQuestPreviewRewards, CallFunc_GetQuests_ReturnValue) == 0x000018, "Member 'ChallengeMenu_C_InitFirstQuestPreviewRewards::CallFunc_GetQuests_ReturnValue' has a wrong offset!");
static_assert(offsetof(ChallengeMenu_C_InitFirstQuestPreviewRewards, CallFunc_GetQuest_OutQuest) == 0x000028, "Member 'ChallengeMenu_C_InitFirstQuestPreviewRewards::CallFunc_GetQuest_OutQuest' has a wrong offset!");
static_assert(offsetof(ChallengeMenu_C_InitFirstQuestPreviewRewards, CallFunc_GetQuest_ReturnValue) == 0x000090, "Member 'ChallengeMenu_C_InitFirstQuestPreviewRewards::CallFunc_GetQuest_ReturnValue' has a wrong offset!");
static_assert(offsetof(ChallengeMenu_C_InitFirstQuestPreviewRewards, CallFunc_GetQuestReward_OutQuestReward) == 0x000098, "Member 'ChallengeMenu_C_InitFirstQuestPreviewRewards::CallFunc_GetQuestReward_OutQuestReward' has a wrong offset!");
static_assert(offsetof(ChallengeMenu_C_InitFirstQuestPreviewRewards, CallFunc_GetQuestReward_ReturnValue) == 0x000160, "Member 'ChallengeMenu_C_InitFirstQuestPreviewRewards::CallFunc_GetQuestReward_ReturnValue' has a wrong offset!");
static_assert(offsetof(ChallengeMenu_C_InitFirstQuestPreviewRewards, CallFunc_BooleanAND_ReturnValue) == 0x000161, "Member 'ChallengeMenu_C_InitFirstQuestPreviewRewards::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function ChallengeMenu.ChallengeMenu_C.HandleInput
// 0x0038 (0x0038 - 0x0000)
struct ChallengeMenu_C_HandleInput final
{
public:
	EMarinerInputActions                          InInput;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IMarinerInputInterface> CallFunc_HandleInput_self_CastInput;               // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HandleInput_ReturnValue;                  // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IMarinerInputInterface> CallFunc_HandleInput_self_CastInput_1;             // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HandleInput_ReturnValue_1;                // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ChallengeMenu_C_HandleInput) == 0x000008, "Wrong alignment on ChallengeMenu_C_HandleInput");
static_assert(sizeof(ChallengeMenu_C_HandleInput) == 0x000038, "Wrong size on ChallengeMenu_C_HandleInput");
static_assert(offsetof(ChallengeMenu_C_HandleInput, InInput) == 0x000000, "Member 'ChallengeMenu_C_HandleInput::InInput' has a wrong offset!");
static_assert(offsetof(ChallengeMenu_C_HandleInput, ReturnValue) == 0x000001, "Member 'ChallengeMenu_C_HandleInput::ReturnValue' has a wrong offset!");
static_assert(offsetof(ChallengeMenu_C_HandleInput, CallFunc_HandleInput_self_CastInput) == 0x000008, "Member 'ChallengeMenu_C_HandleInput::CallFunc_HandleInput_self_CastInput' has a wrong offset!");
static_assert(offsetof(ChallengeMenu_C_HandleInput, CallFunc_HandleInput_ReturnValue) == 0x000018, "Member 'ChallengeMenu_C_HandleInput::CallFunc_HandleInput_ReturnValue' has a wrong offset!");
static_assert(offsetof(ChallengeMenu_C_HandleInput, CallFunc_HandleInput_self_CastInput_1) == 0x000020, "Member 'ChallengeMenu_C_HandleInput::CallFunc_HandleInput_self_CastInput_1' has a wrong offset!");
static_assert(offsetof(ChallengeMenu_C_HandleInput, CallFunc_HandleInput_ReturnValue_1) == 0x000030, "Member 'ChallengeMenu_C_HandleInput::CallFunc_HandleInput_ReturnValue_1' has a wrong offset!");

}

