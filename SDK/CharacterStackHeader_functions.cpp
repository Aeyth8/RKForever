#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: CharacterStackHeader

#include "Basic.hpp"

#include "CharacterStackHeader_classes.hpp"
#include "CharacterStackHeader_parameters.hpp"


namespace SDK
{

// Function CharacterStackHeader.CharacterStackHeader_C.ExecuteUbergraph_CharacterStackHeader
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UCharacterStackHeader_C::ExecuteUbergraph_CharacterStackHeader(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharacterStackHeader_C", "ExecuteUbergraph_CharacterStackHeader");

	Params::CharacterStackHeader_C_ExecuteUbergraph_CharacterStackHeader Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function CharacterStackHeader.CharacterStackHeader_C.PopulateNameAndOrWeapon
// (BlueprintCallable, BlueprintEvent)

void UCharacterStackHeader_C::PopulateNameAndOrWeapon()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharacterStackHeader_C", "PopulateNameAndOrWeapon");

	UObject::ProcessEvent(Func, nullptr);
}


// Function CharacterStackHeader.CharacterStackHeader_C.SetCharacter
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UMarinerPlayableCharacter*        Character                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UCharacterStackHeader_C::SetCharacter(class UMarinerPlayableCharacter* Character)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharacterStackHeader_C", "SetCharacter");

	Params::CharacterStackHeader_C_SetCharacter Parms{};

	Parms.Character = Character;

	UObject::ProcessEvent(Func, &Parms);
}


// Function CharacterStackHeader.CharacterStackHeader_C.Populate
// (Event, Protected, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UCharacterStackHeader_C::Populate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharacterStackHeader_C", "Populate");

	Params::CharacterStackHeader_C_Populate Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function CharacterStackHeader.CharacterStackHeader_C.GetProgressionData
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FMangoCharacterProgression       Progression                                            (Parm, OutParm)

void UCharacterStackHeader_C::GetProgressionData(struct FMangoCharacterProgression* Progression)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharacterStackHeader_C", "GetProgressionData");

	Params::CharacterStackHeader_C_GetProgressionData Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Progression != nullptr)
		*Progression = std::move(Parms.Progression);
}


// Function CharacterStackHeader.CharacterStackHeader_C.SetSkinOverride
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UMarinerSkinCollectionDataAsset*  Skin                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UCharacterStackHeader_C::SetSkinOverride(class UMarinerSkinCollectionDataAsset* Skin)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharacterStackHeader_C", "SetSkinOverride");

	Params::CharacterStackHeader_C_SetSkinOverride Parms{};

	Parms.Skin = Skin;

	UObject::ProcessEvent(Func, &Parms);
}


// Function CharacterStackHeader.CharacterStackHeader_C.Handle Equipped Artifacts
// (Public, BlueprintCallable, BlueprintEvent)

void UCharacterStackHeader_C::Handle_Equipped_Artifacts()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharacterStackHeader_C", "Handle Equipped Artifacts");

	UObject::ProcessEvent(Func, nullptr);
}


// Function CharacterStackHeader.CharacterStackHeader_C.GetFormattedProgression
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FMangoCharacterProgression       Progression                                            (BlueprintVisible, BlueprintReadOnly, Parm)
// int32                                   Level                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Progress                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    HasPlayed                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UCharacterStackHeader_C::GetFormattedProgression(const struct FMangoCharacterProgression& Progression, int32* Level, float* Progress, bool* HasPlayed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharacterStackHeader_C", "GetFormattedProgression");

	Params::CharacterStackHeader_C_GetFormattedProgression Parms{};

	Parms.Progression = std::move(Progression);

	UObject::ProcessEvent(Func, &Parms);

	if (Level != nullptr)
		*Level = Parms.Level;

	if (Progress != nullptr)
		*Progress = Parms.Progress;

	if (HasPlayed != nullptr)
		*HasPlayed = Parms.HasPlayed;
}


// Function CharacterStackHeader.CharacterStackHeader_C.IsHeaderAllowed
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UCharacterStackHeader_C::IsHeaderAllowed() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharacterStackHeader_C", "IsHeaderAllowed");

	Params::CharacterStackHeader_C_IsHeaderAllowed Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function CharacterStackHeader.CharacterStackHeader_C.UpdateEquippedArtifacts
// (Event, Public, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// bool                                    bRankedPreset                                          (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UCharacterStackHeader_C::UpdateEquippedArtifacts(const bool bRankedPreset) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharacterStackHeader_C", "UpdateEquippedArtifacts");

	Params::CharacterStackHeader_C_UpdateEquippedArtifacts Parms{};

	Parms.bRankedPreset = bRankedPreset;

	UObject::ProcessEvent(Func, &Parms);
}

}

