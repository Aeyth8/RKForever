#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_MarinerGameState

#include "Basic.hpp"

#include "OnRoundTransitionPayload_structs.hpp"
#include "Engine_structs.hpp"
#include "OnPreroundCountdownPayload_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "ExtraTimeStates_structs.hpp"


namespace SDK::Params
{

// Function BP_MarinerGameState.BP_MarinerGameState_C.OnPreroundCountdownChange__DelegateSignature
// 0x000C (0x000C - 0x0000)
struct BP_MarinerGameState_C_OnPreroundCountdownChange__DelegateSignature final
{
public:
	int32                                         TimeLeft;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         MaxTimeToShow;                                     // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ShouldEnable;                                      // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_MarinerGameState_C_OnPreroundCountdownChange__DelegateSignature) == 0x000004, "Wrong alignment on BP_MarinerGameState_C_OnPreroundCountdownChange__DelegateSignature");
static_assert(sizeof(BP_MarinerGameState_C_OnPreroundCountdownChange__DelegateSignature) == 0x00000C, "Wrong size on BP_MarinerGameState_C_OnPreroundCountdownChange__DelegateSignature");
static_assert(offsetof(BP_MarinerGameState_C_OnPreroundCountdownChange__DelegateSignature, TimeLeft) == 0x000000, "Member 'BP_MarinerGameState_C_OnPreroundCountdownChange__DelegateSignature::TimeLeft' has a wrong offset!");
static_assert(offsetof(BP_MarinerGameState_C_OnPreroundCountdownChange__DelegateSignature, MaxTimeToShow) == 0x000004, "Member 'BP_MarinerGameState_C_OnPreroundCountdownChange__DelegateSignature::MaxTimeToShow' has a wrong offset!");
static_assert(offsetof(BP_MarinerGameState_C_OnPreroundCountdownChange__DelegateSignature, ShouldEnable) == 0x000008, "Member 'BP_MarinerGameState_C_OnPreroundCountdownChange__DelegateSignature::ShouldEnable' has a wrong offset!");

// Function BP_MarinerGameState.BP_MarinerGameState_C.OnExtraTimeChange__DelegateSignature
// 0x0002 (0x0002 - 0x0000)
struct BP_MarinerGameState_C_OnExtraTimeChange__DelegateSignature final
{
public:
	bool                                          Param_IsInExtraTime;                               // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	ExtraTimeStates                               Param_ExtraTimeState;                              // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MarinerGameState_C_OnExtraTimeChange__DelegateSignature) == 0x000001, "Wrong alignment on BP_MarinerGameState_C_OnExtraTimeChange__DelegateSignature");
static_assert(sizeof(BP_MarinerGameState_C_OnExtraTimeChange__DelegateSignature) == 0x000002, "Wrong size on BP_MarinerGameState_C_OnExtraTimeChange__DelegateSignature");
static_assert(offsetof(BP_MarinerGameState_C_OnExtraTimeChange__DelegateSignature, Param_IsInExtraTime) == 0x000000, "Member 'BP_MarinerGameState_C_OnExtraTimeChange__DelegateSignature::Param_IsInExtraTime' has a wrong offset!");
static_assert(offsetof(BP_MarinerGameState_C_OnExtraTimeChange__DelegateSignature, Param_ExtraTimeState) == 0x000001, "Member 'BP_MarinerGameState_C_OnExtraTimeChange__DelegateSignature::Param_ExtraTimeState' has a wrong offset!");

// Function BP_MarinerGameState.BP_MarinerGameState_C.OnExtraTimeTimerChange__DelegateSignature
// 0x0004 (0x0004 - 0x0000)
struct BP_MarinerGameState_C_OnExtraTimeTimerChange__DelegateSignature final
{
public:
	float                                         TimerLength;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MarinerGameState_C_OnExtraTimeTimerChange__DelegateSignature) == 0x000004, "Wrong alignment on BP_MarinerGameState_C_OnExtraTimeTimerChange__DelegateSignature");
static_assert(sizeof(BP_MarinerGameState_C_OnExtraTimeTimerChange__DelegateSignature) == 0x000004, "Wrong size on BP_MarinerGameState_C_OnExtraTimeTimerChange__DelegateSignature");
static_assert(offsetof(BP_MarinerGameState_C_OnExtraTimeTimerChange__DelegateSignature, TimerLength) == 0x000000, "Member 'BP_MarinerGameState_C_OnExtraTimeTimerChange__DelegateSignature::TimerLength' has a wrong offset!");

// Function BP_MarinerGameState.BP_MarinerGameState_C.OnRoundTransitionChange__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct BP_MarinerGameState_C_OnRoundTransitionChange__DelegateSignature final
{
public:
	bool                                          IsEnabled;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_MarinerGameState_C_OnRoundTransitionChange__DelegateSignature) == 0x000001, "Wrong alignment on BP_MarinerGameState_C_OnRoundTransitionChange__DelegateSignature");
static_assert(sizeof(BP_MarinerGameState_C_OnRoundTransitionChange__DelegateSignature) == 0x000001, "Wrong size on BP_MarinerGameState_C_OnRoundTransitionChange__DelegateSignature");
static_assert(offsetof(BP_MarinerGameState_C_OnRoundTransitionChange__DelegateSignature, IsEnabled) == 0x000000, "Member 'BP_MarinerGameState_C_OnRoundTransitionChange__DelegateSignature::IsEnabled' has a wrong offset!");

// Function BP_MarinerGameState.BP_MarinerGameState_C.ExecuteUbergraph_BP_MarinerGameState
// 0x0548 (0x0548 - 0x0000)
struct BP_MarinerGameState_C_ExecuteUbergraph_BP_MarinerGameState final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2256[0x3];                                     // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_CustomEvent_TimerLength_1;                  // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_MaxNumberToShow;                // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_ShouldEnable;                   // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2257[0x3];                                     // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_CustomEvent_PreRoundCountdownEndTimeStamp;  // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Round_ReturnValue;                        // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Round_ReturnValue_1;                      // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_K2_GetTimerElapsedTimeHandle_ReturnValue; // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(float PreRoundCountdownEndTimeStamp)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x003C(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_HasAuthority_ReturnValue_1;               // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x004D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2258[0x2];                                     // 0x004E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetServerWorldTimeSeconds_ReturnValue;    // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_1;        // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_2;        // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue_1;       // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2259[0x3];                                     // 0x005D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0060(0x0008)(NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_K2_GetTimerElapsedTimeHandle_ReturnValue_1; // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_3;        // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Percent_FloatFloat_ReturnValue;           // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_225A[0x3];                                     // 0x0075(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Round_ReturnValue_2;                      // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NearlyEqual_FloatFloat_ReturnValue;       // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x007D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_IsInExtraTime_2;                // 0x007E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ExtraTimeStates                               K2Node_CustomEvent_ExtraTimeState_2;               // 0x007F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_IsInExtraTime_1;                // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ExtraTimeStates                               K2Node_CustomEvent_ExtraTimeState_1;               // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_IsEnabled;                      // 0x0082(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_225B[0x1];                                     // 0x0083(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_CustomEvent_TimerLength;                    // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x008C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue_1;        // 0x008D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_IsInExtraTime;                  // 0x008E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ExtraTimeStates                               K2Node_CustomEvent_ExtraTimeState;                 // 0x008F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMusicManager_C*                        CallFunc_GetMusicManager_MusicManager;             // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRange_ReturnValue;           // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_225C[0x4];                                     // 0x00A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EObjectTypeQuery>                      K2Node_MakeArray_Array;                            // 0x00A8(0x0010)(ConstParm, ZeroConstructor, ReferenceParm)
	bool                                          CallFunc_IsBuildShipping_ReturnValue;              // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsBuildShipping_ReturnValue_1;            // 0x00B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsBuildShipping_ReturnValue_2;            // 0x00BA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsBuildShipping_ReturnValue_3;            // 0x00BB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RandomIntegerInRange_ReturnValue;         // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 K2Node_CustomEvent_ID_6;                           // 0x00C8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class AMarinerBasePlayerController*           CallFunc_TryAndGetLocalPlayerController_ReturnValue; // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_GetControlRotation_ReturnValue;           // 0x00E0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_225D[0x4];                                     // 0x00EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_RotatorToString_ReturnValue;         // 0x00F0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetPlayerName_ReturnValue;                // 0x0100(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 K2Node_CustomEvent_ID_5;                           // 0x0110(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0128(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0138(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class APlayerState*                           CallFunc_Array_Get_Item;                           // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_225E[0x4];                                     // 0x0154(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AMarinerPlayerState*                    K2Node_DynamicCast_AsMariner_Player_State;         // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0161(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_225F[0x6];                                     // 0x0162(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AMarinerCharacter*                      CallFunc_TryAndGetControlledCharacter_ReturnValue; // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0170(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2260[0x4];                                     // 0x017C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetPlayerName_ReturnValue_1;              // 0x0180(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_VectorToString_ReturnValue;          // 0x0190(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue;            // 0x01A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2261[0x7];                                     // 0x01A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x01A8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue_1;               // 0x01B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x01C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Map_Find_Value;                           // 0x01C4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x01D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2262[0x7];                                     // 0x01D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_CustomEvent_ID_4;                           // 0x01D8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 K2Node_CustomEvent_ID_3;                           // 0x01E8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_3;              // 0x01F8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue_1;          // 0x0208(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2263[0x7];                                     // 0x0209(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_4;              // 0x0210(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_5;              // 0x0220(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class AMarinerBasePlayerController*           CallFunc_TryAndGetLocalPlayerController_ReturnValue_1; // 0x0230(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetPlayerName_ReturnValue_2;              // 0x0238(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue_2;          // 0x0248(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2264[0x3];                                     // 0x0249(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x024C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0250(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2265[0x3];                                     // 0x0251(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0254(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0258(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_2;               // 0x025C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2266[0x3];                                     // 0x025D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0260(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x0264(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_3;               // 0x0268(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0269(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2267[0x2];                                     // 0x026A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x026C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_4;               // 0x0270(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2268[0x3];                                     // 0x0271(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_2;            // 0x0274(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_2269[0x4];                                     // 0x0284(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue_1;        // 0x0288(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue_2;        // 0x0290(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue_3;        // 0x0298(0x0008)(NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_3;            // 0x02A0(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_HasAuthority_ReturnValue_5;               // 0x02B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_226A[0x7];                                     // 0x02B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue_4;        // 0x02B8(0x0008)(NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x02C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_226B[0x4];                                     // 0x02C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_CustomEvent_ID_2;                           // 0x02C8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_X;                              // 0x02D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_Y;                              // 0x02DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_Z;                              // 0x02E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_226C[0x4];                                     // 0x02E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerState*                           CallFunc_Array_Get_Item_1;                         // 0x02E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x02F0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_226D[0x4];                                     // 0x02FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AMarinerPlayerState*                    K2Node_DynamicCast_AsMariner_Player_State_1;       // 0x0300(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0308(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_226E[0x7];                                     // 0x0309(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AMarinerCharacter*                      CallFunc_TryAndGetControlledCharacter_ReturnValue_1; // 0x0310(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetPlayerName_ReturnValue_3;              // 0x0318(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetActorLocation_SweepHitResult;       // 0x0328(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorLocation_ReturnValue;          // 0x03B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue_3;          // 0x03B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAuthority_ReturnValue_6;               // 0x03B2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_226F[0x5];                                     // 0x03B3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue_2;               // 0x03B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerState*                           CallFunc_Array_Get_Item_2;                         // 0x03C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x03C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2270[0x4];                                     // 0x03CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AMarinerPlayerState*                    K2Node_DynamicCast_AsMariner_Player_State_2;       // 0x03D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x03D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x03D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2271[0x6];                                     // 0x03DA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AMarinerCharacter*                      CallFunc_TryAndGetControlledCharacter_ReturnValue_2; // 0x03E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetActorLocation_SweepHitResult_1;     // 0x03E8(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorLocation_ReturnValue_1;        // 0x0470(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2272[0x7];                                     // 0x0471(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetPlayerName_ReturnValue_4;              // 0x0478(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 K2Node_CustomEvent_ID_1;                           // 0x0488(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_Pitch_1;                        // 0x0498(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_Yaw_1;                          // 0x049C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_Roll_1;                         // 0x04A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue_4;          // 0x04A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2273[0x3];                                     // 0x04A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_CustomEvent_ID;                             // 0x04A8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_Pitch;                          // 0x04B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_Yaw;                            // 0x04BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_Roll;                           // 0x04C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2274[0x4];                                     // 0x04C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AMarinerBasePlayerController*           CallFunc_TryAndGetLocalPlayerController_ReturnValue_2; // 0x04C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x04D0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2275[0x4];                                     // 0x04DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetPlayerName_ReturnValue_5;              // 0x04E0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x04F0(0x0010)(ConstParm, ZeroConstructor, ReferenceParm)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue_5;          // 0x0500(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2276[0x7];                                     // 0x0501(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FHitResult>                     CallFunc_BoxTraceMultiForObjects_OutHits;          // 0x0508(0x0010)(ZeroConstructor, ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_BoxTraceMultiForObjects_ReturnValue;      // 0x0518(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2277[0x3];                                     // 0x0519(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_4;            // 0x051C(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(bool IsInExtraTime, ExtraTimeStates ExtraTimeState)> K2Node_CreateDelegate_OutputDelegate_5;            // 0x052C(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_2278[0x4];                                     // 0x053C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue_5;        // 0x0540(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MarinerGameState_C_ExecuteUbergraph_BP_MarinerGameState) == 0x000008, "Wrong alignment on BP_MarinerGameState_C_ExecuteUbergraph_BP_MarinerGameState");
static_assert(sizeof(BP_MarinerGameState_C_ExecuteUbergraph_BP_MarinerGameState) == 0x000548, "Wrong size on BP_MarinerGameState_C_ExecuteUbergraph_BP_MarinerGameState");
static_assert(offsetof(BP_MarinerGameState_C_ExecuteUbergraph_BP_MarinerGameState, EntryPoint) == 0x000000, "Member 'BP_MarinerGameState_C_ExecuteUbergraph_BP_MarinerGameState::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_MarinerGameState_C_ExecuteUbergraph_BP_MarinerGameState, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'BP_MarinerGameState_C_ExecuteUbergraph_BP_MarinerGameState::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_MarinerGameState_C_ExecuteUbergraph_BP_MarinerGameState, CallFunc_HasAuthority_ReturnValue) == 0x000014, "Member 'BP_MarinerGameState_C_ExecuteUbergraph_BP_MarinerGameState::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MarinerGameState_C_ExecuteUbergraph_BP_MarinerGameState, K2Node_CustomEvent_TimerLength_1) == 0x000018, "Member 'BP_MarinerGameState_C_ExecuteUbergraph_BP_MarinerGameState::K2Node_CustomEvent_TimerLength_1' has a wrong offset!");
static_assert(offsetof(BP_MarinerGameState_C_ExecuteUbergraph_BP_MarinerGameState, K2Node_CustomEvent_MaxNumberToShow) == 0x00001C, "Member 'BP_MarinerGameState_C_ExecuteUbergraph_BP_MarinerGameState::K2Node_CustomEvent_MaxNumberToShow' has a wrong offset!");
static_assert(offsetof(BP_MarinerGameState_C_ExecuteUbergraph_BP_MarinerGameState, K2Node_CustomEvent_ShouldEnable) == 0x000020, "Member 'BP_MarinerGameState_C_ExecuteUbergraph_BP_MarinerGameState::K2Node_CustomEvent_ShouldEnable' has a wrong offset!");
static_assert(offsetof(BP_MarinerGameState_C_ExecuteUbergraph_BP_MarinerGameState, K2Node_CustomEvent_PreRoundCountdownEndTimeStamp) == 0x000024, "Member 'BP_MarinerGameState_C_ExecuteUbergraph_BP_MarinerGameState::K2Node_CustomEvent_PreRoundCountdownEndTimeStamp' has a wrong offset!");
static_assert(offsetof(BP_MarinerGameState_C_ExecuteUbergraph_BP_MarinerGameState, CallFunc_Round_ReturnValue) == 0x000028, "Member 'BP_MarinerGameState_C_ExecuteUbergraph_BP_MarinerGameState::CallFunc_Round_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MarinerGameState_C_ExecuteUbergraph_BP_MarinerGameState, CallFunc_Round_ReturnValue_1) == 0x00002C, "Member 'BP_MarinerGameState_C_ExecuteUbergraph_BP_MarinerGameState::CallFunc_Round_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MarinerGameState_C_ExecuteUbergraph_BP_MarinerGameState, CallFunc_K2_GetTimerElapsedTimeHandle_ReturnValue) == 0x000030, "Member 'BP_MarinerGameState_C_ExecuteUbergraph_BP_MarinerGameState::CallFunc_K2_GetTimerElapsedTimeHandle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MarinerGameState_C_ExecuteUbergraph_BP_MarinerGameState, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000034, "Member 'BP_MarinerGameState_C_ExecuteUbergraph_BP_MarinerGameState::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MarinerGameState_C_ExecuteUbergraph_BP_MarinerGameState, Temp_int_Array_Index_Variable) == 0x000038, "Member 'BP_MarinerGameState_C_ExecuteUbergraph_BP_MarinerGameState::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_MarinerGameState_C_ExecuteUbergraph_BP_MarinerGameState, K2Node_CreateDelegate_OutputDelegate_1) == 0x00003C, "Member 'BP_MarinerGameState_C_ExecuteUbergraph_BP_MarinerGameState::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BP_MarinerGameState_C_ExecuteUbergraph_BP_MarinerGameState, CallFunc_HasAuthority_ReturnValue_1) == 0x00004C, "Member 'BP_MarinerGameState_C_ExecuteUbergraph_BP_MarinerGameState::CallFunc_HasAuthority_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MarinerGameState_C_ExecuteUbergraph_BP_MarinerGameState, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x00004D, "Member 'BP_MarinerGameState_C_ExecuteUbergraph_BP_MarinerGameState::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MarinerGameState_C_ExecuteUbergraph_BP_MarinerGameState, CallFunc_GetServerWorldTimeSeconds_ReturnValue) == 0x000050, "Member 'BP_MarinerGameState_C_ExecuteUbergraph_BP_MarinerGameState::CallFunc_GetServerWorldTimeSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MarinerGameState_C_ExecuteUbergraph_BP_MarinerGameState, CallFunc_Subtract_FloatFloat_ReturnValue_1) == 0x000054, "Member 'BP_MarinerGameState_C_ExecuteUbergraph_BP_MarinerGameState::CallFunc_Subtract_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MarinerGameState_C_ExecuteUbergraph_BP_MarinerGameState, CallFunc_Subtract_FloatFloat_ReturnValue_2) == 0x000058, "Member 'BP_MarinerGameState_C_ExecuteUbergraph_BP_MarinerGameState::CallFunc_Subtract_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_MarinerGameState_C_ExecuteUbergraph_BP_MarinerGameState, CallFunc_LessEqual_FloatFloat_ReturnValue_1) == 0x00005C, "Member 'BP_MarinerGameState_C_ExecuteUbergraph_BP_MarinerGameState::CallFunc_LessEqual_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MarinerGameState_C_ExecuteUbergraph_BP_MarinerGameState, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000060, "Member 'BP_MarinerGameState_C_ExecuteUbergraph_BP_MarinerGameState::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MarinerGameState_C_ExecuteUbergraph_BP_MarinerGameState, CallFunc_K2_GetTimerElapsedTimeHandle_ReturnValue_1) == 0x000068, "Member 'BP_MarinerGameState_C_ExecuteUbergraph_BP_MarinerGameState::CallFunc_K2_GetTimerElapsedTimeHandle_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MarinerGameState_C_ExecuteUbergraph_BP_MarinerGameState, CallFunc_Subtract_FloatFloat_ReturnValue_3) == 0x00006C, "Member 'BP_MarinerGameState_C_ExecuteUbergraph_BP_MarinerGameState::CallFunc_Subtract_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_MarinerGameState_C_ExecuteUbergraph_BP_MarinerGameState, CallFunc_Percent_FloatFloat_ReturnValue) == 0x000070, "Member 'BP_MarinerGameState_C_ExecuteUbergraph_BP_MarinerGameState::CallFunc_Percent_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MarinerGameState_C_ExecuteUbergraph_BP_MarinerGameState, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000074, "Member 'BP_MarinerGameState_C_ExecuteUbergraph_BP_MarinerGameState::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MarinerGameState_C_ExecuteUbergraph_BP_MarinerGameState, CallFunc_Round_ReturnValue_2) == 0x000078, "Member 'BP_MarinerGameState_C_ExecuteUbergraph_BP_MarinerGameState::CallFunc_Round_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_MarinerGameState_C_ExecuteUbergraph_BP_MarinerGameState, CallFunc_NearlyEqual_FloatFloat_ReturnValue) == 0x00007C, "Member 'BP_MarinerGameState_C_ExecuteUbergraph_BP_MarinerGameState::CallFunc_NearlyEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MarinerGameState_C_ExecuteUbergraph_BP_MarinerGameState, CallFunc_Greater_IntInt_ReturnValue) == 0x00007D, "Member 'BP_MarinerGameState_C_ExecuteUbergraph_BP_MarinerGameState::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MarinerGameState_C_ExecuteUbergraph_BP_MarinerGameState, K2Node_CustomEvent_IsInExtraTime_2) == 0x00007E, "Member 'BP_MarinerGameState_C_ExecuteUbergraph_BP_MarinerGameState::K2Node_CustomEvent_IsInExtraTime_2' has a wrong offset!");
static_assert(offsetof(BP_MarinerGameState_C_ExecuteUbergraph_BP_MarinerGameState, K2Node_CustomEvent_ExtraTimeState_2) == 0x00007F, "Member 'BP_MarinerGameState_C_ExecuteUbergraph_BP_MarinerGameState::K2Node_CustomEvent_ExtraTimeState_2' has a wrong offset!");
static_assert(offsetof(BP_MarinerGameState_C_ExecuteUbergraph_BP_MarinerGameState, K2Node_CustomEvent_IsInExtraTime_1) == 0x000080, "Member 'BP_MarinerGameState_C_ExecuteUbergraph_BP_MarinerGameState::K2Node_CustomEvent_IsInExtraTime_1' has a wrong offset!");
static_assert(offsetof(BP_MarinerGameState_C_ExecuteUbergraph_BP_MarinerGameState, K2Node_CustomEvent_ExtraTimeState_1) == 0x000081, "Member 'BP_MarinerGameState_C_ExecuteUbergraph_BP_MarinerGameState::K2Node_CustomEvent_ExtraTimeState_1' has a wrong offset!");
static_assert(offsetof(BP_MarinerGameState_C_ExecuteUbergraph_BP_MarinerGameState, K2Node_CustomEvent_IsEnabled) == 0x000082, "Member 'BP_MarinerGameState_C_ExecuteUbergraph_BP_MarinerGameState::K2Node_CustomEvent_IsEnabled' has a wrong offset!");
static_assert(offsetof(BP_MarinerGameState_C_ExecuteUbergraph_BP_MarinerGameState, K2Node_CustomEvent_TimerLength) == 0x000084, "Member 'BP_MarinerGameState_C_ExecuteUbergraph_BP_MarinerGameState::K2Node_CustomEvent_TimerLength' has a wrong offset!");
static_assert(offsetof(BP_MarinerGameState_C_ExecuteUbergraph_BP_MarinerGameState, Temp_int_Array_Index_Variable_1) == 0x000088, "Member 'BP_MarinerGameState_C_ExecuteUbergraph_BP_MarinerGameState::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_MarinerGameState_C_ExecuteUbergraph_BP_MarinerGameState, CallFunc_EqualEqual_NameName_ReturnValue) == 0x00008C, "Member 'BP_MarinerGameState_C_ExecuteUbergraph_BP_MarinerGameState::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MarinerGameState_C_ExecuteUbergraph_BP_MarinerGameState, CallFunc_EqualEqual_NameName_ReturnValue_1) == 0x00008D, "Member 'BP_MarinerGameState_C_ExecuteUbergraph_BP_MarinerGameState::CallFunc_EqualEqual_NameName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MarinerGameState_C_ExecuteUbergraph_BP_MarinerGameState, K2Node_CustomEvent_IsInExtraTime) == 0x00008E, "Member 'BP_MarinerGameState_C_ExecuteUbergraph_BP_MarinerGameState::K2Node_CustomEvent_IsInExtraTime' has a wrong offset!");
static_assert(offsetof(BP_MarinerGameState_C_ExecuteUbergraph_BP_MarinerGameState, K2Node_CustomEvent_ExtraTimeState) == 0x00008F, "Member 'BP_MarinerGameState_C_ExecuteUbergraph_BP_MarinerGameState::K2Node_CustomEvent_ExtraTimeState' has a wrong offset!");
static_assert(offsetof(BP_MarinerGameState_C_ExecuteUbergraph_BP_MarinerGameState, CallFunc_GetGameInstance_ReturnValue) == 0x000090, "Member 'BP_MarinerGameState_C_ExecuteUbergraph_BP_MarinerGameState::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MarinerGameState_C_ExecuteUbergraph_BP_MarinerGameState, CallFunc_GetMusicManager_MusicManager) == 0x000098, "Member 'BP_MarinerGameState_C_ExecuteUbergraph_BP_MarinerGameState::CallFunc_GetMusicManager_MusicManager' has a wrong offset!");
static_assert(offsetof(BP_MarinerGameState_C_ExecuteUbergraph_BP_MarinerGameState, CallFunc_RandomFloatInRange_ReturnValue) == 0x0000A0, "Member 'BP_MarinerGameState_C_ExecuteUbergraph_BP_MarinerGameState::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MarinerGameState_C_ExecuteUbergraph_BP_MarinerGameState, K2Node_MakeArray_Array) == 0x0000A8, "Member 'BP_MarinerGameState_C_ExecuteUbergraph_BP_MarinerGameState::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_MarinerGameState_C_ExecuteUbergraph_BP_MarinerGameState, CallFunc_IsBuildShipping_ReturnValue) == 0x0000B8, "Member 'BP_MarinerGameState_C_ExecuteUbergraph_BP_MarinerGameState::CallFunc_IsBuildShipping_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MarinerGameState_C_ExecuteUbergraph_BP_MarinerGameState, CallFunc_IsBuildShipping_ReturnValue_1) == 0x0000B9, "Member 'BP_MarinerGameState_C_ExecuteUbergraph_BP_MarinerGameState::CallFunc_IsBuildShipping_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MarinerGameState_C_ExecuteUbergraph_BP_MarinerGameState, CallFunc_IsBuildShipping_ReturnValue_2) == 0x0000BA, "Member 'BP_MarinerGameState_C_ExecuteUbergraph_BP_MarinerGameState::CallFunc_IsBuildShipping_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_MarinerGameState_C_ExecuteUbergraph_BP_MarinerGameState, CallFunc_IsBuildShipping_ReturnValue_3) == 0x0000BB, "Member 'BP_MarinerGameState_C_ExecuteUbergraph_BP_MarinerGameState::CallFunc_IsBuildShipping_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_MarinerGameState_C_ExecuteUbergraph_BP_MarinerGameState, Temp_int_Loop_Counter_Variable) == 0x0000BC, "Member 'BP_MarinerGameState_C_ExecuteUbergraph_BP_MarinerGameState::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_MarinerGameState_C_ExecuteUbergraph_BP_MarinerGameState, CallFunc_RandomIntegerInRange_ReturnValue) == 0x0000C0, "Member 'BP_MarinerGameState_C_ExecuteUbergraph_BP_MarinerGameState::CallFunc_RandomIntegerInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MarinerGameState_C_ExecuteUbergraph_BP_MarinerGameState, CallFunc_Add_IntInt_ReturnValue) == 0x0000C4, "Member 'BP_MarinerGameState_C_ExecuteUbergraph_BP_MarinerGameState::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MarinerGameState_C_ExecuteUbergraph_BP_MarinerGameState, K2Node_CustomEvent_ID_6) == 0x0000C8, "Member 'BP_MarinerGameState_C_ExecuteUbergraph_BP_MarinerGameState::K2Node_CustomEvent_ID_6' has a wrong offset!");
static_assert(offsetof(BP_MarinerGameState_C_ExecuteUbergraph_BP_MarinerGameState, CallFunc_TryAndGetLocalPlayerController_ReturnValue) == 0x0000D8, "Member 'BP_MarinerGameState_C_ExecuteUbergraph_BP_MarinerGameState::CallFunc_TryAndGetLocalPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MarinerGameState_C_ExecuteUbergraph_BP_MarinerGameState, CallFunc_GetControlRotation_ReturnValue) == 0x0000E0, "Member 'BP_MarinerGameState_C_ExecuteUbergraph_BP_MarinerGameState::CallFunc_GetControlRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MarinerGameState_C_ExecuteUbergraph_BP_MarinerGameState, CallFunc_Conv_RotatorToString_ReturnValue) == 0x0000F0, "Member 'BP_MarinerGameState_C_ExecuteUbergraph_BP_MarinerGameState::CallFunc_Conv_RotatorToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MarinerGameState_C_ExecuteUbergraph_BP_MarinerGameState, CallFunc_GetPlayerName_ReturnValue) == 0x000100, "Member 'BP_MarinerGameState_C_ExecuteUbergraph_BP_MarinerGameState::CallFunc_GetPlayerName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MarinerGameState_C_ExecuteUbergraph_BP_MarinerGameState, K2Node_CustomEvent_ID_5) == 0x000110, "Member 'BP_MarinerGameState_C_ExecuteUbergraph_BP_MarinerGameState::K2Node_CustomEvent_ID_5' has a wrong offset!");
static_assert(offsetof(BP_MarinerGameState_C_ExecuteUbergraph_BP_MarinerGameState, CallFunc_GetGameState_ReturnValue) == 0x000120, "Member 'BP_MarinerGameState_C_ExecuteUbergraph_BP_MarinerGameState::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MarinerGameState_C_ExecuteUbergraph_BP_MarinerGameState, CallFunc_Concat_StrStr_ReturnValue) == 0x000128, "Member 'BP_MarinerGameState_C_ExecuteUbergraph_BP_MarinerGameState::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MarinerGameState_C_ExecuteUbergraph_BP_MarinerGameState, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000138, "Member 'BP_MarinerGameState_C_ExecuteUbergraph_BP_MarinerGameState::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MarinerGameState_C_ExecuteUbergraph_BP_MarinerGameState, CallFunc_Array_Get_Item) == 0x000148, "Member 'BP_MarinerGameState_C_ExecuteUbergraph_BP_MarinerGameState::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_MarinerGameState_C_ExecuteUbergraph_BP_MarinerGameState, CallFunc_Array_Length_ReturnValue) == 0x000150, "Member 'BP_MarinerGameState_C_ExecuteUbergraph_BP_MarinerGameState::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MarinerGameState_C_ExecuteUbergraph_BP_MarinerGameState, K2Node_DynamicCast_AsMariner_Player_State) == 0x000158, "Member 'BP_MarinerGameState_C_ExecuteUbergraph_BP_MarinerGameState::K2Node_DynamicCast_AsMariner_Player_State' has a wrong offset!");
static_assert(offsetof(BP_MarinerGameState_C_ExecuteUbergraph_BP_MarinerGameState, K2Node_DynamicCast_bSuccess) == 0x000160, "Member 'BP_MarinerGameState_C_ExecuteUbergraph_BP_MarinerGameState::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_MarinerGameState_C_ExecuteUbergraph_BP_MarinerGameState, CallFunc_Less_IntInt_ReturnValue) == 0x000161, "Member 'BP_MarinerGameState_C_ExecuteUbergraph_BP_MarinerGameState::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MarinerGameState_C_ExecuteUbergraph_BP_MarinerGameState, CallFunc_TryAndGetControlledCharacter_ReturnValue) == 0x000168, "Member 'BP_MarinerGameState_C_ExecuteUbergraph_BP_MarinerGameState::CallFunc_TryAndGetControlledCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MarinerGameState_C_ExecuteUbergraph_BP_MarinerGameState, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000170, "Member 'BP_MarinerGameState_C_ExecuteUbergraph_BP_MarinerGameState::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MarinerGameState_C_ExecuteUbergraph_BP_MarinerGameState, CallFunc_GetPlayerName_ReturnValue_1) == 0x000180, "Member 'BP_MarinerGameState_C_ExecuteUbergraph_BP_MarinerGameState::CallFunc_GetPlayerName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MarinerGameState_C_ExecuteUbergraph_BP_MarinerGameState, CallFunc_Conv_VectorToString_ReturnValue) == 0x000190, "Member 'BP_MarinerGameState_C_ExecuteUbergraph_BP_MarinerGameState::CallFunc_Conv_VectorToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MarinerGameState_C_ExecuteUbergraph_BP_MarinerGameState, CallFunc_EqualEqual_StrStr_ReturnValue) == 0x0001A0, "Member 'BP_MarinerGameState_C_ExecuteUbergraph_BP_MarinerGameState::CallFunc_EqualEqual_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MarinerGameState_C_ExecuteUbergraph_BP_MarinerGameState, CallFunc_Concat_StrStr_ReturnValue_2) == 0x0001A8, "Member 'BP_MarinerGameState_C_ExecuteUbergraph_BP_MarinerGameState::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_MarinerGameState_C_ExecuteUbergraph_BP_MarinerGameState, CallFunc_GetGameState_ReturnValue_1) == 0x0001B8, "Member 'BP_MarinerGameState_C_ExecuteUbergraph_BP_MarinerGameState::CallFunc_GetGameState_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MarinerGameState_C_ExecuteUbergraph_BP_MarinerGameState, CallFunc_Array_Length_ReturnValue_1) == 0x0001C0, "Member 'BP_MarinerGameState_C_ExecuteUbergraph_BP_MarinerGameState::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MarinerGameState_C_ExecuteUbergraph_BP_MarinerGameState, CallFunc_Map_Find_Value) == 0x0001C4, "Member 'BP_MarinerGameState_C_ExecuteUbergraph_BP_MarinerGameState::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_MarinerGameState_C_ExecuteUbergraph_BP_MarinerGameState, CallFunc_Map_Find_ReturnValue) == 0x0001D0, "Member 'BP_MarinerGameState_C_ExecuteUbergraph_BP_MarinerGameState::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MarinerGameState_C_ExecuteUbergraph_BP_MarinerGameState, K2Node_CustomEvent_ID_4) == 0x0001D8, "Member 'BP_MarinerGameState_C_ExecuteUbergraph_BP_MarinerGameState::K2Node_CustomEvent_ID_4' has a wrong offset!");
static_assert(offsetof(BP_MarinerGameState_C_ExecuteUbergraph_BP_MarinerGameState, K2Node_CustomEvent_ID_3) == 0x0001E8, "Member 'BP_MarinerGameState_C_ExecuteUbergraph_BP_MarinerGameState::K2Node_CustomEvent_ID_3' has a wrong offset!");
static_assert(offsetof(BP_MarinerGameState_C_ExecuteUbergraph_BP_MarinerGameState, CallFunc_Concat_StrStr_ReturnValue_3) == 0x0001F8, "Member 'BP_MarinerGameState_C_ExecuteUbergraph_BP_MarinerGameState::CallFunc_Concat_StrStr_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_MarinerGameState_C_ExecuteUbergraph_BP_MarinerGameState, CallFunc_EqualEqual_StrStr_ReturnValue_1) == 0x000208, "Member 'BP_MarinerGameState_C_ExecuteUbergraph_BP_MarinerGameState::CallFunc_EqualEqual_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MarinerGameState_C_ExecuteUbergraph_BP_MarinerGameState, CallFunc_Concat_StrStr_ReturnValue_4) == 0x000210, "Member 'BP_MarinerGameState_C_ExecuteUbergraph_BP_MarinerGameState::CallFunc_Concat_StrStr_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_MarinerGameState_C_ExecuteUbergraph_BP_MarinerGameState, CallFunc_Concat_StrStr_ReturnValue_5) == 0x000220, "Member 'BP_MarinerGameState_C_ExecuteUbergraph_BP_MarinerGameState::CallFunc_Concat_StrStr_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_MarinerGameState_C_ExecuteUbergraph_BP_MarinerGameState, CallFunc_TryAndGetLocalPlayerController_ReturnValue_1) == 0x000230, "Member 'BP_MarinerGameState_C_ExecuteUbergraph_BP_MarinerGameState::CallFunc_TryAndGetLocalPlayerController_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MarinerGameState_C_ExecuteUbergraph_BP_MarinerGameState, CallFunc_GetPlayerName_ReturnValue_2) == 0x000238, "Member 'BP_MarinerGameState_C_ExecuteUbergraph_BP_MarinerGameState::CallFunc_GetPlayerName_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_MarinerGameState_C_ExecuteUbergraph_BP_MarinerGameState, CallFunc_EqualEqual_StrStr_ReturnValue_2) == 0x000248, "Member 'BP_MarinerGameState_C_ExecuteUbergraph_BP_MarinerGameState::CallFunc_EqualEqual_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_MarinerGameState_C_ExecuteUbergraph_BP_MarinerGameState, Temp_int_Variable) == 0x00024C, "Member 'BP_MarinerGameState_C_ExecuteUbergraph_BP_MarinerGameState::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_MarinerGameState_C_ExecuteUbergraph_BP_MarinerGameState, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000250, "Member 'BP_MarinerGameState_C_ExecuteUbergraph_BP_MarinerGameState::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MarinerGameState_C_ExecuteUbergraph_BP_MarinerGameState, CallFunc_Add_IntInt_ReturnValue_1) == 0x000254, "Member 'BP_MarinerGameState_C_ExecuteUbergraph_BP_MarinerGameState::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MarinerGameState_C_ExecuteUbergraph_BP_MarinerGameState, Temp_int_Loop_Counter_Variable_1) == 0x000258, "Member 'BP_MarinerGameState_C_ExecuteUbergraph_BP_MarinerGameState::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_MarinerGameState_C_ExecuteUbergraph_BP_MarinerGameState, CallFunc_HasAuthority_ReturnValue_2) == 0x00025C, "Member 'BP_MarinerGameState_C_ExecuteUbergraph_BP_MarinerGameState::CallFunc_HasAuthority_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_MarinerGameState_C_ExecuteUbergraph_BP_MarinerGameState, CallFunc_Add_IntInt_ReturnValue_2) == 0x000260, "Member 'BP_MarinerGameState_C_ExecuteUbergraph_BP_MarinerGameState::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_MarinerGameState_C_ExecuteUbergraph_BP_MarinerGameState, Temp_int_Loop_Counter_Variable_2) == 0x000264, "Member 'BP_MarinerGameState_C_ExecuteUbergraph_BP_MarinerGameState::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_MarinerGameState_C_ExecuteUbergraph_BP_MarinerGameState, CallFunc_HasAuthority_ReturnValue_3) == 0x000268, "Member 'BP_MarinerGameState_C_ExecuteUbergraph_BP_MarinerGameState::CallFunc_HasAuthority_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_MarinerGameState_C_ExecuteUbergraph_BP_MarinerGameState, CallFunc_Less_IntInt_ReturnValue_1) == 0x000269, "Member 'BP_MarinerGameState_C_ExecuteUbergraph_BP_MarinerGameState::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MarinerGameState_C_ExecuteUbergraph_BP_MarinerGameState, CallFunc_Add_IntInt_ReturnValue_3) == 0x00026C, "Member 'BP_MarinerGameState_C_ExecuteUbergraph_BP_MarinerGameState::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_MarinerGameState_C_ExecuteUbergraph_BP_MarinerGameState, CallFunc_HasAuthority_ReturnValue_4) == 0x000270, "Member 'BP_MarinerGameState_C_ExecuteUbergraph_BP_MarinerGameState::CallFunc_HasAuthority_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_MarinerGameState_C_ExecuteUbergraph_BP_MarinerGameState, K2Node_CreateDelegate_OutputDelegate_2) == 0x000274, "Member 'BP_MarinerGameState_C_ExecuteUbergraph_BP_MarinerGameState::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(BP_MarinerGameState_C_ExecuteUbergraph_BP_MarinerGameState, CallFunc_K2_SetTimerDelegate_ReturnValue_1) == 0x000288, "Member 'BP_MarinerGameState_C_ExecuteUbergraph_BP_MarinerGameState::CallFunc_K2_SetTimerDelegate_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MarinerGameState_C_ExecuteUbergraph_BP_MarinerGameState, CallFunc_K2_SetTimerDelegate_ReturnValue_2) == 0x000290, "Member 'BP_MarinerGameState_C_ExecuteUbergraph_BP_MarinerGameState::CallFunc_K2_SetTimerDelegate_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_MarinerGameState_C_ExecuteUbergraph_BP_MarinerGameState, CallFunc_K2_SetTimerDelegate_ReturnValue_3) == 0x000298, "Member 'BP_MarinerGameState_C_ExecuteUbergraph_BP_MarinerGameState::CallFunc_K2_SetTimerDelegate_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_MarinerGameState_C_ExecuteUbergraph_BP_MarinerGameState, K2Node_CreateDelegate_OutputDelegate_3) == 0x0002A0, "Member 'BP_MarinerGameState_C_ExecuteUbergraph_BP_MarinerGameState::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(BP_MarinerGameState_C_ExecuteUbergraph_BP_MarinerGameState, CallFunc_HasAuthority_ReturnValue_5) == 0x0002B0, "Member 'BP_MarinerGameState_C_ExecuteUbergraph_BP_MarinerGameState::CallFunc_HasAuthority_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_MarinerGameState_C_ExecuteUbergraph_BP_MarinerGameState, CallFunc_K2_SetTimerDelegate_ReturnValue_4) == 0x0002B8, "Member 'BP_MarinerGameState_C_ExecuteUbergraph_BP_MarinerGameState::CallFunc_K2_SetTimerDelegate_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_MarinerGameState_C_ExecuteUbergraph_BP_MarinerGameState, Temp_int_Array_Index_Variable_2) == 0x0002C0, "Member 'BP_MarinerGameState_C_ExecuteUbergraph_BP_MarinerGameState::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_MarinerGameState_C_ExecuteUbergraph_BP_MarinerGameState, K2Node_CustomEvent_ID_2) == 0x0002C8, "Member 'BP_MarinerGameState_C_ExecuteUbergraph_BP_MarinerGameState::K2Node_CustomEvent_ID_2' has a wrong offset!");
static_assert(offsetof(BP_MarinerGameState_C_ExecuteUbergraph_BP_MarinerGameState, K2Node_CustomEvent_X) == 0x0002D8, "Member 'BP_MarinerGameState_C_ExecuteUbergraph_BP_MarinerGameState::K2Node_CustomEvent_X' has a wrong offset!");
static_assert(offsetof(BP_MarinerGameState_C_ExecuteUbergraph_BP_MarinerGameState, K2Node_CustomEvent_Y) == 0x0002DC, "Member 'BP_MarinerGameState_C_ExecuteUbergraph_BP_MarinerGameState::K2Node_CustomEvent_Y' has a wrong offset!");
static_assert(offsetof(BP_MarinerGameState_C_ExecuteUbergraph_BP_MarinerGameState, K2Node_CustomEvent_Z) == 0x0002E0, "Member 'BP_MarinerGameState_C_ExecuteUbergraph_BP_MarinerGameState::K2Node_CustomEvent_Z' has a wrong offset!");
static_assert(offsetof(BP_MarinerGameState_C_ExecuteUbergraph_BP_MarinerGameState, CallFunc_Array_Get_Item_1) == 0x0002E8, "Member 'BP_MarinerGameState_C_ExecuteUbergraph_BP_MarinerGameState::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_MarinerGameState_C_ExecuteUbergraph_BP_MarinerGameState, CallFunc_MakeVector_ReturnValue) == 0x0002F0, "Member 'BP_MarinerGameState_C_ExecuteUbergraph_BP_MarinerGameState::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MarinerGameState_C_ExecuteUbergraph_BP_MarinerGameState, K2Node_DynamicCast_AsMariner_Player_State_1) == 0x000300, "Member 'BP_MarinerGameState_C_ExecuteUbergraph_BP_MarinerGameState::K2Node_DynamicCast_AsMariner_Player_State_1' has a wrong offset!");
static_assert(offsetof(BP_MarinerGameState_C_ExecuteUbergraph_BP_MarinerGameState, K2Node_DynamicCast_bSuccess_1) == 0x000308, "Member 'BP_MarinerGameState_C_ExecuteUbergraph_BP_MarinerGameState::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_MarinerGameState_C_ExecuteUbergraph_BP_MarinerGameState, CallFunc_TryAndGetControlledCharacter_ReturnValue_1) == 0x000310, "Member 'BP_MarinerGameState_C_ExecuteUbergraph_BP_MarinerGameState::CallFunc_TryAndGetControlledCharacter_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MarinerGameState_C_ExecuteUbergraph_BP_MarinerGameState, CallFunc_GetPlayerName_ReturnValue_3) == 0x000318, "Member 'BP_MarinerGameState_C_ExecuteUbergraph_BP_MarinerGameState::CallFunc_GetPlayerName_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_MarinerGameState_C_ExecuteUbergraph_BP_MarinerGameState, CallFunc_K2_SetActorLocation_SweepHitResult) == 0x000328, "Member 'BP_MarinerGameState_C_ExecuteUbergraph_BP_MarinerGameState::CallFunc_K2_SetActorLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_MarinerGameState_C_ExecuteUbergraph_BP_MarinerGameState, CallFunc_K2_SetActorLocation_ReturnValue) == 0x0003B0, "Member 'BP_MarinerGameState_C_ExecuteUbergraph_BP_MarinerGameState::CallFunc_K2_SetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MarinerGameState_C_ExecuteUbergraph_BP_MarinerGameState, CallFunc_EqualEqual_StrStr_ReturnValue_3) == 0x0003B1, "Member 'BP_MarinerGameState_C_ExecuteUbergraph_BP_MarinerGameState::CallFunc_EqualEqual_StrStr_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_MarinerGameState_C_ExecuteUbergraph_BP_MarinerGameState, CallFunc_HasAuthority_ReturnValue_6) == 0x0003B2, "Member 'BP_MarinerGameState_C_ExecuteUbergraph_BP_MarinerGameState::CallFunc_HasAuthority_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_MarinerGameState_C_ExecuteUbergraph_BP_MarinerGameState, CallFunc_GetGameState_ReturnValue_2) == 0x0003B8, "Member 'BP_MarinerGameState_C_ExecuteUbergraph_BP_MarinerGameState::CallFunc_GetGameState_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_MarinerGameState_C_ExecuteUbergraph_BP_MarinerGameState, CallFunc_Array_Get_Item_2) == 0x0003C0, "Member 'BP_MarinerGameState_C_ExecuteUbergraph_BP_MarinerGameState::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BP_MarinerGameState_C_ExecuteUbergraph_BP_MarinerGameState, CallFunc_Array_Length_ReturnValue_2) == 0x0003C8, "Member 'BP_MarinerGameState_C_ExecuteUbergraph_BP_MarinerGameState::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_MarinerGameState_C_ExecuteUbergraph_BP_MarinerGameState, K2Node_DynamicCast_AsMariner_Player_State_2) == 0x0003D0, "Member 'BP_MarinerGameState_C_ExecuteUbergraph_BP_MarinerGameState::K2Node_DynamicCast_AsMariner_Player_State_2' has a wrong offset!");
static_assert(offsetof(BP_MarinerGameState_C_ExecuteUbergraph_BP_MarinerGameState, K2Node_DynamicCast_bSuccess_2) == 0x0003D8, "Member 'BP_MarinerGameState_C_ExecuteUbergraph_BP_MarinerGameState::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_MarinerGameState_C_ExecuteUbergraph_BP_MarinerGameState, CallFunc_Less_IntInt_ReturnValue_2) == 0x0003D9, "Member 'BP_MarinerGameState_C_ExecuteUbergraph_BP_MarinerGameState::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_MarinerGameState_C_ExecuteUbergraph_BP_MarinerGameState, CallFunc_TryAndGetControlledCharacter_ReturnValue_2) == 0x0003E0, "Member 'BP_MarinerGameState_C_ExecuteUbergraph_BP_MarinerGameState::CallFunc_TryAndGetControlledCharacter_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_MarinerGameState_C_ExecuteUbergraph_BP_MarinerGameState, CallFunc_K2_SetActorLocation_SweepHitResult_1) == 0x0003E8, "Member 'BP_MarinerGameState_C_ExecuteUbergraph_BP_MarinerGameState::CallFunc_K2_SetActorLocation_SweepHitResult_1' has a wrong offset!");
static_assert(offsetof(BP_MarinerGameState_C_ExecuteUbergraph_BP_MarinerGameState, CallFunc_K2_SetActorLocation_ReturnValue_1) == 0x000470, "Member 'BP_MarinerGameState_C_ExecuteUbergraph_BP_MarinerGameState::CallFunc_K2_SetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MarinerGameState_C_ExecuteUbergraph_BP_MarinerGameState, CallFunc_GetPlayerName_ReturnValue_4) == 0x000478, "Member 'BP_MarinerGameState_C_ExecuteUbergraph_BP_MarinerGameState::CallFunc_GetPlayerName_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_MarinerGameState_C_ExecuteUbergraph_BP_MarinerGameState, K2Node_CustomEvent_ID_1) == 0x000488, "Member 'BP_MarinerGameState_C_ExecuteUbergraph_BP_MarinerGameState::K2Node_CustomEvent_ID_1' has a wrong offset!");
static_assert(offsetof(BP_MarinerGameState_C_ExecuteUbergraph_BP_MarinerGameState, K2Node_CustomEvent_Pitch_1) == 0x000498, "Member 'BP_MarinerGameState_C_ExecuteUbergraph_BP_MarinerGameState::K2Node_CustomEvent_Pitch_1' has a wrong offset!");
static_assert(offsetof(BP_MarinerGameState_C_ExecuteUbergraph_BP_MarinerGameState, K2Node_CustomEvent_Yaw_1) == 0x00049C, "Member 'BP_MarinerGameState_C_ExecuteUbergraph_BP_MarinerGameState::K2Node_CustomEvent_Yaw_1' has a wrong offset!");
static_assert(offsetof(BP_MarinerGameState_C_ExecuteUbergraph_BP_MarinerGameState, K2Node_CustomEvent_Roll_1) == 0x0004A0, "Member 'BP_MarinerGameState_C_ExecuteUbergraph_BP_MarinerGameState::K2Node_CustomEvent_Roll_1' has a wrong offset!");
static_assert(offsetof(BP_MarinerGameState_C_ExecuteUbergraph_BP_MarinerGameState, CallFunc_EqualEqual_StrStr_ReturnValue_4) == 0x0004A4, "Member 'BP_MarinerGameState_C_ExecuteUbergraph_BP_MarinerGameState::CallFunc_EqualEqual_StrStr_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_MarinerGameState_C_ExecuteUbergraph_BP_MarinerGameState, K2Node_CustomEvent_ID) == 0x0004A8, "Member 'BP_MarinerGameState_C_ExecuteUbergraph_BP_MarinerGameState::K2Node_CustomEvent_ID' has a wrong offset!");
static_assert(offsetof(BP_MarinerGameState_C_ExecuteUbergraph_BP_MarinerGameState, K2Node_CustomEvent_Pitch) == 0x0004B8, "Member 'BP_MarinerGameState_C_ExecuteUbergraph_BP_MarinerGameState::K2Node_CustomEvent_Pitch' has a wrong offset!");
static_assert(offsetof(BP_MarinerGameState_C_ExecuteUbergraph_BP_MarinerGameState, K2Node_CustomEvent_Yaw) == 0x0004BC, "Member 'BP_MarinerGameState_C_ExecuteUbergraph_BP_MarinerGameState::K2Node_CustomEvent_Yaw' has a wrong offset!");
static_assert(offsetof(BP_MarinerGameState_C_ExecuteUbergraph_BP_MarinerGameState, K2Node_CustomEvent_Roll) == 0x0004C0, "Member 'BP_MarinerGameState_C_ExecuteUbergraph_BP_MarinerGameState::K2Node_CustomEvent_Roll' has a wrong offset!");
static_assert(offsetof(BP_MarinerGameState_C_ExecuteUbergraph_BP_MarinerGameState, CallFunc_TryAndGetLocalPlayerController_ReturnValue_2) == 0x0004C8, "Member 'BP_MarinerGameState_C_ExecuteUbergraph_BP_MarinerGameState::CallFunc_TryAndGetLocalPlayerController_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_MarinerGameState_C_ExecuteUbergraph_BP_MarinerGameState, CallFunc_MakeRotator_ReturnValue) == 0x0004D0, "Member 'BP_MarinerGameState_C_ExecuteUbergraph_BP_MarinerGameState::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MarinerGameState_C_ExecuteUbergraph_BP_MarinerGameState, CallFunc_GetPlayerName_ReturnValue_5) == 0x0004E0, "Member 'BP_MarinerGameState_C_ExecuteUbergraph_BP_MarinerGameState::CallFunc_GetPlayerName_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_MarinerGameState_C_ExecuteUbergraph_BP_MarinerGameState, Temp_object_Variable) == 0x0004F0, "Member 'BP_MarinerGameState_C_ExecuteUbergraph_BP_MarinerGameState::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_MarinerGameState_C_ExecuteUbergraph_BP_MarinerGameState, CallFunc_EqualEqual_StrStr_ReturnValue_5) == 0x000500, "Member 'BP_MarinerGameState_C_ExecuteUbergraph_BP_MarinerGameState::CallFunc_EqualEqual_StrStr_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_MarinerGameState_C_ExecuteUbergraph_BP_MarinerGameState, CallFunc_BoxTraceMultiForObjects_OutHits) == 0x000508, "Member 'BP_MarinerGameState_C_ExecuteUbergraph_BP_MarinerGameState::CallFunc_BoxTraceMultiForObjects_OutHits' has a wrong offset!");
static_assert(offsetof(BP_MarinerGameState_C_ExecuteUbergraph_BP_MarinerGameState, CallFunc_BoxTraceMultiForObjects_ReturnValue) == 0x000518, "Member 'BP_MarinerGameState_C_ExecuteUbergraph_BP_MarinerGameState::CallFunc_BoxTraceMultiForObjects_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MarinerGameState_C_ExecuteUbergraph_BP_MarinerGameState, K2Node_CreateDelegate_OutputDelegate_4) == 0x00051C, "Member 'BP_MarinerGameState_C_ExecuteUbergraph_BP_MarinerGameState::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(BP_MarinerGameState_C_ExecuteUbergraph_BP_MarinerGameState, K2Node_CreateDelegate_OutputDelegate_5) == 0x00052C, "Member 'BP_MarinerGameState_C_ExecuteUbergraph_BP_MarinerGameState::K2Node_CreateDelegate_OutputDelegate_5' has a wrong offset!");
static_assert(offsetof(BP_MarinerGameState_C_ExecuteUbergraph_BP_MarinerGameState, CallFunc_K2_SetTimerDelegate_ReturnValue_5) == 0x000540, "Member 'BP_MarinerGameState_C_ExecuteUbergraph_BP_MarinerGameState::CallFunc_K2_SetTimerDelegate_ReturnValue_5' has a wrong offset!");

// Function BP_MarinerGameState.BP_MarinerGameState_C.DebugSetActorRotationOnClientWithRotator
// 0x0020 (0x0020 - 0x0000)
struct BP_MarinerGameState_C_DebugSetActorRotationOnClientWithRotator final
{
public:
	class FString                                 ID;                                                // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	float                                         Pitch;                                             // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Yaw;                                               // 0x0014(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Roll;                                              // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MarinerGameState_C_DebugSetActorRotationOnClientWithRotator) == 0x000008, "Wrong alignment on BP_MarinerGameState_C_DebugSetActorRotationOnClientWithRotator");
static_assert(sizeof(BP_MarinerGameState_C_DebugSetActorRotationOnClientWithRotator) == 0x000020, "Wrong size on BP_MarinerGameState_C_DebugSetActorRotationOnClientWithRotator");
static_assert(offsetof(BP_MarinerGameState_C_DebugSetActorRotationOnClientWithRotator, ID) == 0x000000, "Member 'BP_MarinerGameState_C_DebugSetActorRotationOnClientWithRotator::ID' has a wrong offset!");
static_assert(offsetof(BP_MarinerGameState_C_DebugSetActorRotationOnClientWithRotator, Pitch) == 0x000010, "Member 'BP_MarinerGameState_C_DebugSetActorRotationOnClientWithRotator::Pitch' has a wrong offset!");
static_assert(offsetof(BP_MarinerGameState_C_DebugSetActorRotationOnClientWithRotator, Yaw) == 0x000014, "Member 'BP_MarinerGameState_C_DebugSetActorRotationOnClientWithRotator::Yaw' has a wrong offset!");
static_assert(offsetof(BP_MarinerGameState_C_DebugSetActorRotationOnClientWithRotator, Roll) == 0x000018, "Member 'BP_MarinerGameState_C_DebugSetActorRotationOnClientWithRotator::Roll' has a wrong offset!");

// Function BP_MarinerGameState.BP_MarinerGameState_C.DebugSetActorRotation
// 0x0020 (0x0020 - 0x0000)
struct BP_MarinerGameState_C_DebugSetActorRotation final
{
public:
	class FString                                 ID;                                                // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	float                                         Pitch;                                             // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Yaw;                                               // 0x0014(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Roll;                                              // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MarinerGameState_C_DebugSetActorRotation) == 0x000008, "Wrong alignment on BP_MarinerGameState_C_DebugSetActorRotation");
static_assert(sizeof(BP_MarinerGameState_C_DebugSetActorRotation) == 0x000020, "Wrong size on BP_MarinerGameState_C_DebugSetActorRotation");
static_assert(offsetof(BP_MarinerGameState_C_DebugSetActorRotation, ID) == 0x000000, "Member 'BP_MarinerGameState_C_DebugSetActorRotation::ID' has a wrong offset!");
static_assert(offsetof(BP_MarinerGameState_C_DebugSetActorRotation, Pitch) == 0x000010, "Member 'BP_MarinerGameState_C_DebugSetActorRotation::Pitch' has a wrong offset!");
static_assert(offsetof(BP_MarinerGameState_C_DebugSetActorRotation, Yaw) == 0x000014, "Member 'BP_MarinerGameState_C_DebugSetActorRotation::Yaw' has a wrong offset!");
static_assert(offsetof(BP_MarinerGameState_C_DebugSetActorRotation, Roll) == 0x000018, "Member 'BP_MarinerGameState_C_DebugSetActorRotation::Roll' has a wrong offset!");

// Function BP_MarinerGameState.BP_MarinerGameState_C.DebugSetActorLocation
// 0x0020 (0x0020 - 0x0000)
struct BP_MarinerGameState_C_DebugSetActorLocation final
{
public:
	class FString                                 ID;                                                // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	float                                         X;                                                 // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Y;                                                 // 0x0014(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Z;                                                 // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MarinerGameState_C_DebugSetActorLocation) == 0x000008, "Wrong alignment on BP_MarinerGameState_C_DebugSetActorLocation");
static_assert(sizeof(BP_MarinerGameState_C_DebugSetActorLocation) == 0x000020, "Wrong size on BP_MarinerGameState_C_DebugSetActorLocation");
static_assert(offsetof(BP_MarinerGameState_C_DebugSetActorLocation, ID) == 0x000000, "Member 'BP_MarinerGameState_C_DebugSetActorLocation::ID' has a wrong offset!");
static_assert(offsetof(BP_MarinerGameState_C_DebugSetActorLocation, X) == 0x000010, "Member 'BP_MarinerGameState_C_DebugSetActorLocation::X' has a wrong offset!");
static_assert(offsetof(BP_MarinerGameState_C_DebugSetActorLocation, Y) == 0x000014, "Member 'BP_MarinerGameState_C_DebugSetActorLocation::Y' has a wrong offset!");
static_assert(offsetof(BP_MarinerGameState_C_DebugSetActorLocation, Z) == 0x000018, "Member 'BP_MarinerGameState_C_DebugSetActorLocation::Z' has a wrong offset!");

// Function BP_MarinerGameState.BP_MarinerGameState_C.DebugSetActorRotationOnClient
// 0x0010 (0x0010 - 0x0000)
struct BP_MarinerGameState_C_DebugSetActorRotationOnClient final
{
public:
	class FString                                 ID;                                                // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MarinerGameState_C_DebugSetActorRotationOnClient) == 0x000008, "Wrong alignment on BP_MarinerGameState_C_DebugSetActorRotationOnClient");
static_assert(sizeof(BP_MarinerGameState_C_DebugSetActorRotationOnClient) == 0x000010, "Wrong size on BP_MarinerGameState_C_DebugSetActorRotationOnClient");
static_assert(offsetof(BP_MarinerGameState_C_DebugSetActorRotationOnClient, ID) == 0x000000, "Member 'BP_MarinerGameState_C_DebugSetActorRotationOnClient::ID' has a wrong offset!");

// Function BP_MarinerGameState.BP_MarinerGameState_C.DebugSaveClientControlRotation
// 0x0010 (0x0010 - 0x0000)
struct BP_MarinerGameState_C_DebugSaveClientControlRotation final
{
public:
	class FString                                 ID;                                                // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MarinerGameState_C_DebugSaveClientControlRotation) == 0x000008, "Wrong alignment on BP_MarinerGameState_C_DebugSaveClientControlRotation");
static_assert(sizeof(BP_MarinerGameState_C_DebugSaveClientControlRotation) == 0x000010, "Wrong size on BP_MarinerGameState_C_DebugSaveClientControlRotation");
static_assert(offsetof(BP_MarinerGameState_C_DebugSaveClientControlRotation, ID) == 0x000000, "Member 'BP_MarinerGameState_C_DebugSaveClientControlRotation::ID' has a wrong offset!");

// Function BP_MarinerGameState.BP_MarinerGameState_C.DebugSaveActorLocation
// 0x0010 (0x0010 - 0x0000)
struct BP_MarinerGameState_C_DebugSaveActorLocation final
{
public:
	class FString                                 ID;                                                // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MarinerGameState_C_DebugSaveActorLocation) == 0x000008, "Wrong alignment on BP_MarinerGameState_C_DebugSaveActorLocation");
static_assert(sizeof(BP_MarinerGameState_C_DebugSaveActorLocation) == 0x000010, "Wrong size on BP_MarinerGameState_C_DebugSaveActorLocation");
static_assert(offsetof(BP_MarinerGameState_C_DebugSaveActorLocation, ID) == 0x000000, "Member 'BP_MarinerGameState_C_DebugSaveActorLocation::ID' has a wrong offset!");

// Function BP_MarinerGameState.BP_MarinerGameState_C.DebugMoveActorToSavedLocation
// 0x0010 (0x0010 - 0x0000)
struct BP_MarinerGameState_C_DebugMoveActorToSavedLocation final
{
public:
	class FString                                 ID;                                                // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MarinerGameState_C_DebugMoveActorToSavedLocation) == 0x000008, "Wrong alignment on BP_MarinerGameState_C_DebugMoveActorToSavedLocation");
static_assert(sizeof(BP_MarinerGameState_C_DebugMoveActorToSavedLocation) == 0x000010, "Wrong size on BP_MarinerGameState_C_DebugMoveActorToSavedLocation");
static_assert(offsetof(BP_MarinerGameState_C_DebugMoveActorToSavedLocation, ID) == 0x000000, "Member 'BP_MarinerGameState_C_DebugMoveActorToSavedLocation::ID' has a wrong offset!");

// Function BP_MarinerGameState.BP_MarinerGameState_C.OnExtraTimeChange_Event
// 0x0002 (0x0002 - 0x0000)
struct BP_MarinerGameState_C_OnExtraTimeChange_Event final
{
public:
	bool                                          Param_IsInExtraTime;                               // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	ExtraTimeStates                               Param_ExtraTimeState;                              // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MarinerGameState_C_OnExtraTimeChange_Event) == 0x000001, "Wrong alignment on BP_MarinerGameState_C_OnExtraTimeChange_Event");
static_assert(sizeof(BP_MarinerGameState_C_OnExtraTimeChange_Event) == 0x000002, "Wrong size on BP_MarinerGameState_C_OnExtraTimeChange_Event");
static_assert(offsetof(BP_MarinerGameState_C_OnExtraTimeChange_Event, Param_IsInExtraTime) == 0x000000, "Member 'BP_MarinerGameState_C_OnExtraTimeChange_Event::Param_IsInExtraTime' has a wrong offset!");
static_assert(offsetof(BP_MarinerGameState_C_OnExtraTimeChange_Event, Param_ExtraTimeState) == 0x000001, "Member 'BP_MarinerGameState_C_OnExtraTimeChange_Event::Param_ExtraTimeState' has a wrong offset!");

// Function BP_MarinerGameState.BP_MarinerGameState_C.MulticastEnableExtraTimeTimer
// 0x0008 (0x0008 - 0x0000)
struct BP_MarinerGameState_C_MulticastEnableExtraTimeTimer final
{
public:
	bool                                          IsEnabled;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2279[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         TimerLength;                                       // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MarinerGameState_C_MulticastEnableExtraTimeTimer) == 0x000004, "Wrong alignment on BP_MarinerGameState_C_MulticastEnableExtraTimeTimer");
static_assert(sizeof(BP_MarinerGameState_C_MulticastEnableExtraTimeTimer) == 0x000008, "Wrong size on BP_MarinerGameState_C_MulticastEnableExtraTimeTimer");
static_assert(offsetof(BP_MarinerGameState_C_MulticastEnableExtraTimeTimer, IsEnabled) == 0x000000, "Member 'BP_MarinerGameState_C_MulticastEnableExtraTimeTimer::IsEnabled' has a wrong offset!");
static_assert(offsetof(BP_MarinerGameState_C_MulticastEnableExtraTimeTimer, TimerLength) == 0x000004, "Member 'BP_MarinerGameState_C_MulticastEnableExtraTimeTimer::TimerLength' has a wrong offset!");

// Function BP_MarinerGameState.BP_MarinerGameState_C.MulticastSetExtraTime
// 0x0002 (0x0002 - 0x0000)
struct BP_MarinerGameState_C_MulticastSetExtraTime final
{
public:
	bool                                          Param_IsInExtraTime;                               // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	ExtraTimeStates                               Param_ExtraTimeState;                              // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MarinerGameState_C_MulticastSetExtraTime) == 0x000001, "Wrong alignment on BP_MarinerGameState_C_MulticastSetExtraTime");
static_assert(sizeof(BP_MarinerGameState_C_MulticastSetExtraTime) == 0x000002, "Wrong size on BP_MarinerGameState_C_MulticastSetExtraTime");
static_assert(offsetof(BP_MarinerGameState_C_MulticastSetExtraTime, Param_IsInExtraTime) == 0x000000, "Member 'BP_MarinerGameState_C_MulticastSetExtraTime::Param_IsInExtraTime' has a wrong offset!");
static_assert(offsetof(BP_MarinerGameState_C_MulticastSetExtraTime, Param_ExtraTimeState) == 0x000001, "Member 'BP_MarinerGameState_C_MulticastSetExtraTime::Param_ExtraTimeState' has a wrong offset!");

// Function BP_MarinerGameState.BP_MarinerGameState_C.ServerSetExtraTime
// 0x0002 (0x0002 - 0x0000)
struct BP_MarinerGameState_C_ServerSetExtraTime final
{
public:
	bool                                          Param_IsInExtraTime;                               // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	ExtraTimeStates                               Param_ExtraTimeState;                              // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MarinerGameState_C_ServerSetExtraTime) == 0x000001, "Wrong alignment on BP_MarinerGameState_C_ServerSetExtraTime");
static_assert(sizeof(BP_MarinerGameState_C_ServerSetExtraTime) == 0x000002, "Wrong size on BP_MarinerGameState_C_ServerSetExtraTime");
static_assert(offsetof(BP_MarinerGameState_C_ServerSetExtraTime, Param_IsInExtraTime) == 0x000000, "Member 'BP_MarinerGameState_C_ServerSetExtraTime::Param_IsInExtraTime' has a wrong offset!");
static_assert(offsetof(BP_MarinerGameState_C_ServerSetExtraTime, Param_ExtraTimeState) == 0x000001, "Member 'BP_MarinerGameState_C_ServerSetExtraTime::Param_ExtraTimeState' has a wrong offset!");

// Function BP_MarinerGameState.BP_MarinerGameState_C.PreroundCountdownTimerBind
// 0x0004 (0x0004 - 0x0000)
struct BP_MarinerGameState_C_PreroundCountdownTimerBind final
{
public:
	float                                         PreRoundCountdownEndTimeStamp;                     // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MarinerGameState_C_PreroundCountdownTimerBind) == 0x000004, "Wrong alignment on BP_MarinerGameState_C_PreroundCountdownTimerBind");
static_assert(sizeof(BP_MarinerGameState_C_PreroundCountdownTimerBind) == 0x000004, "Wrong size on BP_MarinerGameState_C_PreroundCountdownTimerBind");
static_assert(offsetof(BP_MarinerGameState_C_PreroundCountdownTimerBind, PreRoundCountdownEndTimeStamp) == 0x000000, "Member 'BP_MarinerGameState_C_PreroundCountdownTimerBind::PreRoundCountdownEndTimeStamp' has a wrong offset!");

// Function BP_MarinerGameState.BP_MarinerGameState_C.ServerEnablePreroundCountdown
// 0x000C (0x000C - 0x0000)
struct BP_MarinerGameState_C_ServerEnablePreroundCountdown final
{
public:
	float                                         TimerLength;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         MaxNumberToShow;                                   // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ShouldEnable;                                      // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_MarinerGameState_C_ServerEnablePreroundCountdown) == 0x000004, "Wrong alignment on BP_MarinerGameState_C_ServerEnablePreroundCountdown");
static_assert(sizeof(BP_MarinerGameState_C_ServerEnablePreroundCountdown) == 0x00000C, "Wrong size on BP_MarinerGameState_C_ServerEnablePreroundCountdown");
static_assert(offsetof(BP_MarinerGameState_C_ServerEnablePreroundCountdown, TimerLength) == 0x000000, "Member 'BP_MarinerGameState_C_ServerEnablePreroundCountdown::TimerLength' has a wrong offset!");
static_assert(offsetof(BP_MarinerGameState_C_ServerEnablePreroundCountdown, MaxNumberToShow) == 0x000004, "Member 'BP_MarinerGameState_C_ServerEnablePreroundCountdown::MaxNumberToShow' has a wrong offset!");
static_assert(offsetof(BP_MarinerGameState_C_ServerEnablePreroundCountdown, ShouldEnable) == 0x000008, "Member 'BP_MarinerGameState_C_ServerEnablePreroundCountdown::ShouldEnable' has a wrong offset!");

// Function BP_MarinerGameState.BP_MarinerGameState_C.OnRep_IsInRoundTransition
// 0x0001 (0x0001 - 0x0000)
struct BP_MarinerGameState_C_OnRep_IsInRoundTransition final
{
public:
	bool                                          CallFunc_IsRoundTransition_bIsInRoundTransition;   // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_MarinerGameState_C_OnRep_IsInRoundTransition) == 0x000001, "Wrong alignment on BP_MarinerGameState_C_OnRep_IsInRoundTransition");
static_assert(sizeof(BP_MarinerGameState_C_OnRep_IsInRoundTransition) == 0x000001, "Wrong size on BP_MarinerGameState_C_OnRep_IsInRoundTransition");
static_assert(offsetof(BP_MarinerGameState_C_OnRep_IsInRoundTransition, CallFunc_IsRoundTransition_bIsInRoundTransition) == 0x000000, "Member 'BP_MarinerGameState_C_OnRep_IsInRoundTransition::CallFunc_IsRoundTransition_bIsInRoundTransition' has a wrong offset!");

// Function BP_MarinerGameState.BP_MarinerGameState_C.OnRep_UpdatePreroundCountdownPayload
// 0x0001 (0x0001 - 0x0000)
struct BP_MarinerGameState_C_OnRep_UpdatePreroundCountdownPayload final
{
public:
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_MarinerGameState_C_OnRep_UpdatePreroundCountdownPayload) == 0x000001, "Wrong alignment on BP_MarinerGameState_C_OnRep_UpdatePreroundCountdownPayload");
static_assert(sizeof(BP_MarinerGameState_C_OnRep_UpdatePreroundCountdownPayload) == 0x000001, "Wrong size on BP_MarinerGameState_C_OnRep_UpdatePreroundCountdownPayload");
static_assert(offsetof(BP_MarinerGameState_C_OnRep_UpdatePreroundCountdownPayload, CallFunc_Greater_IntInt_ReturnValue) == 0x000000, "Member 'BP_MarinerGameState_C_OnRep_UpdatePreroundCountdownPayload::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

// Function BP_MarinerGameState.BP_MarinerGameState_C.SetUpdatePreroundCountdownPayload
// 0x0018 (0x0018 - 0x0000)
struct BP_MarinerGameState_C_SetUpdatePreroundCountdownPayload final
{
public:
	int32                                         TimeLeft;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         MaxTimeToShow;                                     // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bShouldEnable;                                     // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         CallFunc_Add_ByteByte_ReturnValue;                 // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_227A[0x2];                                     // 0x000A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FOnPreroundCountdownPayload            K2Node_MakeStruct_OnPreroundCountdownPayload;      // 0x000C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MarinerGameState_C_SetUpdatePreroundCountdownPayload) == 0x000004, "Wrong alignment on BP_MarinerGameState_C_SetUpdatePreroundCountdownPayload");
static_assert(sizeof(BP_MarinerGameState_C_SetUpdatePreroundCountdownPayload) == 0x000018, "Wrong size on BP_MarinerGameState_C_SetUpdatePreroundCountdownPayload");
static_assert(offsetof(BP_MarinerGameState_C_SetUpdatePreroundCountdownPayload, TimeLeft) == 0x000000, "Member 'BP_MarinerGameState_C_SetUpdatePreroundCountdownPayload::TimeLeft' has a wrong offset!");
static_assert(offsetof(BP_MarinerGameState_C_SetUpdatePreroundCountdownPayload, MaxTimeToShow) == 0x000004, "Member 'BP_MarinerGameState_C_SetUpdatePreroundCountdownPayload::MaxTimeToShow' has a wrong offset!");
static_assert(offsetof(BP_MarinerGameState_C_SetUpdatePreroundCountdownPayload, bShouldEnable) == 0x000008, "Member 'BP_MarinerGameState_C_SetUpdatePreroundCountdownPayload::bShouldEnable' has a wrong offset!");
static_assert(offsetof(BP_MarinerGameState_C_SetUpdatePreroundCountdownPayload, CallFunc_Add_ByteByte_ReturnValue) == 0x000009, "Member 'BP_MarinerGameState_C_SetUpdatePreroundCountdownPayload::CallFunc_Add_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MarinerGameState_C_SetUpdatePreroundCountdownPayload, K2Node_MakeStruct_OnPreroundCountdownPayload) == 0x00000C, "Member 'BP_MarinerGameState_C_SetUpdatePreroundCountdownPayload::K2Node_MakeStruct_OnPreroundCountdownPayload' has a wrong offset!");

// Function BP_MarinerGameState.BP_MarinerGameState_C.SetRoundTransition
// 0x0004 (0x0004 - 0x0000)
struct BP_MarinerGameState_C_SetRoundTransition final
{
public:
	bool                                          bIsRoundTransition;                                // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         CallFunc_Add_ByteByte_ReturnValue;                 // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FOnRoundTransitionPayload              K2Node_MakeStruct_OnRoundTransitionPayload;        // 0x0002(0x0002)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MarinerGameState_C_SetRoundTransition) == 0x000001, "Wrong alignment on BP_MarinerGameState_C_SetRoundTransition");
static_assert(sizeof(BP_MarinerGameState_C_SetRoundTransition) == 0x000004, "Wrong size on BP_MarinerGameState_C_SetRoundTransition");
static_assert(offsetof(BP_MarinerGameState_C_SetRoundTransition, bIsRoundTransition) == 0x000000, "Member 'BP_MarinerGameState_C_SetRoundTransition::bIsRoundTransition' has a wrong offset!");
static_assert(offsetof(BP_MarinerGameState_C_SetRoundTransition, CallFunc_Add_ByteByte_ReturnValue) == 0x000001, "Member 'BP_MarinerGameState_C_SetRoundTransition::CallFunc_Add_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MarinerGameState_C_SetRoundTransition, K2Node_MakeStruct_OnRoundTransitionPayload) == 0x000002, "Member 'BP_MarinerGameState_C_SetRoundTransition::K2Node_MakeStruct_OnRoundTransitionPayload' has a wrong offset!");

// Function BP_MarinerGameState.BP_MarinerGameState_C.OnRep_OnRoundTransitionPayload
// 0x0001 (0x0001 - 0x0000)
struct BP_MarinerGameState_C_OnRep_OnRoundTransitionPayload final
{
public:
	bool                                          CallFunc_IsRoundTransition_bIsInRoundTransition;   // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_MarinerGameState_C_OnRep_OnRoundTransitionPayload) == 0x000001, "Wrong alignment on BP_MarinerGameState_C_OnRep_OnRoundTransitionPayload");
static_assert(sizeof(BP_MarinerGameState_C_OnRep_OnRoundTransitionPayload) == 0x000001, "Wrong size on BP_MarinerGameState_C_OnRep_OnRoundTransitionPayload");
static_assert(offsetof(BP_MarinerGameState_C_OnRep_OnRoundTransitionPayload, CallFunc_IsRoundTransition_bIsInRoundTransition) == 0x000000, "Member 'BP_MarinerGameState_C_OnRep_OnRoundTransitionPayload::CallFunc_IsRoundTransition_bIsInRoundTransition' has a wrong offset!");

// Function BP_MarinerGameState.BP_MarinerGameState_C.IsRoundTransition
// 0x0001 (0x0001 - 0x0000)
struct BP_MarinerGameState_C_IsRoundTransition final
{
public:
	bool                                          bIsInRoundTransition;                              // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_MarinerGameState_C_IsRoundTransition) == 0x000001, "Wrong alignment on BP_MarinerGameState_C_IsRoundTransition");
static_assert(sizeof(BP_MarinerGameState_C_IsRoundTransition) == 0x000001, "Wrong size on BP_MarinerGameState_C_IsRoundTransition");
static_assert(offsetof(BP_MarinerGameState_C_IsRoundTransition, bIsInRoundTransition) == 0x000000, "Member 'BP_MarinerGameState_C_IsRoundTransition::bIsInRoundTransition' has a wrong offset!");

}

