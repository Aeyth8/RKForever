#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: QuitPenaltyWidget

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass QuitPenaltyWidget.QuitPenaltyWidget_C
// 0x0020 (0x0250 - 0x0230)
class UQuitPenaltyWidget_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0230(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UTextBlock*                             Timer;                                             // 0x0238(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	struct FDateTime                              ExpirationTime;                                    // 0x0240(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           UpdateTimerHandle;                                 // 0x0248(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_QuitPenaltyWidget(int32 EntryPoint);
	void Construct();
	void Destruct();
	void OnPenaltyExpired();
	void UpdateTimer();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"QuitPenaltyWidget_C">();
	}
	static class UQuitPenaltyWidget_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UQuitPenaltyWidget_C>();
	}
};
static_assert(alignof(UQuitPenaltyWidget_C) == 0x000008, "Wrong alignment on UQuitPenaltyWidget_C");
static_assert(sizeof(UQuitPenaltyWidget_C) == 0x000250, "Wrong size on UQuitPenaltyWidget_C");
static_assert(offsetof(UQuitPenaltyWidget_C, UberGraphFrame) == 0x000230, "Member 'UQuitPenaltyWidget_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UQuitPenaltyWidget_C, Timer) == 0x000238, "Member 'UQuitPenaltyWidget_C::Timer' has a wrong offset!");
static_assert(offsetof(UQuitPenaltyWidget_C, ExpirationTime) == 0x000240, "Member 'UQuitPenaltyWidget_C::ExpirationTime' has a wrong offset!");
static_assert(offsetof(UQuitPenaltyWidget_C, UpdateTimerHandle) == 0x000248, "Member 'UQuitPenaltyWidget_C::UpdateTimerHandle' has a wrong offset!");

}

