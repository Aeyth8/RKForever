#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: CharacterAbilityInterface

#include "Basic.hpp"

#include "E_ItemActivationTypes_structs.hpp"
#include "DodgeDirections_structs.hpp"


namespace SDK::Params
{

// Function CharacterAbilityInterface.CharacterAbilityInterface_C.TriggerDodgeFeedback
// 0x0008 (0x0008 - 0x0000)
struct CharacterAbilityInterface_C_TriggerDodgeFeedback final
{
public:
	EDodgeDirections                              DodgeDirection;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_25D9[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         DodgeDuration;                                     // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CharacterAbilityInterface_C_TriggerDodgeFeedback) == 0x000004, "Wrong alignment on CharacterAbilityInterface_C_TriggerDodgeFeedback");
static_assert(sizeof(CharacterAbilityInterface_C_TriggerDodgeFeedback) == 0x000008, "Wrong size on CharacterAbilityInterface_C_TriggerDodgeFeedback");
static_assert(offsetof(CharacterAbilityInterface_C_TriggerDodgeFeedback, DodgeDirection) == 0x000000, "Member 'CharacterAbilityInterface_C_TriggerDodgeFeedback::DodgeDirection' has a wrong offset!");
static_assert(offsetof(CharacterAbilityInterface_C_TriggerDodgeFeedback, DodgeDuration) == 0x000004, "Member 'CharacterAbilityInterface_C_TriggerDodgeFeedback::DodgeDuration' has a wrong offset!");

// Function CharacterAbilityInterface.CharacterAbilityInterface_C.ToggleDodgeCollision
// 0x0001 (0x0001 - 0x0000)
struct CharacterAbilityInterface_C_ToggleDodgeCollision final
{
public:
	bool                                          Enabled;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(CharacterAbilityInterface_C_ToggleDodgeCollision) == 0x000001, "Wrong alignment on CharacterAbilityInterface_C_ToggleDodgeCollision");
static_assert(sizeof(CharacterAbilityInterface_C_ToggleDodgeCollision) == 0x000001, "Wrong size on CharacterAbilityInterface_C_ToggleDodgeCollision");
static_assert(offsetof(CharacterAbilityInterface_C_ToggleDodgeCollision, Enabled) == 0x000000, "Member 'CharacterAbilityInterface_C_ToggleDodgeCollision::Enabled' has a wrong offset!");

// Function CharacterAbilityInterface.CharacterAbilityInterface_C.HandleItemActivation
// 0x0001 (0x0001 - 0x0000)
struct CharacterAbilityInterface_C_HandleItemActivation final
{
public:
	E_ItemActivationTypes                         ItemUseType;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CharacterAbilityInterface_C_HandleItemActivation) == 0x000001, "Wrong alignment on CharacterAbilityInterface_C_HandleItemActivation");
static_assert(sizeof(CharacterAbilityInterface_C_HandleItemActivation) == 0x000001, "Wrong size on CharacterAbilityInterface_C_HandleItemActivation");
static_assert(offsetof(CharacterAbilityInterface_C_HandleItemActivation, ItemUseType) == 0x000000, "Member 'CharacterAbilityInterface_C_HandleItemActivation::ItemUseType' has a wrong offset!");

}

