#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: RewardPreviewWidget

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "MangoClient_structs.hpp"
#include "SlateCore_structs.hpp"
#include "UMG_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Mariner_structs.hpp"


namespace SDK::Params
{

// Function RewardPreviewWidget.RewardPreviewWidget_C.ExecuteUbergraph_RewardPreviewWidget
// 0x0050 (0x0050 - 0x0000)
struct RewardPreviewWidget_C_ExecuteUbergraph_RewardPreviewWidget final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMangoReward                           K2Node_Event_Reward;                               // 0x0008(0x0040)(ConstParm)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(RewardPreviewWidget_C_ExecuteUbergraph_RewardPreviewWidget) == 0x000008, "Wrong alignment on RewardPreviewWidget_C_ExecuteUbergraph_RewardPreviewWidget");
static_assert(sizeof(RewardPreviewWidget_C_ExecuteUbergraph_RewardPreviewWidget) == 0x000050, "Wrong size on RewardPreviewWidget_C_ExecuteUbergraph_RewardPreviewWidget");
static_assert(offsetof(RewardPreviewWidget_C_ExecuteUbergraph_RewardPreviewWidget, EntryPoint) == 0x000000, "Member 'RewardPreviewWidget_C_ExecuteUbergraph_RewardPreviewWidget::EntryPoint' has a wrong offset!");
static_assert(offsetof(RewardPreviewWidget_C_ExecuteUbergraph_RewardPreviewWidget, K2Node_Event_Reward) == 0x000008, "Member 'RewardPreviewWidget_C_ExecuteUbergraph_RewardPreviewWidget::K2Node_Event_Reward' has a wrong offset!");
static_assert(offsetof(RewardPreviewWidget_C_ExecuteUbergraph_RewardPreviewWidget, CallFunc_PlayAnimation_ReturnValue) == 0x000048, "Member 'RewardPreviewWidget_C_ExecuteUbergraph_RewardPreviewWidget::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");

// Function RewardPreviewWidget.RewardPreviewWidget_C.PopulateRewardPreview
// 0x0040 (0x0040 - 0x0000)
struct RewardPreviewWidget_C_PopulateRewardPreview final
{
public:
	struct FMangoReward                           Reward;                                            // 0x0000(0x0040)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(RewardPreviewWidget_C_PopulateRewardPreview) == 0x000008, "Wrong alignment on RewardPreviewWidget_C_PopulateRewardPreview");
static_assert(sizeof(RewardPreviewWidget_C_PopulateRewardPreview) == 0x000040, "Wrong size on RewardPreviewWidget_C_PopulateRewardPreview");
static_assert(offsetof(RewardPreviewWidget_C_PopulateRewardPreview, Reward) == 0x000000, "Member 'RewardPreviewWidget_C_PopulateRewardPreview::Reward' has a wrong offset!");

// Function RewardPreviewWidget.RewardPreviewWidget_C.PopulateQuestReward
// 0x00D0 (0x00D0 - 0x0000)
struct RewardPreviewWidget_C_PopulateQuestReward final
{
public:
	struct FMangoQuestReward                      Reward;                                            // 0x0000(0x00C8)(BlueprintVisible, BlueprintReadOnly, Parm)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x00C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_2;             // 0x00CA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(RewardPreviewWidget_C_PopulateQuestReward) == 0x000008, "Wrong alignment on RewardPreviewWidget_C_PopulateQuestReward");
static_assert(sizeof(RewardPreviewWidget_C_PopulateQuestReward) == 0x0000D0, "Wrong size on RewardPreviewWidget_C_PopulateQuestReward");
static_assert(offsetof(RewardPreviewWidget_C_PopulateQuestReward, Reward) == 0x000000, "Member 'RewardPreviewWidget_C_PopulateQuestReward::Reward' has a wrong offset!");
static_assert(offsetof(RewardPreviewWidget_C_PopulateQuestReward, CallFunc_Greater_IntInt_ReturnValue) == 0x0000C8, "Member 'RewardPreviewWidget_C_PopulateQuestReward::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(RewardPreviewWidget_C_PopulateQuestReward, CallFunc_Greater_IntInt_ReturnValue_1) == 0x0000C9, "Member 'RewardPreviewWidget_C_PopulateQuestReward::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(RewardPreviewWidget_C_PopulateQuestReward, CallFunc_Greater_IntInt_ReturnValue_2) == 0x0000CA, "Member 'RewardPreviewWidget_C_PopulateQuestReward::CallFunc_Greater_IntInt_ReturnValue_2' has a wrong offset!");

// Function RewardPreviewWidget.RewardPreviewWidget_C.PopulateXP
// 0x00A8 (0x00A8 - 0x0000)
struct RewardPreviewWidget_C_PopulateXP final
{
public:
	int32                                         Xp;                                                // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0008(0x0018)()
	struct FSlateBrush                            K2Node_MakeStruct_SlateBrush;                      // 0x0020(0x0088)()
};
static_assert(alignof(RewardPreviewWidget_C_PopulateXP) == 0x000008, "Wrong alignment on RewardPreviewWidget_C_PopulateXP");
static_assert(sizeof(RewardPreviewWidget_C_PopulateXP) == 0x0000A8, "Wrong size on RewardPreviewWidget_C_PopulateXP");
static_assert(offsetof(RewardPreviewWidget_C_PopulateXP, Xp) == 0x000000, "Member 'RewardPreviewWidget_C_PopulateXP::Xp' has a wrong offset!");
static_assert(offsetof(RewardPreviewWidget_C_PopulateXP, CallFunc_Conv_IntToText_ReturnValue) == 0x000008, "Member 'RewardPreviewWidget_C_PopulateXP::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(RewardPreviewWidget_C_PopulateXP, K2Node_MakeStruct_SlateBrush) == 0x000020, "Member 'RewardPreviewWidget_C_PopulateXP::K2Node_MakeStruct_SlateBrush' has a wrong offset!");

// Function RewardPreviewWidget.RewardPreviewWidget_C.PopulateRocketbucks
// 0x0130 (0x0130 - 0x0000)
struct RewardPreviewWidget_C_PopulateRocketbucks final
{
public:
	int32                                         RocketBucks;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateBrush                            K2Node_MakeStruct_SlateBrush;                      // 0x0008(0x0088)()
	struct FSlateBrush                            CallFunc_GetRocketbucksIcon_Icon;                  // 0x0090(0x0088)()
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0118(0x0018)()
};
static_assert(alignof(RewardPreviewWidget_C_PopulateRocketbucks) == 0x000008, "Wrong alignment on RewardPreviewWidget_C_PopulateRocketbucks");
static_assert(sizeof(RewardPreviewWidget_C_PopulateRocketbucks) == 0x000130, "Wrong size on RewardPreviewWidget_C_PopulateRocketbucks");
static_assert(offsetof(RewardPreviewWidget_C_PopulateRocketbucks, RocketBucks) == 0x000000, "Member 'RewardPreviewWidget_C_PopulateRocketbucks::RocketBucks' has a wrong offset!");
static_assert(offsetof(RewardPreviewWidget_C_PopulateRocketbucks, K2Node_MakeStruct_SlateBrush) == 0x000008, "Member 'RewardPreviewWidget_C_PopulateRocketbucks::K2Node_MakeStruct_SlateBrush' has a wrong offset!");
static_assert(offsetof(RewardPreviewWidget_C_PopulateRocketbucks, CallFunc_GetRocketbucksIcon_Icon) == 0x000090, "Member 'RewardPreviewWidget_C_PopulateRocketbucks::CallFunc_GetRocketbucksIcon_Icon' has a wrong offset!");
static_assert(offsetof(RewardPreviewWidget_C_PopulateRocketbucks, CallFunc_Conv_IntToText_ReturnValue) == 0x000118, "Member 'RewardPreviewWidget_C_PopulateRocketbucks::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");

// Function RewardPreviewWidget.RewardPreviewWidget_C.PopulateRocketparts
// 0x0158 (0x0158 - 0x0000)
struct RewardPreviewWidget_C_PopulateRocketparts final
{
public:
	int32                                         RocketParts;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             RocketPartIcon;                                    // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue_1;        // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12[0x6];                                       // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0018(0x0018)()
	struct FSlateBrush                            K2Node_MakeStruct_SlateBrush;                      // 0x0030(0x0088)()
	int32                                         CallFunc_Blueprint_GetSizeY_ReturnValue;           // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Blueprint_GetSizeX_ReturnValue;           // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_1;            // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateBrush                            K2Node_MakeStruct_SlateBrush_1;                    // 0x00D0(0x0088)()
};
static_assert(alignof(RewardPreviewWidget_C_PopulateRocketparts) == 0x000008, "Wrong alignment on RewardPreviewWidget_C_PopulateRocketparts");
static_assert(sizeof(RewardPreviewWidget_C_PopulateRocketparts) == 0x000158, "Wrong size on RewardPreviewWidget_C_PopulateRocketparts");
static_assert(offsetof(RewardPreviewWidget_C_PopulateRocketparts, RocketParts) == 0x000000, "Member 'RewardPreviewWidget_C_PopulateRocketparts::RocketParts' has a wrong offset!");
static_assert(offsetof(RewardPreviewWidget_C_PopulateRocketparts, RocketPartIcon) == 0x000008, "Member 'RewardPreviewWidget_C_PopulateRocketparts::RocketPartIcon' has a wrong offset!");
static_assert(offsetof(RewardPreviewWidget_C_PopulateRocketparts, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000010, "Member 'RewardPreviewWidget_C_PopulateRocketparts::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(RewardPreviewWidget_C_PopulateRocketparts, CallFunc_GreaterEqual_IntInt_ReturnValue_1) == 0x000011, "Member 'RewardPreviewWidget_C_PopulateRocketparts::CallFunc_GreaterEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(RewardPreviewWidget_C_PopulateRocketparts, CallFunc_Conv_IntToText_ReturnValue) == 0x000018, "Member 'RewardPreviewWidget_C_PopulateRocketparts::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(RewardPreviewWidget_C_PopulateRocketparts, K2Node_MakeStruct_SlateBrush) == 0x000030, "Member 'RewardPreviewWidget_C_PopulateRocketparts::K2Node_MakeStruct_SlateBrush' has a wrong offset!");
static_assert(offsetof(RewardPreviewWidget_C_PopulateRocketparts, CallFunc_Blueprint_GetSizeY_ReturnValue) == 0x0000B8, "Member 'RewardPreviewWidget_C_PopulateRocketparts::CallFunc_Blueprint_GetSizeY_ReturnValue' has a wrong offset!");
static_assert(offsetof(RewardPreviewWidget_C_PopulateRocketparts, CallFunc_Blueprint_GetSizeX_ReturnValue) == 0x0000BC, "Member 'RewardPreviewWidget_C_PopulateRocketparts::CallFunc_Blueprint_GetSizeX_ReturnValue' has a wrong offset!");
static_assert(offsetof(RewardPreviewWidget_C_PopulateRocketparts, CallFunc_Conv_IntToFloat_ReturnValue) == 0x0000C0, "Member 'RewardPreviewWidget_C_PopulateRocketparts::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(RewardPreviewWidget_C_PopulateRocketparts, CallFunc_Conv_IntToFloat_ReturnValue_1) == 0x0000C4, "Member 'RewardPreviewWidget_C_PopulateRocketparts::CallFunc_Conv_IntToFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(RewardPreviewWidget_C_PopulateRocketparts, CallFunc_MakeVector2D_ReturnValue) == 0x0000C8, "Member 'RewardPreviewWidget_C_PopulateRocketparts::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(RewardPreviewWidget_C_PopulateRocketparts, K2Node_MakeStruct_SlateBrush_1) == 0x0000D0, "Member 'RewardPreviewWidget_C_PopulateRocketparts::K2Node_MakeStruct_SlateBrush_1' has a wrong offset!");

// Function RewardPreviewWidget.RewardPreviewWidget_C.PopulateItem
// 0x0070 (0x0070 - 0x0000)
struct RewardPreviewWidget_C_PopulateItem final
{
public:
	struct FMangoItem                             Item;                                              // 0x0000(0x0050)(BlueprintVisible, BlueprintReadOnly, Parm)
	int32                                         DupRocketpartsValue;                               // 0x0050(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_TextFromStringTable_ReturnValue;          // 0x0058(0x0018)()
};
static_assert(alignof(RewardPreviewWidget_C_PopulateItem) == 0x000008, "Wrong alignment on RewardPreviewWidget_C_PopulateItem");
static_assert(sizeof(RewardPreviewWidget_C_PopulateItem) == 0x000070, "Wrong size on RewardPreviewWidget_C_PopulateItem");
static_assert(offsetof(RewardPreviewWidget_C_PopulateItem, Item) == 0x000000, "Member 'RewardPreviewWidget_C_PopulateItem::Item' has a wrong offset!");
static_assert(offsetof(RewardPreviewWidget_C_PopulateItem, DupRocketpartsValue) == 0x000050, "Member 'RewardPreviewWidget_C_PopulateItem::DupRocketpartsValue' has a wrong offset!");
static_assert(offsetof(RewardPreviewWidget_C_PopulateItem, CallFunc_TextFromStringTable_ReturnValue) == 0x000058, "Member 'RewardPreviewWidget_C_PopulateItem::CallFunc_TextFromStringTable_ReturnValue' has a wrong offset!");

// Function RewardPreviewWidget.RewardPreviewWidget_C.PopulateNativeOffer
// 0x0178 (0x0178 - 0x0000)
struct RewardPreviewWidget_C_PopulateNativeOffer final
{
public:
	struct FMangoNativeOffer                      Nativeoffer;                                       // 0x0000(0x00C0)(BlueprintVisible, BlueprintReadOnly, Parm)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x00C0(0x0018)()
	class UMarinerFrontEndGlobals*                CallFunc_GetFrontEndGlobals_ReturnValue;           // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMarinerStoreGlobals*                   CallFunc_GetStoreGlobals_ReturnValue;              // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateBrush                            CallFunc_GetImage_ImageBrushOut;                   // 0x00E8(0x0088)()
	bool                                          CallFunc_GetImage_ReturnValue;                     // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(RewardPreviewWidget_C_PopulateNativeOffer) == 0x000008, "Wrong alignment on RewardPreviewWidget_C_PopulateNativeOffer");
static_assert(sizeof(RewardPreviewWidget_C_PopulateNativeOffer) == 0x000178, "Wrong size on RewardPreviewWidget_C_PopulateNativeOffer");
static_assert(offsetof(RewardPreviewWidget_C_PopulateNativeOffer, Nativeoffer) == 0x000000, "Member 'RewardPreviewWidget_C_PopulateNativeOffer::Nativeoffer' has a wrong offset!");
static_assert(offsetof(RewardPreviewWidget_C_PopulateNativeOffer, CallFunc_Conv_StringToText_ReturnValue) == 0x0000C0, "Member 'RewardPreviewWidget_C_PopulateNativeOffer::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(RewardPreviewWidget_C_PopulateNativeOffer, CallFunc_GetFrontEndGlobals_ReturnValue) == 0x0000D8, "Member 'RewardPreviewWidget_C_PopulateNativeOffer::CallFunc_GetFrontEndGlobals_ReturnValue' has a wrong offset!");
static_assert(offsetof(RewardPreviewWidget_C_PopulateNativeOffer, CallFunc_GetStoreGlobals_ReturnValue) == 0x0000E0, "Member 'RewardPreviewWidget_C_PopulateNativeOffer::CallFunc_GetStoreGlobals_ReturnValue' has a wrong offset!");
static_assert(offsetof(RewardPreviewWidget_C_PopulateNativeOffer, CallFunc_GetImage_ImageBrushOut) == 0x0000E8, "Member 'RewardPreviewWidget_C_PopulateNativeOffer::CallFunc_GetImage_ImageBrushOut' has a wrong offset!");
static_assert(offsetof(RewardPreviewWidget_C_PopulateNativeOffer, CallFunc_GetImage_ReturnValue) == 0x000170, "Member 'RewardPreviewWidget_C_PopulateNativeOffer::CallFunc_GetImage_ReturnValue' has a wrong offset!");

// Function RewardPreviewWidget.RewardPreviewWidget_C.PopulateDuplicateAssets
// 0x0080 (0x0080 - 0x0000)
struct RewardPreviewWidget_C_PopulateDuplicateAssets final
{
public:
	int32                                         PartsValue_0;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0008(0x0040)(HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0050(0x0010)(ZeroConstructor, ReferenceParm)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0068(0x0018)()
};
static_assert(alignof(RewardPreviewWidget_C_PopulateDuplicateAssets) == 0x000008, "Wrong alignment on RewardPreviewWidget_C_PopulateDuplicateAssets");
static_assert(sizeof(RewardPreviewWidget_C_PopulateDuplicateAssets) == 0x000080, "Wrong size on RewardPreviewWidget_C_PopulateDuplicateAssets");
static_assert(offsetof(RewardPreviewWidget_C_PopulateDuplicateAssets, PartsValue_0) == 0x000000, "Member 'RewardPreviewWidget_C_PopulateDuplicateAssets::PartsValue_0' has a wrong offset!");
static_assert(offsetof(RewardPreviewWidget_C_PopulateDuplicateAssets, K2Node_MakeStruct_FormatArgumentData) == 0x000008, "Member 'RewardPreviewWidget_C_PopulateDuplicateAssets::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(RewardPreviewWidget_C_PopulateDuplicateAssets, CallFunc_PlayAnimation_ReturnValue) == 0x000048, "Member 'RewardPreviewWidget_C_PopulateDuplicateAssets::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(RewardPreviewWidget_C_PopulateDuplicateAssets, K2Node_MakeArray_Array) == 0x000050, "Member 'RewardPreviewWidget_C_PopulateDuplicateAssets::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(RewardPreviewWidget_C_PopulateDuplicateAssets, CallFunc_Greater_IntInt_ReturnValue) == 0x000060, "Member 'RewardPreviewWidget_C_PopulateDuplicateAssets::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(RewardPreviewWidget_C_PopulateDuplicateAssets, CallFunc_Format_ReturnValue) == 0x000068, "Member 'RewardPreviewWidget_C_PopulateDuplicateAssets::CallFunc_Format_ReturnValue' has a wrong offset!");

// Function RewardPreviewWidget.RewardPreviewWidget_C.PopulateItemType
// 0x0080 (0x0080 - 0x0000)
struct RewardPreviewWidget_C_PopulateItemType final
{
public:
	struct FMangoItem                             Item;                                              // 0x0000(0x0050)(BlueprintVisible, BlueprintReadOnly, Parm)
	bool                                          Temp_bool_Variable;                                // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0052(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_53[0x5];                                       // 0x0053(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UMarinerUIGlobals*                      CallFunc_GetUIGlobals_ReturnValue;                 // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_GetItemTypeName_ReturnValue;              // 0x0060(0x0018)()
	bool                                          CallFunc_TextIsEmpty_ReturnValue;                  // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(RewardPreviewWidget_C_PopulateItemType) == 0x000008, "Wrong alignment on RewardPreviewWidget_C_PopulateItemType");
static_assert(sizeof(RewardPreviewWidget_C_PopulateItemType) == 0x000080, "Wrong size on RewardPreviewWidget_C_PopulateItemType");
static_assert(offsetof(RewardPreviewWidget_C_PopulateItemType, Item) == 0x000000, "Member 'RewardPreviewWidget_C_PopulateItemType::Item' has a wrong offset!");
static_assert(offsetof(RewardPreviewWidget_C_PopulateItemType, Temp_bool_Variable) == 0x000050, "Member 'RewardPreviewWidget_C_PopulateItemType::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(RewardPreviewWidget_C_PopulateItemType, Temp_byte_Variable) == 0x000051, "Member 'RewardPreviewWidget_C_PopulateItemType::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(RewardPreviewWidget_C_PopulateItemType, Temp_byte_Variable_1) == 0x000052, "Member 'RewardPreviewWidget_C_PopulateItemType::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(RewardPreviewWidget_C_PopulateItemType, CallFunc_GetUIGlobals_ReturnValue) == 0x000058, "Member 'RewardPreviewWidget_C_PopulateItemType::CallFunc_GetUIGlobals_ReturnValue' has a wrong offset!");
static_assert(offsetof(RewardPreviewWidget_C_PopulateItemType, CallFunc_GetItemTypeName_ReturnValue) == 0x000060, "Member 'RewardPreviewWidget_C_PopulateItemType::CallFunc_GetItemTypeName_ReturnValue' has a wrong offset!");
static_assert(offsetof(RewardPreviewWidget_C_PopulateItemType, CallFunc_TextIsEmpty_ReturnValue) == 0x000078, "Member 'RewardPreviewWidget_C_PopulateItemType::CallFunc_TextIsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(RewardPreviewWidget_C_PopulateItemType, K2Node_Select_Default) == 0x000079, "Member 'RewardPreviewWidget_C_PopulateItemType::K2Node_Select_Default' has a wrong offset!");

// Function RewardPreviewWidget.RewardPreviewWidget_C.PopulateProgressionReward
// 0x0050 (0x0050 - 0x0000)
struct RewardPreviewWidget_C_PopulateProgressionReward final
{
public:
	struct FMangoRewards                          Reward;                                            // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x003D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3E[0x2];                                       // 0x003E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(RewardPreviewWidget_C_PopulateProgressionReward) == 0x000008, "Wrong alignment on RewardPreviewWidget_C_PopulateProgressionReward");
static_assert(sizeof(RewardPreviewWidget_C_PopulateProgressionReward) == 0x000050, "Wrong size on RewardPreviewWidget_C_PopulateProgressionReward");
static_assert(offsetof(RewardPreviewWidget_C_PopulateProgressionReward, Reward) == 0x000000, "Member 'RewardPreviewWidget_C_PopulateProgressionReward::Reward' has a wrong offset!");
static_assert(offsetof(RewardPreviewWidget_C_PopulateProgressionReward, Temp_int_Array_Index_Variable) == 0x000038, "Member 'RewardPreviewWidget_C_PopulateProgressionReward::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(RewardPreviewWidget_C_PopulateProgressionReward, CallFunc_Greater_IntInt_ReturnValue) == 0x00003C, "Member 'RewardPreviewWidget_C_PopulateProgressionReward::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(RewardPreviewWidget_C_PopulateProgressionReward, CallFunc_Greater_IntInt_ReturnValue_1) == 0x00003D, "Member 'RewardPreviewWidget_C_PopulateProgressionReward::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(RewardPreviewWidget_C_PopulateProgressionReward, CallFunc_Array_Length_ReturnValue) == 0x000040, "Member 'RewardPreviewWidget_C_PopulateProgressionReward::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(RewardPreviewWidget_C_PopulateProgressionReward, Temp_int_Loop_Counter_Variable) == 0x000044, "Member 'RewardPreviewWidget_C_PopulateProgressionReward::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(RewardPreviewWidget_C_PopulateProgressionReward, CallFunc_Less_IntInt_ReturnValue) == 0x000048, "Member 'RewardPreviewWidget_C_PopulateProgressionReward::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(RewardPreviewWidget_C_PopulateProgressionReward, CallFunc_Add_IntInt_ReturnValue) == 0x00004C, "Member 'RewardPreviewWidget_C_PopulateProgressionReward::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function RewardPreviewWidget.RewardPreviewWidget_C.PopulateBlastPassReward
// 0x0138 (0x0138 - 0x0000)
struct RewardPreviewWidget_C_PopulateBlastPassReward final
{
public:
	int32                                         BlastBarProgress;                                  // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateBrush                            K2Node_MakeStruct_SlateBrush;                      // 0x0008(0x0088)()
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_94[0x4];                                       // 0x0094(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateBrush                            K2Node_MakeStruct_SlateBrush_1;                    // 0x0098(0x0088)()
	class FText                                   CallFunc_Conv_FloatToText_ReturnValue;             // 0x0120(0x0018)()
};
static_assert(alignof(RewardPreviewWidget_C_PopulateBlastPassReward) == 0x000008, "Wrong alignment on RewardPreviewWidget_C_PopulateBlastPassReward");
static_assert(sizeof(RewardPreviewWidget_C_PopulateBlastPassReward) == 0x000138, "Wrong size on RewardPreviewWidget_C_PopulateBlastPassReward");
static_assert(offsetof(RewardPreviewWidget_C_PopulateBlastPassReward, BlastBarProgress) == 0x000000, "Member 'RewardPreviewWidget_C_PopulateBlastPassReward::BlastBarProgress' has a wrong offset!");
static_assert(offsetof(RewardPreviewWidget_C_PopulateBlastPassReward, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000004, "Member 'RewardPreviewWidget_C_PopulateBlastPassReward::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(RewardPreviewWidget_C_PopulateBlastPassReward, K2Node_MakeStruct_SlateBrush) == 0x000008, "Member 'RewardPreviewWidget_C_PopulateBlastPassReward::K2Node_MakeStruct_SlateBrush' has a wrong offset!");
static_assert(offsetof(RewardPreviewWidget_C_PopulateBlastPassReward, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000090, "Member 'RewardPreviewWidget_C_PopulateBlastPassReward::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(RewardPreviewWidget_C_PopulateBlastPassReward, K2Node_MakeStruct_SlateBrush_1) == 0x000098, "Member 'RewardPreviewWidget_C_PopulateBlastPassReward::K2Node_MakeStruct_SlateBrush_1' has a wrong offset!");
static_assert(offsetof(RewardPreviewWidget_C_PopulateBlastPassReward, CallFunc_Conv_FloatToText_ReturnValue) == 0x000120, "Member 'RewardPreviewWidget_C_PopulateBlastPassReward::CallFunc_Conv_FloatToText_ReturnValue' has a wrong offset!");

// Function RewardPreviewWidget.RewardPreviewWidget_C.PopulateBlastPass
// 0x0290 (0x0290 - 0x0000)
struct RewardPreviewWidget_C_PopulateBlastPass final
{
public:
	class FString                                 OfferId;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	struct FMangoOrderBlastpass                   BlastPassOrder;                                    // 0x0010(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	class UMangoCMSManager*                       CallFunc_Get_ReturnValue;                          // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FMangoPurchaseOffer                    CallFunc_GetPurchaseOfferById_OutPurchaseOffer;    // 0x0030(0x00D8)()
	bool                                          CallFunc_GetPurchaseOfferById_ReturnValue;         // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_109[0x7];                                      // 0x0109(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMangoCMSManager*                       CallFunc_Get_ReturnValue_1;                        // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FMangoBlastPassDefinition              CallFunc_TryGetBlastPassDefinition_OutDefinition;  // 0x0118(0x0068)()
	bool                                          CallFunc_TryGetBlastPassDefinition_ReturnValue;    // 0x0180(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_181[0x7];                                      // 0x0181(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMarinerFrontEndGlobals*                CallFunc_GetFrontEndGlobals_ReturnValue;           // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMarinerStoreGlobals*                   CallFunc_GetStoreGlobals_ReturnValue;              // 0x0190(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0198(0x0040)(HasGetValueTypeHash)
	struct FSlateBrush                            CallFunc_GetImage_ImageBrushOut;                   // 0x01D8(0x0088)()
	bool                                          CallFunc_GetImage_ReturnValue;                     // 0x0260(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_261[0x7];                                      // 0x0261(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0268(0x0010)(ZeroConstructor, ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0278(0x0018)()
};
static_assert(alignof(RewardPreviewWidget_C_PopulateBlastPass) == 0x000008, "Wrong alignment on RewardPreviewWidget_C_PopulateBlastPass");
static_assert(sizeof(RewardPreviewWidget_C_PopulateBlastPass) == 0x000290, "Wrong size on RewardPreviewWidget_C_PopulateBlastPass");
static_assert(offsetof(RewardPreviewWidget_C_PopulateBlastPass, OfferId) == 0x000000, "Member 'RewardPreviewWidget_C_PopulateBlastPass::OfferId' has a wrong offset!");
static_assert(offsetof(RewardPreviewWidget_C_PopulateBlastPass, BlastPassOrder) == 0x000010, "Member 'RewardPreviewWidget_C_PopulateBlastPass::BlastPassOrder' has a wrong offset!");
static_assert(offsetof(RewardPreviewWidget_C_PopulateBlastPass, CallFunc_Get_ReturnValue) == 0x000028, "Member 'RewardPreviewWidget_C_PopulateBlastPass::CallFunc_Get_ReturnValue' has a wrong offset!");
static_assert(offsetof(RewardPreviewWidget_C_PopulateBlastPass, CallFunc_GetPurchaseOfferById_OutPurchaseOffer) == 0x000030, "Member 'RewardPreviewWidget_C_PopulateBlastPass::CallFunc_GetPurchaseOfferById_OutPurchaseOffer' has a wrong offset!");
static_assert(offsetof(RewardPreviewWidget_C_PopulateBlastPass, CallFunc_GetPurchaseOfferById_ReturnValue) == 0x000108, "Member 'RewardPreviewWidget_C_PopulateBlastPass::CallFunc_GetPurchaseOfferById_ReturnValue' has a wrong offset!");
static_assert(offsetof(RewardPreviewWidget_C_PopulateBlastPass, CallFunc_Get_ReturnValue_1) == 0x000110, "Member 'RewardPreviewWidget_C_PopulateBlastPass::CallFunc_Get_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(RewardPreviewWidget_C_PopulateBlastPass, CallFunc_TryGetBlastPassDefinition_OutDefinition) == 0x000118, "Member 'RewardPreviewWidget_C_PopulateBlastPass::CallFunc_TryGetBlastPassDefinition_OutDefinition' has a wrong offset!");
static_assert(offsetof(RewardPreviewWidget_C_PopulateBlastPass, CallFunc_TryGetBlastPassDefinition_ReturnValue) == 0x000180, "Member 'RewardPreviewWidget_C_PopulateBlastPass::CallFunc_TryGetBlastPassDefinition_ReturnValue' has a wrong offset!");
static_assert(offsetof(RewardPreviewWidget_C_PopulateBlastPass, CallFunc_GetFrontEndGlobals_ReturnValue) == 0x000188, "Member 'RewardPreviewWidget_C_PopulateBlastPass::CallFunc_GetFrontEndGlobals_ReturnValue' has a wrong offset!");
static_assert(offsetof(RewardPreviewWidget_C_PopulateBlastPass, CallFunc_GetStoreGlobals_ReturnValue) == 0x000190, "Member 'RewardPreviewWidget_C_PopulateBlastPass::CallFunc_GetStoreGlobals_ReturnValue' has a wrong offset!");
static_assert(offsetof(RewardPreviewWidget_C_PopulateBlastPass, K2Node_MakeStruct_FormatArgumentData) == 0x000198, "Member 'RewardPreviewWidget_C_PopulateBlastPass::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(RewardPreviewWidget_C_PopulateBlastPass, CallFunc_GetImage_ImageBrushOut) == 0x0001D8, "Member 'RewardPreviewWidget_C_PopulateBlastPass::CallFunc_GetImage_ImageBrushOut' has a wrong offset!");
static_assert(offsetof(RewardPreviewWidget_C_PopulateBlastPass, CallFunc_GetImage_ReturnValue) == 0x000260, "Member 'RewardPreviewWidget_C_PopulateBlastPass::CallFunc_GetImage_ReturnValue' has a wrong offset!");
static_assert(offsetof(RewardPreviewWidget_C_PopulateBlastPass, K2Node_MakeArray_Array) == 0x000268, "Member 'RewardPreviewWidget_C_PopulateBlastPass::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(RewardPreviewWidget_C_PopulateBlastPass, CallFunc_Format_ReturnValue) == 0x000278, "Member 'RewardPreviewWidget_C_PopulateBlastPass::CallFunc_Format_ReturnValue' has a wrong offset!");

// Function RewardPreviewWidget.RewardPreviewWidget_C.PopulateXPBonus
// 0x0168 (0x0168 - 0x0000)
struct RewardPreviewWidget_C_PopulateXPBonus final
{
public:
	EMangoBlastPassXPBonusType                    Type;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Percent;                                           // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Temp_object_Variable;                              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0010(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0050(0x0010)(ZeroConstructor, ReferenceParm)
	class UObject*                                Temp_object_Variable_1;                            // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0068(0x0018)()
	EMangoBlastPassXPBonusType                    Temp_byte_Variable;                                // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable;                                // 0x0088(0x0018)()
	class FText                                   Temp_text_Variable_1;                              // 0x00A0(0x0018)()
	class FText                                   K2Node_Select_Default;                             // 0x00B8(0x0018)()
	EMangoBlastPassXPBonusType                    Temp_byte_Variable_1;                              // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D1[0x7];                                       // 0x00D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                K2Node_Select_Default_1;                           // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateBrush                            K2Node_MakeStruct_SlateBrush;                      // 0x00E0(0x0088)()
};
static_assert(alignof(RewardPreviewWidget_C_PopulateXPBonus) == 0x000008, "Wrong alignment on RewardPreviewWidget_C_PopulateXPBonus");
static_assert(sizeof(RewardPreviewWidget_C_PopulateXPBonus) == 0x000168, "Wrong size on RewardPreviewWidget_C_PopulateXPBonus");
static_assert(offsetof(RewardPreviewWidget_C_PopulateXPBonus, Type) == 0x000000, "Member 'RewardPreviewWidget_C_PopulateXPBonus::Type' has a wrong offset!");
static_assert(offsetof(RewardPreviewWidget_C_PopulateXPBonus, Percent) == 0x000004, "Member 'RewardPreviewWidget_C_PopulateXPBonus::Percent' has a wrong offset!");
static_assert(offsetof(RewardPreviewWidget_C_PopulateXPBonus, Temp_object_Variable) == 0x000008, "Member 'RewardPreviewWidget_C_PopulateXPBonus::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(RewardPreviewWidget_C_PopulateXPBonus, K2Node_MakeStruct_FormatArgumentData) == 0x000010, "Member 'RewardPreviewWidget_C_PopulateXPBonus::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(RewardPreviewWidget_C_PopulateXPBonus, K2Node_MakeArray_Array) == 0x000050, "Member 'RewardPreviewWidget_C_PopulateXPBonus::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(RewardPreviewWidget_C_PopulateXPBonus, Temp_object_Variable_1) == 0x000060, "Member 'RewardPreviewWidget_C_PopulateXPBonus::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(RewardPreviewWidget_C_PopulateXPBonus, CallFunc_Format_ReturnValue) == 0x000068, "Member 'RewardPreviewWidget_C_PopulateXPBonus::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(RewardPreviewWidget_C_PopulateXPBonus, Temp_byte_Variable) == 0x000080, "Member 'RewardPreviewWidget_C_PopulateXPBonus::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(RewardPreviewWidget_C_PopulateXPBonus, Temp_text_Variable) == 0x000088, "Member 'RewardPreviewWidget_C_PopulateXPBonus::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(RewardPreviewWidget_C_PopulateXPBonus, Temp_text_Variable_1) == 0x0000A0, "Member 'RewardPreviewWidget_C_PopulateXPBonus::Temp_text_Variable_1' has a wrong offset!");
static_assert(offsetof(RewardPreviewWidget_C_PopulateXPBonus, K2Node_Select_Default) == 0x0000B8, "Member 'RewardPreviewWidget_C_PopulateXPBonus::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(RewardPreviewWidget_C_PopulateXPBonus, Temp_byte_Variable_1) == 0x0000D0, "Member 'RewardPreviewWidget_C_PopulateXPBonus::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(RewardPreviewWidget_C_PopulateXPBonus, K2Node_Select_Default_1) == 0x0000D8, "Member 'RewardPreviewWidget_C_PopulateXPBonus::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(RewardPreviewWidget_C_PopulateXPBonus, K2Node_MakeStruct_SlateBrush) == 0x0000E0, "Member 'RewardPreviewWidget_C_PopulateXPBonus::K2Node_MakeStruct_SlateBrush' has a wrong offset!");

// Function RewardPreviewWidget.RewardPreviewWidget_C.Populate Mango Reward
// 0x00B0 (0x00B0 - 0x0000)
struct RewardPreviewWidget_C_Populate_Mango_Reward final
{
public:
	struct FMangoReward                           Reward;                                            // 0x0000(0x0040)(BlueprintVisible, BlueprintReadOnly, Parm)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x0042(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_2;             // 0x0043(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_StrStr_ReturnValue;              // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0045(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_46[0x2];                                       // 0x0046(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UMangoCMSManager*                       CallFunc_Get_ReturnValue;                          // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMangoItem                             CallFunc_TryGetItemByCMSID_OutItem;                // 0x0058(0x0050)()
	bool                                          CallFunc_TryGetItemByCMSID_ReturnValue;            // 0x00A8(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x00A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(RewardPreviewWidget_C_Populate_Mango_Reward) == 0x000008, "Wrong alignment on RewardPreviewWidget_C_Populate_Mango_Reward");
static_assert(sizeof(RewardPreviewWidget_C_Populate_Mango_Reward) == 0x0000B0, "Wrong size on RewardPreviewWidget_C_Populate_Mango_Reward");
static_assert(offsetof(RewardPreviewWidget_C_Populate_Mango_Reward, Reward) == 0x000000, "Member 'RewardPreviewWidget_C_Populate_Mango_Reward::Reward' has a wrong offset!");
static_assert(offsetof(RewardPreviewWidget_C_Populate_Mango_Reward, Temp_byte_Variable) == 0x000040, "Member 'RewardPreviewWidget_C_Populate_Mango_Reward::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(RewardPreviewWidget_C_Populate_Mango_Reward, CallFunc_Greater_IntInt_ReturnValue) == 0x000041, "Member 'RewardPreviewWidget_C_Populate_Mango_Reward::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(RewardPreviewWidget_C_Populate_Mango_Reward, CallFunc_Greater_IntInt_ReturnValue_1) == 0x000042, "Member 'RewardPreviewWidget_C_Populate_Mango_Reward::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(RewardPreviewWidget_C_Populate_Mango_Reward, CallFunc_Greater_IntInt_ReturnValue_2) == 0x000043, "Member 'RewardPreviewWidget_C_Populate_Mango_Reward::CallFunc_Greater_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(RewardPreviewWidget_C_Populate_Mango_Reward, CallFunc_NotEqual_StrStr_ReturnValue) == 0x000044, "Member 'RewardPreviewWidget_C_Populate_Mango_Reward::CallFunc_NotEqual_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(RewardPreviewWidget_C_Populate_Mango_Reward, Temp_byte_Variable_1) == 0x000045, "Member 'RewardPreviewWidget_C_Populate_Mango_Reward::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(RewardPreviewWidget_C_Populate_Mango_Reward, CallFunc_Get_ReturnValue) == 0x000048, "Member 'RewardPreviewWidget_C_Populate_Mango_Reward::CallFunc_Get_ReturnValue' has a wrong offset!");
static_assert(offsetof(RewardPreviewWidget_C_Populate_Mango_Reward, Temp_bool_Variable) == 0x000050, "Member 'RewardPreviewWidget_C_Populate_Mango_Reward::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(RewardPreviewWidget_C_Populate_Mango_Reward, CallFunc_TryGetItemByCMSID_OutItem) == 0x000058, "Member 'RewardPreviewWidget_C_Populate_Mango_Reward::CallFunc_TryGetItemByCMSID_OutItem' has a wrong offset!");
static_assert(offsetof(RewardPreviewWidget_C_Populate_Mango_Reward, CallFunc_TryGetItemByCMSID_ReturnValue) == 0x0000A8, "Member 'RewardPreviewWidget_C_Populate_Mango_Reward::CallFunc_TryGetItemByCMSID_ReturnValue' has a wrong offset!");
static_assert(offsetof(RewardPreviewWidget_C_Populate_Mango_Reward, K2Node_Select_Default) == 0x0000A9, "Member 'RewardPreviewWidget_C_Populate_Mango_Reward::K2Node_Select_Default' has a wrong offset!");

// Function RewardPreviewWidget.RewardPreviewWidget_C.GetRocketbucksIcon
// 0x0340 (0x0340 - 0x0000)
struct RewardPreviewWidget_C_GetRocketbucksIcon final
{
public:
	int32                                         RocketBucks;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateBrush                            Icon;                                              // 0x0008(0x0088)(Parm, OutParm)
	struct FSlateBrush                            K2Node_MakeStruct_SlateBrush;                      // 0x0090(0x0088)()
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x0119(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_2;           // 0x011A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_3;           // 0x011B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11C[0x4];                                      // 0x011C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateBrush                            K2Node_MakeStruct_SlateBrush_1;                    // 0x0120(0x0088)()
	struct FSlateBrush                            K2Node_MakeStruct_SlateBrush_2;                    // 0x01A8(0x0088)()
	struct FSlateBrush                            K2Node_MakeStruct_SlateBrush_3;                    // 0x0230(0x0088)()
	struct FSlateBrush                            K2Node_MakeStruct_SlateBrush_4;                    // 0x02B8(0x0088)()
};
static_assert(alignof(RewardPreviewWidget_C_GetRocketbucksIcon) == 0x000008, "Wrong alignment on RewardPreviewWidget_C_GetRocketbucksIcon");
static_assert(sizeof(RewardPreviewWidget_C_GetRocketbucksIcon) == 0x000340, "Wrong size on RewardPreviewWidget_C_GetRocketbucksIcon");
static_assert(offsetof(RewardPreviewWidget_C_GetRocketbucksIcon, RocketBucks) == 0x000000, "Member 'RewardPreviewWidget_C_GetRocketbucksIcon::RocketBucks' has a wrong offset!");
static_assert(offsetof(RewardPreviewWidget_C_GetRocketbucksIcon, Icon) == 0x000008, "Member 'RewardPreviewWidget_C_GetRocketbucksIcon::Icon' has a wrong offset!");
static_assert(offsetof(RewardPreviewWidget_C_GetRocketbucksIcon, K2Node_MakeStruct_SlateBrush) == 0x000090, "Member 'RewardPreviewWidget_C_GetRocketbucksIcon::K2Node_MakeStruct_SlateBrush' has a wrong offset!");
static_assert(offsetof(RewardPreviewWidget_C_GetRocketbucksIcon, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000118, "Member 'RewardPreviewWidget_C_GetRocketbucksIcon::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(RewardPreviewWidget_C_GetRocketbucksIcon, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x000119, "Member 'RewardPreviewWidget_C_GetRocketbucksIcon::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(RewardPreviewWidget_C_GetRocketbucksIcon, CallFunc_LessEqual_IntInt_ReturnValue_2) == 0x00011A, "Member 'RewardPreviewWidget_C_GetRocketbucksIcon::CallFunc_LessEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(RewardPreviewWidget_C_GetRocketbucksIcon, CallFunc_LessEqual_IntInt_ReturnValue_3) == 0x00011B, "Member 'RewardPreviewWidget_C_GetRocketbucksIcon::CallFunc_LessEqual_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(RewardPreviewWidget_C_GetRocketbucksIcon, K2Node_MakeStruct_SlateBrush_1) == 0x000120, "Member 'RewardPreviewWidget_C_GetRocketbucksIcon::K2Node_MakeStruct_SlateBrush_1' has a wrong offset!");
static_assert(offsetof(RewardPreviewWidget_C_GetRocketbucksIcon, K2Node_MakeStruct_SlateBrush_2) == 0x0001A8, "Member 'RewardPreviewWidget_C_GetRocketbucksIcon::K2Node_MakeStruct_SlateBrush_2' has a wrong offset!");
static_assert(offsetof(RewardPreviewWidget_C_GetRocketbucksIcon, K2Node_MakeStruct_SlateBrush_3) == 0x000230, "Member 'RewardPreviewWidget_C_GetRocketbucksIcon::K2Node_MakeStruct_SlateBrush_3' has a wrong offset!");
static_assert(offsetof(RewardPreviewWidget_C_GetRocketbucksIcon, K2Node_MakeStruct_SlateBrush_4) == 0x0002B8, "Member 'RewardPreviewWidget_C_GetRocketbucksIcon::K2Node_MakeStruct_SlateBrush_4' has a wrong offset!");

// Function RewardPreviewWidget.RewardPreviewWidget_C.GetAssets
// 0x00D0 (0x00D0 - 0x0000)
struct RewardPreviewWidget_C_GetAssets final
{
public:
	struct FMarinerLayeredButtonAssets            ReturnValue;                                       // 0x0000(0x0068)(Parm, OutParm, ReturnParm, NoDestructor, ContainsInstancedReference)
	struct FMarinerLayeredButtonAssets            K2Node_MakeStruct_MarinerLayeredButtonAssets;      // 0x0068(0x0068)(NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(RewardPreviewWidget_C_GetAssets) == 0x000008, "Wrong alignment on RewardPreviewWidget_C_GetAssets");
static_assert(sizeof(RewardPreviewWidget_C_GetAssets) == 0x0000D0, "Wrong size on RewardPreviewWidget_C_GetAssets");
static_assert(offsetof(RewardPreviewWidget_C_GetAssets, ReturnValue) == 0x000000, "Member 'RewardPreviewWidget_C_GetAssets::ReturnValue' has a wrong offset!");
static_assert(offsetof(RewardPreviewWidget_C_GetAssets, K2Node_MakeStruct_MarinerLayeredButtonAssets) == 0x000068, "Member 'RewardPreviewWidget_C_GetAssets::K2Node_MakeStruct_MarinerLayeredButtonAssets' has a wrong offset!");

}

