#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_MarinerTrialsGameState

#include "Basic.hpp"

#include "BP_MarinerTrialsGameState_classes.hpp"
#include "BP_MarinerTrialsGameState_parameters.hpp"


namespace SDK
{

// Function BP_MarinerTrialsGameState.BP_MarinerTrialsGameState_C.OnPreroundCountdownChange__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   TimeLeft                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ShouldEnable                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_MarinerTrialsGameState_C::OnPreroundCountdownChange__DelegateSignature(int32 TimeLeft, bool ShouldEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MarinerTrialsGameState_C", "OnPreroundCountdownChange__DelegateSignature");

	Params::BP_MarinerTrialsGameState_C_OnPreroundCountdownChange__DelegateSignature Parms{};

	Parms.TimeLeft = TimeLeft;
	Parms.ShouldEnable = ShouldEnable;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MarinerTrialsGameState.BP_MarinerTrialsGameState_C.ExecuteUbergraph_BP_MarinerTrialsGameState
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MarinerTrialsGameState_C::ExecuteUbergraph_BP_MarinerTrialsGameState(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MarinerTrialsGameState_C", "ExecuteUbergraph_BP_MarinerTrialsGameState");

	Params::BP_MarinerTrialsGameState_C_ExecuteUbergraph_BP_MarinerTrialsGameState Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MarinerTrialsGameState.BP_MarinerTrialsGameState_C.PauseTrialsGameTimer
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsPaused                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_MarinerTrialsGameState_C::PauseTrialsGameTimer(bool IsPaused)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MarinerTrialsGameState_C", "PauseTrialsGameTimer");

	Params::BP_MarinerTrialsGameState_C_PauseTrialsGameTimer Parms{};

	Parms.IsPaused = IsPaused;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MarinerTrialsGameState.BP_MarinerTrialsGameState_C.OnTrialsGameTimeTimerStart
// (BlueprintCallable, BlueprintEvent)

void ABP_MarinerTrialsGameState_C::OnTrialsGameTimeTimerStart()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MarinerTrialsGameState_C", "OnTrialsGameTimeTimerStart");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MarinerTrialsGameState.BP_MarinerTrialsGameState_C.StartTrialsGameTimer
// (BlueprintCallable, BlueprintEvent)

void ABP_MarinerTrialsGameState_C::StartTrialsGameTimer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MarinerTrialsGameState_C", "StartTrialsGameTimer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MarinerTrialsGameState.BP_MarinerTrialsGameState_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_MarinerTrialsGameState_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MarinerTrialsGameState_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MarinerTrialsGameState.BP_MarinerTrialsGameState_C.FinishPreroundCountdownTimer
// (BlueprintCallable, BlueprintEvent)

void ABP_MarinerTrialsGameState_C::FinishPreroundCountdownTimer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MarinerTrialsGameState_C", "FinishPreroundCountdownTimer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MarinerTrialsGameState.BP_MarinerTrialsGameState_C.PreroundTimerUpdate
// (BlueprintCallable, BlueprintEvent)

void ABP_MarinerTrialsGameState_C::PreroundTimerUpdate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MarinerTrialsGameState_C", "PreroundTimerUpdate");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MarinerTrialsGameState.BP_MarinerTrialsGameState_C.OnMaxPreroundTimerSet
// (BlueprintCallable, BlueprintEvent)

void ABP_MarinerTrialsGameState_C::OnMaxPreroundTimerSet()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MarinerTrialsGameState_C", "OnMaxPreroundTimerSet");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MarinerTrialsGameState.BP_MarinerTrialsGameState_C.OnPreroundCountdownSet
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   PreRoundCountdownEndTimeStamp                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MarinerTrialsGameState_C::OnPreroundCountdownSet(float PreRoundCountdownEndTimeStamp)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MarinerTrialsGameState_C", "OnPreroundCountdownSet");

	Params::BP_MarinerTrialsGameState_C_OnPreroundCountdownSet Parms{};

	Parms.PreRoundCountdownEndTimeStamp = PreRoundCountdownEndTimeStamp;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MarinerTrialsGameState.BP_MarinerTrialsGameState_C.EnablePreroundCountdown
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   TimerLength                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ShouldEnable                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_MarinerTrialsGameState_C::EnablePreroundCountdown(float TimerLength, bool ShouldEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MarinerTrialsGameState_C", "EnablePreroundCountdown");

	Params::BP_MarinerTrialsGameState_C_EnablePreroundCountdown Parms{};

	Parms.TimerLength = TimerLength;
	Parms.ShouldEnable = ShouldEnable;

	UObject::ProcessEvent(Func, &Parms);
}

}

