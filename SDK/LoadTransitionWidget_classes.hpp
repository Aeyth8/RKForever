#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: LoadTransitionWidget

#include "Basic.hpp"

#include "Mariner_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass LoadTransitionWidget.LoadTransitionWidget_C
// 0x0060 (0x02F0 - 0x0290)
class ULoadTransitionWidget_C final : public UMarinerLoadTransitionWidget
{
public:
	class UWidgetAnimation*                       TransitionAnimationOut;                            // 0x0290(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       TransitionAnimationIn;                             // 0x0298(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 BackgroundBlackBars;                               // 0x02A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 BackgroundWhite;                                   // 0x02A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 SpinningRocket1;                                   // 0x02B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Spinningrocketcover;                               // 0x02B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 SpinningRocketOut;                                 // 0x02C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Transitionblue;                                    // 0x02C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 TransitionGrey;                                    // 0x02D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 TransitionWhite;                                   // 0x02D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 WhiteFadeIn;                                       // 0x02E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 WhiteFadeOut;                                      // 0x02E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)

public:
	class UWidgetAnimation* GetTransitionInAnimation() const;
	class UWidgetAnimation* GetTransitionOutAnimation() const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"LoadTransitionWidget_C">();
	}
	static class ULoadTransitionWidget_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ULoadTransitionWidget_C>();
	}
};
static_assert(alignof(ULoadTransitionWidget_C) == 0x000008, "Wrong alignment on ULoadTransitionWidget_C");
static_assert(sizeof(ULoadTransitionWidget_C) == 0x0002F0, "Wrong size on ULoadTransitionWidget_C");
static_assert(offsetof(ULoadTransitionWidget_C, TransitionAnimationOut) == 0x000290, "Member 'ULoadTransitionWidget_C::TransitionAnimationOut' has a wrong offset!");
static_assert(offsetof(ULoadTransitionWidget_C, TransitionAnimationIn) == 0x000298, "Member 'ULoadTransitionWidget_C::TransitionAnimationIn' has a wrong offset!");
static_assert(offsetof(ULoadTransitionWidget_C, BackgroundBlackBars) == 0x0002A0, "Member 'ULoadTransitionWidget_C::BackgroundBlackBars' has a wrong offset!");
static_assert(offsetof(ULoadTransitionWidget_C, BackgroundWhite) == 0x0002A8, "Member 'ULoadTransitionWidget_C::BackgroundWhite' has a wrong offset!");
static_assert(offsetof(ULoadTransitionWidget_C, SpinningRocket1) == 0x0002B0, "Member 'ULoadTransitionWidget_C::SpinningRocket1' has a wrong offset!");
static_assert(offsetof(ULoadTransitionWidget_C, Spinningrocketcover) == 0x0002B8, "Member 'ULoadTransitionWidget_C::Spinningrocketcover' has a wrong offset!");
static_assert(offsetof(ULoadTransitionWidget_C, SpinningRocketOut) == 0x0002C0, "Member 'ULoadTransitionWidget_C::SpinningRocketOut' has a wrong offset!");
static_assert(offsetof(ULoadTransitionWidget_C, Transitionblue) == 0x0002C8, "Member 'ULoadTransitionWidget_C::Transitionblue' has a wrong offset!");
static_assert(offsetof(ULoadTransitionWidget_C, TransitionGrey) == 0x0002D0, "Member 'ULoadTransitionWidget_C::TransitionGrey' has a wrong offset!");
static_assert(offsetof(ULoadTransitionWidget_C, TransitionWhite) == 0x0002D8, "Member 'ULoadTransitionWidget_C::TransitionWhite' has a wrong offset!");
static_assert(offsetof(ULoadTransitionWidget_C, WhiteFadeIn) == 0x0002E0, "Member 'ULoadTransitionWidget_C::WhiteFadeIn' has a wrong offset!");
static_assert(offsetof(ULoadTransitionWidget_C, WhiteFadeOut) == 0x0002E8, "Member 'ULoadTransitionWidget_C::WhiteFadeOut' has a wrong offset!");

}

