#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PostGameBlastPassAndQuestProgress

#include "Basic.hpp"

#include "Mariner_structs.hpp"
#include "MangoClient_structs.hpp"
#include "UMG_structs.hpp"
#include "AkAudio_structs.hpp"


namespace SDK::Params
{

// Function PostGameBlastPassAndQuestProgress.PostGameBlastPassAndQuestProgress_C.ExecuteUbergraph_PostGameBlastPassAndQuestProgress
// 0x0178 (0x0178 - 0x0000)
struct PostGameBlastPassAndQuestProgress_C_ExecuteUbergraph_PostGameBlastPassAndQuestProgress final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasBlastPassProgress_HasProgress;         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_PresentNextQuest_QuestConsumed;           // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2296[0x2];                                     // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasQuestProgress_HasProgress;             // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasQuestProgress_HasProgress_1;           // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_PresentNextQuest_QuestConsumed_1;         // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_PresentNextReward_RewardConsumed;         // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2297[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FMangoQuestDescription                 K2Node_CustomEvent_Quest;                          // 0x0020(0x0118)()
	bool                                          CallFunc_PresentNextReward_RewardConsumed_1;       // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0139(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x013A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x013B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasBlastPassProgress_HasProgress_1;       // 0x013C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasRewards_HasRewards;                    // 0x013D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasRewards_HasRewards_1;                  // 0x013E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_RemoveSelf_ReturnValue;                   // 0x013F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         K2Node_CustomEvent_Level;                          // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bFromSubMenu;                         // 0x0144(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_PresentNextQuest_QuestConsumed_2;         // 0x0145(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasBlastPassProgress_HasProgress_2;       // 0x0146(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2298[0x1];                                     // 0x0147(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable;                            // 0x0148(0x0010)(ConstParm, ZeroConstructor, NoDestructor)
	class UMangoInventoryManager*                 CallFunc_Get_ReturnValue;                          // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FAkExternalSourceInfo>          Temp_struct_Variable;                              // 0x0160(0x0010)(ConstParm, ZeroConstructor, ReferenceParm)
	bool                                          CallFunc_IsActiveBlastPassSeasonOwned_ReturnValue; // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2299[0x3];                                     // 0x0171(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_PostEvent_ReturnValue;                    // 0x0174(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PostGameBlastPassAndQuestProgress_C_ExecuteUbergraph_PostGameBlastPassAndQuestProgress) == 0x000008, "Wrong alignment on PostGameBlastPassAndQuestProgress_C_ExecuteUbergraph_PostGameBlastPassAndQuestProgress");
static_assert(sizeof(PostGameBlastPassAndQuestProgress_C_ExecuteUbergraph_PostGameBlastPassAndQuestProgress) == 0x000178, "Wrong size on PostGameBlastPassAndQuestProgress_C_ExecuteUbergraph_PostGameBlastPassAndQuestProgress");
static_assert(offsetof(PostGameBlastPassAndQuestProgress_C_ExecuteUbergraph_PostGameBlastPassAndQuestProgress, EntryPoint) == 0x000000, "Member 'PostGameBlastPassAndQuestProgress_C_ExecuteUbergraph_PostGameBlastPassAndQuestProgress::EntryPoint' has a wrong offset!");
static_assert(offsetof(PostGameBlastPassAndQuestProgress_C_ExecuteUbergraph_PostGameBlastPassAndQuestProgress, CallFunc_HasBlastPassProgress_HasProgress) == 0x000004, "Member 'PostGameBlastPassAndQuestProgress_C_ExecuteUbergraph_PostGameBlastPassAndQuestProgress::CallFunc_HasBlastPassProgress_HasProgress' has a wrong offset!");
static_assert(offsetof(PostGameBlastPassAndQuestProgress_C_ExecuteUbergraph_PostGameBlastPassAndQuestProgress, CallFunc_PresentNextQuest_QuestConsumed) == 0x000005, "Member 'PostGameBlastPassAndQuestProgress_C_ExecuteUbergraph_PostGameBlastPassAndQuestProgress::CallFunc_PresentNextQuest_QuestConsumed' has a wrong offset!");
static_assert(offsetof(PostGameBlastPassAndQuestProgress_C_ExecuteUbergraph_PostGameBlastPassAndQuestProgress, CallFunc_GetOwningPlayer_ReturnValue) == 0x000008, "Member 'PostGameBlastPassAndQuestProgress_C_ExecuteUbergraph_PostGameBlastPassAndQuestProgress::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(PostGameBlastPassAndQuestProgress_C_ExecuteUbergraph_PostGameBlastPassAndQuestProgress, CallFunc_HasQuestProgress_HasProgress) == 0x000010, "Member 'PostGameBlastPassAndQuestProgress_C_ExecuteUbergraph_PostGameBlastPassAndQuestProgress::CallFunc_HasQuestProgress_HasProgress' has a wrong offset!");
static_assert(offsetof(PostGameBlastPassAndQuestProgress_C_ExecuteUbergraph_PostGameBlastPassAndQuestProgress, CallFunc_HasQuestProgress_HasProgress_1) == 0x000011, "Member 'PostGameBlastPassAndQuestProgress_C_ExecuteUbergraph_PostGameBlastPassAndQuestProgress::CallFunc_HasQuestProgress_HasProgress_1' has a wrong offset!");
static_assert(offsetof(PostGameBlastPassAndQuestProgress_C_ExecuteUbergraph_PostGameBlastPassAndQuestProgress, CallFunc_PresentNextQuest_QuestConsumed_1) == 0x000012, "Member 'PostGameBlastPassAndQuestProgress_C_ExecuteUbergraph_PostGameBlastPassAndQuestProgress::CallFunc_PresentNextQuest_QuestConsumed_1' has a wrong offset!");
static_assert(offsetof(PostGameBlastPassAndQuestProgress_C_ExecuteUbergraph_PostGameBlastPassAndQuestProgress, CallFunc_PresentNextReward_RewardConsumed) == 0x000013, "Member 'PostGameBlastPassAndQuestProgress_C_ExecuteUbergraph_PostGameBlastPassAndQuestProgress::CallFunc_PresentNextReward_RewardConsumed' has a wrong offset!");
static_assert(offsetof(PostGameBlastPassAndQuestProgress_C_ExecuteUbergraph_PostGameBlastPassAndQuestProgress, CallFunc_PlayAnimation_ReturnValue) == 0x000018, "Member 'PostGameBlastPassAndQuestProgress_C_ExecuteUbergraph_PostGameBlastPassAndQuestProgress::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(PostGameBlastPassAndQuestProgress_C_ExecuteUbergraph_PostGameBlastPassAndQuestProgress, K2Node_CustomEvent_Quest) == 0x000020, "Member 'PostGameBlastPassAndQuestProgress_C_ExecuteUbergraph_PostGameBlastPassAndQuestProgress::K2Node_CustomEvent_Quest' has a wrong offset!");
static_assert(offsetof(PostGameBlastPassAndQuestProgress_C_ExecuteUbergraph_PostGameBlastPassAndQuestProgress, CallFunc_PresentNextReward_RewardConsumed_1) == 0x000138, "Member 'PostGameBlastPassAndQuestProgress_C_ExecuteUbergraph_PostGameBlastPassAndQuestProgress::CallFunc_PresentNextReward_RewardConsumed_1' has a wrong offset!");
static_assert(offsetof(PostGameBlastPassAndQuestProgress_C_ExecuteUbergraph_PostGameBlastPassAndQuestProgress, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000139, "Member 'PostGameBlastPassAndQuestProgress_C_ExecuteUbergraph_PostGameBlastPassAndQuestProgress::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(PostGameBlastPassAndQuestProgress_C_ExecuteUbergraph_PostGameBlastPassAndQuestProgress, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x00013A, "Member 'PostGameBlastPassAndQuestProgress_C_ExecuteUbergraph_PostGameBlastPassAndQuestProgress::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PostGameBlastPassAndQuestProgress_C_ExecuteUbergraph_PostGameBlastPassAndQuestProgress, CallFunc_BooleanOR_ReturnValue) == 0x00013B, "Member 'PostGameBlastPassAndQuestProgress_C_ExecuteUbergraph_PostGameBlastPassAndQuestProgress::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(PostGameBlastPassAndQuestProgress_C_ExecuteUbergraph_PostGameBlastPassAndQuestProgress, CallFunc_HasBlastPassProgress_HasProgress_1) == 0x00013C, "Member 'PostGameBlastPassAndQuestProgress_C_ExecuteUbergraph_PostGameBlastPassAndQuestProgress::CallFunc_HasBlastPassProgress_HasProgress_1' has a wrong offset!");
static_assert(offsetof(PostGameBlastPassAndQuestProgress_C_ExecuteUbergraph_PostGameBlastPassAndQuestProgress, CallFunc_HasRewards_HasRewards) == 0x00013D, "Member 'PostGameBlastPassAndQuestProgress_C_ExecuteUbergraph_PostGameBlastPassAndQuestProgress::CallFunc_HasRewards_HasRewards' has a wrong offset!");
static_assert(offsetof(PostGameBlastPassAndQuestProgress_C_ExecuteUbergraph_PostGameBlastPassAndQuestProgress, CallFunc_HasRewards_HasRewards_1) == 0x00013E, "Member 'PostGameBlastPassAndQuestProgress_C_ExecuteUbergraph_PostGameBlastPassAndQuestProgress::CallFunc_HasRewards_HasRewards_1' has a wrong offset!");
static_assert(offsetof(PostGameBlastPassAndQuestProgress_C_ExecuteUbergraph_PostGameBlastPassAndQuestProgress, CallFunc_RemoveSelf_ReturnValue) == 0x00013F, "Member 'PostGameBlastPassAndQuestProgress_C_ExecuteUbergraph_PostGameBlastPassAndQuestProgress::CallFunc_RemoveSelf_ReturnValue' has a wrong offset!");
static_assert(offsetof(PostGameBlastPassAndQuestProgress_C_ExecuteUbergraph_PostGameBlastPassAndQuestProgress, K2Node_CustomEvent_Level) == 0x000140, "Member 'PostGameBlastPassAndQuestProgress_C_ExecuteUbergraph_PostGameBlastPassAndQuestProgress::K2Node_CustomEvent_Level' has a wrong offset!");
static_assert(offsetof(PostGameBlastPassAndQuestProgress_C_ExecuteUbergraph_PostGameBlastPassAndQuestProgress, K2Node_Event_bFromSubMenu) == 0x000144, "Member 'PostGameBlastPassAndQuestProgress_C_ExecuteUbergraph_PostGameBlastPassAndQuestProgress::K2Node_Event_bFromSubMenu' has a wrong offset!");
static_assert(offsetof(PostGameBlastPassAndQuestProgress_C_ExecuteUbergraph_PostGameBlastPassAndQuestProgress, CallFunc_PresentNextQuest_QuestConsumed_2) == 0x000145, "Member 'PostGameBlastPassAndQuestProgress_C_ExecuteUbergraph_PostGameBlastPassAndQuestProgress::CallFunc_PresentNextQuest_QuestConsumed_2' has a wrong offset!");
static_assert(offsetof(PostGameBlastPassAndQuestProgress_C_ExecuteUbergraph_PostGameBlastPassAndQuestProgress, CallFunc_HasBlastPassProgress_HasProgress_2) == 0x000146, "Member 'PostGameBlastPassAndQuestProgress_C_ExecuteUbergraph_PostGameBlastPassAndQuestProgress::CallFunc_HasBlastPassProgress_HasProgress_2' has a wrong offset!");
static_assert(offsetof(PostGameBlastPassAndQuestProgress_C_ExecuteUbergraph_PostGameBlastPassAndQuestProgress, Temp_delegate_Variable) == 0x000148, "Member 'PostGameBlastPassAndQuestProgress_C_ExecuteUbergraph_PostGameBlastPassAndQuestProgress::Temp_delegate_Variable' has a wrong offset!");
static_assert(offsetof(PostGameBlastPassAndQuestProgress_C_ExecuteUbergraph_PostGameBlastPassAndQuestProgress, CallFunc_Get_ReturnValue) == 0x000158, "Member 'PostGameBlastPassAndQuestProgress_C_ExecuteUbergraph_PostGameBlastPassAndQuestProgress::CallFunc_Get_ReturnValue' has a wrong offset!");
static_assert(offsetof(PostGameBlastPassAndQuestProgress_C_ExecuteUbergraph_PostGameBlastPassAndQuestProgress, Temp_struct_Variable) == 0x000160, "Member 'PostGameBlastPassAndQuestProgress_C_ExecuteUbergraph_PostGameBlastPassAndQuestProgress::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(PostGameBlastPassAndQuestProgress_C_ExecuteUbergraph_PostGameBlastPassAndQuestProgress, CallFunc_IsActiveBlastPassSeasonOwned_ReturnValue) == 0x000170, "Member 'PostGameBlastPassAndQuestProgress_C_ExecuteUbergraph_PostGameBlastPassAndQuestProgress::CallFunc_IsActiveBlastPassSeasonOwned_ReturnValue' has a wrong offset!");
static_assert(offsetof(PostGameBlastPassAndQuestProgress_C_ExecuteUbergraph_PostGameBlastPassAndQuestProgress, CallFunc_PostEvent_ReturnValue) == 0x000174, "Member 'PostGameBlastPassAndQuestProgress_C_ExecuteUbergraph_PostGameBlastPassAndQuestProgress::CallFunc_PostEvent_ReturnValue' has a wrong offset!");

// Function PostGameBlastPassAndQuestProgress.PostGameBlastPassAndQuestProgress_C.BP_OnEntered
// 0x0001 (0x0001 - 0x0000)
struct PostGameBlastPassAndQuestProgress_C_BP_OnEntered final
{
public:
	bool                                          bFromSubMenu;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PostGameBlastPassAndQuestProgress_C_BP_OnEntered) == 0x000001, "Wrong alignment on PostGameBlastPassAndQuestProgress_C_BP_OnEntered");
static_assert(sizeof(PostGameBlastPassAndQuestProgress_C_BP_OnEntered) == 0x000001, "Wrong size on PostGameBlastPassAndQuestProgress_C_BP_OnEntered");
static_assert(offsetof(PostGameBlastPassAndQuestProgress_C_BP_OnEntered, bFromSubMenu) == 0x000000, "Member 'PostGameBlastPassAndQuestProgress_C_BP_OnEntered::bFromSubMenu' has a wrong offset!");

// Function PostGameBlastPassAndQuestProgress.PostGameBlastPassAndQuestProgress_C.OnBlastPassBarLevelUp
// 0x0004 (0x0004 - 0x0000)
struct PostGameBlastPassAndQuestProgress_C_OnBlastPassBarLevelUp final
{
public:
	int32                                         Level;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PostGameBlastPassAndQuestProgress_C_OnBlastPassBarLevelUp) == 0x000004, "Wrong alignment on PostGameBlastPassAndQuestProgress_C_OnBlastPassBarLevelUp");
static_assert(sizeof(PostGameBlastPassAndQuestProgress_C_OnBlastPassBarLevelUp) == 0x000004, "Wrong size on PostGameBlastPassAndQuestProgress_C_OnBlastPassBarLevelUp");
static_assert(offsetof(PostGameBlastPassAndQuestProgress_C_OnBlastPassBarLevelUp, Level) == 0x000000, "Member 'PostGameBlastPassAndQuestProgress_C_OnBlastPassBarLevelUp::Level' has a wrong offset!");

// Function PostGameBlastPassAndQuestProgress.PostGameBlastPassAndQuestProgress_C.QuestProgressComplete
// 0x0118 (0x0118 - 0x0000)
struct PostGameBlastPassAndQuestProgress_C_QuestProgressComplete final
{
public:
	struct FMangoQuestDescription                 Quest;                                             // 0x0000(0x0118)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(PostGameBlastPassAndQuestProgress_C_QuestProgressComplete) == 0x000008, "Wrong alignment on PostGameBlastPassAndQuestProgress_C_QuestProgressComplete");
static_assert(sizeof(PostGameBlastPassAndQuestProgress_C_QuestProgressComplete) == 0x000118, "Wrong size on PostGameBlastPassAndQuestProgress_C_QuestProgressComplete");
static_assert(offsetof(PostGameBlastPassAndQuestProgress_C_QuestProgressComplete, Quest) == 0x000000, "Member 'PostGameBlastPassAndQuestProgress_C_QuestProgressComplete::Quest' has a wrong offset!");

// Function PostGameBlastPassAndQuestProgress.PostGameBlastPassAndQuestProgress_C.InitQuests
// 0x02A0 (0x02A0 - 0x0000)
struct PostGameBlastPassAndQuestProgress_C_InitQuests final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_229A[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMarinerMenuManager*                    CallFunc_GetMenuManager_ReturnValue;               // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMarinerMenuSequence*                   CallFunc_GetActiveSequence_ReturnValue;            // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMarinerPostGameSequence*               K2Node_DynamicCast_AsMariner_Post_Game_Sequence;   // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_229B[0x7];                                     // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FMarinerQuestProgress>          CallFunc_GetMatchResultLocalQuests_OutQuests;      // 0x0038(0x0010)(ZeroConstructor, ReferenceParm)
	bool                                          CallFunc_GetMatchResultLocalQuests_ReturnValue;    // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_229C[0x3];                                     // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_229D[0x7];                                     // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMarinerQuestProgress                  CallFunc_Array_Get_Item;                           // 0x0058(0x0230)()
	class UChallengeButton_C*                     CallFunc_AddChallenge_ButtonInstance;              // 0x0288(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0290(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_229E[0x7];                                     // 0x0291(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UChallengeButton_C*                     CallFunc_AddChallenge_ButtonInstance_1;            // 0x0298(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PostGameBlastPassAndQuestProgress_C_InitQuests) == 0x000008, "Wrong alignment on PostGameBlastPassAndQuestProgress_C_InitQuests");
static_assert(sizeof(PostGameBlastPassAndQuestProgress_C_InitQuests) == 0x0002A0, "Wrong size on PostGameBlastPassAndQuestProgress_C_InitQuests");
static_assert(offsetof(PostGameBlastPassAndQuestProgress_C_InitQuests, Temp_int_Array_Index_Variable) == 0x000000, "Member 'PostGameBlastPassAndQuestProgress_C_InitQuests::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(PostGameBlastPassAndQuestProgress_C_InitQuests, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'PostGameBlastPassAndQuestProgress_C_InitQuests::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(PostGameBlastPassAndQuestProgress_C_InitQuests, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'PostGameBlastPassAndQuestProgress_C_InitQuests::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PostGameBlastPassAndQuestProgress_C_InitQuests, CallFunc_PlayAnimation_ReturnValue) == 0x000010, "Member 'PostGameBlastPassAndQuestProgress_C_InitQuests::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(PostGameBlastPassAndQuestProgress_C_InitQuests, CallFunc_GetMenuManager_ReturnValue) == 0x000018, "Member 'PostGameBlastPassAndQuestProgress_C_InitQuests::CallFunc_GetMenuManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(PostGameBlastPassAndQuestProgress_C_InitQuests, CallFunc_GetActiveSequence_ReturnValue) == 0x000020, "Member 'PostGameBlastPassAndQuestProgress_C_InitQuests::CallFunc_GetActiveSequence_ReturnValue' has a wrong offset!");
static_assert(offsetof(PostGameBlastPassAndQuestProgress_C_InitQuests, K2Node_DynamicCast_AsMariner_Post_Game_Sequence) == 0x000028, "Member 'PostGameBlastPassAndQuestProgress_C_InitQuests::K2Node_DynamicCast_AsMariner_Post_Game_Sequence' has a wrong offset!");
static_assert(offsetof(PostGameBlastPassAndQuestProgress_C_InitQuests, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'PostGameBlastPassAndQuestProgress_C_InitQuests::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(PostGameBlastPassAndQuestProgress_C_InitQuests, CallFunc_GetMatchResultLocalQuests_OutQuests) == 0x000038, "Member 'PostGameBlastPassAndQuestProgress_C_InitQuests::CallFunc_GetMatchResultLocalQuests_OutQuests' has a wrong offset!");
static_assert(offsetof(PostGameBlastPassAndQuestProgress_C_InitQuests, CallFunc_GetMatchResultLocalQuests_ReturnValue) == 0x000048, "Member 'PostGameBlastPassAndQuestProgress_C_InitQuests::CallFunc_GetMatchResultLocalQuests_ReturnValue' has a wrong offset!");
static_assert(offsetof(PostGameBlastPassAndQuestProgress_C_InitQuests, CallFunc_Array_Length_ReturnValue) == 0x00004C, "Member 'PostGameBlastPassAndQuestProgress_C_InitQuests::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(PostGameBlastPassAndQuestProgress_C_InitQuests, CallFunc_Less_IntInt_ReturnValue) == 0x000050, "Member 'PostGameBlastPassAndQuestProgress_C_InitQuests::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PostGameBlastPassAndQuestProgress_C_InitQuests, CallFunc_Array_Get_Item) == 0x000058, "Member 'PostGameBlastPassAndQuestProgress_C_InitQuests::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(PostGameBlastPassAndQuestProgress_C_InitQuests, CallFunc_AddChallenge_ButtonInstance) == 0x000288, "Member 'PostGameBlastPassAndQuestProgress_C_InitQuests::CallFunc_AddChallenge_ButtonInstance' has a wrong offset!");
static_assert(offsetof(PostGameBlastPassAndQuestProgress_C_InitQuests, K2Node_SwitchEnum_CmpSuccess) == 0x000290, "Member 'PostGameBlastPassAndQuestProgress_C_InitQuests::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(PostGameBlastPassAndQuestProgress_C_InitQuests, CallFunc_AddChallenge_ButtonInstance_1) == 0x000298, "Member 'PostGameBlastPassAndQuestProgress_C_InitQuests::CallFunc_AddChallenge_ButtonInstance_1' has a wrong offset!");

// Function PostGameBlastPassAndQuestProgress.PostGameBlastPassAndQuestProgress_C.PresentNextQuest
// 0x0078 (0x0078 - 0x0000)
struct PostGameBlastPassAndQuestProgress_C_PresentNextQuest final
{
public:
	bool                                          QuestConsumed;                                     // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_229F[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UChallengeButton_C*                     ChallengeButton;                                   // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const struct FMangoQuestDescription& Quest)> K2Node_CreateDelegate_OutputDelegate;              // 0x0010(0x0010)(ZeroConstructor, NoDestructor)
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_PresentNextQuest_QuestConsumed;           // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_22A0[0x3];                                     // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable;                            // 0x002C(0x0010)(ConstParm, ZeroConstructor, NoDestructor)
	uint8                                         Pad_22A1[0x4];                                     // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FAkExternalSourceInfo>          Temp_struct_Variable;                              // 0x0040(0x0010)(ConstParm, ZeroConstructor, ReferenceParm)
	int32                                         CallFunc_PostEvent_ReturnValue;                    // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_22A2[0x7];                                     // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UChallengeButton_C*                     CallFunc_GetChallenge_Widget;                      // 0x0060(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UChallengeButton_C*                     CallFunc_GetChallenge_Widget_1;                    // 0x0068(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PostGameBlastPassAndQuestProgress_C_PresentNextQuest) == 0x000008, "Wrong alignment on PostGameBlastPassAndQuestProgress_C_PresentNextQuest");
static_assert(sizeof(PostGameBlastPassAndQuestProgress_C_PresentNextQuest) == 0x000078, "Wrong size on PostGameBlastPassAndQuestProgress_C_PresentNextQuest");
static_assert(offsetof(PostGameBlastPassAndQuestProgress_C_PresentNextQuest, QuestConsumed) == 0x000000, "Member 'PostGameBlastPassAndQuestProgress_C_PresentNextQuest::QuestConsumed' has a wrong offset!");
static_assert(offsetof(PostGameBlastPassAndQuestProgress_C_PresentNextQuest, ChallengeButton) == 0x000008, "Member 'PostGameBlastPassAndQuestProgress_C_PresentNextQuest::ChallengeButton' has a wrong offset!");
static_assert(offsetof(PostGameBlastPassAndQuestProgress_C_PresentNextQuest, K2Node_CreateDelegate_OutputDelegate) == 0x000010, "Member 'PostGameBlastPassAndQuestProgress_C_PresentNextQuest::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(PostGameBlastPassAndQuestProgress_C_PresentNextQuest, CallFunc_GetOwningPlayer_ReturnValue) == 0x000020, "Member 'PostGameBlastPassAndQuestProgress_C_PresentNextQuest::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(PostGameBlastPassAndQuestProgress_C_PresentNextQuest, CallFunc_PresentNextQuest_QuestConsumed) == 0x000028, "Member 'PostGameBlastPassAndQuestProgress_C_PresentNextQuest::CallFunc_PresentNextQuest_QuestConsumed' has a wrong offset!");
static_assert(offsetof(PostGameBlastPassAndQuestProgress_C_PresentNextQuest, Temp_delegate_Variable) == 0x00002C, "Member 'PostGameBlastPassAndQuestProgress_C_PresentNextQuest::Temp_delegate_Variable' has a wrong offset!");
static_assert(offsetof(PostGameBlastPassAndQuestProgress_C_PresentNextQuest, Temp_struct_Variable) == 0x000040, "Member 'PostGameBlastPassAndQuestProgress_C_PresentNextQuest::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(PostGameBlastPassAndQuestProgress_C_PresentNextQuest, CallFunc_PostEvent_ReturnValue) == 0x000050, "Member 'PostGameBlastPassAndQuestProgress_C_PresentNextQuest::CallFunc_PostEvent_ReturnValue' has a wrong offset!");
static_assert(offsetof(PostGameBlastPassAndQuestProgress_C_PresentNextQuest, CallFunc_Array_Length_ReturnValue) == 0x000054, "Member 'PostGameBlastPassAndQuestProgress_C_PresentNextQuest::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(PostGameBlastPassAndQuestProgress_C_PresentNextQuest, CallFunc_Greater_IntInt_ReturnValue) == 0x000058, "Member 'PostGameBlastPassAndQuestProgress_C_PresentNextQuest::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PostGameBlastPassAndQuestProgress_C_PresentNextQuest, CallFunc_GetChallenge_Widget) == 0x000060, "Member 'PostGameBlastPassAndQuestProgress_C_PresentNextQuest::CallFunc_GetChallenge_Widget' has a wrong offset!");
static_assert(offsetof(PostGameBlastPassAndQuestProgress_C_PresentNextQuest, CallFunc_GetChallenge_Widget_1) == 0x000068, "Member 'PostGameBlastPassAndQuestProgress_C_PresentNextQuest::CallFunc_GetChallenge_Widget_1' has a wrong offset!");
static_assert(offsetof(PostGameBlastPassAndQuestProgress_C_PresentNextQuest, K2Node_SwitchEnum_CmpSuccess) == 0x000070, "Member 'PostGameBlastPassAndQuestProgress_C_PresentNextQuest::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function PostGameBlastPassAndQuestProgress.PostGameBlastPassAndQuestProgress_C.HasBlastPassProgress
// 0x0080 (0x0080 - 0x0000)
struct PostGameBlastPassAndQuestProgress_C_HasBlastPassProgress final
{
public:
	bool                                          HasProgress;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_22A3[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMangoCMSManager*                       CallFunc_Get_ReturnValue;                          // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FMangoBlastPassDefinition              CallFunc_TryGetActiveBlastPassDefinition_OutDefinition; // 0x0010(0x0068)()
	bool                                          CallFunc_TryGetActiveBlastPassDefinition_ReturnValue; // 0x0078(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x007A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x007B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x007D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PostGameBlastPassAndQuestProgress_C_HasBlastPassProgress) == 0x000008, "Wrong alignment on PostGameBlastPassAndQuestProgress_C_HasBlastPassProgress");
static_assert(sizeof(PostGameBlastPassAndQuestProgress_C_HasBlastPassProgress) == 0x000080, "Wrong size on PostGameBlastPassAndQuestProgress_C_HasBlastPassProgress");
static_assert(offsetof(PostGameBlastPassAndQuestProgress_C_HasBlastPassProgress, HasProgress) == 0x000000, "Member 'PostGameBlastPassAndQuestProgress_C_HasBlastPassProgress::HasProgress' has a wrong offset!");
static_assert(offsetof(PostGameBlastPassAndQuestProgress_C_HasBlastPassProgress, CallFunc_Get_ReturnValue) == 0x000008, "Member 'PostGameBlastPassAndQuestProgress_C_HasBlastPassProgress::CallFunc_Get_ReturnValue' has a wrong offset!");
static_assert(offsetof(PostGameBlastPassAndQuestProgress_C_HasBlastPassProgress, CallFunc_TryGetActiveBlastPassDefinition_OutDefinition) == 0x000010, "Member 'PostGameBlastPassAndQuestProgress_C_HasBlastPassProgress::CallFunc_TryGetActiveBlastPassDefinition_OutDefinition' has a wrong offset!");
static_assert(offsetof(PostGameBlastPassAndQuestProgress_C_HasBlastPassProgress, CallFunc_TryGetActiveBlastPassDefinition_ReturnValue) == 0x000078, "Member 'PostGameBlastPassAndQuestProgress_C_HasBlastPassProgress::CallFunc_TryGetActiveBlastPassDefinition_ReturnValue' has a wrong offset!");
static_assert(offsetof(PostGameBlastPassAndQuestProgress_C_HasBlastPassProgress, CallFunc_Less_FloatFloat_ReturnValue) == 0x000079, "Member 'PostGameBlastPassAndQuestProgress_C_HasBlastPassProgress::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PostGameBlastPassAndQuestProgress_C_HasBlastPassProgress, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x00007A, "Member 'PostGameBlastPassAndQuestProgress_C_HasBlastPassProgress::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PostGameBlastPassAndQuestProgress_C_HasBlastPassProgress, CallFunc_Less_IntInt_ReturnValue) == 0x00007B, "Member 'PostGameBlastPassAndQuestProgress_C_HasBlastPassProgress::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PostGameBlastPassAndQuestProgress_C_HasBlastPassProgress, CallFunc_BooleanAND_ReturnValue) == 0x00007C, "Member 'PostGameBlastPassAndQuestProgress_C_HasBlastPassProgress::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(PostGameBlastPassAndQuestProgress_C_HasBlastPassProgress, CallFunc_BooleanOR_ReturnValue) == 0x00007D, "Member 'PostGameBlastPassAndQuestProgress_C_HasBlastPassProgress::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function PostGameBlastPassAndQuestProgress.PostGameBlastPassAndQuestProgress_C.InitBlastPass
// 0x0068 (0x0068 - 0x0000)
struct PostGameBlastPassAndQuestProgress_C_InitBlastPass final
{
public:
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_22A4[0x6];                                     // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMangoCMSManager*                       CallFunc_Get_ReturnValue;                          // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_22A5[0x3];                                     // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetBlastPassMaxTier_OutMaxTier;           // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetBlastPassMaxTier_ReturnValue;          // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_22A6[0x3];                                     // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable;                            // 0x0024(0x0010)(ConstParm, ZeroConstructor, NoDestructor)
	uint8                                         Pad_22A7[0x4];                                     // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FAkExternalSourceInfo>          Temp_struct_Variable;                              // 0x0038(0x0010)(ConstParm, ZeroConstructor, ReferenceParm)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_PostEvent_ReturnValue;                    // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_22A8[0x4];                                     // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMangoInventoryManager*                 CallFunc_Get_ReturnValue_1;                        // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsActiveBlastPassSeasonOwned_ReturnValue; // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PostGameBlastPassAndQuestProgress_C_InitBlastPass) == 0x000008, "Wrong alignment on PostGameBlastPassAndQuestProgress_C_InitBlastPass");
static_assert(sizeof(PostGameBlastPassAndQuestProgress_C_InitBlastPass) == 0x000068, "Wrong size on PostGameBlastPassAndQuestProgress_C_InitBlastPass");
static_assert(offsetof(PostGameBlastPassAndQuestProgress_C_InitBlastPass, Temp_byte_Variable) == 0x000000, "Member 'PostGameBlastPassAndQuestProgress_C_InitBlastPass::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(PostGameBlastPassAndQuestProgress_C_InitBlastPass, Temp_byte_Variable_1) == 0x000001, "Member 'PostGameBlastPassAndQuestProgress_C_InitBlastPass::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(PostGameBlastPassAndQuestProgress_C_InitBlastPass, CallFunc_GetPlayerController_ReturnValue) == 0x000008, "Member 'PostGameBlastPassAndQuestProgress_C_InitBlastPass::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(PostGameBlastPassAndQuestProgress_C_InitBlastPass, CallFunc_Get_ReturnValue) == 0x000010, "Member 'PostGameBlastPassAndQuestProgress_C_InitBlastPass::CallFunc_Get_ReturnValue' has a wrong offset!");
static_assert(offsetof(PostGameBlastPassAndQuestProgress_C_InitBlastPass, Temp_bool_Variable) == 0x000018, "Member 'PostGameBlastPassAndQuestProgress_C_InitBlastPass::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(PostGameBlastPassAndQuestProgress_C_InitBlastPass, CallFunc_GetBlastPassMaxTier_OutMaxTier) == 0x00001C, "Member 'PostGameBlastPassAndQuestProgress_C_InitBlastPass::CallFunc_GetBlastPassMaxTier_OutMaxTier' has a wrong offset!");
static_assert(offsetof(PostGameBlastPassAndQuestProgress_C_InitBlastPass, CallFunc_GetBlastPassMaxTier_ReturnValue) == 0x000020, "Member 'PostGameBlastPassAndQuestProgress_C_InitBlastPass::CallFunc_GetBlastPassMaxTier_ReturnValue' has a wrong offset!");
static_assert(offsetof(PostGameBlastPassAndQuestProgress_C_InitBlastPass, Temp_delegate_Variable) == 0x000024, "Member 'PostGameBlastPassAndQuestProgress_C_InitBlastPass::Temp_delegate_Variable' has a wrong offset!");
static_assert(offsetof(PostGameBlastPassAndQuestProgress_C_InitBlastPass, Temp_struct_Variable) == 0x000038, "Member 'PostGameBlastPassAndQuestProgress_C_InitBlastPass::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(PostGameBlastPassAndQuestProgress_C_InitBlastPass, CallFunc_PlayAnimation_ReturnValue) == 0x000048, "Member 'PostGameBlastPassAndQuestProgress_C_InitBlastPass::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(PostGameBlastPassAndQuestProgress_C_InitBlastPass, CallFunc_PostEvent_ReturnValue) == 0x000050, "Member 'PostGameBlastPassAndQuestProgress_C_InitBlastPass::CallFunc_PostEvent_ReturnValue' has a wrong offset!");
static_assert(offsetof(PostGameBlastPassAndQuestProgress_C_InitBlastPass, CallFunc_Get_ReturnValue_1) == 0x000058, "Member 'PostGameBlastPassAndQuestProgress_C_InitBlastPass::CallFunc_Get_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PostGameBlastPassAndQuestProgress_C_InitBlastPass, CallFunc_IsActiveBlastPassSeasonOwned_ReturnValue) == 0x000060, "Member 'PostGameBlastPassAndQuestProgress_C_InitBlastPass::CallFunc_IsActiveBlastPassSeasonOwned_ReturnValue' has a wrong offset!");
static_assert(offsetof(PostGameBlastPassAndQuestProgress_C_InitBlastPass, K2Node_Select_Default) == 0x000061, "Member 'PostGameBlastPassAndQuestProgress_C_InitBlastPass::K2Node_Select_Default' has a wrong offset!");

// Function PostGameBlastPassAndQuestProgress.PostGameBlastPassAndQuestProgress_C.PresentBlastPassMatchProgress
// 0x0040 (0x0040 - 0x0000)
struct PostGameBlastPassAndQuestProgress_C_PresentBlastPassMatchProgress final
{
public:
	class UMangoCMSManager*                       CallFunc_Get_ReturnValue;                          // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetBlastPassProgressPreQuestRewards_LevelStart; // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetBlastPassProgressPreQuestRewards_LevelEnd; // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetBlastPassProgressPreQuestRewards_ProgressStart; // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetBlastPassProgressPreQuestRewards_ProgressEnd; // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0018(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(int32 Level)>                  K2Node_CreateDelegate_OutputDelegate_1;            // 0x0028(0x0010)(ZeroConstructor, NoDestructor)
	int32                                         CallFunc_GetBlastPassMaxTier_OutMaxTier;           // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetBlastPassMaxTier_ReturnValue;          // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PostGameBlastPassAndQuestProgress_C_PresentBlastPassMatchProgress) == 0x000008, "Wrong alignment on PostGameBlastPassAndQuestProgress_C_PresentBlastPassMatchProgress");
static_assert(sizeof(PostGameBlastPassAndQuestProgress_C_PresentBlastPassMatchProgress) == 0x000040, "Wrong size on PostGameBlastPassAndQuestProgress_C_PresentBlastPassMatchProgress");
static_assert(offsetof(PostGameBlastPassAndQuestProgress_C_PresentBlastPassMatchProgress, CallFunc_Get_ReturnValue) == 0x000000, "Member 'PostGameBlastPassAndQuestProgress_C_PresentBlastPassMatchProgress::CallFunc_Get_ReturnValue' has a wrong offset!");
static_assert(offsetof(PostGameBlastPassAndQuestProgress_C_PresentBlastPassMatchProgress, CallFunc_GetBlastPassProgressPreQuestRewards_LevelStart) == 0x000008, "Member 'PostGameBlastPassAndQuestProgress_C_PresentBlastPassMatchProgress::CallFunc_GetBlastPassProgressPreQuestRewards_LevelStart' has a wrong offset!");
static_assert(offsetof(PostGameBlastPassAndQuestProgress_C_PresentBlastPassMatchProgress, CallFunc_GetBlastPassProgressPreQuestRewards_LevelEnd) == 0x00000C, "Member 'PostGameBlastPassAndQuestProgress_C_PresentBlastPassMatchProgress::CallFunc_GetBlastPassProgressPreQuestRewards_LevelEnd' has a wrong offset!");
static_assert(offsetof(PostGameBlastPassAndQuestProgress_C_PresentBlastPassMatchProgress, CallFunc_GetBlastPassProgressPreQuestRewards_ProgressStart) == 0x000010, "Member 'PostGameBlastPassAndQuestProgress_C_PresentBlastPassMatchProgress::CallFunc_GetBlastPassProgressPreQuestRewards_ProgressStart' has a wrong offset!");
static_assert(offsetof(PostGameBlastPassAndQuestProgress_C_PresentBlastPassMatchProgress, CallFunc_GetBlastPassProgressPreQuestRewards_ProgressEnd) == 0x000014, "Member 'PostGameBlastPassAndQuestProgress_C_PresentBlastPassMatchProgress::CallFunc_GetBlastPassProgressPreQuestRewards_ProgressEnd' has a wrong offset!");
static_assert(offsetof(PostGameBlastPassAndQuestProgress_C_PresentBlastPassMatchProgress, K2Node_CreateDelegate_OutputDelegate) == 0x000018, "Member 'PostGameBlastPassAndQuestProgress_C_PresentBlastPassMatchProgress::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(PostGameBlastPassAndQuestProgress_C_PresentBlastPassMatchProgress, K2Node_CreateDelegate_OutputDelegate_1) == 0x000028, "Member 'PostGameBlastPassAndQuestProgress_C_PresentBlastPassMatchProgress::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(PostGameBlastPassAndQuestProgress_C_PresentBlastPassMatchProgress, CallFunc_GetBlastPassMaxTier_OutMaxTier) == 0x000038, "Member 'PostGameBlastPassAndQuestProgress_C_PresentBlastPassMatchProgress::CallFunc_GetBlastPassMaxTier_OutMaxTier' has a wrong offset!");
static_assert(offsetof(PostGameBlastPassAndQuestProgress_C_PresentBlastPassMatchProgress, CallFunc_GetBlastPassMaxTier_ReturnValue) == 0x00003C, "Member 'PostGameBlastPassAndQuestProgress_C_PresentBlastPassMatchProgress::CallFunc_GetBlastPassMaxTier_ReturnValue' has a wrong offset!");

// Function PostGameBlastPassAndQuestProgress.PostGameBlastPassAndQuestProgress_C.HasQuestProgress
// 0x000C (0x000C - 0x0000)
struct PostGameBlastPassAndQuestProgress_C_HasQuestProgress final
{
public:
	bool                                          HasProgress;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_22A9[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PostGameBlastPassAndQuestProgress_C_HasQuestProgress) == 0x000004, "Wrong alignment on PostGameBlastPassAndQuestProgress_C_HasQuestProgress");
static_assert(sizeof(PostGameBlastPassAndQuestProgress_C_HasQuestProgress) == 0x00000C, "Wrong size on PostGameBlastPassAndQuestProgress_C_HasQuestProgress");
static_assert(offsetof(PostGameBlastPassAndQuestProgress_C_HasQuestProgress, HasProgress) == 0x000000, "Member 'PostGameBlastPassAndQuestProgress_C_HasQuestProgress::HasProgress' has a wrong offset!");
static_assert(offsetof(PostGameBlastPassAndQuestProgress_C_HasQuestProgress, CallFunc_Array_Length_ReturnValue) == 0x000004, "Member 'PostGameBlastPassAndQuestProgress_C_HasQuestProgress::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(PostGameBlastPassAndQuestProgress_C_HasQuestProgress, CallFunc_Greater_IntInt_ReturnValue) == 0x000008, "Member 'PostGameBlastPassAndQuestProgress_C_HasQuestProgress::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

// Function PostGameBlastPassAndQuestProgress.PostGameBlastPassAndQuestProgress_C.HasRewards
// 0x000C (0x000C - 0x0000)
struct PostGameBlastPassAndQuestProgress_C_HasRewards final
{
public:
	bool                                          Param_HasRewards;                                  // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_22AA[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PostGameBlastPassAndQuestProgress_C_HasRewards) == 0x000004, "Wrong alignment on PostGameBlastPassAndQuestProgress_C_HasRewards");
static_assert(sizeof(PostGameBlastPassAndQuestProgress_C_HasRewards) == 0x00000C, "Wrong size on PostGameBlastPassAndQuestProgress_C_HasRewards");
static_assert(offsetof(PostGameBlastPassAndQuestProgress_C_HasRewards, Param_HasRewards) == 0x000000, "Member 'PostGameBlastPassAndQuestProgress_C_HasRewards::Param_HasRewards' has a wrong offset!");
static_assert(offsetof(PostGameBlastPassAndQuestProgress_C_HasRewards, CallFunc_Array_Length_ReturnValue) == 0x000004, "Member 'PostGameBlastPassAndQuestProgress_C_HasRewards::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(PostGameBlastPassAndQuestProgress_C_HasRewards, CallFunc_Greater_IntInt_ReturnValue) == 0x000008, "Member 'PostGameBlastPassAndQuestProgress_C_HasRewards::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

// Function PostGameBlastPassAndQuestProgress.PostGameBlastPassAndQuestProgress_C.InitRewards
// 0x0048 (0x0048 - 0x0000)
struct PostGameBlastPassAndQuestProgress_C_InitRewards final
{
public:
	bool                                          FromQuests;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_22AB[0x6];                                     // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable;                            // 0x0010(0x0010)(ConstParm, ZeroConstructor, NoDestructor)
	TArray<struct FAkExternalSourceInfo>          Temp_struct_Variable;                              // 0x0020(0x0010)(ConstParm, ZeroConstructor, ReferenceParm)
	int32                                         CallFunc_PostEvent_ReturnValue;                    // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_22AC[0x4];                                     // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidgetAnimation*                       K2Node_Select_Default;                             // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PostGameBlastPassAndQuestProgress_C_InitRewards) == 0x000008, "Wrong alignment on PostGameBlastPassAndQuestProgress_C_InitRewards");
static_assert(sizeof(PostGameBlastPassAndQuestProgress_C_InitRewards) == 0x000048, "Wrong size on PostGameBlastPassAndQuestProgress_C_InitRewards");
static_assert(offsetof(PostGameBlastPassAndQuestProgress_C_InitRewards, FromQuests) == 0x000000, "Member 'PostGameBlastPassAndQuestProgress_C_InitRewards::FromQuests' has a wrong offset!");
static_assert(offsetof(PostGameBlastPassAndQuestProgress_C_InitRewards, Temp_bool_Variable) == 0x000001, "Member 'PostGameBlastPassAndQuestProgress_C_InitRewards::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(PostGameBlastPassAndQuestProgress_C_InitRewards, CallFunc_GetPlayerController_ReturnValue) == 0x000008, "Member 'PostGameBlastPassAndQuestProgress_C_InitRewards::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(PostGameBlastPassAndQuestProgress_C_InitRewards, Temp_delegate_Variable) == 0x000010, "Member 'PostGameBlastPassAndQuestProgress_C_InitRewards::Temp_delegate_Variable' has a wrong offset!");
static_assert(offsetof(PostGameBlastPassAndQuestProgress_C_InitRewards, Temp_struct_Variable) == 0x000020, "Member 'PostGameBlastPassAndQuestProgress_C_InitRewards::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(PostGameBlastPassAndQuestProgress_C_InitRewards, CallFunc_PostEvent_ReturnValue) == 0x000030, "Member 'PostGameBlastPassAndQuestProgress_C_InitRewards::CallFunc_PostEvent_ReturnValue' has a wrong offset!");
static_assert(offsetof(PostGameBlastPassAndQuestProgress_C_InitRewards, K2Node_Select_Default) == 0x000038, "Member 'PostGameBlastPassAndQuestProgress_C_InitRewards::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(PostGameBlastPassAndQuestProgress_C_InitRewards, CallFunc_PlayAnimation_ReturnValue) == 0x000040, "Member 'PostGameBlastPassAndQuestProgress_C_InitRewards::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");

// Function PostGameBlastPassAndQuestProgress.PostGameBlastPassAndQuestProgress_C.PresentNextReward
// 0x0058 (0x0058 - 0x0000)
struct PostGameBlastPassAndQuestProgress_C_PresentNextReward final
{
public:
	bool                                          RewardConsumed;                                    // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_22AD[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMangoReward                           CallFunc_Array_Get_Item;                           // 0x0008(0x0040)()
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_22AE[0x3];                                     // 0x004D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PostGameBlastPassAndQuestProgress_C_PresentNextReward) == 0x000008, "Wrong alignment on PostGameBlastPassAndQuestProgress_C_PresentNextReward");
static_assert(sizeof(PostGameBlastPassAndQuestProgress_C_PresentNextReward) == 0x000058, "Wrong size on PostGameBlastPassAndQuestProgress_C_PresentNextReward");
static_assert(offsetof(PostGameBlastPassAndQuestProgress_C_PresentNextReward, RewardConsumed) == 0x000000, "Member 'PostGameBlastPassAndQuestProgress_C_PresentNextReward::RewardConsumed' has a wrong offset!");
static_assert(offsetof(PostGameBlastPassAndQuestProgress_C_PresentNextReward, CallFunc_Array_Get_Item) == 0x000008, "Member 'PostGameBlastPassAndQuestProgress_C_PresentNextReward::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(PostGameBlastPassAndQuestProgress_C_PresentNextReward, CallFunc_Array_Length_ReturnValue) == 0x000048, "Member 'PostGameBlastPassAndQuestProgress_C_PresentNextReward::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(PostGameBlastPassAndQuestProgress_C_PresentNextReward, CallFunc_Greater_IntInt_ReturnValue) == 0x00004C, "Member 'PostGameBlastPassAndQuestProgress_C_PresentNextReward::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PostGameBlastPassAndQuestProgress_C_PresentNextReward, CallFunc_PlayAnimation_ReturnValue) == 0x000050, "Member 'PostGameBlastPassAndQuestProgress_C_PresentNextReward::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");

// Function PostGameBlastPassAndQuestProgress.PostGameBlastPassAndQuestProgress_C.UpdateVisibility
// 0x000F (0x000F - 0x0000)
struct PostGameBlastPassAndQuestProgress_C_UpdateVisibility final
{
public:
	bool                                          ShowBlastPass;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          ShowQuests;                                        // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          ShowRewards;                                       // 0x0002(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_4;                              // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_5;                              // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_2;                           // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PostGameBlastPassAndQuestProgress_C_UpdateVisibility) == 0x000001, "Wrong alignment on PostGameBlastPassAndQuestProgress_C_UpdateVisibility");
static_assert(sizeof(PostGameBlastPassAndQuestProgress_C_UpdateVisibility) == 0x00000F, "Wrong size on PostGameBlastPassAndQuestProgress_C_UpdateVisibility");
static_assert(offsetof(PostGameBlastPassAndQuestProgress_C_UpdateVisibility, ShowBlastPass) == 0x000000, "Member 'PostGameBlastPassAndQuestProgress_C_UpdateVisibility::ShowBlastPass' has a wrong offset!");
static_assert(offsetof(PostGameBlastPassAndQuestProgress_C_UpdateVisibility, ShowQuests) == 0x000001, "Member 'PostGameBlastPassAndQuestProgress_C_UpdateVisibility::ShowQuests' has a wrong offset!");
static_assert(offsetof(PostGameBlastPassAndQuestProgress_C_UpdateVisibility, ShowRewards) == 0x000002, "Member 'PostGameBlastPassAndQuestProgress_C_UpdateVisibility::ShowRewards' has a wrong offset!");
static_assert(offsetof(PostGameBlastPassAndQuestProgress_C_UpdateVisibility, Temp_byte_Variable) == 0x000003, "Member 'PostGameBlastPassAndQuestProgress_C_UpdateVisibility::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(PostGameBlastPassAndQuestProgress_C_UpdateVisibility, Temp_byte_Variable_1) == 0x000004, "Member 'PostGameBlastPassAndQuestProgress_C_UpdateVisibility::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(PostGameBlastPassAndQuestProgress_C_UpdateVisibility, Temp_bool_Variable) == 0x000005, "Member 'PostGameBlastPassAndQuestProgress_C_UpdateVisibility::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(PostGameBlastPassAndQuestProgress_C_UpdateVisibility, Temp_byte_Variable_2) == 0x000006, "Member 'PostGameBlastPassAndQuestProgress_C_UpdateVisibility::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(PostGameBlastPassAndQuestProgress_C_UpdateVisibility, Temp_byte_Variable_3) == 0x000007, "Member 'PostGameBlastPassAndQuestProgress_C_UpdateVisibility::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(PostGameBlastPassAndQuestProgress_C_UpdateVisibility, Temp_bool_Variable_1) == 0x000008, "Member 'PostGameBlastPassAndQuestProgress_C_UpdateVisibility::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(PostGameBlastPassAndQuestProgress_C_UpdateVisibility, K2Node_Select_Default) == 0x000009, "Member 'PostGameBlastPassAndQuestProgress_C_UpdateVisibility::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(PostGameBlastPassAndQuestProgress_C_UpdateVisibility, Temp_byte_Variable_4) == 0x00000A, "Member 'PostGameBlastPassAndQuestProgress_C_UpdateVisibility::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(PostGameBlastPassAndQuestProgress_C_UpdateVisibility, Temp_byte_Variable_5) == 0x00000B, "Member 'PostGameBlastPassAndQuestProgress_C_UpdateVisibility::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(PostGameBlastPassAndQuestProgress_C_UpdateVisibility, Temp_bool_Variable_2) == 0x00000C, "Member 'PostGameBlastPassAndQuestProgress_C_UpdateVisibility::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(PostGameBlastPassAndQuestProgress_C_UpdateVisibility, K2Node_Select_Default_1) == 0x00000D, "Member 'PostGameBlastPassAndQuestProgress_C_UpdateVisibility::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(PostGameBlastPassAndQuestProgress_C_UpdateVisibility, K2Node_Select_Default_2) == 0x00000E, "Member 'PostGameBlastPassAndQuestProgress_C_UpdateVisibility::K2Node_Select_Default_2' has a wrong offset!");

// Function PostGameBlastPassAndQuestProgress.PostGameBlastPassAndQuestProgress_C.InitData
// 0x03A0 (0x03A0 - 0x0000)
struct PostGameBlastPassAndQuestProgress_C_InitData final
{
public:
	class UMarinerMenuManager*                    CallFunc_GetMenuManager_ReturnValue;               // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMarinerMenuSequence*                   CallFunc_GetActiveSequence_ReturnValue;            // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMarinerPostGameSequence*               K2Node_DynamicCast_AsMariner_Post_Game_Sequence;   // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_22AF[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMarinerPostGameData                   CallFunc_GetLocalPlayerPostGameData_ReturnValue;   // 0x0020(0x0358)(ConstParm)
	TArray<struct FMarinerQuestProgress>          CallFunc_GetMatchResultLocalQuestsWithProgress_OutQuests; // 0x0378(0x0010)(ZeroConstructor, ReferenceParm)
	bool                                          CallFunc_GetMatchResultLocalQuestsWithProgress_ReturnValue; // 0x0388(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_22B0[0x7];                                     // 0x0389(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FMangoReward>                   CallFunc_GetParsedQuestsAndBattlePassRewards_OutRewards; // 0x0390(0x0010)(ZeroConstructor, ReferenceParm)
};
static_assert(alignof(PostGameBlastPassAndQuestProgress_C_InitData) == 0x000008, "Wrong alignment on PostGameBlastPassAndQuestProgress_C_InitData");
static_assert(sizeof(PostGameBlastPassAndQuestProgress_C_InitData) == 0x0003A0, "Wrong size on PostGameBlastPassAndQuestProgress_C_InitData");
static_assert(offsetof(PostGameBlastPassAndQuestProgress_C_InitData, CallFunc_GetMenuManager_ReturnValue) == 0x000000, "Member 'PostGameBlastPassAndQuestProgress_C_InitData::CallFunc_GetMenuManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(PostGameBlastPassAndQuestProgress_C_InitData, CallFunc_GetActiveSequence_ReturnValue) == 0x000008, "Member 'PostGameBlastPassAndQuestProgress_C_InitData::CallFunc_GetActiveSequence_ReturnValue' has a wrong offset!");
static_assert(offsetof(PostGameBlastPassAndQuestProgress_C_InitData, K2Node_DynamicCast_AsMariner_Post_Game_Sequence) == 0x000010, "Member 'PostGameBlastPassAndQuestProgress_C_InitData::K2Node_DynamicCast_AsMariner_Post_Game_Sequence' has a wrong offset!");
static_assert(offsetof(PostGameBlastPassAndQuestProgress_C_InitData, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'PostGameBlastPassAndQuestProgress_C_InitData::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(PostGameBlastPassAndQuestProgress_C_InitData, CallFunc_GetLocalPlayerPostGameData_ReturnValue) == 0x000020, "Member 'PostGameBlastPassAndQuestProgress_C_InitData::CallFunc_GetLocalPlayerPostGameData_ReturnValue' has a wrong offset!");
static_assert(offsetof(PostGameBlastPassAndQuestProgress_C_InitData, CallFunc_GetMatchResultLocalQuestsWithProgress_OutQuests) == 0x000378, "Member 'PostGameBlastPassAndQuestProgress_C_InitData::CallFunc_GetMatchResultLocalQuestsWithProgress_OutQuests' has a wrong offset!");
static_assert(offsetof(PostGameBlastPassAndQuestProgress_C_InitData, CallFunc_GetMatchResultLocalQuestsWithProgress_ReturnValue) == 0x000388, "Member 'PostGameBlastPassAndQuestProgress_C_InitData::CallFunc_GetMatchResultLocalQuestsWithProgress_ReturnValue' has a wrong offset!");
static_assert(offsetof(PostGameBlastPassAndQuestProgress_C_InitData, CallFunc_GetParsedQuestsAndBattlePassRewards_OutRewards) == 0x000390, "Member 'PostGameBlastPassAndQuestProgress_C_InitData::CallFunc_GetParsedQuestsAndBattlePassRewards_OutRewards' has a wrong offset!");

// Function PostGameBlastPassAndQuestProgress.PostGameBlastPassAndQuestProgress_C.PresentBlastPassQuestProgress
// 0x01B8 (0x01B8 - 0x0000)
struct PostGameBlastPassAndQuestProgress_C_PresentBlastPassQuestProgress final
{
public:
	struct FMangoQuestDescription                 Quest;                                             // 0x0000(0x0118)(BlueprintVisible, BlueprintReadOnly, Parm)
	class UMangoCMSManager*                       CallFunc_Get_ReturnValue;                          // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0120(0x0010)(ZeroConstructor, NoDestructor)
	struct FMangoQuest                            CallFunc_GetQuest_OutQuest;                        // 0x0130(0x0068)()
	bool                                          CallFunc_GetQuest_ReturnValue;                     // 0x0198(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_22B1[0x3];                                     // 0x0199(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(int32 Level)>                  K2Node_CreateDelegate_OutputDelegate_1;            // 0x019C(0x0010)(ZeroConstructor, NoDestructor)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x01AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x01B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PostGameBlastPassAndQuestProgress_C_PresentBlastPassQuestProgress) == 0x000008, "Wrong alignment on PostGameBlastPassAndQuestProgress_C_PresentBlastPassQuestProgress");
static_assert(sizeof(PostGameBlastPassAndQuestProgress_C_PresentBlastPassQuestProgress) == 0x0001B8, "Wrong size on PostGameBlastPassAndQuestProgress_C_PresentBlastPassQuestProgress");
static_assert(offsetof(PostGameBlastPassAndQuestProgress_C_PresentBlastPassQuestProgress, Quest) == 0x000000, "Member 'PostGameBlastPassAndQuestProgress_C_PresentBlastPassQuestProgress::Quest' has a wrong offset!");
static_assert(offsetof(PostGameBlastPassAndQuestProgress_C_PresentBlastPassQuestProgress, CallFunc_Get_ReturnValue) == 0x000118, "Member 'PostGameBlastPassAndQuestProgress_C_PresentBlastPassQuestProgress::CallFunc_Get_ReturnValue' has a wrong offset!");
static_assert(offsetof(PostGameBlastPassAndQuestProgress_C_PresentBlastPassQuestProgress, K2Node_CreateDelegate_OutputDelegate) == 0x000120, "Member 'PostGameBlastPassAndQuestProgress_C_PresentBlastPassQuestProgress::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(PostGameBlastPassAndQuestProgress_C_PresentBlastPassQuestProgress, CallFunc_GetQuest_OutQuest) == 0x000130, "Member 'PostGameBlastPassAndQuestProgress_C_PresentBlastPassQuestProgress::CallFunc_GetQuest_OutQuest' has a wrong offset!");
static_assert(offsetof(PostGameBlastPassAndQuestProgress_C_PresentBlastPassQuestProgress, CallFunc_GetQuest_ReturnValue) == 0x000198, "Member 'PostGameBlastPassAndQuestProgress_C_PresentBlastPassQuestProgress::CallFunc_GetQuest_ReturnValue' has a wrong offset!");
static_assert(offsetof(PostGameBlastPassAndQuestProgress_C_PresentBlastPassQuestProgress, K2Node_CreateDelegate_OutputDelegate_1) == 0x00019C, "Member 'PostGameBlastPassAndQuestProgress_C_PresentBlastPassQuestProgress::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(PostGameBlastPassAndQuestProgress_C_PresentBlastPassQuestProgress, CallFunc_Conv_IntToFloat_ReturnValue) == 0x0001AC, "Member 'PostGameBlastPassAndQuestProgress_C_PresentBlastPassQuestProgress::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PostGameBlastPassAndQuestProgress_C_PresentBlastPassQuestProgress, CallFunc_Divide_FloatFloat_ReturnValue) == 0x0001B0, "Member 'PostGameBlastPassAndQuestProgress_C_PresentBlastPassQuestProgress::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");

// Function PostGameBlastPassAndQuestProgress.PostGameBlastPassAndQuestProgress_C.UpdateTitle
// 0x0038 (0x0038 - 0x0000)
struct PostGameBlastPassAndQuestProgress_C_UpdateTitle final
{
public:
	class FText                                   Title;                                             // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	class UMarinerMenuManager*                    CallFunc_GetMenuManager_ReturnValue;               // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMarinerMenuSequence*                   CallFunc_GetActiveSequence_ReturnValue;            // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPostGameSequence_C*                    K2Node_DynamicCast_AsPost_Game_Sequence;           // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PostGameBlastPassAndQuestProgress_C_UpdateTitle) == 0x000008, "Wrong alignment on PostGameBlastPassAndQuestProgress_C_UpdateTitle");
static_assert(sizeof(PostGameBlastPassAndQuestProgress_C_UpdateTitle) == 0x000038, "Wrong size on PostGameBlastPassAndQuestProgress_C_UpdateTitle");
static_assert(offsetof(PostGameBlastPassAndQuestProgress_C_UpdateTitle, Title) == 0x000000, "Member 'PostGameBlastPassAndQuestProgress_C_UpdateTitle::Title' has a wrong offset!");
static_assert(offsetof(PostGameBlastPassAndQuestProgress_C_UpdateTitle, CallFunc_GetMenuManager_ReturnValue) == 0x000018, "Member 'PostGameBlastPassAndQuestProgress_C_UpdateTitle::CallFunc_GetMenuManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(PostGameBlastPassAndQuestProgress_C_UpdateTitle, CallFunc_GetActiveSequence_ReturnValue) == 0x000020, "Member 'PostGameBlastPassAndQuestProgress_C_UpdateTitle::CallFunc_GetActiveSequence_ReturnValue' has a wrong offset!");
static_assert(offsetof(PostGameBlastPassAndQuestProgress_C_UpdateTitle, K2Node_DynamicCast_AsPost_Game_Sequence) == 0x000028, "Member 'PostGameBlastPassAndQuestProgress_C_UpdateTitle::K2Node_DynamicCast_AsPost_Game_Sequence' has a wrong offset!");
static_assert(offsetof(PostGameBlastPassAndQuestProgress_C_UpdateTitle, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'PostGameBlastPassAndQuestProgress_C_UpdateTitle::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function PostGameBlastPassAndQuestProgress.PostGameBlastPassAndQuestProgress_C.UpdateSoftCurrency
// 0x0210 (0x0210 - 0x0000)
struct PostGameBlastPassAndQuestProgress_C_UpdateSoftCurrency final
{
public:
	struct FMangoQuestDescription                 Quest;                                             // 0x0000(0x0118)(BlueprintVisible, BlueprintReadOnly, Parm)
	class UMangoCMSManager*                       CallFunc_Get_ReturnValue;                          // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMarinerMenuManager*                    CallFunc_GetMenuManager_ReturnValue;               // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FMangoQuestReward                      CallFunc_GetQuestReward_OutQuestReward;            // 0x0128(0x00C8)()
	bool                                          CallFunc_GetQuestReward_ReturnValue;               // 0x01F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_22B2[0x7];                                     // 0x01F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMarinerMenuSequence*                   CallFunc_GetActiveSequence_ReturnValue;            // 0x01F8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPostGameSequence_C*                    K2Node_DynamicCast_AsPost_Game_Sequence;           // 0x0200(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0208(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PostGameBlastPassAndQuestProgress_C_UpdateSoftCurrency) == 0x000008, "Wrong alignment on PostGameBlastPassAndQuestProgress_C_UpdateSoftCurrency");
static_assert(sizeof(PostGameBlastPassAndQuestProgress_C_UpdateSoftCurrency) == 0x000210, "Wrong size on PostGameBlastPassAndQuestProgress_C_UpdateSoftCurrency");
static_assert(offsetof(PostGameBlastPassAndQuestProgress_C_UpdateSoftCurrency, Quest) == 0x000000, "Member 'PostGameBlastPassAndQuestProgress_C_UpdateSoftCurrency::Quest' has a wrong offset!");
static_assert(offsetof(PostGameBlastPassAndQuestProgress_C_UpdateSoftCurrency, CallFunc_Get_ReturnValue) == 0x000118, "Member 'PostGameBlastPassAndQuestProgress_C_UpdateSoftCurrency::CallFunc_Get_ReturnValue' has a wrong offset!");
static_assert(offsetof(PostGameBlastPassAndQuestProgress_C_UpdateSoftCurrency, CallFunc_GetMenuManager_ReturnValue) == 0x000120, "Member 'PostGameBlastPassAndQuestProgress_C_UpdateSoftCurrency::CallFunc_GetMenuManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(PostGameBlastPassAndQuestProgress_C_UpdateSoftCurrency, CallFunc_GetQuestReward_OutQuestReward) == 0x000128, "Member 'PostGameBlastPassAndQuestProgress_C_UpdateSoftCurrency::CallFunc_GetQuestReward_OutQuestReward' has a wrong offset!");
static_assert(offsetof(PostGameBlastPassAndQuestProgress_C_UpdateSoftCurrency, CallFunc_GetQuestReward_ReturnValue) == 0x0001F0, "Member 'PostGameBlastPassAndQuestProgress_C_UpdateSoftCurrency::CallFunc_GetQuestReward_ReturnValue' has a wrong offset!");
static_assert(offsetof(PostGameBlastPassAndQuestProgress_C_UpdateSoftCurrency, CallFunc_GetActiveSequence_ReturnValue) == 0x0001F8, "Member 'PostGameBlastPassAndQuestProgress_C_UpdateSoftCurrency::CallFunc_GetActiveSequence_ReturnValue' has a wrong offset!");
static_assert(offsetof(PostGameBlastPassAndQuestProgress_C_UpdateSoftCurrency, K2Node_DynamicCast_AsPost_Game_Sequence) == 0x000200, "Member 'PostGameBlastPassAndQuestProgress_C_UpdateSoftCurrency::K2Node_DynamicCast_AsPost_Game_Sequence' has a wrong offset!");
static_assert(offsetof(PostGameBlastPassAndQuestProgress_C_UpdateSoftCurrency, K2Node_DynamicCast_bSuccess) == 0x000208, "Member 'PostGameBlastPassAndQuestProgress_C_UpdateSoftCurrency::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function PostGameBlastPassAndQuestProgress.PostGameBlastPassAndQuestProgress_C.GetBlastPassProgressPreQuestRewards
// 0x02F8 (0x02F8 - 0x0000)
struct PostGameBlastPassAndQuestProgress_C_GetBlastPassProgressPreQuestRewards final
{
public:
	int32                                         LevelStart;                                        // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         LevelEnd;                                          // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ProgressStart;                                     // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ProgressEnd;                                       // 0x000C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TotalQuestBPProgress;                              // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMangoCMSManager*                       CallFunc_Get_ReturnValue;                          // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_AddLevelPercent_OutLevel;                 // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_AddLevelPercent_OutProgress;              // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FMarinerQuestProgress                  CallFunc_Array_Get_Item;                           // 0x0038(0x0230)()
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0268(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_22B3[0x7];                                     // 0x0269(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMangoQuest                            CallFunc_GetQuest_OutQuest;                        // 0x0270(0x0068)()
	bool                                          CallFunc_GetQuest_ReturnValue;                     // 0x02D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x02D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x02DA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x02DB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x02DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_22B4[0x3];                                     // 0x02DD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x02E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x02E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_22B5[0x3];                                     // 0x02E5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x02E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x02EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_22B6[0x3];                                     // 0x02ED(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x02F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PostGameBlastPassAndQuestProgress_C_GetBlastPassProgressPreQuestRewards) == 0x000008, "Wrong alignment on PostGameBlastPassAndQuestProgress_C_GetBlastPassProgressPreQuestRewards");
static_assert(sizeof(PostGameBlastPassAndQuestProgress_C_GetBlastPassProgressPreQuestRewards) == 0x0002F8, "Wrong size on PostGameBlastPassAndQuestProgress_C_GetBlastPassProgressPreQuestRewards");
static_assert(offsetof(PostGameBlastPassAndQuestProgress_C_GetBlastPassProgressPreQuestRewards, LevelStart) == 0x000000, "Member 'PostGameBlastPassAndQuestProgress_C_GetBlastPassProgressPreQuestRewards::LevelStart' has a wrong offset!");
static_assert(offsetof(PostGameBlastPassAndQuestProgress_C_GetBlastPassProgressPreQuestRewards, LevelEnd) == 0x000004, "Member 'PostGameBlastPassAndQuestProgress_C_GetBlastPassProgressPreQuestRewards::LevelEnd' has a wrong offset!");
static_assert(offsetof(PostGameBlastPassAndQuestProgress_C_GetBlastPassProgressPreQuestRewards, ProgressStart) == 0x000008, "Member 'PostGameBlastPassAndQuestProgress_C_GetBlastPassProgressPreQuestRewards::ProgressStart' has a wrong offset!");
static_assert(offsetof(PostGameBlastPassAndQuestProgress_C_GetBlastPassProgressPreQuestRewards, ProgressEnd) == 0x00000C, "Member 'PostGameBlastPassAndQuestProgress_C_GetBlastPassProgressPreQuestRewards::ProgressEnd' has a wrong offset!");
static_assert(offsetof(PostGameBlastPassAndQuestProgress_C_GetBlastPassProgressPreQuestRewards, TotalQuestBPProgress) == 0x000010, "Member 'PostGameBlastPassAndQuestProgress_C_GetBlastPassProgressPreQuestRewards::TotalQuestBPProgress' has a wrong offset!");
static_assert(offsetof(PostGameBlastPassAndQuestProgress_C_GetBlastPassProgressPreQuestRewards, Temp_int_Array_Index_Variable) == 0x000014, "Member 'PostGameBlastPassAndQuestProgress_C_GetBlastPassProgressPreQuestRewards::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(PostGameBlastPassAndQuestProgress_C_GetBlastPassProgressPreQuestRewards, Temp_int_Loop_Counter_Variable) == 0x000018, "Member 'PostGameBlastPassAndQuestProgress_C_GetBlastPassProgressPreQuestRewards::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(PostGameBlastPassAndQuestProgress_C_GetBlastPassProgressPreQuestRewards, CallFunc_Add_IntInt_ReturnValue) == 0x00001C, "Member 'PostGameBlastPassAndQuestProgress_C_GetBlastPassProgressPreQuestRewards::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PostGameBlastPassAndQuestProgress_C_GetBlastPassProgressPreQuestRewards, CallFunc_Get_ReturnValue) == 0x000020, "Member 'PostGameBlastPassAndQuestProgress_C_GetBlastPassProgressPreQuestRewards::CallFunc_Get_ReturnValue' has a wrong offset!");
static_assert(offsetof(PostGameBlastPassAndQuestProgress_C_GetBlastPassProgressPreQuestRewards, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000028, "Member 'PostGameBlastPassAndQuestProgress_C_GetBlastPassProgressPreQuestRewards::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PostGameBlastPassAndQuestProgress_C_GetBlastPassProgressPreQuestRewards, CallFunc_AddLevelPercent_OutLevel) == 0x00002C, "Member 'PostGameBlastPassAndQuestProgress_C_GetBlastPassProgressPreQuestRewards::CallFunc_AddLevelPercent_OutLevel' has a wrong offset!");
static_assert(offsetof(PostGameBlastPassAndQuestProgress_C_GetBlastPassProgressPreQuestRewards, CallFunc_AddLevelPercent_OutProgress) == 0x000030, "Member 'PostGameBlastPassAndQuestProgress_C_GetBlastPassProgressPreQuestRewards::CallFunc_AddLevelPercent_OutProgress' has a wrong offset!");
static_assert(offsetof(PostGameBlastPassAndQuestProgress_C_GetBlastPassProgressPreQuestRewards, CallFunc_Array_Length_ReturnValue) == 0x000034, "Member 'PostGameBlastPassAndQuestProgress_C_GetBlastPassProgressPreQuestRewards::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(PostGameBlastPassAndQuestProgress_C_GetBlastPassProgressPreQuestRewards, CallFunc_Array_Get_Item) == 0x000038, "Member 'PostGameBlastPassAndQuestProgress_C_GetBlastPassProgressPreQuestRewards::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(PostGameBlastPassAndQuestProgress_C_GetBlastPassProgressPreQuestRewards, CallFunc_Less_IntInt_ReturnValue) == 0x000268, "Member 'PostGameBlastPassAndQuestProgress_C_GetBlastPassProgressPreQuestRewards::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PostGameBlastPassAndQuestProgress_C_GetBlastPassProgressPreQuestRewards, CallFunc_GetQuest_OutQuest) == 0x000270, "Member 'PostGameBlastPassAndQuestProgress_C_GetBlastPassProgressPreQuestRewards::CallFunc_GetQuest_OutQuest' has a wrong offset!");
static_assert(offsetof(PostGameBlastPassAndQuestProgress_C_GetBlastPassProgressPreQuestRewards, CallFunc_GetQuest_ReturnValue) == 0x0002D8, "Member 'PostGameBlastPassAndQuestProgress_C_GetBlastPassProgressPreQuestRewards::CallFunc_GetQuest_ReturnValue' has a wrong offset!");
static_assert(offsetof(PostGameBlastPassAndQuestProgress_C_GetBlastPassProgressPreQuestRewards, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0002D9, "Member 'PostGameBlastPassAndQuestProgress_C_GetBlastPassProgressPreQuestRewards::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(PostGameBlastPassAndQuestProgress_C_GetBlastPassProgressPreQuestRewards, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x0002DA, "Member 'PostGameBlastPassAndQuestProgress_C_GetBlastPassProgressPreQuestRewards::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PostGameBlastPassAndQuestProgress_C_GetBlastPassProgressPreQuestRewards, CallFunc_Greater_IntInt_ReturnValue) == 0x0002DB, "Member 'PostGameBlastPassAndQuestProgress_C_GetBlastPassProgressPreQuestRewards::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PostGameBlastPassAndQuestProgress_C_GetBlastPassProgressPreQuestRewards, CallFunc_BooleanOR_ReturnValue) == 0x0002DC, "Member 'PostGameBlastPassAndQuestProgress_C_GetBlastPassProgressPreQuestRewards::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(PostGameBlastPassAndQuestProgress_C_GetBlastPassProgressPreQuestRewards, CallFunc_Conv_IntToFloat_ReturnValue) == 0x0002E0, "Member 'PostGameBlastPassAndQuestProgress_C_GetBlastPassProgressPreQuestRewards::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PostGameBlastPassAndQuestProgress_C_GetBlastPassProgressPreQuestRewards, CallFunc_BooleanAND_ReturnValue) == 0x0002E4, "Member 'PostGameBlastPassAndQuestProgress_C_GetBlastPassProgressPreQuestRewards::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(PostGameBlastPassAndQuestProgress_C_GetBlastPassProgressPreQuestRewards, CallFunc_Divide_FloatFloat_ReturnValue) == 0x0002E8, "Member 'PostGameBlastPassAndQuestProgress_C_GetBlastPassProgressPreQuestRewards::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PostGameBlastPassAndQuestProgress_C_GetBlastPassProgressPreQuestRewards, CallFunc_BooleanAND_ReturnValue_1) == 0x0002EC, "Member 'PostGameBlastPassAndQuestProgress_C_GetBlastPassProgressPreQuestRewards::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PostGameBlastPassAndQuestProgress_C_GetBlastPassProgressPreQuestRewards, CallFunc_Add_FloatFloat_ReturnValue) == 0x0002F0, "Member 'PostGameBlastPassAndQuestProgress_C_GetBlastPassProgressPreQuestRewards::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");

// Function PostGameBlastPassAndQuestProgress.PostGameBlastPassAndQuestProgress_C.AddLevelPercent
// 0x002C (0x002C - 0x0000)
struct PostGameBlastPassAndQuestProgress_C_AddLevelPercent final
{
public:
	int32                                         Level;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Progress;                                          // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         OffsetPercent;                                     // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OutLevel;                                          // 0x000C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         OutProgress;                                       // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_1;             // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FFloor_ReturnValue;                       // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_1;            // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PostGameBlastPassAndQuestProgress_C_AddLevelPercent) == 0x000004, "Wrong alignment on PostGameBlastPassAndQuestProgress_C_AddLevelPercent");
static_assert(sizeof(PostGameBlastPassAndQuestProgress_C_AddLevelPercent) == 0x00002C, "Wrong size on PostGameBlastPassAndQuestProgress_C_AddLevelPercent");
static_assert(offsetof(PostGameBlastPassAndQuestProgress_C_AddLevelPercent, Level) == 0x000000, "Member 'PostGameBlastPassAndQuestProgress_C_AddLevelPercent::Level' has a wrong offset!");
static_assert(offsetof(PostGameBlastPassAndQuestProgress_C_AddLevelPercent, Progress) == 0x000004, "Member 'PostGameBlastPassAndQuestProgress_C_AddLevelPercent::Progress' has a wrong offset!");
static_assert(offsetof(PostGameBlastPassAndQuestProgress_C_AddLevelPercent, OffsetPercent) == 0x000008, "Member 'PostGameBlastPassAndQuestProgress_C_AddLevelPercent::OffsetPercent' has a wrong offset!");
static_assert(offsetof(PostGameBlastPassAndQuestProgress_C_AddLevelPercent, OutLevel) == 0x00000C, "Member 'PostGameBlastPassAndQuestProgress_C_AddLevelPercent::OutLevel' has a wrong offset!");
static_assert(offsetof(PostGameBlastPassAndQuestProgress_C_AddLevelPercent, OutProgress) == 0x000010, "Member 'PostGameBlastPassAndQuestProgress_C_AddLevelPercent::OutProgress' has a wrong offset!");
static_assert(offsetof(PostGameBlastPassAndQuestProgress_C_AddLevelPercent, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000014, "Member 'PostGameBlastPassAndQuestProgress_C_AddLevelPercent::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PostGameBlastPassAndQuestProgress_C_AddLevelPercent, CallFunc_Add_FloatFloat_ReturnValue) == 0x000018, "Member 'PostGameBlastPassAndQuestProgress_C_AddLevelPercent::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PostGameBlastPassAndQuestProgress_C_AddLevelPercent, CallFunc_Add_FloatFloat_ReturnValue_1) == 0x00001C, "Member 'PostGameBlastPassAndQuestProgress_C_AddLevelPercent::CallFunc_Add_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PostGameBlastPassAndQuestProgress_C_AddLevelPercent, CallFunc_FFloor_ReturnValue) == 0x000020, "Member 'PostGameBlastPassAndQuestProgress_C_AddLevelPercent::CallFunc_FFloor_ReturnValue' has a wrong offset!");
static_assert(offsetof(PostGameBlastPassAndQuestProgress_C_AddLevelPercent, CallFunc_Conv_IntToFloat_ReturnValue_1) == 0x000024, "Member 'PostGameBlastPassAndQuestProgress_C_AddLevelPercent::CallFunc_Conv_IntToFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PostGameBlastPassAndQuestProgress_C_AddLevelPercent, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000028, "Member 'PostGameBlastPassAndQuestProgress_C_AddLevelPercent::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");

}

