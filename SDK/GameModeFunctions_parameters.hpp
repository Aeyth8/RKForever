#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GameModeFunctions

#include "Basic.hpp"

#include "LevelEnums_structs.hpp"
#include "MangoClient_structs.hpp"
#include "GameModeEnums_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Mariner_structs.hpp"


namespace SDK::Params
{

// Function GameModeFunctions.GameModeFunctions_C.GetGameModeViaGameState
// 0x0020 (0x0020 - 0x0000)
struct GameModeFunctions_C_GetGameModeViaGameState final
{
public:
	class AGameStateBase*                         GameState;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EGameModeEnums                                GameMode;                                          // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EExecutionPins                                CallFunc_IsChildOfSoftReference_Branches;          // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EExecutionPins                                CallFunc_IsEqualSoftReference_Branches;            // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EExecutionPins                                CallFunc_IsEqualSoftReference_Branches_1;          // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x0016(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess_2;                    // 0x0017(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EExecutionPins                                CallFunc_IsEqualSoftReference_Branches_2;          // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EExecutionPins                                CallFunc_IsEqualSoftReference_Branches_3;          // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_3;                    // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess_4;                    // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EExecutionPins                                CallFunc_IsEqualSoftReference_Branches_4;          // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_5;                    // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(GameModeFunctions_C_GetGameModeViaGameState) == 0x000008, "Wrong alignment on GameModeFunctions_C_GetGameModeViaGameState");
static_assert(sizeof(GameModeFunctions_C_GetGameModeViaGameState) == 0x000020, "Wrong size on GameModeFunctions_C_GetGameModeViaGameState");
static_assert(offsetof(GameModeFunctions_C_GetGameModeViaGameState, GameState) == 0x000000, "Member 'GameModeFunctions_C_GetGameModeViaGameState::GameState' has a wrong offset!");
static_assert(offsetof(GameModeFunctions_C_GetGameModeViaGameState, __WorldContext) == 0x000008, "Member 'GameModeFunctions_C_GetGameModeViaGameState::__WorldContext' has a wrong offset!");
static_assert(offsetof(GameModeFunctions_C_GetGameModeViaGameState, GameMode) == 0x000010, "Member 'GameModeFunctions_C_GetGameModeViaGameState::GameMode' has a wrong offset!");
static_assert(offsetof(GameModeFunctions_C_GetGameModeViaGameState, CallFunc_IsValid_ReturnValue) == 0x000011, "Member 'GameModeFunctions_C_GetGameModeViaGameState::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(GameModeFunctions_C_GetGameModeViaGameState, CallFunc_IsChildOfSoftReference_Branches) == 0x000012, "Member 'GameModeFunctions_C_GetGameModeViaGameState::CallFunc_IsChildOfSoftReference_Branches' has a wrong offset!");
static_assert(offsetof(GameModeFunctions_C_GetGameModeViaGameState, K2Node_SwitchEnum_CmpSuccess) == 0x000013, "Member 'GameModeFunctions_C_GetGameModeViaGameState::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(GameModeFunctions_C_GetGameModeViaGameState, CallFunc_IsEqualSoftReference_Branches) == 0x000014, "Member 'GameModeFunctions_C_GetGameModeViaGameState::CallFunc_IsEqualSoftReference_Branches' has a wrong offset!");
static_assert(offsetof(GameModeFunctions_C_GetGameModeViaGameState, CallFunc_IsEqualSoftReference_Branches_1) == 0x000015, "Member 'GameModeFunctions_C_GetGameModeViaGameState::CallFunc_IsEqualSoftReference_Branches_1' has a wrong offset!");
static_assert(offsetof(GameModeFunctions_C_GetGameModeViaGameState, K2Node_SwitchEnum_CmpSuccess_1) == 0x000016, "Member 'GameModeFunctions_C_GetGameModeViaGameState::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(GameModeFunctions_C_GetGameModeViaGameState, K2Node_SwitchEnum_CmpSuccess_2) == 0x000017, "Member 'GameModeFunctions_C_GetGameModeViaGameState::K2Node_SwitchEnum_CmpSuccess_2' has a wrong offset!");
static_assert(offsetof(GameModeFunctions_C_GetGameModeViaGameState, CallFunc_IsEqualSoftReference_Branches_2) == 0x000018, "Member 'GameModeFunctions_C_GetGameModeViaGameState::CallFunc_IsEqualSoftReference_Branches_2' has a wrong offset!");
static_assert(offsetof(GameModeFunctions_C_GetGameModeViaGameState, CallFunc_IsEqualSoftReference_Branches_3) == 0x000019, "Member 'GameModeFunctions_C_GetGameModeViaGameState::CallFunc_IsEqualSoftReference_Branches_3' has a wrong offset!");
static_assert(offsetof(GameModeFunctions_C_GetGameModeViaGameState, K2Node_SwitchEnum_CmpSuccess_3) == 0x00001A, "Member 'GameModeFunctions_C_GetGameModeViaGameState::K2Node_SwitchEnum_CmpSuccess_3' has a wrong offset!");
static_assert(offsetof(GameModeFunctions_C_GetGameModeViaGameState, K2Node_SwitchEnum_CmpSuccess_4) == 0x00001B, "Member 'GameModeFunctions_C_GetGameModeViaGameState::K2Node_SwitchEnum_CmpSuccess_4' has a wrong offset!");
static_assert(offsetof(GameModeFunctions_C_GetGameModeViaGameState, CallFunc_IsEqualSoftReference_Branches_4) == 0x00001C, "Member 'GameModeFunctions_C_GetGameModeViaGameState::CallFunc_IsEqualSoftReference_Branches_4' has a wrong offset!");
static_assert(offsetof(GameModeFunctions_C_GetGameModeViaGameState, K2Node_SwitchEnum_CmpSuccess_5) == 0x00001D, "Member 'GameModeFunctions_C_GetGameModeViaGameState::K2Node_SwitchEnum_CmpSuccess_5' has a wrong offset!");

// Function GameModeFunctions.GameModeFunctions_C.GetGameModeViaMatchEnd
// 0x0148 (0x0148 - 0x0000)
struct GameModeFunctions_C_GetGameModeViaMatchEnd final
{
public:
	struct FMatchEnd                              MatchEndStruct;                                    // 0x0000(0x0068)(BlueprintVisible, BlueprintReadOnly, Parm)
	class UObject*                                __WorldContext;                                    // 0x0068(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EGameModeEnums                                GameMode;                                          // 0x0070(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_259B[0x7];                                     // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMangoCMSManager*                       CallFunc_Get_ReturnValue;                          // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMap<struct FGuid, struct FMangoMode>         CallFunc_GetModes_ReturnValue;                     // 0x0080(0x0050)(ConstParm, ZeroConstructor)
	class UMarinerModeGlobals*                    CallFunc_GetModeGlobals_ReturnValue;               // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FMangoMode                             CallFunc_Map_Find_Value;                           // 0x00D8(0x0058)()
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_259C[0x7];                                     // 0x0131(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMarinerModeDataAsset*                  CallFunc_TryAndGetModeDataFromLoadName_ReturnValue; // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMarinerGameMode                              CallFunc_GetLinkedGameMode_ReturnValue;            // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0141(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0142(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x0143(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_3;        // 0x0144(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_4;        // 0x0145(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_5;        // 0x0146(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(GameModeFunctions_C_GetGameModeViaMatchEnd) == 0x000008, "Wrong alignment on GameModeFunctions_C_GetGameModeViaMatchEnd");
static_assert(sizeof(GameModeFunctions_C_GetGameModeViaMatchEnd) == 0x000148, "Wrong size on GameModeFunctions_C_GetGameModeViaMatchEnd");
static_assert(offsetof(GameModeFunctions_C_GetGameModeViaMatchEnd, MatchEndStruct) == 0x000000, "Member 'GameModeFunctions_C_GetGameModeViaMatchEnd::MatchEndStruct' has a wrong offset!");
static_assert(offsetof(GameModeFunctions_C_GetGameModeViaMatchEnd, __WorldContext) == 0x000068, "Member 'GameModeFunctions_C_GetGameModeViaMatchEnd::__WorldContext' has a wrong offset!");
static_assert(offsetof(GameModeFunctions_C_GetGameModeViaMatchEnd, GameMode) == 0x000070, "Member 'GameModeFunctions_C_GetGameModeViaMatchEnd::GameMode' has a wrong offset!");
static_assert(offsetof(GameModeFunctions_C_GetGameModeViaMatchEnd, CallFunc_Get_ReturnValue) == 0x000078, "Member 'GameModeFunctions_C_GetGameModeViaMatchEnd::CallFunc_Get_ReturnValue' has a wrong offset!");
static_assert(offsetof(GameModeFunctions_C_GetGameModeViaMatchEnd, CallFunc_GetModes_ReturnValue) == 0x000080, "Member 'GameModeFunctions_C_GetGameModeViaMatchEnd::CallFunc_GetModes_ReturnValue' has a wrong offset!");
static_assert(offsetof(GameModeFunctions_C_GetGameModeViaMatchEnd, CallFunc_GetModeGlobals_ReturnValue) == 0x0000D0, "Member 'GameModeFunctions_C_GetGameModeViaMatchEnd::CallFunc_GetModeGlobals_ReturnValue' has a wrong offset!");
static_assert(offsetof(GameModeFunctions_C_GetGameModeViaMatchEnd, CallFunc_Map_Find_Value) == 0x0000D8, "Member 'GameModeFunctions_C_GetGameModeViaMatchEnd::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(GameModeFunctions_C_GetGameModeViaMatchEnd, CallFunc_Map_Find_ReturnValue) == 0x000130, "Member 'GameModeFunctions_C_GetGameModeViaMatchEnd::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(GameModeFunctions_C_GetGameModeViaMatchEnd, CallFunc_TryAndGetModeDataFromLoadName_ReturnValue) == 0x000138, "Member 'GameModeFunctions_C_GetGameModeViaMatchEnd::CallFunc_TryAndGetModeDataFromLoadName_ReturnValue' has a wrong offset!");
static_assert(offsetof(GameModeFunctions_C_GetGameModeViaMatchEnd, CallFunc_GetLinkedGameMode_ReturnValue) == 0x000140, "Member 'GameModeFunctions_C_GetGameModeViaMatchEnd::CallFunc_GetLinkedGameMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(GameModeFunctions_C_GetGameModeViaMatchEnd, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000141, "Member 'GameModeFunctions_C_GetGameModeViaMatchEnd::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(GameModeFunctions_C_GetGameModeViaMatchEnd, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000142, "Member 'GameModeFunctions_C_GetGameModeViaMatchEnd::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GameModeFunctions_C_GetGameModeViaMatchEnd, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x000143, "Member 'GameModeFunctions_C_GetGameModeViaMatchEnd::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GameModeFunctions_C_GetGameModeViaMatchEnd, CallFunc_EqualEqual_ByteByte_ReturnValue_3) == 0x000144, "Member 'GameModeFunctions_C_GetGameModeViaMatchEnd::CallFunc_EqualEqual_ByteByte_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(GameModeFunctions_C_GetGameModeViaMatchEnd, CallFunc_EqualEqual_ByteByte_ReturnValue_4) == 0x000145, "Member 'GameModeFunctions_C_GetGameModeViaMatchEnd::CallFunc_EqualEqual_ByteByte_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(GameModeFunctions_C_GetGameModeViaMatchEnd, CallFunc_EqualEqual_ByteByte_ReturnValue_5) == 0x000146, "Member 'GameModeFunctions_C_GetGameModeViaMatchEnd::CallFunc_EqualEqual_ByteByte_ReturnValue_5' has a wrong offset!");

// Function GameModeFunctions.GameModeFunctions_C.GetMapViaLevelName
// 0x0038 (0x0038 - 0x0000)
struct GameModeFunctions_C_GetMapViaLevelName final
{
public:
	class FString                                 LevelName;                                         // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ELevelEnums                                   Level;                                             // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_259D[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetSubstring_ReturnValue;                 // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_StriStri_ReturnValue;          // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_StriStri_ReturnValue_1;        // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_StriStri_ReturnValue_2;        // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_StriStri_ReturnValue_3;        // 0x0033(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_StriStri_ReturnValue_4;        // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_StriStri_ReturnValue_5;        // 0x0035(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_StriStri_ReturnValue_6;        // 0x0036(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_StriStri_ReturnValue_7;        // 0x0037(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(GameModeFunctions_C_GetMapViaLevelName) == 0x000008, "Wrong alignment on GameModeFunctions_C_GetMapViaLevelName");
static_assert(sizeof(GameModeFunctions_C_GetMapViaLevelName) == 0x000038, "Wrong size on GameModeFunctions_C_GetMapViaLevelName");
static_assert(offsetof(GameModeFunctions_C_GetMapViaLevelName, LevelName) == 0x000000, "Member 'GameModeFunctions_C_GetMapViaLevelName::LevelName' has a wrong offset!");
static_assert(offsetof(GameModeFunctions_C_GetMapViaLevelName, __WorldContext) == 0x000010, "Member 'GameModeFunctions_C_GetMapViaLevelName::__WorldContext' has a wrong offset!");
static_assert(offsetof(GameModeFunctions_C_GetMapViaLevelName, Level) == 0x000018, "Member 'GameModeFunctions_C_GetMapViaLevelName::Level' has a wrong offset!");
static_assert(offsetof(GameModeFunctions_C_GetMapViaLevelName, CallFunc_GetSubstring_ReturnValue) == 0x000020, "Member 'GameModeFunctions_C_GetMapViaLevelName::CallFunc_GetSubstring_ReturnValue' has a wrong offset!");
static_assert(offsetof(GameModeFunctions_C_GetMapViaLevelName, CallFunc_EqualEqual_StriStri_ReturnValue) == 0x000030, "Member 'GameModeFunctions_C_GetMapViaLevelName::CallFunc_EqualEqual_StriStri_ReturnValue' has a wrong offset!");
static_assert(offsetof(GameModeFunctions_C_GetMapViaLevelName, CallFunc_EqualEqual_StriStri_ReturnValue_1) == 0x000031, "Member 'GameModeFunctions_C_GetMapViaLevelName::CallFunc_EqualEqual_StriStri_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GameModeFunctions_C_GetMapViaLevelName, CallFunc_EqualEqual_StriStri_ReturnValue_2) == 0x000032, "Member 'GameModeFunctions_C_GetMapViaLevelName::CallFunc_EqualEqual_StriStri_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GameModeFunctions_C_GetMapViaLevelName, CallFunc_EqualEqual_StriStri_ReturnValue_3) == 0x000033, "Member 'GameModeFunctions_C_GetMapViaLevelName::CallFunc_EqualEqual_StriStri_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(GameModeFunctions_C_GetMapViaLevelName, CallFunc_EqualEqual_StriStri_ReturnValue_4) == 0x000034, "Member 'GameModeFunctions_C_GetMapViaLevelName::CallFunc_EqualEqual_StriStri_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(GameModeFunctions_C_GetMapViaLevelName, CallFunc_EqualEqual_StriStri_ReturnValue_5) == 0x000035, "Member 'GameModeFunctions_C_GetMapViaLevelName::CallFunc_EqualEqual_StriStri_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(GameModeFunctions_C_GetMapViaLevelName, CallFunc_EqualEqual_StriStri_ReturnValue_6) == 0x000036, "Member 'GameModeFunctions_C_GetMapViaLevelName::CallFunc_EqualEqual_StriStri_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(GameModeFunctions_C_GetMapViaLevelName, CallFunc_EqualEqual_StriStri_ReturnValue_7) == 0x000037, "Member 'GameModeFunctions_C_GetMapViaLevelName::CallFunc_EqualEqual_StriStri_ReturnValue_7' has a wrong offset!");

}

