#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BlastbarNavpinMegablast

#include "Basic.hpp"

#include "Mariner_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BlastbarNavpinMegablast.BlastbarNavpinMegablast_C.ExecuteUbergraph_BlastbarNavpinMegablast
// 0x0058 (0x0058 - 0x0000)
struct BlastbarNavpinMegablast_C_ExecuteUbergraph_BlastbarNavpinMegablast final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              K2Node_CustomEvent_Position_1;                     // 0x0004(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              K2Node_CustomEvent_Position;                       // 0x000C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bMegablastInstigator;           // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_259F[0x3];                                     // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25A0[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UImage*>                         K2Node_MakeArray_Array;                            // 0x0028(0x0010)(ZeroConstructor, ReferenceParm, ContainsInstancedReference)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0038(0x0010)(ZeroConstructor, NoDestructor)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_1;              // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_2;              // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BlastbarNavpinMegablast_C_ExecuteUbergraph_BlastbarNavpinMegablast) == 0x000008, "Wrong alignment on BlastbarNavpinMegablast_C_ExecuteUbergraph_BlastbarNavpinMegablast");
static_assert(sizeof(BlastbarNavpinMegablast_C_ExecuteUbergraph_BlastbarNavpinMegablast) == 0x000058, "Wrong size on BlastbarNavpinMegablast_C_ExecuteUbergraph_BlastbarNavpinMegablast");
static_assert(offsetof(BlastbarNavpinMegablast_C_ExecuteUbergraph_BlastbarNavpinMegablast, EntryPoint) == 0x000000, "Member 'BlastbarNavpinMegablast_C_ExecuteUbergraph_BlastbarNavpinMegablast::EntryPoint' has a wrong offset!");
static_assert(offsetof(BlastbarNavpinMegablast_C_ExecuteUbergraph_BlastbarNavpinMegablast, K2Node_CustomEvent_Position_1) == 0x000004, "Member 'BlastbarNavpinMegablast_C_ExecuteUbergraph_BlastbarNavpinMegablast::K2Node_CustomEvent_Position_1' has a wrong offset!");
static_assert(offsetof(BlastbarNavpinMegablast_C_ExecuteUbergraph_BlastbarNavpinMegablast, K2Node_CustomEvent_Position) == 0x00000C, "Member 'BlastbarNavpinMegablast_C_ExecuteUbergraph_BlastbarNavpinMegablast::K2Node_CustomEvent_Position' has a wrong offset!");
static_assert(offsetof(BlastbarNavpinMegablast_C_ExecuteUbergraph_BlastbarNavpinMegablast, K2Node_CustomEvent_bMegablastInstigator) == 0x000014, "Member 'BlastbarNavpinMegablast_C_ExecuteUbergraph_BlastbarNavpinMegablast::K2Node_CustomEvent_bMegablastInstigator' has a wrong offset!");
static_assert(offsetof(BlastbarNavpinMegablast_C_ExecuteUbergraph_BlastbarNavpinMegablast, CallFunc_PlayAnimation_ReturnValue) == 0x000018, "Member 'BlastbarNavpinMegablast_C_ExecuteUbergraph_BlastbarNavpinMegablast::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BlastbarNavpinMegablast_C_ExecuteUbergraph_BlastbarNavpinMegablast, K2Node_Event_IsDesignTime) == 0x000020, "Member 'BlastbarNavpinMegablast_C_ExecuteUbergraph_BlastbarNavpinMegablast::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(BlastbarNavpinMegablast_C_ExecuteUbergraph_BlastbarNavpinMegablast, K2Node_MakeArray_Array) == 0x000028, "Member 'BlastbarNavpinMegablast_C_ExecuteUbergraph_BlastbarNavpinMegablast::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BlastbarNavpinMegablast_C_ExecuteUbergraph_BlastbarNavpinMegablast, K2Node_CreateDelegate_OutputDelegate) == 0x000038, "Member 'BlastbarNavpinMegablast_C_ExecuteUbergraph_BlastbarNavpinMegablast::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BlastbarNavpinMegablast_C_ExecuteUbergraph_BlastbarNavpinMegablast, CallFunc_PlayAnimation_ReturnValue_1) == 0x000048, "Member 'BlastbarNavpinMegablast_C_ExecuteUbergraph_BlastbarNavpinMegablast::CallFunc_PlayAnimation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BlastbarNavpinMegablast_C_ExecuteUbergraph_BlastbarNavpinMegablast, CallFunc_PlayAnimation_ReturnValue_2) == 0x000050, "Member 'BlastbarNavpinMegablast_C_ExecuteUbergraph_BlastbarNavpinMegablast::CallFunc_PlayAnimation_ReturnValue_2' has a wrong offset!");

// Function BlastbarNavpinMegablast.BlastbarNavpinMegablast_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct BlastbarNavpinMegablast_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BlastbarNavpinMegablast_C_PreConstruct) == 0x000001, "Wrong alignment on BlastbarNavpinMegablast_C_PreConstruct");
static_assert(sizeof(BlastbarNavpinMegablast_C_PreConstruct) == 0x000001, "Wrong size on BlastbarNavpinMegablast_C_PreConstruct");
static_assert(offsetof(BlastbarNavpinMegablast_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'BlastbarNavpinMegablast_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function BlastbarNavpinMegablast.BlastbarNavpinMegablast_C.Explode
// 0x000C (0x000C - 0x0000)
struct BlastbarNavpinMegablast_C_Explode final
{
public:
	struct FVector2D                              Position;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bMegablastInstigator;                              // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BlastbarNavpinMegablast_C_Explode) == 0x000004, "Wrong alignment on BlastbarNavpinMegablast_C_Explode");
static_assert(sizeof(BlastbarNavpinMegablast_C_Explode) == 0x00000C, "Wrong size on BlastbarNavpinMegablast_C_Explode");
static_assert(offsetof(BlastbarNavpinMegablast_C_Explode, Position) == 0x000000, "Member 'BlastbarNavpinMegablast_C_Explode::Position' has a wrong offset!");
static_assert(offsetof(BlastbarNavpinMegablast_C_Explode, bMegablastInstigator) == 0x000008, "Member 'BlastbarNavpinMegablast_C_Explode::bMegablastInstigator' has a wrong offset!");

// Function BlastbarNavpinMegablast.BlastbarNavpinMegablast_C.Set Position
// 0x0008 (0x0008 - 0x0000)
struct BlastbarNavpinMegablast_C_Set_Position final
{
public:
	struct FVector2D                              Position;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BlastbarNavpinMegablast_C_Set_Position) == 0x000004, "Wrong alignment on BlastbarNavpinMegablast_C_Set_Position");
static_assert(sizeof(BlastbarNavpinMegablast_C_Set_Position) == 0x000008, "Wrong size on BlastbarNavpinMegablast_C_Set_Position");
static_assert(offsetof(BlastbarNavpinMegablast_C_Set_Position, Position) == 0x000000, "Member 'BlastbarNavpinMegablast_C_Set_Position::Position' has a wrong offset!");

// Function BlastbarNavpinMegablast.BlastbarNavpinMegablast_C.SetupMats
// 0x0050 (0x0050 - 0x0000)
struct BlastbarNavpinMegablast_C_SetupMats final
{
public:
	bool                                          Force;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25A1[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_1;                              // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25A2[0x6];                                     // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             CallFunc_Array_Get_Item;                           // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     K2Node_Select_Default;                             // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             CallFunc_Array_Get_Item_1;                         // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 CallFunc_Array_Get_Item_2;                         // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x0045(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0046(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25A3[0x1];                                     // 0x0047(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     K2Node_Select_Default_1;                           // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BlastbarNavpinMegablast_C_SetupMats) == 0x000008, "Wrong alignment on BlastbarNavpinMegablast_C_SetupMats");
static_assert(sizeof(BlastbarNavpinMegablast_C_SetupMats) == 0x000050, "Wrong size on BlastbarNavpinMegablast_C_SetupMats");
static_assert(offsetof(BlastbarNavpinMegablast_C_SetupMats, Force) == 0x000000, "Member 'BlastbarNavpinMegablast_C_SetupMats::Force' has a wrong offset!");
static_assert(offsetof(BlastbarNavpinMegablast_C_SetupMats, Temp_int_Array_Index_Variable) == 0x000004, "Member 'BlastbarNavpinMegablast_C_SetupMats::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BlastbarNavpinMegablast_C_SetupMats, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'BlastbarNavpinMegablast_C_SetupMats::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BlastbarNavpinMegablast_C_SetupMats, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'BlastbarNavpinMegablast_C_SetupMats::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BlastbarNavpinMegablast_C_SetupMats, Temp_bool_Variable) == 0x000010, "Member 'BlastbarNavpinMegablast_C_SetupMats::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BlastbarNavpinMegablast_C_SetupMats, Temp_bool_Variable_1) == 0x000011, "Member 'BlastbarNavpinMegablast_C_SetupMats::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BlastbarNavpinMegablast_C_SetupMats, CallFunc_Array_Get_Item) == 0x000018, "Member 'BlastbarNavpinMegablast_C_SetupMats::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BlastbarNavpinMegablast_C_SetupMats, K2Node_Select_Default) == 0x000020, "Member 'BlastbarNavpinMegablast_C_SetupMats::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BlastbarNavpinMegablast_C_SetupMats, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000028, "Member 'BlastbarNavpinMegablast_C_SetupMats::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BlastbarNavpinMegablast_C_SetupMats, CallFunc_Array_Get_Item_1) == 0x000030, "Member 'BlastbarNavpinMegablast_C_SetupMats::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BlastbarNavpinMegablast_C_SetupMats, CallFunc_Array_Get_Item_2) == 0x000038, "Member 'BlastbarNavpinMegablast_C_SetupMats::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BlastbarNavpinMegablast_C_SetupMats, CallFunc_Array_Length_ReturnValue) == 0x000040, "Member 'BlastbarNavpinMegablast_C_SetupMats::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BlastbarNavpinMegablast_C_SetupMats, CallFunc_Less_IntInt_ReturnValue) == 0x000044, "Member 'BlastbarNavpinMegablast_C_SetupMats::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BlastbarNavpinMegablast_C_SetupMats, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x000045, "Member 'BlastbarNavpinMegablast_C_SetupMats::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BlastbarNavpinMegablast_C_SetupMats, CallFunc_BooleanOR_ReturnValue) == 0x000046, "Member 'BlastbarNavpinMegablast_C_SetupMats::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BlastbarNavpinMegablast_C_SetupMats, K2Node_Select_Default_1) == 0x000048, "Member 'BlastbarNavpinMegablast_C_SetupMats::K2Node_Select_Default_1' has a wrong offset!");

// Function BlastbarNavpinMegablast.BlastbarNavpinMegablast_C.PopulateTeam
// 0x0018 (0x0018 - 0x0000)
struct BlastbarNavpinMegablast_C_PopulateTeam final
{
public:
	class AMarinerCharacter*                      Character;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMarinerHostility                             Temp_byte_Variable;                                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_25A4[0x3];                                     // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetTeamIndex_ReturnValue;                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EMarinerHostility                             CallFunc_TryAndGetHostilityRelativeToLocalPlayer_ReturnValue; // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_2;                              // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_3;                              // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Select_Default;                             // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BlastbarNavpinMegablast_C_PopulateTeam) == 0x000008, "Wrong alignment on BlastbarNavpinMegablast_C_PopulateTeam");
static_assert(sizeof(BlastbarNavpinMegablast_C_PopulateTeam) == 0x000018, "Wrong size on BlastbarNavpinMegablast_C_PopulateTeam");
static_assert(offsetof(BlastbarNavpinMegablast_C_PopulateTeam, Character) == 0x000000, "Member 'BlastbarNavpinMegablast_C_PopulateTeam::Character' has a wrong offset!");
static_assert(offsetof(BlastbarNavpinMegablast_C_PopulateTeam, Temp_byte_Variable) == 0x000008, "Member 'BlastbarNavpinMegablast_C_PopulateTeam::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BlastbarNavpinMegablast_C_PopulateTeam, CallFunc_GetTeamIndex_ReturnValue) == 0x00000C, "Member 'BlastbarNavpinMegablast_C_PopulateTeam::CallFunc_GetTeamIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BlastbarNavpinMegablast_C_PopulateTeam, Temp_bool_Variable) == 0x000010, "Member 'BlastbarNavpinMegablast_C_PopulateTeam::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BlastbarNavpinMegablast_C_PopulateTeam, CallFunc_TryAndGetHostilityRelativeToLocalPlayer_ReturnValue) == 0x000011, "Member 'BlastbarNavpinMegablast_C_PopulateTeam::CallFunc_TryAndGetHostilityRelativeToLocalPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BlastbarNavpinMegablast_C_PopulateTeam, Temp_bool_Variable_1) == 0x000012, "Member 'BlastbarNavpinMegablast_C_PopulateTeam::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BlastbarNavpinMegablast_C_PopulateTeam, Temp_bool_Variable_2) == 0x000013, "Member 'BlastbarNavpinMegablast_C_PopulateTeam::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(BlastbarNavpinMegablast_C_PopulateTeam, Temp_bool_Variable_3) == 0x000014, "Member 'BlastbarNavpinMegablast_C_PopulateTeam::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(BlastbarNavpinMegablast_C_PopulateTeam, K2Node_Select_Default) == 0x000015, "Member 'BlastbarNavpinMegablast_C_PopulateTeam::K2Node_Select_Default' has a wrong offset!");

}

