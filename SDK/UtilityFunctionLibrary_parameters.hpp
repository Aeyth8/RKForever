#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UtilityFunctionLibrary

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "AkAudio_structs.hpp"


namespace SDK::Params
{

// Function UtilityFunctionLibrary.UtilityFunctionLibrary_C.GetVectorRounded
// 0x0058 (0x0058 - 0x0000)
struct UtilityFunctionLibrary_C_GetVectorRounded final
{
public:
	struct FVector                                InVector;                                          // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_25DA[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                RoundedVector;                                     // 0x0018(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Round_ReturnValue;                        // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Round_ReturnValue_1;                      // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_1;            // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Round_ReturnValue_2;                      // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_2;            // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0048(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UtilityFunctionLibrary_C_GetVectorRounded) == 0x000008, "Wrong alignment on UtilityFunctionLibrary_C_GetVectorRounded");
static_assert(sizeof(UtilityFunctionLibrary_C_GetVectorRounded) == 0x000058, "Wrong size on UtilityFunctionLibrary_C_GetVectorRounded");
static_assert(offsetof(UtilityFunctionLibrary_C_GetVectorRounded, InVector) == 0x000000, "Member 'UtilityFunctionLibrary_C_GetVectorRounded::InVector' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_GetVectorRounded, __WorldContext) == 0x000010, "Member 'UtilityFunctionLibrary_C_GetVectorRounded::__WorldContext' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_GetVectorRounded, RoundedVector) == 0x000018, "Member 'UtilityFunctionLibrary_C_GetVectorRounded::RoundedVector' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_GetVectorRounded, CallFunc_BreakVector_X) == 0x000024, "Member 'UtilityFunctionLibrary_C_GetVectorRounded::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_GetVectorRounded, CallFunc_BreakVector_Y) == 0x000028, "Member 'UtilityFunctionLibrary_C_GetVectorRounded::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_GetVectorRounded, CallFunc_BreakVector_Z) == 0x00002C, "Member 'UtilityFunctionLibrary_C_GetVectorRounded::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_GetVectorRounded, CallFunc_Round_ReturnValue) == 0x000030, "Member 'UtilityFunctionLibrary_C_GetVectorRounded::CallFunc_Round_ReturnValue' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_GetVectorRounded, CallFunc_Round_ReturnValue_1) == 0x000034, "Member 'UtilityFunctionLibrary_C_GetVectorRounded::CallFunc_Round_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_GetVectorRounded, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000038, "Member 'UtilityFunctionLibrary_C_GetVectorRounded::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_GetVectorRounded, CallFunc_Conv_IntToFloat_ReturnValue_1) == 0x00003C, "Member 'UtilityFunctionLibrary_C_GetVectorRounded::CallFunc_Conv_IntToFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_GetVectorRounded, CallFunc_Round_ReturnValue_2) == 0x000040, "Member 'UtilityFunctionLibrary_C_GetVectorRounded::CallFunc_Round_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_GetVectorRounded, CallFunc_Conv_IntToFloat_ReturnValue_2) == 0x000044, "Member 'UtilityFunctionLibrary_C_GetVectorRounded::CallFunc_Conv_IntToFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_GetVectorRounded, CallFunc_MakeVector_ReturnValue) == 0x000048, "Member 'UtilityFunctionLibrary_C_GetVectorRounded::CallFunc_MakeVector_ReturnValue' has a wrong offset!");

// Function UtilityFunctionLibrary.UtilityFunctionLibrary_C.GetRotatorFloored
// 0x0058 (0x0058 - 0x0000)
struct UtilityFunctionLibrary_C_GetRotatorFloored final
{
public:
	struct FRotator                               InRotator;                                         // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25DB[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               RoundedRotator;                                    // 0x0018(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FFloor_ReturnValue;                       // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FFloor_ReturnValue_1;                     // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_1;            // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FFloor_ReturnValue_2;                     // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_2;            // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0048(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UtilityFunctionLibrary_C_GetRotatorFloored) == 0x000008, "Wrong alignment on UtilityFunctionLibrary_C_GetRotatorFloored");
static_assert(sizeof(UtilityFunctionLibrary_C_GetRotatorFloored) == 0x000058, "Wrong size on UtilityFunctionLibrary_C_GetRotatorFloored");
static_assert(offsetof(UtilityFunctionLibrary_C_GetRotatorFloored, InRotator) == 0x000000, "Member 'UtilityFunctionLibrary_C_GetRotatorFloored::InRotator' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_GetRotatorFloored, __WorldContext) == 0x000010, "Member 'UtilityFunctionLibrary_C_GetRotatorFloored::__WorldContext' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_GetRotatorFloored, RoundedRotator) == 0x000018, "Member 'UtilityFunctionLibrary_C_GetRotatorFloored::RoundedRotator' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_GetRotatorFloored, CallFunc_BreakRotator_Roll) == 0x000024, "Member 'UtilityFunctionLibrary_C_GetRotatorFloored::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_GetRotatorFloored, CallFunc_BreakRotator_Pitch) == 0x000028, "Member 'UtilityFunctionLibrary_C_GetRotatorFloored::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_GetRotatorFloored, CallFunc_BreakRotator_Yaw) == 0x00002C, "Member 'UtilityFunctionLibrary_C_GetRotatorFloored::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_GetRotatorFloored, CallFunc_FFloor_ReturnValue) == 0x000030, "Member 'UtilityFunctionLibrary_C_GetRotatorFloored::CallFunc_FFloor_ReturnValue' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_GetRotatorFloored, CallFunc_FFloor_ReturnValue_1) == 0x000034, "Member 'UtilityFunctionLibrary_C_GetRotatorFloored::CallFunc_FFloor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_GetRotatorFloored, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000038, "Member 'UtilityFunctionLibrary_C_GetRotatorFloored::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_GetRotatorFloored, CallFunc_Conv_IntToFloat_ReturnValue_1) == 0x00003C, "Member 'UtilityFunctionLibrary_C_GetRotatorFloored::CallFunc_Conv_IntToFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_GetRotatorFloored, CallFunc_FFloor_ReturnValue_2) == 0x000040, "Member 'UtilityFunctionLibrary_C_GetRotatorFloored::CallFunc_FFloor_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_GetRotatorFloored, CallFunc_Conv_IntToFloat_ReturnValue_2) == 0x000044, "Member 'UtilityFunctionLibrary_C_GetRotatorFloored::CallFunc_Conv_IntToFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_GetRotatorFloored, CallFunc_MakeRotator_ReturnValue) == 0x000048, "Member 'UtilityFunctionLibrary_C_GetRotatorFloored::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");

// Function UtilityFunctionLibrary.UtilityFunctionLibrary_C.GetRandomXForwardUnitVectorInCircle
// 0x0030 (0x0030 - 0x0000)
struct UtilityFunctionLibrary_C_GetRandomXForwardUnitVectorInCircle final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                UnitVector;                                        // 0x0008(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0014(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRange_ReturnValue;           // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_RotateAngleAxis_ReturnValue;              // 0x0024(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UtilityFunctionLibrary_C_GetRandomXForwardUnitVectorInCircle) == 0x000008, "Wrong alignment on UtilityFunctionLibrary_C_GetRandomXForwardUnitVectorInCircle");
static_assert(sizeof(UtilityFunctionLibrary_C_GetRandomXForwardUnitVectorInCircle) == 0x000030, "Wrong size on UtilityFunctionLibrary_C_GetRandomXForwardUnitVectorInCircle");
static_assert(offsetof(UtilityFunctionLibrary_C_GetRandomXForwardUnitVectorInCircle, __WorldContext) == 0x000000, "Member 'UtilityFunctionLibrary_C_GetRandomXForwardUnitVectorInCircle::__WorldContext' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_GetRandomXForwardUnitVectorInCircle, UnitVector) == 0x000008, "Member 'UtilityFunctionLibrary_C_GetRandomXForwardUnitVectorInCircle::UnitVector' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_GetRandomXForwardUnitVectorInCircle, CallFunc_MakeVector_ReturnValue) == 0x000014, "Member 'UtilityFunctionLibrary_C_GetRandomXForwardUnitVectorInCircle::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_GetRandomXForwardUnitVectorInCircle, CallFunc_RandomFloatInRange_ReturnValue) == 0x000020, "Member 'UtilityFunctionLibrary_C_GetRandomXForwardUnitVectorInCircle::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_GetRandomXForwardUnitVectorInCircle, CallFunc_RotateAngleAxis_ReturnValue) == 0x000024, "Member 'UtilityFunctionLibrary_C_GetRandomXForwardUnitVectorInCircle::CallFunc_RotateAngleAxis_ReturnValue' has a wrong offset!");

// Function UtilityFunctionLibrary.UtilityFunctionLibrary_C.LogCollision
// 0x00E0 (0x00E0 - 0x0000)
struct UtilityFunctionLibrary_C_LogCollision final
{
public:
	class UPrimitiveComponent*                    Primitive;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Duration;                                          // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Color;                                             // 0x000C(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_25DC[0x4];                                     // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECollisionChannel                             CallFunc_GetCollisionObjectType_ReturnValue;       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_25DD[0x3];                                     // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_GetCollisionProfileName_ReturnValue;      // 0x002C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_25DE[0x4];                                     // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue; // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x0048(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	ECollisionEnabled                             CallFunc_GetCollisionEnabled_ReturnValue;          // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_25DF[0x7];                                     // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x0060(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_1; // 0x0070(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0080(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0090(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x00A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_3;              // 0x00B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_4;              // 0x00C0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_5;              // 0x00D0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(UtilityFunctionLibrary_C_LogCollision) == 0x000008, "Wrong alignment on UtilityFunctionLibrary_C_LogCollision");
static_assert(sizeof(UtilityFunctionLibrary_C_LogCollision) == 0x0000E0, "Wrong size on UtilityFunctionLibrary_C_LogCollision");
static_assert(offsetof(UtilityFunctionLibrary_C_LogCollision, Primitive) == 0x000000, "Member 'UtilityFunctionLibrary_C_LogCollision::Primitive' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_LogCollision, Duration) == 0x000008, "Member 'UtilityFunctionLibrary_C_LogCollision::Duration' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_LogCollision, Color) == 0x00000C, "Member 'UtilityFunctionLibrary_C_LogCollision::Color' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_LogCollision, __WorldContext) == 0x000020, "Member 'UtilityFunctionLibrary_C_LogCollision::__WorldContext' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_LogCollision, CallFunc_GetCollisionObjectType_ReturnValue) == 0x000028, "Member 'UtilityFunctionLibrary_C_LogCollision::CallFunc_GetCollisionObjectType_ReturnValue' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_LogCollision, CallFunc_GetCollisionProfileName_ReturnValue) == 0x00002C, "Member 'UtilityFunctionLibrary_C_LogCollision::CallFunc_GetCollisionProfileName_ReturnValue' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_LogCollision, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue) == 0x000038, "Member 'UtilityFunctionLibrary_C_LogCollision::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_LogCollision, CallFunc_Conv_NameToString_ReturnValue) == 0x000048, "Member 'UtilityFunctionLibrary_C_LogCollision::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_LogCollision, CallFunc_GetCollisionEnabled_ReturnValue) == 0x000058, "Member 'UtilityFunctionLibrary_C_LogCollision::CallFunc_GetCollisionEnabled_ReturnValue' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_LogCollision, CallFunc_GetDisplayName_ReturnValue) == 0x000060, "Member 'UtilityFunctionLibrary_C_LogCollision::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_LogCollision, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_1) == 0x000070, "Member 'UtilityFunctionLibrary_C_LogCollision::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_LogCollision, CallFunc_Concat_StrStr_ReturnValue) == 0x000080, "Member 'UtilityFunctionLibrary_C_LogCollision::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_LogCollision, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000090, "Member 'UtilityFunctionLibrary_C_LogCollision::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_LogCollision, CallFunc_Concat_StrStr_ReturnValue_2) == 0x0000A0, "Member 'UtilityFunctionLibrary_C_LogCollision::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_LogCollision, CallFunc_Concat_StrStr_ReturnValue_3) == 0x0000B0, "Member 'UtilityFunctionLibrary_C_LogCollision::CallFunc_Concat_StrStr_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_LogCollision, CallFunc_Concat_StrStr_ReturnValue_4) == 0x0000C0, "Member 'UtilityFunctionLibrary_C_LogCollision::CallFunc_Concat_StrStr_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_LogCollision, CallFunc_Concat_StrStr_ReturnValue_5) == 0x0000D0, "Member 'UtilityFunctionLibrary_C_LogCollision::CallFunc_Concat_StrStr_ReturnValue_5' has a wrong offset!");

// Function UtilityFunctionLibrary.UtilityFunctionLibrary_C.DrawCharacterSoundHostility
// 0x0188 (0x0188 - 0x0000)
struct UtilityFunctionLibrary_C_DrawCharacterSoundHostility final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable;                              // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_1;                            // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_2;                            // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_25E0[0x4];                                     // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Temp_string_Variable;                              // 0x0040(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_1;                            // 0x0050(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_2;                            // 0x0060(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_3;                            // 0x0070(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_3;                            // 0x008C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         CallFunc_GetAllActorsOfClass_OutActors;            // 0x00A0(0x0010)(ZeroConstructor, ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_25E1[0x4];                                     // 0x00B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25E2[0x7];                                     // 0x00C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x00C8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x00D8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_DoesImplementInterface_ReturnValue;       // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25E3[0x7];                                     // 0x00E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x00F0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class UAkComponent*                           CallFunc_GetComponentByClass_ReturnValue;          // 0x0100(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetRTPCValue_Value;                       // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ERTPCValueType                                CallFunc_GetRTPCValue_OutputValueType;             // 0x010C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x010D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_FloatFloat_ReturnValue;          // 0x010E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25E4[0x1];                                     // 0x010F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_25E5[0x4];                                     // 0x0114(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_FloatToString_ReturnValue;           // 0x0118(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x0128(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_Select_Default;                             // 0x0138(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_3;              // 0x0148(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 K2Node_Select_Default_1;                           // 0x0158(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_4;              // 0x0168(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_5;              // 0x0178(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(UtilityFunctionLibrary_C_DrawCharacterSoundHostility) == 0x000008, "Wrong alignment on UtilityFunctionLibrary_C_DrawCharacterSoundHostility");
static_assert(sizeof(UtilityFunctionLibrary_C_DrawCharacterSoundHostility) == 0x000188, "Wrong size on UtilityFunctionLibrary_C_DrawCharacterSoundHostility");
static_assert(offsetof(UtilityFunctionLibrary_C_DrawCharacterSoundHostility, __WorldContext) == 0x000000, "Member 'UtilityFunctionLibrary_C_DrawCharacterSoundHostility::__WorldContext' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_DrawCharacterSoundHostility, Temp_struct_Variable) == 0x000008, "Member 'UtilityFunctionLibrary_C_DrawCharacterSoundHostility::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_DrawCharacterSoundHostility, Temp_struct_Variable_1) == 0x000018, "Member 'UtilityFunctionLibrary_C_DrawCharacterSoundHostility::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_DrawCharacterSoundHostility, Temp_struct_Variable_2) == 0x000028, "Member 'UtilityFunctionLibrary_C_DrawCharacterSoundHostility::Temp_struct_Variable_2' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_DrawCharacterSoundHostility, Temp_int_Variable) == 0x000038, "Member 'UtilityFunctionLibrary_C_DrawCharacterSoundHostility::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_DrawCharacterSoundHostility, Temp_string_Variable) == 0x000040, "Member 'UtilityFunctionLibrary_C_DrawCharacterSoundHostility::Temp_string_Variable' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_DrawCharacterSoundHostility, Temp_string_Variable_1) == 0x000050, "Member 'UtilityFunctionLibrary_C_DrawCharacterSoundHostility::Temp_string_Variable_1' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_DrawCharacterSoundHostility, Temp_string_Variable_2) == 0x000060, "Member 'UtilityFunctionLibrary_C_DrawCharacterSoundHostility::Temp_string_Variable_2' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_DrawCharacterSoundHostility, Temp_string_Variable_3) == 0x000070, "Member 'UtilityFunctionLibrary_C_DrawCharacterSoundHostility::Temp_string_Variable_3' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_DrawCharacterSoundHostility, Temp_int_Loop_Counter_Variable) == 0x000080, "Member 'UtilityFunctionLibrary_C_DrawCharacterSoundHostility::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_DrawCharacterSoundHostility, CallFunc_Add_IntInt_ReturnValue) == 0x000084, "Member 'UtilityFunctionLibrary_C_DrawCharacterSoundHostility::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_DrawCharacterSoundHostility, Temp_int_Array_Index_Variable) == 0x000088, "Member 'UtilityFunctionLibrary_C_DrawCharacterSoundHostility::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_DrawCharacterSoundHostility, Temp_struct_Variable_3) == 0x00008C, "Member 'UtilityFunctionLibrary_C_DrawCharacterSoundHostility::Temp_struct_Variable_3' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_DrawCharacterSoundHostility, Temp_int_Variable_1) == 0x00009C, "Member 'UtilityFunctionLibrary_C_DrawCharacterSoundHostility::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_DrawCharacterSoundHostility, CallFunc_GetAllActorsOfClass_OutActors) == 0x0000A0, "Member 'UtilityFunctionLibrary_C_DrawCharacterSoundHostility::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_DrawCharacterSoundHostility, CallFunc_Array_Length_ReturnValue) == 0x0000B0, "Member 'UtilityFunctionLibrary_C_DrawCharacterSoundHostility::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_DrawCharacterSoundHostility, CallFunc_Array_Get_Item) == 0x0000B8, "Member 'UtilityFunctionLibrary_C_DrawCharacterSoundHostility::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_DrawCharacterSoundHostility, CallFunc_Less_IntInt_ReturnValue) == 0x0000C0, "Member 'UtilityFunctionLibrary_C_DrawCharacterSoundHostility::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_DrawCharacterSoundHostility, CallFunc_GetDisplayName_ReturnValue) == 0x0000C8, "Member 'UtilityFunctionLibrary_C_DrawCharacterSoundHostility::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_DrawCharacterSoundHostility, CallFunc_Concat_StrStr_ReturnValue) == 0x0000D8, "Member 'UtilityFunctionLibrary_C_DrawCharacterSoundHostility::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_DrawCharacterSoundHostility, CallFunc_DoesImplementInterface_ReturnValue) == 0x0000E8, "Member 'UtilityFunctionLibrary_C_DrawCharacterSoundHostility::CallFunc_DoesImplementInterface_ReturnValue' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_DrawCharacterSoundHostility, CallFunc_Concat_StrStr_ReturnValue_1) == 0x0000F0, "Member 'UtilityFunctionLibrary_C_DrawCharacterSoundHostility::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_DrawCharacterSoundHostility, CallFunc_GetComponentByClass_ReturnValue) == 0x000100, "Member 'UtilityFunctionLibrary_C_DrawCharacterSoundHostility::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_DrawCharacterSoundHostility, CallFunc_GetRTPCValue_Value) == 0x000108, "Member 'UtilityFunctionLibrary_C_DrawCharacterSoundHostility::CallFunc_GetRTPCValue_Value' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_DrawCharacterSoundHostility, CallFunc_GetRTPCValue_OutputValueType) == 0x00010C, "Member 'UtilityFunctionLibrary_C_DrawCharacterSoundHostility::CallFunc_GetRTPCValue_OutputValueType' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_DrawCharacterSoundHostility, CallFunc_IsValid_ReturnValue) == 0x00010D, "Member 'UtilityFunctionLibrary_C_DrawCharacterSoundHostility::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_DrawCharacterSoundHostility, CallFunc_NotEqual_FloatFloat_ReturnValue) == 0x00010E, "Member 'UtilityFunctionLibrary_C_DrawCharacterSoundHostility::CallFunc_NotEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_DrawCharacterSoundHostility, CallFunc_FTrunc_ReturnValue) == 0x000110, "Member 'UtilityFunctionLibrary_C_DrawCharacterSoundHostility::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_DrawCharacterSoundHostility, CallFunc_Conv_FloatToString_ReturnValue) == 0x000118, "Member 'UtilityFunctionLibrary_C_DrawCharacterSoundHostility::CallFunc_Conv_FloatToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_DrawCharacterSoundHostility, CallFunc_Concat_StrStr_ReturnValue_2) == 0x000128, "Member 'UtilityFunctionLibrary_C_DrawCharacterSoundHostility::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_DrawCharacterSoundHostility, K2Node_Select_Default) == 0x000138, "Member 'UtilityFunctionLibrary_C_DrawCharacterSoundHostility::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_DrawCharacterSoundHostility, CallFunc_Concat_StrStr_ReturnValue_3) == 0x000148, "Member 'UtilityFunctionLibrary_C_DrawCharacterSoundHostility::CallFunc_Concat_StrStr_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_DrawCharacterSoundHostility, K2Node_Select_Default_1) == 0x000158, "Member 'UtilityFunctionLibrary_C_DrawCharacterSoundHostility::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_DrawCharacterSoundHostility, CallFunc_Concat_StrStr_ReturnValue_4) == 0x000168, "Member 'UtilityFunctionLibrary_C_DrawCharacterSoundHostility::CallFunc_Concat_StrStr_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_DrawCharacterSoundHostility, CallFunc_Concat_StrStr_ReturnValue_5) == 0x000178, "Member 'UtilityFunctionLibrary_C_DrawCharacterSoundHostility::CallFunc_Concat_StrStr_ReturnValue_5' has a wrong offset!");

// Function UtilityFunctionLibrary.UtilityFunctionLibrary_C.DrawDebugCapsule2
// 0x0098 (0x0098 - 0x0000)
struct UtilityFunctionLibrary_C_DrawDebugCapsule2 final
{
public:
	struct FVector                                PointA;                                            // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                PointB;                                            // 0x000C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Radius;                                            // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           LineColor;                                         // 0x001C(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Duration;                                          // 0x002C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Thickness;                                         // 0x0030(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_25E6[0x4];                                     // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0038(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_FindLookAtRotation_ReturnValue;           // 0x0040(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetUpVector_ReturnValue;                  // 0x004C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_Conv_VectorToRotator_ReturnValue;         // 0x0058(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0064(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0070(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue;                        // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0080(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UtilityFunctionLibrary_C_DrawDebugCapsule2) == 0x000008, "Wrong alignment on UtilityFunctionLibrary_C_DrawDebugCapsule2");
static_assert(sizeof(UtilityFunctionLibrary_C_DrawDebugCapsule2) == 0x000098, "Wrong size on UtilityFunctionLibrary_C_DrawDebugCapsule2");
static_assert(offsetof(UtilityFunctionLibrary_C_DrawDebugCapsule2, PointA) == 0x000000, "Member 'UtilityFunctionLibrary_C_DrawDebugCapsule2::PointA' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_DrawDebugCapsule2, PointB) == 0x00000C, "Member 'UtilityFunctionLibrary_C_DrawDebugCapsule2::PointB' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_DrawDebugCapsule2, Radius) == 0x000018, "Member 'UtilityFunctionLibrary_C_DrawDebugCapsule2::Radius' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_DrawDebugCapsule2, LineColor) == 0x00001C, "Member 'UtilityFunctionLibrary_C_DrawDebugCapsule2::LineColor' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_DrawDebugCapsule2, Duration) == 0x00002C, "Member 'UtilityFunctionLibrary_C_DrawDebugCapsule2::Duration' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_DrawDebugCapsule2, Thickness) == 0x000030, "Member 'UtilityFunctionLibrary_C_DrawDebugCapsule2::Thickness' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_DrawDebugCapsule2, __WorldContext) == 0x000038, "Member 'UtilityFunctionLibrary_C_DrawDebugCapsule2::__WorldContext' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_DrawDebugCapsule2, CallFunc_FindLookAtRotation_ReturnValue) == 0x000040, "Member 'UtilityFunctionLibrary_C_DrawDebugCapsule2::CallFunc_FindLookAtRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_DrawDebugCapsule2, CallFunc_GetUpVector_ReturnValue) == 0x00004C, "Member 'UtilityFunctionLibrary_C_DrawDebugCapsule2::CallFunc_GetUpVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_DrawDebugCapsule2, CallFunc_Conv_VectorToRotator_ReturnValue) == 0x000058, "Member 'UtilityFunctionLibrary_C_DrawDebugCapsule2::CallFunc_Conv_VectorToRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_DrawDebugCapsule2, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000064, "Member 'UtilityFunctionLibrary_C_DrawDebugCapsule2::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_DrawDebugCapsule2, CallFunc_Add_VectorVector_ReturnValue) == 0x000070, "Member 'UtilityFunctionLibrary_C_DrawDebugCapsule2::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_DrawDebugCapsule2, CallFunc_VSize_ReturnValue) == 0x00007C, "Member 'UtilityFunctionLibrary_C_DrawDebugCapsule2::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_DrawDebugCapsule2, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000080, "Member 'UtilityFunctionLibrary_C_DrawDebugCapsule2::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_DrawDebugCapsule2, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x00008C, "Member 'UtilityFunctionLibrary_C_DrawDebugCapsule2::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_DrawDebugCapsule2, CallFunc_Add_FloatFloat_ReturnValue) == 0x000090, "Member 'UtilityFunctionLibrary_C_DrawDebugCapsule2::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");

// Function UtilityFunctionLibrary.UtilityFunctionLibrary_C.DrawDebugCapsuleComp
// 0x0048 (0x0048 - 0x0000)
struct UtilityFunctionLibrary_C_DrawDebugCapsuleComp final
{
public:
	class UCapsuleComponent*                      Capsule;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           LineColor;                                         // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Duration;                                          // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Thickness;                                         // 0x001C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0028(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetComponentRotation_ReturnValue;      // 0x0034(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_GetScaledCapsuleRadius_ReturnValue;       // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetScaledCapsuleHalfHeight_ReturnValue;   // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UtilityFunctionLibrary_C_DrawDebugCapsuleComp) == 0x000008, "Wrong alignment on UtilityFunctionLibrary_C_DrawDebugCapsuleComp");
static_assert(sizeof(UtilityFunctionLibrary_C_DrawDebugCapsuleComp) == 0x000048, "Wrong size on UtilityFunctionLibrary_C_DrawDebugCapsuleComp");
static_assert(offsetof(UtilityFunctionLibrary_C_DrawDebugCapsuleComp, Capsule) == 0x000000, "Member 'UtilityFunctionLibrary_C_DrawDebugCapsuleComp::Capsule' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_DrawDebugCapsuleComp, LineColor) == 0x000008, "Member 'UtilityFunctionLibrary_C_DrawDebugCapsuleComp::LineColor' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_DrawDebugCapsuleComp, Duration) == 0x000018, "Member 'UtilityFunctionLibrary_C_DrawDebugCapsuleComp::Duration' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_DrawDebugCapsuleComp, Thickness) == 0x00001C, "Member 'UtilityFunctionLibrary_C_DrawDebugCapsuleComp::Thickness' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_DrawDebugCapsuleComp, __WorldContext) == 0x000020, "Member 'UtilityFunctionLibrary_C_DrawDebugCapsuleComp::__WorldContext' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_DrawDebugCapsuleComp, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000028, "Member 'UtilityFunctionLibrary_C_DrawDebugCapsuleComp::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_DrawDebugCapsuleComp, CallFunc_K2_GetComponentRotation_ReturnValue) == 0x000034, "Member 'UtilityFunctionLibrary_C_DrawDebugCapsuleComp::CallFunc_K2_GetComponentRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_DrawDebugCapsuleComp, CallFunc_GetScaledCapsuleRadius_ReturnValue) == 0x000040, "Member 'UtilityFunctionLibrary_C_DrawDebugCapsuleComp::CallFunc_GetScaledCapsuleRadius_ReturnValue' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_DrawDebugCapsuleComp, CallFunc_GetScaledCapsuleHalfHeight_ReturnValue) == 0x000044, "Member 'UtilityFunctionLibrary_C_DrawDebugCapsuleComp::CallFunc_GetScaledCapsuleHalfHeight_ReturnValue' has a wrong offset!");

// Function UtilityFunctionLibrary.UtilityFunctionLibrary_C.LogCharacterMoveTime
// 0x00C0 (0x00C0 - 0x0000)
struct UtilityFunctionLibrary_C_LogCharacterMoveTime final
{
public:
	class AMarinerCharacter*                      Character;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 Log;                                               // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          bPrintToScreen;                                    // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25E7[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25E8[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue;          // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAuthority_ReturnValue_1;               // 0x0042(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0043(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25E9[0x4];                                     // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Temp_string_Variable;                              // 0x0048(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	float                                         CallFunc_GetCurrentClientTime_ReturnValue;         // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_25EA[0x4];                                     // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_FloatToString_ReturnValue;           // 0x0060(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_1;                            // 0x0070(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0080(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x0090(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 K2Node_Select_Default;                             // 0x00A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_3;              // 0x00B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(UtilityFunctionLibrary_C_LogCharacterMoveTime) == 0x000008, "Wrong alignment on UtilityFunctionLibrary_C_LogCharacterMoveTime");
static_assert(sizeof(UtilityFunctionLibrary_C_LogCharacterMoveTime) == 0x0000C0, "Wrong size on UtilityFunctionLibrary_C_LogCharacterMoveTime");
static_assert(offsetof(UtilityFunctionLibrary_C_LogCharacterMoveTime, Character) == 0x000000, "Member 'UtilityFunctionLibrary_C_LogCharacterMoveTime::Character' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_LogCharacterMoveTime, Log) == 0x000008, "Member 'UtilityFunctionLibrary_C_LogCharacterMoveTime::Log' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_LogCharacterMoveTime, bPrintToScreen) == 0x000018, "Member 'UtilityFunctionLibrary_C_LogCharacterMoveTime::bPrintToScreen' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_LogCharacterMoveTime, __WorldContext) == 0x000020, "Member 'UtilityFunctionLibrary_C_LogCharacterMoveTime::__WorldContext' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_LogCharacterMoveTime, Temp_bool_Variable) == 0x000028, "Member 'UtilityFunctionLibrary_C_LogCharacterMoveTime::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_LogCharacterMoveTime, CallFunc_Concat_StrStr_ReturnValue) == 0x000030, "Member 'UtilityFunctionLibrary_C_LogCharacterMoveTime::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_LogCharacterMoveTime, CallFunc_IsLocallyControlled_ReturnValue) == 0x000040, "Member 'UtilityFunctionLibrary_C_LogCharacterMoveTime::CallFunc_IsLocallyControlled_ReturnValue' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_LogCharacterMoveTime, CallFunc_HasAuthority_ReturnValue) == 0x000041, "Member 'UtilityFunctionLibrary_C_LogCharacterMoveTime::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_LogCharacterMoveTime, CallFunc_HasAuthority_ReturnValue_1) == 0x000042, "Member 'UtilityFunctionLibrary_C_LogCharacterMoveTime::CallFunc_HasAuthority_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_LogCharacterMoveTime, CallFunc_BooleanOR_ReturnValue) == 0x000043, "Member 'UtilityFunctionLibrary_C_LogCharacterMoveTime::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_LogCharacterMoveTime, Temp_string_Variable) == 0x000048, "Member 'UtilityFunctionLibrary_C_LogCharacterMoveTime::Temp_string_Variable' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_LogCharacterMoveTime, CallFunc_GetCurrentClientTime_ReturnValue) == 0x000058, "Member 'UtilityFunctionLibrary_C_LogCharacterMoveTime::CallFunc_GetCurrentClientTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_LogCharacterMoveTime, CallFunc_Conv_FloatToString_ReturnValue) == 0x000060, "Member 'UtilityFunctionLibrary_C_LogCharacterMoveTime::CallFunc_Conv_FloatToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_LogCharacterMoveTime, Temp_string_Variable_1) == 0x000070, "Member 'UtilityFunctionLibrary_C_LogCharacterMoveTime::Temp_string_Variable_1' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_LogCharacterMoveTime, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000080, "Member 'UtilityFunctionLibrary_C_LogCharacterMoveTime::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_LogCharacterMoveTime, CallFunc_Concat_StrStr_ReturnValue_2) == 0x000090, "Member 'UtilityFunctionLibrary_C_LogCharacterMoveTime::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_LogCharacterMoveTime, K2Node_Select_Default) == 0x0000A0, "Member 'UtilityFunctionLibrary_C_LogCharacterMoveTime::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_LogCharacterMoveTime, CallFunc_Concat_StrStr_ReturnValue_3) == 0x0000B0, "Member 'UtilityFunctionLibrary_C_LogCharacterMoveTime::CallFunc_Concat_StrStr_ReturnValue_3' has a wrong offset!");

// Function UtilityFunctionLibrary.UtilityFunctionLibrary_C.GetXYDistanceSquared
// 0x0050 (0x0050 - 0x0000)
struct UtilityFunctionLibrary_C_GetXYDistanceSquared final
{
public:
	struct FVector                                VectorA;                                           // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                VectorB;                                           // 0x000C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         XYDistanceSquared;                                 // 0x0020(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_1;                          // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_1;                          // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_1;                          // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x003C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_1;               // 0x0044(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_DistanceSquared2D_ReturnValue;            // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UtilityFunctionLibrary_C_GetXYDistanceSquared) == 0x000008, "Wrong alignment on UtilityFunctionLibrary_C_GetXYDistanceSquared");
static_assert(sizeof(UtilityFunctionLibrary_C_GetXYDistanceSquared) == 0x000050, "Wrong size on UtilityFunctionLibrary_C_GetXYDistanceSquared");
static_assert(offsetof(UtilityFunctionLibrary_C_GetXYDistanceSquared, VectorA) == 0x000000, "Member 'UtilityFunctionLibrary_C_GetXYDistanceSquared::VectorA' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_GetXYDistanceSquared, VectorB) == 0x00000C, "Member 'UtilityFunctionLibrary_C_GetXYDistanceSquared::VectorB' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_GetXYDistanceSquared, __WorldContext) == 0x000018, "Member 'UtilityFunctionLibrary_C_GetXYDistanceSquared::__WorldContext' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_GetXYDistanceSquared, XYDistanceSquared) == 0x000020, "Member 'UtilityFunctionLibrary_C_GetXYDistanceSquared::XYDistanceSquared' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_GetXYDistanceSquared, CallFunc_BreakVector_X) == 0x000024, "Member 'UtilityFunctionLibrary_C_GetXYDistanceSquared::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_GetXYDistanceSquared, CallFunc_BreakVector_Y) == 0x000028, "Member 'UtilityFunctionLibrary_C_GetXYDistanceSquared::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_GetXYDistanceSquared, CallFunc_BreakVector_Z) == 0x00002C, "Member 'UtilityFunctionLibrary_C_GetXYDistanceSquared::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_GetXYDistanceSquared, CallFunc_BreakVector_X_1) == 0x000030, "Member 'UtilityFunctionLibrary_C_GetXYDistanceSquared::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_GetXYDistanceSquared, CallFunc_BreakVector_Y_1) == 0x000034, "Member 'UtilityFunctionLibrary_C_GetXYDistanceSquared::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_GetXYDistanceSquared, CallFunc_BreakVector_Z_1) == 0x000038, "Member 'UtilityFunctionLibrary_C_GetXYDistanceSquared::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_GetXYDistanceSquared, CallFunc_MakeVector2D_ReturnValue) == 0x00003C, "Member 'UtilityFunctionLibrary_C_GetXYDistanceSquared::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_GetXYDistanceSquared, CallFunc_MakeVector2D_ReturnValue_1) == 0x000044, "Member 'UtilityFunctionLibrary_C_GetXYDistanceSquared::CallFunc_MakeVector2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_GetXYDistanceSquared, CallFunc_DistanceSquared2D_ReturnValue) == 0x00004C, "Member 'UtilityFunctionLibrary_C_GetXYDistanceSquared::CallFunc_DistanceSquared2D_ReturnValue' has a wrong offset!");

// Function UtilityFunctionLibrary.UtilityFunctionLibrary_C.TruncateRotator
// 0x0058 (0x0058 - 0x0000)
struct UtilityFunctionLibrary_C_TruncateRotator final
{
public:
	struct FRotator                               RawRotator;                                        // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25EB[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               TruncatedRotator;                                  // 0x0018(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue_1;                     // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_1;            // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue_2;                     // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_2;            // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0048(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UtilityFunctionLibrary_C_TruncateRotator) == 0x000008, "Wrong alignment on UtilityFunctionLibrary_C_TruncateRotator");
static_assert(sizeof(UtilityFunctionLibrary_C_TruncateRotator) == 0x000058, "Wrong size on UtilityFunctionLibrary_C_TruncateRotator");
static_assert(offsetof(UtilityFunctionLibrary_C_TruncateRotator, RawRotator) == 0x000000, "Member 'UtilityFunctionLibrary_C_TruncateRotator::RawRotator' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_TruncateRotator, __WorldContext) == 0x000010, "Member 'UtilityFunctionLibrary_C_TruncateRotator::__WorldContext' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_TruncateRotator, TruncatedRotator) == 0x000018, "Member 'UtilityFunctionLibrary_C_TruncateRotator::TruncatedRotator' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_TruncateRotator, CallFunc_BreakRotator_Roll) == 0x000024, "Member 'UtilityFunctionLibrary_C_TruncateRotator::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_TruncateRotator, CallFunc_BreakRotator_Pitch) == 0x000028, "Member 'UtilityFunctionLibrary_C_TruncateRotator::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_TruncateRotator, CallFunc_BreakRotator_Yaw) == 0x00002C, "Member 'UtilityFunctionLibrary_C_TruncateRotator::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_TruncateRotator, CallFunc_FTrunc_ReturnValue) == 0x000030, "Member 'UtilityFunctionLibrary_C_TruncateRotator::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_TruncateRotator, CallFunc_FTrunc_ReturnValue_1) == 0x000034, "Member 'UtilityFunctionLibrary_C_TruncateRotator::CallFunc_FTrunc_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_TruncateRotator, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000038, "Member 'UtilityFunctionLibrary_C_TruncateRotator::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_TruncateRotator, CallFunc_Conv_IntToFloat_ReturnValue_1) == 0x00003C, "Member 'UtilityFunctionLibrary_C_TruncateRotator::CallFunc_Conv_IntToFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_TruncateRotator, CallFunc_FTrunc_ReturnValue_2) == 0x000040, "Member 'UtilityFunctionLibrary_C_TruncateRotator::CallFunc_FTrunc_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_TruncateRotator, CallFunc_Conv_IntToFloat_ReturnValue_2) == 0x000044, "Member 'UtilityFunctionLibrary_C_TruncateRotator::CallFunc_Conv_IntToFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_TruncateRotator, CallFunc_MakeRotator_ReturnValue) == 0x000048, "Member 'UtilityFunctionLibrary_C_TruncateRotator::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");

// Function UtilityFunctionLibrary.UtilityFunctionLibrary_C.RotatorToVectorQuantize
// 0x0040 (0x0040 - 0x0000)
struct UtilityFunctionLibrary_C_RotatorToVectorQuantize final
{
public:
	struct FRotator                               Rotator;                                           // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25EC[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector_NetQuantize                    VecQuantize;                                       // 0x0018(0x000C)(Parm, OutParm, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector_NetQuantize                    K2Node_MakeStruct_Vector_NetQuantize;              // 0x0030(0x000C)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UtilityFunctionLibrary_C_RotatorToVectorQuantize) == 0x000008, "Wrong alignment on UtilityFunctionLibrary_C_RotatorToVectorQuantize");
static_assert(sizeof(UtilityFunctionLibrary_C_RotatorToVectorQuantize) == 0x000040, "Wrong size on UtilityFunctionLibrary_C_RotatorToVectorQuantize");
static_assert(offsetof(UtilityFunctionLibrary_C_RotatorToVectorQuantize, Rotator) == 0x000000, "Member 'UtilityFunctionLibrary_C_RotatorToVectorQuantize::Rotator' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_RotatorToVectorQuantize, __WorldContext) == 0x000010, "Member 'UtilityFunctionLibrary_C_RotatorToVectorQuantize::__WorldContext' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_RotatorToVectorQuantize, VecQuantize) == 0x000018, "Member 'UtilityFunctionLibrary_C_RotatorToVectorQuantize::VecQuantize' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_RotatorToVectorQuantize, CallFunc_BreakRotator_Roll) == 0x000024, "Member 'UtilityFunctionLibrary_C_RotatorToVectorQuantize::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_RotatorToVectorQuantize, CallFunc_BreakRotator_Pitch) == 0x000028, "Member 'UtilityFunctionLibrary_C_RotatorToVectorQuantize::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_RotatorToVectorQuantize, CallFunc_BreakRotator_Yaw) == 0x00002C, "Member 'UtilityFunctionLibrary_C_RotatorToVectorQuantize::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_RotatorToVectorQuantize, K2Node_MakeStruct_Vector_NetQuantize) == 0x000030, "Member 'UtilityFunctionLibrary_C_RotatorToVectorQuantize::K2Node_MakeStruct_Vector_NetQuantize' has a wrong offset!");

// Function UtilityFunctionLibrary.UtilityFunctionLibrary_C.VectorQuantizeToRotator
// 0x0030 (0x0030 - 0x0000)
struct UtilityFunctionLibrary_C_VectorQuantizeToRotator final
{
public:
	struct FVector_NetQuantize                    VecQuantize;                                       // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_25ED[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               Rotator;                                           // 0x0018(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0024(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UtilityFunctionLibrary_C_VectorQuantizeToRotator) == 0x000008, "Wrong alignment on UtilityFunctionLibrary_C_VectorQuantizeToRotator");
static_assert(sizeof(UtilityFunctionLibrary_C_VectorQuantizeToRotator) == 0x000030, "Wrong size on UtilityFunctionLibrary_C_VectorQuantizeToRotator");
static_assert(offsetof(UtilityFunctionLibrary_C_VectorQuantizeToRotator, VecQuantize) == 0x000000, "Member 'UtilityFunctionLibrary_C_VectorQuantizeToRotator::VecQuantize' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_VectorQuantizeToRotator, __WorldContext) == 0x000010, "Member 'UtilityFunctionLibrary_C_VectorQuantizeToRotator::__WorldContext' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_VectorQuantizeToRotator, Rotator) == 0x000018, "Member 'UtilityFunctionLibrary_C_VectorQuantizeToRotator::Rotator' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_VectorQuantizeToRotator, CallFunc_MakeRotator_ReturnValue) == 0x000024, "Member 'UtilityFunctionLibrary_C_VectorQuantizeToRotator::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");

// Function UtilityFunctionLibrary.UtilityFunctionLibrary_C.RotatorToVector
// 0x0040 (0x0040 - 0x0000)
struct UtilityFunctionLibrary_C_RotatorToVector final
{
public:
	struct FRotator                               Rotator;                                           // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25EE[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Vector;                                            // 0x0018(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0030(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UtilityFunctionLibrary_C_RotatorToVector) == 0x000008, "Wrong alignment on UtilityFunctionLibrary_C_RotatorToVector");
static_assert(sizeof(UtilityFunctionLibrary_C_RotatorToVector) == 0x000040, "Wrong size on UtilityFunctionLibrary_C_RotatorToVector");
static_assert(offsetof(UtilityFunctionLibrary_C_RotatorToVector, Rotator) == 0x000000, "Member 'UtilityFunctionLibrary_C_RotatorToVector::Rotator' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_RotatorToVector, __WorldContext) == 0x000010, "Member 'UtilityFunctionLibrary_C_RotatorToVector::__WorldContext' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_RotatorToVector, Vector) == 0x000018, "Member 'UtilityFunctionLibrary_C_RotatorToVector::Vector' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_RotatorToVector, CallFunc_BreakRotator_Roll) == 0x000024, "Member 'UtilityFunctionLibrary_C_RotatorToVector::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_RotatorToVector, CallFunc_BreakRotator_Pitch) == 0x000028, "Member 'UtilityFunctionLibrary_C_RotatorToVector::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_RotatorToVector, CallFunc_BreakRotator_Yaw) == 0x00002C, "Member 'UtilityFunctionLibrary_C_RotatorToVector::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_RotatorToVector, CallFunc_MakeVector_ReturnValue) == 0x000030, "Member 'UtilityFunctionLibrary_C_RotatorToVector::CallFunc_MakeVector_ReturnValue' has a wrong offset!");

// Function UtilityFunctionLibrary.UtilityFunctionLibrary_C.VectorToRotator
// 0x0040 (0x0040 - 0x0000)
struct UtilityFunctionLibrary_C_VectorToRotator final
{
public:
	struct FVector                                VecQtor;                                           // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_25EF[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               Rotator;                                           // 0x0018(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakVector_X;                            // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0030(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UtilityFunctionLibrary_C_VectorToRotator) == 0x000008, "Wrong alignment on UtilityFunctionLibrary_C_VectorToRotator");
static_assert(sizeof(UtilityFunctionLibrary_C_VectorToRotator) == 0x000040, "Wrong size on UtilityFunctionLibrary_C_VectorToRotator");
static_assert(offsetof(UtilityFunctionLibrary_C_VectorToRotator, VecQtor) == 0x000000, "Member 'UtilityFunctionLibrary_C_VectorToRotator::VecQtor' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_VectorToRotator, __WorldContext) == 0x000010, "Member 'UtilityFunctionLibrary_C_VectorToRotator::__WorldContext' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_VectorToRotator, Rotator) == 0x000018, "Member 'UtilityFunctionLibrary_C_VectorToRotator::Rotator' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_VectorToRotator, CallFunc_BreakVector_X) == 0x000024, "Member 'UtilityFunctionLibrary_C_VectorToRotator::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_VectorToRotator, CallFunc_BreakVector_Y) == 0x000028, "Member 'UtilityFunctionLibrary_C_VectorToRotator::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_VectorToRotator, CallFunc_BreakVector_Z) == 0x00002C, "Member 'UtilityFunctionLibrary_C_VectorToRotator::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_VectorToRotator, CallFunc_MakeRotator_ReturnValue) == 0x000030, "Member 'UtilityFunctionLibrary_C_VectorToRotator::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");

// Function UtilityFunctionLibrary.UtilityFunctionLibrary_C.LerpRotationRate
// 0x0068 (0x0068 - 0x0000)
struct UtilityFunctionLibrary_C_LerpRotationRate final
{
public:
	struct FRotator                               RotationRateA;                                     // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               RotationRateB;                                     // 0x000C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         Alpha;                                             // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_25F0[0x4];                                     // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               BlendedRotationRate;                               // 0x0028(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_RotatorToVector_Vector;                   // 0x0034(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_RotatorToVector_Vector_1;                 // 0x0040(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_VLerp_ReturnValue;                        // 0x004C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_VectorToRotator_Rotator;                  // 0x0058(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UtilityFunctionLibrary_C_LerpRotationRate) == 0x000008, "Wrong alignment on UtilityFunctionLibrary_C_LerpRotationRate");
static_assert(sizeof(UtilityFunctionLibrary_C_LerpRotationRate) == 0x000068, "Wrong size on UtilityFunctionLibrary_C_LerpRotationRate");
static_assert(offsetof(UtilityFunctionLibrary_C_LerpRotationRate, RotationRateA) == 0x000000, "Member 'UtilityFunctionLibrary_C_LerpRotationRate::RotationRateA' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_LerpRotationRate, RotationRateB) == 0x00000C, "Member 'UtilityFunctionLibrary_C_LerpRotationRate::RotationRateB' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_LerpRotationRate, Alpha) == 0x000018, "Member 'UtilityFunctionLibrary_C_LerpRotationRate::Alpha' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_LerpRotationRate, __WorldContext) == 0x000020, "Member 'UtilityFunctionLibrary_C_LerpRotationRate::__WorldContext' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_LerpRotationRate, BlendedRotationRate) == 0x000028, "Member 'UtilityFunctionLibrary_C_LerpRotationRate::BlendedRotationRate' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_LerpRotationRate, CallFunc_RotatorToVector_Vector) == 0x000034, "Member 'UtilityFunctionLibrary_C_LerpRotationRate::CallFunc_RotatorToVector_Vector' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_LerpRotationRate, CallFunc_RotatorToVector_Vector_1) == 0x000040, "Member 'UtilityFunctionLibrary_C_LerpRotationRate::CallFunc_RotatorToVector_Vector_1' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_LerpRotationRate, CallFunc_VLerp_ReturnValue) == 0x00004C, "Member 'UtilityFunctionLibrary_C_LerpRotationRate::CallFunc_VLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_LerpRotationRate, CallFunc_VectorToRotator_Rotator) == 0x000058, "Member 'UtilityFunctionLibrary_C_LerpRotationRate::CallFunc_VectorToRotator_Rotator' has a wrong offset!");

// Function UtilityFunctionLibrary.UtilityFunctionLibrary_C.LessThanOrEqualToVectorDistanceFast
// 0x0028 (0x0028 - 0x0000)
struct UtilityFunctionLibrary_C_LessThanOrEqualToVectorDistanceFast final
{
public:
	struct FVector                                Vector;                                            // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Distance;                                          // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          LessThanOrEqualTo;                                 // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25F1[0x3];                                     // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_VSizeSquared_ReturnValue;                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Square_ReturnValue;                       // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UtilityFunctionLibrary_C_LessThanOrEqualToVectorDistanceFast) == 0x000008, "Wrong alignment on UtilityFunctionLibrary_C_LessThanOrEqualToVectorDistanceFast");
static_assert(sizeof(UtilityFunctionLibrary_C_LessThanOrEqualToVectorDistanceFast) == 0x000028, "Wrong size on UtilityFunctionLibrary_C_LessThanOrEqualToVectorDistanceFast");
static_assert(offsetof(UtilityFunctionLibrary_C_LessThanOrEqualToVectorDistanceFast, Vector) == 0x000000, "Member 'UtilityFunctionLibrary_C_LessThanOrEqualToVectorDistanceFast::Vector' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_LessThanOrEqualToVectorDistanceFast, Distance) == 0x00000C, "Member 'UtilityFunctionLibrary_C_LessThanOrEqualToVectorDistanceFast::Distance' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_LessThanOrEqualToVectorDistanceFast, __WorldContext) == 0x000010, "Member 'UtilityFunctionLibrary_C_LessThanOrEqualToVectorDistanceFast::__WorldContext' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_LessThanOrEqualToVectorDistanceFast, LessThanOrEqualTo) == 0x000018, "Member 'UtilityFunctionLibrary_C_LessThanOrEqualToVectorDistanceFast::LessThanOrEqualTo' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_LessThanOrEqualToVectorDistanceFast, CallFunc_VSizeSquared_ReturnValue) == 0x00001C, "Member 'UtilityFunctionLibrary_C_LessThanOrEqualToVectorDistanceFast::CallFunc_VSizeSquared_ReturnValue' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_LessThanOrEqualToVectorDistanceFast, CallFunc_Square_ReturnValue) == 0x000020, "Member 'UtilityFunctionLibrary_C_LessThanOrEqualToVectorDistanceFast::CallFunc_Square_ReturnValue' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_LessThanOrEqualToVectorDistanceFast, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000024, "Member 'UtilityFunctionLibrary_C_LessThanOrEqualToVectorDistanceFast::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");

// Function UtilityFunctionLibrary.UtilityFunctionLibrary_C.LessThanVectorDistanceFast
// 0x0028 (0x0028 - 0x0000)
struct UtilityFunctionLibrary_C_LessThanVectorDistanceFast final
{
public:
	struct FVector                                Vector;                                            // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Distance;                                          // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          LessThan;                                          // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25F2[0x3];                                     // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_VSizeSquared_ReturnValue;                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Square_ReturnValue;                       // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UtilityFunctionLibrary_C_LessThanVectorDistanceFast) == 0x000008, "Wrong alignment on UtilityFunctionLibrary_C_LessThanVectorDistanceFast");
static_assert(sizeof(UtilityFunctionLibrary_C_LessThanVectorDistanceFast) == 0x000028, "Wrong size on UtilityFunctionLibrary_C_LessThanVectorDistanceFast");
static_assert(offsetof(UtilityFunctionLibrary_C_LessThanVectorDistanceFast, Vector) == 0x000000, "Member 'UtilityFunctionLibrary_C_LessThanVectorDistanceFast::Vector' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_LessThanVectorDistanceFast, Distance) == 0x00000C, "Member 'UtilityFunctionLibrary_C_LessThanVectorDistanceFast::Distance' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_LessThanVectorDistanceFast, __WorldContext) == 0x000010, "Member 'UtilityFunctionLibrary_C_LessThanVectorDistanceFast::__WorldContext' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_LessThanVectorDistanceFast, LessThan) == 0x000018, "Member 'UtilityFunctionLibrary_C_LessThanVectorDistanceFast::LessThan' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_LessThanVectorDistanceFast, CallFunc_VSizeSquared_ReturnValue) == 0x00001C, "Member 'UtilityFunctionLibrary_C_LessThanVectorDistanceFast::CallFunc_VSizeSquared_ReturnValue' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_LessThanVectorDistanceFast, CallFunc_Square_ReturnValue) == 0x000020, "Member 'UtilityFunctionLibrary_C_LessThanVectorDistanceFast::CallFunc_Square_ReturnValue' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_LessThanVectorDistanceFast, CallFunc_Less_FloatFloat_ReturnValue) == 0x000024, "Member 'UtilityFunctionLibrary_C_LessThanVectorDistanceFast::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");

// Function UtilityFunctionLibrary.UtilityFunctionLibrary_C.GreaterThanOrEqualToVectorDistanceFast
// 0x0028 (0x0028 - 0x0000)
struct UtilityFunctionLibrary_C_GreaterThanOrEqualToVectorDistanceFast final
{
public:
	struct FVector                                Vector;                                            // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Distance;                                          // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          GreaterThanOrEqualTo;                              // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25F3[0x3];                                     // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_VSizeSquared_ReturnValue;                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Square_ReturnValue;                       // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UtilityFunctionLibrary_C_GreaterThanOrEqualToVectorDistanceFast) == 0x000008, "Wrong alignment on UtilityFunctionLibrary_C_GreaterThanOrEqualToVectorDistanceFast");
static_assert(sizeof(UtilityFunctionLibrary_C_GreaterThanOrEqualToVectorDistanceFast) == 0x000028, "Wrong size on UtilityFunctionLibrary_C_GreaterThanOrEqualToVectorDistanceFast");
static_assert(offsetof(UtilityFunctionLibrary_C_GreaterThanOrEqualToVectorDistanceFast, Vector) == 0x000000, "Member 'UtilityFunctionLibrary_C_GreaterThanOrEqualToVectorDistanceFast::Vector' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_GreaterThanOrEqualToVectorDistanceFast, Distance) == 0x00000C, "Member 'UtilityFunctionLibrary_C_GreaterThanOrEqualToVectorDistanceFast::Distance' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_GreaterThanOrEqualToVectorDistanceFast, __WorldContext) == 0x000010, "Member 'UtilityFunctionLibrary_C_GreaterThanOrEqualToVectorDistanceFast::__WorldContext' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_GreaterThanOrEqualToVectorDistanceFast, GreaterThanOrEqualTo) == 0x000018, "Member 'UtilityFunctionLibrary_C_GreaterThanOrEqualToVectorDistanceFast::GreaterThanOrEqualTo' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_GreaterThanOrEqualToVectorDistanceFast, CallFunc_VSizeSquared_ReturnValue) == 0x00001C, "Member 'UtilityFunctionLibrary_C_GreaterThanOrEqualToVectorDistanceFast::CallFunc_VSizeSquared_ReturnValue' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_GreaterThanOrEqualToVectorDistanceFast, CallFunc_Square_ReturnValue) == 0x000020, "Member 'UtilityFunctionLibrary_C_GreaterThanOrEqualToVectorDistanceFast::CallFunc_Square_ReturnValue' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_GreaterThanOrEqualToVectorDistanceFast, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x000024, "Member 'UtilityFunctionLibrary_C_GreaterThanOrEqualToVectorDistanceFast::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");

// Function UtilityFunctionLibrary.UtilityFunctionLibrary_C.GreaterThanVectorDistanceFast
// 0x0028 (0x0028 - 0x0000)
struct UtilityFunctionLibrary_C_GreaterThanVectorDistanceFast final
{
public:
	struct FVector                                Vector;                                            // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Distance;                                          // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          GreaterThan;                                       // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25F4[0x3];                                     // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_VSizeSquared_ReturnValue;                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Square_ReturnValue;                       // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UtilityFunctionLibrary_C_GreaterThanVectorDistanceFast) == 0x000008, "Wrong alignment on UtilityFunctionLibrary_C_GreaterThanVectorDistanceFast");
static_assert(sizeof(UtilityFunctionLibrary_C_GreaterThanVectorDistanceFast) == 0x000028, "Wrong size on UtilityFunctionLibrary_C_GreaterThanVectorDistanceFast");
static_assert(offsetof(UtilityFunctionLibrary_C_GreaterThanVectorDistanceFast, Vector) == 0x000000, "Member 'UtilityFunctionLibrary_C_GreaterThanVectorDistanceFast::Vector' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_GreaterThanVectorDistanceFast, Distance) == 0x00000C, "Member 'UtilityFunctionLibrary_C_GreaterThanVectorDistanceFast::Distance' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_GreaterThanVectorDistanceFast, __WorldContext) == 0x000010, "Member 'UtilityFunctionLibrary_C_GreaterThanVectorDistanceFast::__WorldContext' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_GreaterThanVectorDistanceFast, GreaterThan) == 0x000018, "Member 'UtilityFunctionLibrary_C_GreaterThanVectorDistanceFast::GreaterThan' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_GreaterThanVectorDistanceFast, CallFunc_VSizeSquared_ReturnValue) == 0x00001C, "Member 'UtilityFunctionLibrary_C_GreaterThanVectorDistanceFast::CallFunc_VSizeSquared_ReturnValue' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_GreaterThanVectorDistanceFast, CallFunc_Square_ReturnValue) == 0x000020, "Member 'UtilityFunctionLibrary_C_GreaterThanVectorDistanceFast::CallFunc_Square_ReturnValue' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_GreaterThanVectorDistanceFast, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000024, "Member 'UtilityFunctionLibrary_C_GreaterThanVectorDistanceFast::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");

// Function UtilityFunctionLibrary.UtilityFunctionLibrary_C.GetVectorToTarget
// 0x0050 (0x0050 - 0x0000)
struct UtilityFunctionLibrary_C_GetVectorToTarget final
{
public:
	class AActor*                                 From;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 To;                                                // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Direction;                                         // 0x0018(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25F5[0x3];                                     // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0028(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0035(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25F6[0x2];                                     // 0x0036(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0038(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0044(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UtilityFunctionLibrary_C_GetVectorToTarget) == 0x000008, "Wrong alignment on UtilityFunctionLibrary_C_GetVectorToTarget");
static_assert(sizeof(UtilityFunctionLibrary_C_GetVectorToTarget) == 0x000050, "Wrong size on UtilityFunctionLibrary_C_GetVectorToTarget");
static_assert(offsetof(UtilityFunctionLibrary_C_GetVectorToTarget, From) == 0x000000, "Member 'UtilityFunctionLibrary_C_GetVectorToTarget::From' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_GetVectorToTarget, To) == 0x000008, "Member 'UtilityFunctionLibrary_C_GetVectorToTarget::To' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_GetVectorToTarget, __WorldContext) == 0x000010, "Member 'UtilityFunctionLibrary_C_GetVectorToTarget::__WorldContext' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_GetVectorToTarget, Direction) == 0x000018, "Member 'UtilityFunctionLibrary_C_GetVectorToTarget::Direction' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_GetVectorToTarget, CallFunc_IsValid_ReturnValue) == 0x000024, "Member 'UtilityFunctionLibrary_C_GetVectorToTarget::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_GetVectorToTarget, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000028, "Member 'UtilityFunctionLibrary_C_GetVectorToTarget::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_GetVectorToTarget, CallFunc_IsValid_ReturnValue_1) == 0x000034, "Member 'UtilityFunctionLibrary_C_GetVectorToTarget::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_GetVectorToTarget, CallFunc_BooleanAND_ReturnValue) == 0x000035, "Member 'UtilityFunctionLibrary_C_GetVectorToTarget::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_GetVectorToTarget, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000038, "Member 'UtilityFunctionLibrary_C_GetVectorToTarget::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_GetVectorToTarget, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000044, "Member 'UtilityFunctionLibrary_C_GetVectorToTarget::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");

// Function UtilityFunctionLibrary.UtilityFunctionLibrary_C.GetNormalToTarget
// 0x0040 (0x0040 - 0x0000)
struct UtilityFunctionLibrary_C_GetNormalToTarget final
{
public:
	class AActor*                                 From;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 To;                                                // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Normal;                                            // 0x0018(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetVectorToTarget_Direction;              // 0x0024(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x0030(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UtilityFunctionLibrary_C_GetNormalToTarget) == 0x000008, "Wrong alignment on UtilityFunctionLibrary_C_GetNormalToTarget");
static_assert(sizeof(UtilityFunctionLibrary_C_GetNormalToTarget) == 0x000040, "Wrong size on UtilityFunctionLibrary_C_GetNormalToTarget");
static_assert(offsetof(UtilityFunctionLibrary_C_GetNormalToTarget, From) == 0x000000, "Member 'UtilityFunctionLibrary_C_GetNormalToTarget::From' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_GetNormalToTarget, To) == 0x000008, "Member 'UtilityFunctionLibrary_C_GetNormalToTarget::To' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_GetNormalToTarget, __WorldContext) == 0x000010, "Member 'UtilityFunctionLibrary_C_GetNormalToTarget::__WorldContext' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_GetNormalToTarget, Normal) == 0x000018, "Member 'UtilityFunctionLibrary_C_GetNormalToTarget::Normal' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_GetNormalToTarget, CallFunc_GetVectorToTarget_Direction) == 0x000024, "Member 'UtilityFunctionLibrary_C_GetNormalToTarget::CallFunc_GetVectorToTarget_Direction' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_GetNormalToTarget, CallFunc_Normal_ReturnValue) == 0x000030, "Member 'UtilityFunctionLibrary_C_GetNormalToTarget::CallFunc_Normal_ReturnValue' has a wrong offset!");

// Function UtilityFunctionLibrary.UtilityFunctionLibrary_C.GetMidPointBetweenActors
// 0x0060 (0x0060 - 0x0000)
struct UtilityFunctionLibrary_C_GetMidPointBetweenActors final
{
public:
	class AActor*                                 ActorA;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 ActorB;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                MidPoint;                                          // 0x0018(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25F7[0x3];                                     // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0028(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0035(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25F8[0x2];                                     // 0x0036(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0038(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0044(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0050(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UtilityFunctionLibrary_C_GetMidPointBetweenActors) == 0x000008, "Wrong alignment on UtilityFunctionLibrary_C_GetMidPointBetweenActors");
static_assert(sizeof(UtilityFunctionLibrary_C_GetMidPointBetweenActors) == 0x000060, "Wrong size on UtilityFunctionLibrary_C_GetMidPointBetweenActors");
static_assert(offsetof(UtilityFunctionLibrary_C_GetMidPointBetweenActors, ActorA) == 0x000000, "Member 'UtilityFunctionLibrary_C_GetMidPointBetweenActors::ActorA' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_GetMidPointBetweenActors, ActorB) == 0x000008, "Member 'UtilityFunctionLibrary_C_GetMidPointBetweenActors::ActorB' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_GetMidPointBetweenActors, __WorldContext) == 0x000010, "Member 'UtilityFunctionLibrary_C_GetMidPointBetweenActors::__WorldContext' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_GetMidPointBetweenActors, MidPoint) == 0x000018, "Member 'UtilityFunctionLibrary_C_GetMidPointBetweenActors::MidPoint' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_GetMidPointBetweenActors, CallFunc_IsValid_ReturnValue) == 0x000024, "Member 'UtilityFunctionLibrary_C_GetMidPointBetweenActors::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_GetMidPointBetweenActors, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000028, "Member 'UtilityFunctionLibrary_C_GetMidPointBetweenActors::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_GetMidPointBetweenActors, CallFunc_IsValid_ReturnValue_1) == 0x000034, "Member 'UtilityFunctionLibrary_C_GetMidPointBetweenActors::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_GetMidPointBetweenActors, CallFunc_BooleanAND_ReturnValue) == 0x000035, "Member 'UtilityFunctionLibrary_C_GetMidPointBetweenActors::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_GetMidPointBetweenActors, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000038, "Member 'UtilityFunctionLibrary_C_GetMidPointBetweenActors::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_GetMidPointBetweenActors, CallFunc_Add_VectorVector_ReturnValue) == 0x000044, "Member 'UtilityFunctionLibrary_C_GetMidPointBetweenActors::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_GetMidPointBetweenActors, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000050, "Member 'UtilityFunctionLibrary_C_GetMidPointBetweenActors::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");

// Function UtilityFunctionLibrary.UtilityFunctionLibrary_C.GetNormalFromHit
// 0x0118 (0x0118 - 0x0000)
struct UtilityFunctionLibrary_C_GetNormalFromHit final
{
public:
	struct FHitResult                             Hit;                                               // 0x0000(0x0088)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class UObject*                                __WorldContext;                                    // 0x0088(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Normal;                                            // 0x0090(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x009C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x009D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25F9[0x2];                                     // 0x009E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x00A8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x00B4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x00C0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x00CC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x00E8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0100(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x010C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UtilityFunctionLibrary_C_GetNormalFromHit) == 0x000008, "Wrong alignment on UtilityFunctionLibrary_C_GetNormalFromHit");
static_assert(sizeof(UtilityFunctionLibrary_C_GetNormalFromHit) == 0x000118, "Wrong size on UtilityFunctionLibrary_C_GetNormalFromHit");
static_assert(offsetof(UtilityFunctionLibrary_C_GetNormalFromHit, Hit) == 0x000000, "Member 'UtilityFunctionLibrary_C_GetNormalFromHit::Hit' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_GetNormalFromHit, __WorldContext) == 0x000088, "Member 'UtilityFunctionLibrary_C_GetNormalFromHit::__WorldContext' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_GetNormalFromHit, Normal) == 0x000090, "Member 'UtilityFunctionLibrary_C_GetNormalFromHit::Normal' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_GetNormalFromHit, CallFunc_BreakHitResult_bBlockingHit) == 0x00009C, "Member 'UtilityFunctionLibrary_C_GetNormalFromHit::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_GetNormalFromHit, CallFunc_BreakHitResult_bInitialOverlap) == 0x00009D, "Member 'UtilityFunctionLibrary_C_GetNormalFromHit::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_GetNormalFromHit, CallFunc_BreakHitResult_Time) == 0x0000A0, "Member 'UtilityFunctionLibrary_C_GetNormalFromHit::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_GetNormalFromHit, CallFunc_BreakHitResult_Distance) == 0x0000A4, "Member 'UtilityFunctionLibrary_C_GetNormalFromHit::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_GetNormalFromHit, CallFunc_BreakHitResult_Location) == 0x0000A8, "Member 'UtilityFunctionLibrary_C_GetNormalFromHit::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_GetNormalFromHit, CallFunc_BreakHitResult_ImpactPoint) == 0x0000B4, "Member 'UtilityFunctionLibrary_C_GetNormalFromHit::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_GetNormalFromHit, CallFunc_BreakHitResult_Normal) == 0x0000C0, "Member 'UtilityFunctionLibrary_C_GetNormalFromHit::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_GetNormalFromHit, CallFunc_BreakHitResult_ImpactNormal) == 0x0000CC, "Member 'UtilityFunctionLibrary_C_GetNormalFromHit::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_GetNormalFromHit, CallFunc_BreakHitResult_PhysMat) == 0x0000D8, "Member 'UtilityFunctionLibrary_C_GetNormalFromHit::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_GetNormalFromHit, CallFunc_BreakHitResult_HitActor) == 0x0000E0, "Member 'UtilityFunctionLibrary_C_GetNormalFromHit::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_GetNormalFromHit, CallFunc_BreakHitResult_HitComponent) == 0x0000E8, "Member 'UtilityFunctionLibrary_C_GetNormalFromHit::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_GetNormalFromHit, CallFunc_BreakHitResult_HitBoneName) == 0x0000F0, "Member 'UtilityFunctionLibrary_C_GetNormalFromHit::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_GetNormalFromHit, CallFunc_BreakHitResult_HitItem) == 0x0000F8, "Member 'UtilityFunctionLibrary_C_GetNormalFromHit::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_GetNormalFromHit, CallFunc_BreakHitResult_FaceIndex) == 0x0000FC, "Member 'UtilityFunctionLibrary_C_GetNormalFromHit::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_GetNormalFromHit, CallFunc_BreakHitResult_TraceStart) == 0x000100, "Member 'UtilityFunctionLibrary_C_GetNormalFromHit::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_GetNormalFromHit, CallFunc_BreakHitResult_TraceEnd) == 0x00010C, "Member 'UtilityFunctionLibrary_C_GetNormalFromHit::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");

// Function UtilityFunctionLibrary.UtilityFunctionLibrary_C.VectorToQuantized
// 0x0040 (0x0040 - 0x0000)
struct UtilityFunctionLibrary_C_VectorToQuantized final
{
public:
	struct FVector                                Vector;                                            // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_25FA[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector_NetQuantize                    VectorNetQuantized;                                // 0x0018(0x000C)(Parm, OutParm, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector_NetQuantize                    K2Node_MakeStruct_Vector_NetQuantize;              // 0x0030(0x000C)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UtilityFunctionLibrary_C_VectorToQuantized) == 0x000008, "Wrong alignment on UtilityFunctionLibrary_C_VectorToQuantized");
static_assert(sizeof(UtilityFunctionLibrary_C_VectorToQuantized) == 0x000040, "Wrong size on UtilityFunctionLibrary_C_VectorToQuantized");
static_assert(offsetof(UtilityFunctionLibrary_C_VectorToQuantized, Vector) == 0x000000, "Member 'UtilityFunctionLibrary_C_VectorToQuantized::Vector' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_VectorToQuantized, __WorldContext) == 0x000010, "Member 'UtilityFunctionLibrary_C_VectorToQuantized::__WorldContext' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_VectorToQuantized, VectorNetQuantized) == 0x000018, "Member 'UtilityFunctionLibrary_C_VectorToQuantized::VectorNetQuantized' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_VectorToQuantized, CallFunc_BreakVector_X) == 0x000024, "Member 'UtilityFunctionLibrary_C_VectorToQuantized::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_VectorToQuantized, CallFunc_BreakVector_Y) == 0x000028, "Member 'UtilityFunctionLibrary_C_VectorToQuantized::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_VectorToQuantized, CallFunc_BreakVector_Z) == 0x00002C, "Member 'UtilityFunctionLibrary_C_VectorToQuantized::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_VectorToQuantized, K2Node_MakeStruct_Vector_NetQuantize) == 0x000030, "Member 'UtilityFunctionLibrary_C_VectorToQuantized::K2Node_MakeStruct_Vector_NetQuantize' has a wrong offset!");

// Function UtilityFunctionLibrary.UtilityFunctionLibrary_C.GetHitComponentFromHit
// 0x0118 (0x0118 - 0x0000)
struct UtilityFunctionLibrary_C_GetHitComponentFromHit final
{
public:
	struct FHitResult                             Hit;                                               // 0x0000(0x0088)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class UObject*                                __WorldContext;                                    // 0x0088(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    HitComponent;                                      // 0x0090(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x0099(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25FB[0x2];                                     // 0x009A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x00A4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x00B0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x00BC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x00C8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_25FC[0x4];                                     // 0x00D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x00E8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0100(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x010C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UtilityFunctionLibrary_C_GetHitComponentFromHit) == 0x000008, "Wrong alignment on UtilityFunctionLibrary_C_GetHitComponentFromHit");
static_assert(sizeof(UtilityFunctionLibrary_C_GetHitComponentFromHit) == 0x000118, "Wrong size on UtilityFunctionLibrary_C_GetHitComponentFromHit");
static_assert(offsetof(UtilityFunctionLibrary_C_GetHitComponentFromHit, Hit) == 0x000000, "Member 'UtilityFunctionLibrary_C_GetHitComponentFromHit::Hit' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_GetHitComponentFromHit, __WorldContext) == 0x000088, "Member 'UtilityFunctionLibrary_C_GetHitComponentFromHit::__WorldContext' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_GetHitComponentFromHit, HitComponent) == 0x000090, "Member 'UtilityFunctionLibrary_C_GetHitComponentFromHit::HitComponent' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_GetHitComponentFromHit, CallFunc_BreakHitResult_bBlockingHit) == 0x000098, "Member 'UtilityFunctionLibrary_C_GetHitComponentFromHit::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_GetHitComponentFromHit, CallFunc_BreakHitResult_bInitialOverlap) == 0x000099, "Member 'UtilityFunctionLibrary_C_GetHitComponentFromHit::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_GetHitComponentFromHit, CallFunc_BreakHitResult_Time) == 0x00009C, "Member 'UtilityFunctionLibrary_C_GetHitComponentFromHit::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_GetHitComponentFromHit, CallFunc_BreakHitResult_Distance) == 0x0000A0, "Member 'UtilityFunctionLibrary_C_GetHitComponentFromHit::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_GetHitComponentFromHit, CallFunc_BreakHitResult_Location) == 0x0000A4, "Member 'UtilityFunctionLibrary_C_GetHitComponentFromHit::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_GetHitComponentFromHit, CallFunc_BreakHitResult_ImpactPoint) == 0x0000B0, "Member 'UtilityFunctionLibrary_C_GetHitComponentFromHit::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_GetHitComponentFromHit, CallFunc_BreakHitResult_Normal) == 0x0000BC, "Member 'UtilityFunctionLibrary_C_GetHitComponentFromHit::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_GetHitComponentFromHit, CallFunc_BreakHitResult_ImpactNormal) == 0x0000C8, "Member 'UtilityFunctionLibrary_C_GetHitComponentFromHit::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_GetHitComponentFromHit, CallFunc_BreakHitResult_PhysMat) == 0x0000D8, "Member 'UtilityFunctionLibrary_C_GetHitComponentFromHit::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_GetHitComponentFromHit, CallFunc_BreakHitResult_HitActor) == 0x0000E0, "Member 'UtilityFunctionLibrary_C_GetHitComponentFromHit::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_GetHitComponentFromHit, CallFunc_BreakHitResult_HitComponent) == 0x0000E8, "Member 'UtilityFunctionLibrary_C_GetHitComponentFromHit::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_GetHitComponentFromHit, CallFunc_BreakHitResult_HitBoneName) == 0x0000F0, "Member 'UtilityFunctionLibrary_C_GetHitComponentFromHit::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_GetHitComponentFromHit, CallFunc_BreakHitResult_HitItem) == 0x0000F8, "Member 'UtilityFunctionLibrary_C_GetHitComponentFromHit::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_GetHitComponentFromHit, CallFunc_BreakHitResult_FaceIndex) == 0x0000FC, "Member 'UtilityFunctionLibrary_C_GetHitComponentFromHit::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_GetHitComponentFromHit, CallFunc_BreakHitResult_TraceStart) == 0x000100, "Member 'UtilityFunctionLibrary_C_GetHitComponentFromHit::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_GetHitComponentFromHit, CallFunc_BreakHitResult_TraceEnd) == 0x00010C, "Member 'UtilityFunctionLibrary_C_GetHitComponentFromHit::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");

// Function UtilityFunctionLibrary.UtilityFunctionLibrary_C.GetLocationFromHit
// 0x0118 (0x0118 - 0x0000)
struct UtilityFunctionLibrary_C_GetLocationFromHit final
{
public:
	struct FHitResult                             Hit;                                               // 0x0000(0x0088)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class UObject*                                __WorldContext;                                    // 0x0088(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Location;                                          // 0x0090(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x009C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x009D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25FD[0x2];                                     // 0x009E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x00A8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x00B4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x00C0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x00CC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x00E8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0100(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x010C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UtilityFunctionLibrary_C_GetLocationFromHit) == 0x000008, "Wrong alignment on UtilityFunctionLibrary_C_GetLocationFromHit");
static_assert(sizeof(UtilityFunctionLibrary_C_GetLocationFromHit) == 0x000118, "Wrong size on UtilityFunctionLibrary_C_GetLocationFromHit");
static_assert(offsetof(UtilityFunctionLibrary_C_GetLocationFromHit, Hit) == 0x000000, "Member 'UtilityFunctionLibrary_C_GetLocationFromHit::Hit' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_GetLocationFromHit, __WorldContext) == 0x000088, "Member 'UtilityFunctionLibrary_C_GetLocationFromHit::__WorldContext' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_GetLocationFromHit, Location) == 0x000090, "Member 'UtilityFunctionLibrary_C_GetLocationFromHit::Location' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_GetLocationFromHit, CallFunc_BreakHitResult_bBlockingHit) == 0x00009C, "Member 'UtilityFunctionLibrary_C_GetLocationFromHit::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_GetLocationFromHit, CallFunc_BreakHitResult_bInitialOverlap) == 0x00009D, "Member 'UtilityFunctionLibrary_C_GetLocationFromHit::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_GetLocationFromHit, CallFunc_BreakHitResult_Time) == 0x0000A0, "Member 'UtilityFunctionLibrary_C_GetLocationFromHit::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_GetLocationFromHit, CallFunc_BreakHitResult_Distance) == 0x0000A4, "Member 'UtilityFunctionLibrary_C_GetLocationFromHit::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_GetLocationFromHit, CallFunc_BreakHitResult_Location) == 0x0000A8, "Member 'UtilityFunctionLibrary_C_GetLocationFromHit::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_GetLocationFromHit, CallFunc_BreakHitResult_ImpactPoint) == 0x0000B4, "Member 'UtilityFunctionLibrary_C_GetLocationFromHit::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_GetLocationFromHit, CallFunc_BreakHitResult_Normal) == 0x0000C0, "Member 'UtilityFunctionLibrary_C_GetLocationFromHit::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_GetLocationFromHit, CallFunc_BreakHitResult_ImpactNormal) == 0x0000CC, "Member 'UtilityFunctionLibrary_C_GetLocationFromHit::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_GetLocationFromHit, CallFunc_BreakHitResult_PhysMat) == 0x0000D8, "Member 'UtilityFunctionLibrary_C_GetLocationFromHit::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_GetLocationFromHit, CallFunc_BreakHitResult_HitActor) == 0x0000E0, "Member 'UtilityFunctionLibrary_C_GetLocationFromHit::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_GetLocationFromHit, CallFunc_BreakHitResult_HitComponent) == 0x0000E8, "Member 'UtilityFunctionLibrary_C_GetLocationFromHit::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_GetLocationFromHit, CallFunc_BreakHitResult_HitBoneName) == 0x0000F0, "Member 'UtilityFunctionLibrary_C_GetLocationFromHit::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_GetLocationFromHit, CallFunc_BreakHitResult_HitItem) == 0x0000F8, "Member 'UtilityFunctionLibrary_C_GetLocationFromHit::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_GetLocationFromHit, CallFunc_BreakHitResult_FaceIndex) == 0x0000FC, "Member 'UtilityFunctionLibrary_C_GetLocationFromHit::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_GetLocationFromHit, CallFunc_BreakHitResult_TraceStart) == 0x000100, "Member 'UtilityFunctionLibrary_C_GetLocationFromHit::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_GetLocationFromHit, CallFunc_BreakHitResult_TraceEnd) == 0x00010C, "Member 'UtilityFunctionLibrary_C_GetLocationFromHit::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");

// Function UtilityFunctionLibrary.UtilityFunctionLibrary_C.GetImpactNormalFromHit
// 0x0118 (0x0118 - 0x0000)
struct UtilityFunctionLibrary_C_GetImpactNormalFromHit final
{
public:
	struct FHitResult                             Hit;                                               // 0x0000(0x0088)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class UObject*                                __WorldContext;                                    // 0x0088(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Normal;                                            // 0x0090(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x009C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x009D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25FE[0x2];                                     // 0x009E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x00A8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x00B4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x00C0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x00CC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x00E8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0100(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x010C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UtilityFunctionLibrary_C_GetImpactNormalFromHit) == 0x000008, "Wrong alignment on UtilityFunctionLibrary_C_GetImpactNormalFromHit");
static_assert(sizeof(UtilityFunctionLibrary_C_GetImpactNormalFromHit) == 0x000118, "Wrong size on UtilityFunctionLibrary_C_GetImpactNormalFromHit");
static_assert(offsetof(UtilityFunctionLibrary_C_GetImpactNormalFromHit, Hit) == 0x000000, "Member 'UtilityFunctionLibrary_C_GetImpactNormalFromHit::Hit' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_GetImpactNormalFromHit, __WorldContext) == 0x000088, "Member 'UtilityFunctionLibrary_C_GetImpactNormalFromHit::__WorldContext' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_GetImpactNormalFromHit, Normal) == 0x000090, "Member 'UtilityFunctionLibrary_C_GetImpactNormalFromHit::Normal' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_GetImpactNormalFromHit, CallFunc_BreakHitResult_bBlockingHit) == 0x00009C, "Member 'UtilityFunctionLibrary_C_GetImpactNormalFromHit::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_GetImpactNormalFromHit, CallFunc_BreakHitResult_bInitialOverlap) == 0x00009D, "Member 'UtilityFunctionLibrary_C_GetImpactNormalFromHit::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_GetImpactNormalFromHit, CallFunc_BreakHitResult_Time) == 0x0000A0, "Member 'UtilityFunctionLibrary_C_GetImpactNormalFromHit::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_GetImpactNormalFromHit, CallFunc_BreakHitResult_Distance) == 0x0000A4, "Member 'UtilityFunctionLibrary_C_GetImpactNormalFromHit::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_GetImpactNormalFromHit, CallFunc_BreakHitResult_Location) == 0x0000A8, "Member 'UtilityFunctionLibrary_C_GetImpactNormalFromHit::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_GetImpactNormalFromHit, CallFunc_BreakHitResult_ImpactPoint) == 0x0000B4, "Member 'UtilityFunctionLibrary_C_GetImpactNormalFromHit::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_GetImpactNormalFromHit, CallFunc_BreakHitResult_Normal) == 0x0000C0, "Member 'UtilityFunctionLibrary_C_GetImpactNormalFromHit::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_GetImpactNormalFromHit, CallFunc_BreakHitResult_ImpactNormal) == 0x0000CC, "Member 'UtilityFunctionLibrary_C_GetImpactNormalFromHit::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_GetImpactNormalFromHit, CallFunc_BreakHitResult_PhysMat) == 0x0000D8, "Member 'UtilityFunctionLibrary_C_GetImpactNormalFromHit::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_GetImpactNormalFromHit, CallFunc_BreakHitResult_HitActor) == 0x0000E0, "Member 'UtilityFunctionLibrary_C_GetImpactNormalFromHit::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_GetImpactNormalFromHit, CallFunc_BreakHitResult_HitComponent) == 0x0000E8, "Member 'UtilityFunctionLibrary_C_GetImpactNormalFromHit::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_GetImpactNormalFromHit, CallFunc_BreakHitResult_HitBoneName) == 0x0000F0, "Member 'UtilityFunctionLibrary_C_GetImpactNormalFromHit::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_GetImpactNormalFromHit, CallFunc_BreakHitResult_HitItem) == 0x0000F8, "Member 'UtilityFunctionLibrary_C_GetImpactNormalFromHit::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_GetImpactNormalFromHit, CallFunc_BreakHitResult_FaceIndex) == 0x0000FC, "Member 'UtilityFunctionLibrary_C_GetImpactNormalFromHit::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_GetImpactNormalFromHit, CallFunc_BreakHitResult_TraceStart) == 0x000100, "Member 'UtilityFunctionLibrary_C_GetImpactNormalFromHit::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_GetImpactNormalFromHit, CallFunc_BreakHitResult_TraceEnd) == 0x00010C, "Member 'UtilityFunctionLibrary_C_GetImpactNormalFromHit::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");

// Function UtilityFunctionLibrary.UtilityFunctionLibrary_C.GetAvgBetweenVectors
// 0x0048 (0x0048 - 0x0000)
struct UtilityFunctionLibrary_C_GetAvgBetweenVectors final
{
public:
	struct FVector                                LocA;                                              // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                LocB;                                              // 0x000C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                MidPoint;                                          // 0x0020(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x002C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0038(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UtilityFunctionLibrary_C_GetAvgBetweenVectors) == 0x000008, "Wrong alignment on UtilityFunctionLibrary_C_GetAvgBetweenVectors");
static_assert(sizeof(UtilityFunctionLibrary_C_GetAvgBetweenVectors) == 0x000048, "Wrong size on UtilityFunctionLibrary_C_GetAvgBetweenVectors");
static_assert(offsetof(UtilityFunctionLibrary_C_GetAvgBetweenVectors, LocA) == 0x000000, "Member 'UtilityFunctionLibrary_C_GetAvgBetweenVectors::LocA' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_GetAvgBetweenVectors, LocB) == 0x00000C, "Member 'UtilityFunctionLibrary_C_GetAvgBetweenVectors::LocB' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_GetAvgBetweenVectors, __WorldContext) == 0x000018, "Member 'UtilityFunctionLibrary_C_GetAvgBetweenVectors::__WorldContext' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_GetAvgBetweenVectors, MidPoint) == 0x000020, "Member 'UtilityFunctionLibrary_C_GetAvgBetweenVectors::MidPoint' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_GetAvgBetweenVectors, CallFunc_Add_VectorVector_ReturnValue) == 0x00002C, "Member 'UtilityFunctionLibrary_C_GetAvgBetweenVectors::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_GetAvgBetweenVectors, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000038, "Member 'UtilityFunctionLibrary_C_GetAvgBetweenVectors::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");

// Function UtilityFunctionLibrary.UtilityFunctionLibrary_C.GetPingMSFromPlayerState
// 0x0020 (0x0020 - 0x0000)
struct UtilityFunctionLibrary_C_GetPingMSFromPlayerState final
{
public:
	class APlayerState*                           PlayerState;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         PingMS;                                            // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         CallFunc_Multiply_ByteByte_ReturnValue;            // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_25FF[0x2];                                     // 0x0016(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Conv_ByteToFloat_ReturnValue;             // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UtilityFunctionLibrary_C_GetPingMSFromPlayerState) == 0x000008, "Wrong alignment on UtilityFunctionLibrary_C_GetPingMSFromPlayerState");
static_assert(sizeof(UtilityFunctionLibrary_C_GetPingMSFromPlayerState) == 0x000020, "Wrong size on UtilityFunctionLibrary_C_GetPingMSFromPlayerState");
static_assert(offsetof(UtilityFunctionLibrary_C_GetPingMSFromPlayerState, PlayerState) == 0x000000, "Member 'UtilityFunctionLibrary_C_GetPingMSFromPlayerState::PlayerState' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_GetPingMSFromPlayerState, __WorldContext) == 0x000008, "Member 'UtilityFunctionLibrary_C_GetPingMSFromPlayerState::__WorldContext' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_GetPingMSFromPlayerState, PingMS) == 0x000010, "Member 'UtilityFunctionLibrary_C_GetPingMSFromPlayerState::PingMS' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_GetPingMSFromPlayerState, CallFunc_IsValid_ReturnValue) == 0x000014, "Member 'UtilityFunctionLibrary_C_GetPingMSFromPlayerState::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_GetPingMSFromPlayerState, CallFunc_Multiply_ByteByte_ReturnValue) == 0x000015, "Member 'UtilityFunctionLibrary_C_GetPingMSFromPlayerState::CallFunc_Multiply_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_GetPingMSFromPlayerState, CallFunc_Conv_ByteToFloat_ReturnValue) == 0x000018, "Member 'UtilityFunctionLibrary_C_GetPingMSFromPlayerState::CallFunc_Conv_ByteToFloat_ReturnValue' has a wrong offset!");

// Function UtilityFunctionLibrary.UtilityFunctionLibrary_C.GetPingSecondsFromPlayerState
// 0x0020 (0x0020 - 0x0000)
struct UtilityFunctionLibrary_C_GetPingSecondsFromPlayerState final
{
public:
	class APlayerState*                           PlayerState;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         PingSeconds;                                       // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetPingMSFromPlayerState_PingMS;          // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UtilityFunctionLibrary_C_GetPingSecondsFromPlayerState) == 0x000008, "Wrong alignment on UtilityFunctionLibrary_C_GetPingSecondsFromPlayerState");
static_assert(sizeof(UtilityFunctionLibrary_C_GetPingSecondsFromPlayerState) == 0x000020, "Wrong size on UtilityFunctionLibrary_C_GetPingSecondsFromPlayerState");
static_assert(offsetof(UtilityFunctionLibrary_C_GetPingSecondsFromPlayerState, PlayerState) == 0x000000, "Member 'UtilityFunctionLibrary_C_GetPingSecondsFromPlayerState::PlayerState' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_GetPingSecondsFromPlayerState, __WorldContext) == 0x000008, "Member 'UtilityFunctionLibrary_C_GetPingSecondsFromPlayerState::__WorldContext' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_GetPingSecondsFromPlayerState, PingSeconds) == 0x000010, "Member 'UtilityFunctionLibrary_C_GetPingSecondsFromPlayerState::PingSeconds' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_GetPingSecondsFromPlayerState, CallFunc_GetPingMSFromPlayerState_PingMS) == 0x000014, "Member 'UtilityFunctionLibrary_C_GetPingSecondsFromPlayerState::CallFunc_GetPingMSFromPlayerState_PingMS' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_GetPingSecondsFromPlayerState, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000018, "Member 'UtilityFunctionLibrary_C_GetPingSecondsFromPlayerState::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");

// Function UtilityFunctionLibrary.UtilityFunctionLibrary_C.NormalizeRatio
// 0x0030 (0x0030 - 0x0000)
struct UtilityFunctionLibrary_C_NormalizeRatio final
{
public:
	float                                         RawRatio;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2600[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         NormalizedRatio;                                   // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Fractional;                                        // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2601[0x3];                                     // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Fraction_ReturnValue;                     // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2602[0x3];                                     // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default;                             // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UtilityFunctionLibrary_C_NormalizeRatio) == 0x000008, "Wrong alignment on UtilityFunctionLibrary_C_NormalizeRatio");
static_assert(sizeof(UtilityFunctionLibrary_C_NormalizeRatio) == 0x000030, "Wrong size on UtilityFunctionLibrary_C_NormalizeRatio");
static_assert(offsetof(UtilityFunctionLibrary_C_NormalizeRatio, RawRatio) == 0x000000, "Member 'UtilityFunctionLibrary_C_NormalizeRatio::RawRatio' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_NormalizeRatio, __WorldContext) == 0x000008, "Member 'UtilityFunctionLibrary_C_NormalizeRatio::__WorldContext' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_NormalizeRatio, NormalizedRatio) == 0x000010, "Member 'UtilityFunctionLibrary_C_NormalizeRatio::NormalizedRatio' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_NormalizeRatio, Fractional) == 0x000014, "Member 'UtilityFunctionLibrary_C_NormalizeRatio::Fractional' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_NormalizeRatio, Temp_bool_Variable) == 0x000018, "Member 'UtilityFunctionLibrary_C_NormalizeRatio::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_NormalizeRatio, CallFunc_Fraction_ReturnValue) == 0x00001C, "Member 'UtilityFunctionLibrary_C_NormalizeRatio::CallFunc_Fraction_ReturnValue' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_NormalizeRatio, CallFunc_Less_FloatFloat_ReturnValue) == 0x000020, "Member 'UtilityFunctionLibrary_C_NormalizeRatio::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_NormalizeRatio, CallFunc_Add_FloatFloat_ReturnValue) == 0x000024, "Member 'UtilityFunctionLibrary_C_NormalizeRatio::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_NormalizeRatio, K2Node_Select_Default) == 0x000028, "Member 'UtilityFunctionLibrary_C_NormalizeRatio::K2Node_Select_Default' has a wrong offset!");

// Function UtilityFunctionLibrary.UtilityFunctionLibrary_C.Draw Debug Text Line
// 0x00B8 (0x00B8 - 0x0000)
struct UtilityFunctionLibrary_C_Draw_Debug_Text_Line final
{
public:
	class FString                                 Text;                                              // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Prefix;                                            // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	struct FLinearColor                           DrawColor;                                         // 0x0020(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                DrawLocation;                                      // 0x0030(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LineSpacing;                                       // 0x003C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Draw_Duration;                                     // 0x0040(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Tabs;                                              // 0x0044(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0048(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 TabString;                                         // 0x0050(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2603[0x3];                                     // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x006C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0078(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2604[0x4];                                     // 0x0084(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0088(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0098(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x00A8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(UtilityFunctionLibrary_C_Draw_Debug_Text_Line) == 0x000008, "Wrong alignment on UtilityFunctionLibrary_C_Draw_Debug_Text_Line");
static_assert(sizeof(UtilityFunctionLibrary_C_Draw_Debug_Text_Line) == 0x0000B8, "Wrong size on UtilityFunctionLibrary_C_Draw_Debug_Text_Line");
static_assert(offsetof(UtilityFunctionLibrary_C_Draw_Debug_Text_Line, Text) == 0x000000, "Member 'UtilityFunctionLibrary_C_Draw_Debug_Text_Line::Text' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_Draw_Debug_Text_Line, Prefix) == 0x000010, "Member 'UtilityFunctionLibrary_C_Draw_Debug_Text_Line::Prefix' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_Draw_Debug_Text_Line, DrawColor) == 0x000020, "Member 'UtilityFunctionLibrary_C_Draw_Debug_Text_Line::DrawColor' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_Draw_Debug_Text_Line, DrawLocation) == 0x000030, "Member 'UtilityFunctionLibrary_C_Draw_Debug_Text_Line::DrawLocation' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_Draw_Debug_Text_Line, LineSpacing) == 0x00003C, "Member 'UtilityFunctionLibrary_C_Draw_Debug_Text_Line::LineSpacing' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_Draw_Debug_Text_Line, Draw_Duration) == 0x000040, "Member 'UtilityFunctionLibrary_C_Draw_Debug_Text_Line::Draw_Duration' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_Draw_Debug_Text_Line, Tabs) == 0x000044, "Member 'UtilityFunctionLibrary_C_Draw_Debug_Text_Line::Tabs' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_Draw_Debug_Text_Line, __WorldContext) == 0x000048, "Member 'UtilityFunctionLibrary_C_Draw_Debug_Text_Line::__WorldContext' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_Draw_Debug_Text_Line, TabString) == 0x000050, "Member 'UtilityFunctionLibrary_C_Draw_Debug_Text_Line::TabString' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_Draw_Debug_Text_Line, Temp_int_Variable) == 0x000060, "Member 'UtilityFunctionLibrary_C_Draw_Debug_Text_Line::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_Draw_Debug_Text_Line, CallFunc_Add_IntInt_ReturnValue) == 0x000064, "Member 'UtilityFunctionLibrary_C_Draw_Debug_Text_Line::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_Draw_Debug_Text_Line, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000068, "Member 'UtilityFunctionLibrary_C_Draw_Debug_Text_Line::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_Draw_Debug_Text_Line, CallFunc_MakeVector_ReturnValue) == 0x00006C, "Member 'UtilityFunctionLibrary_C_Draw_Debug_Text_Line::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_Draw_Debug_Text_Line, CallFunc_Add_VectorVector_ReturnValue) == 0x000078, "Member 'UtilityFunctionLibrary_C_Draw_Debug_Text_Line::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_Draw_Debug_Text_Line, CallFunc_Concat_StrStr_ReturnValue) == 0x000088, "Member 'UtilityFunctionLibrary_C_Draw_Debug_Text_Line::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_Draw_Debug_Text_Line, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000098, "Member 'UtilityFunctionLibrary_C_Draw_Debug_Text_Line::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_Draw_Debug_Text_Line, CallFunc_Concat_StrStr_ReturnValue_2) == 0x0000A8, "Member 'UtilityFunctionLibrary_C_Draw_Debug_Text_Line::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");

// Function UtilityFunctionLibrary.UtilityFunctionLibrary_C.Draw Debug Text ActorList
// 0x00B0 (0x00B0 - 0x0000)
struct UtilityFunctionLibrary_C_Draw_Debug_Text_ActorList final
{
public:
	class FString                                 Title;                                             // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	TArray<class AActor*>                         ActorList;                                         // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm)
	struct FLinearColor                           DrawColor;                                         // 0x0020(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                DrawLocation;                                      // 0x0030(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LineSpacing;                                       // 0x003C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Draw_Duration;                                     // 0x0040(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2605[0x4];                                     // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0048(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 TabString;                                         // 0x0050(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2606[0x4];                                     // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x0078(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2607[0x3];                                     // 0x0089(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_LinearColorLerp_ReturnValue;              // 0x0090(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x00A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(UtilityFunctionLibrary_C_Draw_Debug_Text_ActorList) == 0x000008, "Wrong alignment on UtilityFunctionLibrary_C_Draw_Debug_Text_ActorList");
static_assert(sizeof(UtilityFunctionLibrary_C_Draw_Debug_Text_ActorList) == 0x0000B0, "Wrong size on UtilityFunctionLibrary_C_Draw_Debug_Text_ActorList");
static_assert(offsetof(UtilityFunctionLibrary_C_Draw_Debug_Text_ActorList, Title) == 0x000000, "Member 'UtilityFunctionLibrary_C_Draw_Debug_Text_ActorList::Title' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_Draw_Debug_Text_ActorList, ActorList) == 0x000010, "Member 'UtilityFunctionLibrary_C_Draw_Debug_Text_ActorList::ActorList' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_Draw_Debug_Text_ActorList, DrawColor) == 0x000020, "Member 'UtilityFunctionLibrary_C_Draw_Debug_Text_ActorList::DrawColor' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_Draw_Debug_Text_ActorList, DrawLocation) == 0x000030, "Member 'UtilityFunctionLibrary_C_Draw_Debug_Text_ActorList::DrawLocation' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_Draw_Debug_Text_ActorList, LineSpacing) == 0x00003C, "Member 'UtilityFunctionLibrary_C_Draw_Debug_Text_ActorList::LineSpacing' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_Draw_Debug_Text_ActorList, Draw_Duration) == 0x000040, "Member 'UtilityFunctionLibrary_C_Draw_Debug_Text_ActorList::Draw_Duration' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_Draw_Debug_Text_ActorList, __WorldContext) == 0x000048, "Member 'UtilityFunctionLibrary_C_Draw_Debug_Text_ActorList::__WorldContext' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_Draw_Debug_Text_ActorList, TabString) == 0x000050, "Member 'UtilityFunctionLibrary_C_Draw_Debug_Text_ActorList::TabString' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_Draw_Debug_Text_ActorList, CallFunc_Array_Length_ReturnValue) == 0x000060, "Member 'UtilityFunctionLibrary_C_Draw_Debug_Text_ActorList::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_Draw_Debug_Text_ActorList, Temp_int_Array_Index_Variable) == 0x000064, "Member 'UtilityFunctionLibrary_C_Draw_Debug_Text_ActorList::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_Draw_Debug_Text_ActorList, Temp_int_Loop_Counter_Variable) == 0x000068, "Member 'UtilityFunctionLibrary_C_Draw_Debug_Text_ActorList::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_Draw_Debug_Text_ActorList, CallFunc_Array_Get_Item) == 0x000070, "Member 'UtilityFunctionLibrary_C_Draw_Debug_Text_ActorList::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_Draw_Debug_Text_ActorList, CallFunc_GetDisplayName_ReturnValue) == 0x000078, "Member 'UtilityFunctionLibrary_C_Draw_Debug_Text_ActorList::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_Draw_Debug_Text_ActorList, CallFunc_Less_IntInt_ReturnValue) == 0x000088, "Member 'UtilityFunctionLibrary_C_Draw_Debug_Text_ActorList::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_Draw_Debug_Text_ActorList, CallFunc_Add_IntInt_ReturnValue) == 0x00008C, "Member 'UtilityFunctionLibrary_C_Draw_Debug_Text_ActorList::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_Draw_Debug_Text_ActorList, CallFunc_LinearColorLerp_ReturnValue) == 0x000090, "Member 'UtilityFunctionLibrary_C_Draw_Debug_Text_ActorList::CallFunc_LinearColorLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(UtilityFunctionLibrary_C_Draw_Debug_Text_ActorList, CallFunc_Concat_StrStr_ReturnValue) == 0x0000A0, "Member 'UtilityFunctionLibrary_C_Draw_Debug_Text_ActorList::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");

}

