#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: CharacterHUD_Library

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "E_ReticleElementTypes_structs.hpp"
#include "SlateCore_structs.hpp"
#include "Mariner_structs.hpp"


namespace SDK::Params
{

// Function CharacterHUD_Library.CharacterHUD_Library_C.HandleRedReticle
// 0x0050 (0x0050 - 0x0000)
struct CharacterHUD_Library_C_HandleRedReticle final
{
public:
	class UWidgetAnimation*                       ReloadAnimation;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUserWidget*                            HUD_Widget;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 ReticleImage;                                      // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCanvasPanel*                           ReticleCanvas;                                     // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UProgressBar*                           ReticleProgressBar;                                // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ColorProgressBarFill;                              // 0x0028(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	E_ReticleElementTypes                         ReticleElementType;                                // 0x0029(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          GamepadNotRequired;                                // 0x002A(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          ForceOnIgnoreGameGlobal;                           // 0x002B(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2608[0x4];                                     // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          TestBlah;                                          // 0x0038(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          GamepadActive;                                     // 0x0039(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetActiveInputType_IsGamepadActive;       // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2609[0x5];                                     // 0x003B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UMarinerGameGlobals*                    CallFunc_GetGameGlobals_ReturnValue;               // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CanUpdateReticleTargetForAimAssist_CanUpdate; // 0x004A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(CharacterHUD_Library_C_HandleRedReticle) == 0x000008, "Wrong alignment on CharacterHUD_Library_C_HandleRedReticle");
static_assert(sizeof(CharacterHUD_Library_C_HandleRedReticle) == 0x000050, "Wrong size on CharacterHUD_Library_C_HandleRedReticle");
static_assert(offsetof(CharacterHUD_Library_C_HandleRedReticle, ReloadAnimation) == 0x000000, "Member 'CharacterHUD_Library_C_HandleRedReticle::ReloadAnimation' has a wrong offset!");
static_assert(offsetof(CharacterHUD_Library_C_HandleRedReticle, HUD_Widget) == 0x000008, "Member 'CharacterHUD_Library_C_HandleRedReticle::HUD_Widget' has a wrong offset!");
static_assert(offsetof(CharacterHUD_Library_C_HandleRedReticle, ReticleImage) == 0x000010, "Member 'CharacterHUD_Library_C_HandleRedReticle::ReticleImage' has a wrong offset!");
static_assert(offsetof(CharacterHUD_Library_C_HandleRedReticle, ReticleCanvas) == 0x000018, "Member 'CharacterHUD_Library_C_HandleRedReticle::ReticleCanvas' has a wrong offset!");
static_assert(offsetof(CharacterHUD_Library_C_HandleRedReticle, ReticleProgressBar) == 0x000020, "Member 'CharacterHUD_Library_C_HandleRedReticle::ReticleProgressBar' has a wrong offset!");
static_assert(offsetof(CharacterHUD_Library_C_HandleRedReticle, ColorProgressBarFill) == 0x000028, "Member 'CharacterHUD_Library_C_HandleRedReticle::ColorProgressBarFill' has a wrong offset!");
static_assert(offsetof(CharacterHUD_Library_C_HandleRedReticle, ReticleElementType) == 0x000029, "Member 'CharacterHUD_Library_C_HandleRedReticle::ReticleElementType' has a wrong offset!");
static_assert(offsetof(CharacterHUD_Library_C_HandleRedReticle, GamepadNotRequired) == 0x00002A, "Member 'CharacterHUD_Library_C_HandleRedReticle::GamepadNotRequired' has a wrong offset!");
static_assert(offsetof(CharacterHUD_Library_C_HandleRedReticle, ForceOnIgnoreGameGlobal) == 0x00002B, "Member 'CharacterHUD_Library_C_HandleRedReticle::ForceOnIgnoreGameGlobal' has a wrong offset!");
static_assert(offsetof(CharacterHUD_Library_C_HandleRedReticle, __WorldContext) == 0x000030, "Member 'CharacterHUD_Library_C_HandleRedReticle::__WorldContext' has a wrong offset!");
static_assert(offsetof(CharacterHUD_Library_C_HandleRedReticle, TestBlah) == 0x000038, "Member 'CharacterHUD_Library_C_HandleRedReticle::TestBlah' has a wrong offset!");
static_assert(offsetof(CharacterHUD_Library_C_HandleRedReticle, GamepadActive) == 0x000039, "Member 'CharacterHUD_Library_C_HandleRedReticle::GamepadActive' has a wrong offset!");
static_assert(offsetof(CharacterHUD_Library_C_HandleRedReticle, CallFunc_GetActiveInputType_IsGamepadActive) == 0x00003A, "Member 'CharacterHUD_Library_C_HandleRedReticle::CallFunc_GetActiveInputType_IsGamepadActive' has a wrong offset!");
static_assert(offsetof(CharacterHUD_Library_C_HandleRedReticle, CallFunc_GetGameGlobals_ReturnValue) == 0x000040, "Member 'CharacterHUD_Library_C_HandleRedReticle::CallFunc_GetGameGlobals_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharacterHUD_Library_C_HandleRedReticle, CallFunc_BooleanOR_ReturnValue) == 0x000048, "Member 'CharacterHUD_Library_C_HandleRedReticle::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharacterHUD_Library_C_HandleRedReticle, CallFunc_Not_PreBool_ReturnValue) == 0x000049, "Member 'CharacterHUD_Library_C_HandleRedReticle::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharacterHUD_Library_C_HandleRedReticle, CallFunc_CanUpdateReticleTargetForAimAssist_CanUpdate) == 0x00004A, "Member 'CharacterHUD_Library_C_HandleRedReticle::CallFunc_CanUpdateReticleTargetForAimAssist_CanUpdate' has a wrong offset!");

// Function CharacterHUD_Library.CharacterHUD_Library_C.GetActiveInputType
// 0x0038 (0x0038 - 0x0000)
struct CharacterHUD_Library_C_GetActiveInputType final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsGamepadActive;                                   // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_260A[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMarinerGameInstance*                   K2Node_DynamicCast_AsMariner_Game_Instance;        // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_260B[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMarinerInputOverlay*                   CallFunc_GetInputOverlay_ReturnValue;              // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerInputType                              CallFunc_GetActiveInputType_ReturnValue;           // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(CharacterHUD_Library_C_GetActiveInputType) == 0x000008, "Wrong alignment on CharacterHUD_Library_C_GetActiveInputType");
static_assert(sizeof(CharacterHUD_Library_C_GetActiveInputType) == 0x000038, "Wrong size on CharacterHUD_Library_C_GetActiveInputType");
static_assert(offsetof(CharacterHUD_Library_C_GetActiveInputType, __WorldContext) == 0x000000, "Member 'CharacterHUD_Library_C_GetActiveInputType::__WorldContext' has a wrong offset!");
static_assert(offsetof(CharacterHUD_Library_C_GetActiveInputType, IsGamepadActive) == 0x000008, "Member 'CharacterHUD_Library_C_GetActiveInputType::IsGamepadActive' has a wrong offset!");
static_assert(offsetof(CharacterHUD_Library_C_GetActiveInputType, CallFunc_GetGameInstance_ReturnValue) == 0x000010, "Member 'CharacterHUD_Library_C_GetActiveInputType::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharacterHUD_Library_C_GetActiveInputType, K2Node_DynamicCast_AsMariner_Game_Instance) == 0x000018, "Member 'CharacterHUD_Library_C_GetActiveInputType::K2Node_DynamicCast_AsMariner_Game_Instance' has a wrong offset!");
static_assert(offsetof(CharacterHUD_Library_C_GetActiveInputType, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'CharacterHUD_Library_C_GetActiveInputType::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(CharacterHUD_Library_C_GetActiveInputType, CallFunc_GetInputOverlay_ReturnValue) == 0x000028, "Member 'CharacterHUD_Library_C_GetActiveInputType::CallFunc_GetInputOverlay_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharacterHUD_Library_C_GetActiveInputType, CallFunc_GetActiveInputType_ReturnValue) == 0x000030, "Member 'CharacterHUD_Library_C_GetActiveInputType::CallFunc_GetActiveInputType_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharacterHUD_Library_C_GetActiveInputType, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000031, "Member 'CharacterHUD_Library_C_GetActiveInputType::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function CharacterHUD_Library.CharacterHUD_Library_C.CanUpdateReticleTargetForAimAssist
// 0x0020 (0x0020 - 0x0000)
struct CharacterHUD_Library_C_CanUpdateReticleTargetForAimAssist final
{
public:
	class UUserWidget*                            HUD_Widget;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class UWidgetAnimation*                 ReloadAnimation;                                   // 0x0008(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CanUpdate;                                         // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsAnimationPlaying_ReturnValue;           // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(CharacterHUD_Library_C_CanUpdateReticleTargetForAimAssist) == 0x000008, "Wrong alignment on CharacterHUD_Library_C_CanUpdateReticleTargetForAimAssist");
static_assert(sizeof(CharacterHUD_Library_C_CanUpdateReticleTargetForAimAssist) == 0x000020, "Wrong size on CharacterHUD_Library_C_CanUpdateReticleTargetForAimAssist");
static_assert(offsetof(CharacterHUD_Library_C_CanUpdateReticleTargetForAimAssist, HUD_Widget) == 0x000000, "Member 'CharacterHUD_Library_C_CanUpdateReticleTargetForAimAssist::HUD_Widget' has a wrong offset!");
static_assert(offsetof(CharacterHUD_Library_C_CanUpdateReticleTargetForAimAssist, ReloadAnimation) == 0x000008, "Member 'CharacterHUD_Library_C_CanUpdateReticleTargetForAimAssist::ReloadAnimation' has a wrong offset!");
static_assert(offsetof(CharacterHUD_Library_C_CanUpdateReticleTargetForAimAssist, __WorldContext) == 0x000010, "Member 'CharacterHUD_Library_C_CanUpdateReticleTargetForAimAssist::__WorldContext' has a wrong offset!");
static_assert(offsetof(CharacterHUD_Library_C_CanUpdateReticleTargetForAimAssist, CanUpdate) == 0x000018, "Member 'CharacterHUD_Library_C_CanUpdateReticleTargetForAimAssist::CanUpdate' has a wrong offset!");
static_assert(offsetof(CharacterHUD_Library_C_CanUpdateReticleTargetForAimAssist, CallFunc_IsAnimationPlaying_ReturnValue) == 0x000019, "Member 'CharacterHUD_Library_C_CanUpdateReticleTargetForAimAssist::CallFunc_IsAnimationPlaying_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharacterHUD_Library_C_CanUpdateReticleTargetForAimAssist, CallFunc_Not_PreBool_ReturnValue) == 0x00001A, "Member 'CharacterHUD_Library_C_CanUpdateReticleTargetForAimAssist::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function CharacterHUD_Library.CharacterHUD_Library_C.UpdateReticleColorForAimAssist
// 0x0220 (0x0220 - 0x0000)
struct CharacterHUD_Library_C_UpdateReticleColorForAimAssist final
{
public:
	class UImage*                                 ReticleImage;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCanvasPanel*                           ReticleCanvas;                                     // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUserWidget*                            HUD_Widget;                                        // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UProgressBar*                           ReticleProgressBar;                                // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ColorProgressBarFill;                              // 0x0020(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	E_ReticleElementTypes                         ReticleElementType;                                // 0x0021(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ForceColorReset;                                   // 0x0022(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          GamepadNotRequired;                                // 0x0023(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_260C[0x4];                                     // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0028(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetReticleColorAndOpacity_ReturnValue;    // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UWidget*>                        CallFunc_GetAllChildren_ReturnValue;               // 0x0040(0x0010)(ZeroConstructor, ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_260D[0x3];                                     // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_260E[0x3];                                     // 0x005D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FProgressBarStyle                      CallFunc_MakeProgressBarReticleWidgetStyle_ProgressBarStyle; // 0x0060(0x01A0)()
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0200(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0204(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWidget*                                CallFunc_Array_Get_Item;                           // 0x0208(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 K2Node_DynamicCast_AsImage;                        // 0x0210(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0218(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(CharacterHUD_Library_C_UpdateReticleColorForAimAssist) == 0x000008, "Wrong alignment on CharacterHUD_Library_C_UpdateReticleColorForAimAssist");
static_assert(sizeof(CharacterHUD_Library_C_UpdateReticleColorForAimAssist) == 0x000220, "Wrong size on CharacterHUD_Library_C_UpdateReticleColorForAimAssist");
static_assert(offsetof(CharacterHUD_Library_C_UpdateReticleColorForAimAssist, ReticleImage) == 0x000000, "Member 'CharacterHUD_Library_C_UpdateReticleColorForAimAssist::ReticleImage' has a wrong offset!");
static_assert(offsetof(CharacterHUD_Library_C_UpdateReticleColorForAimAssist, ReticleCanvas) == 0x000008, "Member 'CharacterHUD_Library_C_UpdateReticleColorForAimAssist::ReticleCanvas' has a wrong offset!");
static_assert(offsetof(CharacterHUD_Library_C_UpdateReticleColorForAimAssist, HUD_Widget) == 0x000010, "Member 'CharacterHUD_Library_C_UpdateReticleColorForAimAssist::HUD_Widget' has a wrong offset!");
static_assert(offsetof(CharacterHUD_Library_C_UpdateReticleColorForAimAssist, ReticleProgressBar) == 0x000018, "Member 'CharacterHUD_Library_C_UpdateReticleColorForAimAssist::ReticleProgressBar' has a wrong offset!");
static_assert(offsetof(CharacterHUD_Library_C_UpdateReticleColorForAimAssist, ColorProgressBarFill) == 0x000020, "Member 'CharacterHUD_Library_C_UpdateReticleColorForAimAssist::ColorProgressBarFill' has a wrong offset!");
static_assert(offsetof(CharacterHUD_Library_C_UpdateReticleColorForAimAssist, ReticleElementType) == 0x000021, "Member 'CharacterHUD_Library_C_UpdateReticleColorForAimAssist::ReticleElementType' has a wrong offset!");
static_assert(offsetof(CharacterHUD_Library_C_UpdateReticleColorForAimAssist, ForceColorReset) == 0x000022, "Member 'CharacterHUD_Library_C_UpdateReticleColorForAimAssist::ForceColorReset' has a wrong offset!");
static_assert(offsetof(CharacterHUD_Library_C_UpdateReticleColorForAimAssist, GamepadNotRequired) == 0x000023, "Member 'CharacterHUD_Library_C_UpdateReticleColorForAimAssist::GamepadNotRequired' has a wrong offset!");
static_assert(offsetof(CharacterHUD_Library_C_UpdateReticleColorForAimAssist, __WorldContext) == 0x000028, "Member 'CharacterHUD_Library_C_UpdateReticleColorForAimAssist::__WorldContext' has a wrong offset!");
static_assert(offsetof(CharacterHUD_Library_C_UpdateReticleColorForAimAssist, CallFunc_GetReticleColorAndOpacity_ReturnValue) == 0x000030, "Member 'CharacterHUD_Library_C_UpdateReticleColorForAimAssist::CallFunc_GetReticleColorAndOpacity_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharacterHUD_Library_C_UpdateReticleColorForAimAssist, CallFunc_GetAllChildren_ReturnValue) == 0x000040, "Member 'CharacterHUD_Library_C_UpdateReticleColorForAimAssist::CallFunc_GetAllChildren_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharacterHUD_Library_C_UpdateReticleColorForAimAssist, CallFunc_Array_Length_ReturnValue) == 0x000050, "Member 'CharacterHUD_Library_C_UpdateReticleColorForAimAssist::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharacterHUD_Library_C_UpdateReticleColorForAimAssist, K2Node_SwitchEnum_CmpSuccess) == 0x000054, "Member 'CharacterHUD_Library_C_UpdateReticleColorForAimAssist::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(CharacterHUD_Library_C_UpdateReticleColorForAimAssist, Temp_int_Loop_Counter_Variable) == 0x000058, "Member 'CharacterHUD_Library_C_UpdateReticleColorForAimAssist::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(CharacterHUD_Library_C_UpdateReticleColorForAimAssist, CallFunc_Less_IntInt_ReturnValue) == 0x00005C, "Member 'CharacterHUD_Library_C_UpdateReticleColorForAimAssist::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharacterHUD_Library_C_UpdateReticleColorForAimAssist, CallFunc_MakeProgressBarReticleWidgetStyle_ProgressBarStyle) == 0x000060, "Member 'CharacterHUD_Library_C_UpdateReticleColorForAimAssist::CallFunc_MakeProgressBarReticleWidgetStyle_ProgressBarStyle' has a wrong offset!");
static_assert(offsetof(CharacterHUD_Library_C_UpdateReticleColorForAimAssist, CallFunc_Add_IntInt_ReturnValue) == 0x000200, "Member 'CharacterHUD_Library_C_UpdateReticleColorForAimAssist::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharacterHUD_Library_C_UpdateReticleColorForAimAssist, Temp_int_Array_Index_Variable) == 0x000204, "Member 'CharacterHUD_Library_C_UpdateReticleColorForAimAssist::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(CharacterHUD_Library_C_UpdateReticleColorForAimAssist, CallFunc_Array_Get_Item) == 0x000208, "Member 'CharacterHUD_Library_C_UpdateReticleColorForAimAssist::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(CharacterHUD_Library_C_UpdateReticleColorForAimAssist, K2Node_DynamicCast_AsImage) == 0x000210, "Member 'CharacterHUD_Library_C_UpdateReticleColorForAimAssist::K2Node_DynamicCast_AsImage' has a wrong offset!");
static_assert(offsetof(CharacterHUD_Library_C_UpdateReticleColorForAimAssist, K2Node_DynamicCast_bSuccess) == 0x000218, "Member 'CharacterHUD_Library_C_UpdateReticleColorForAimAssist::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function CharacterHUD_Library.CharacterHUD_Library_C.GetReticleColorAndOpacity
// 0x0088 (0x0088 - 0x0000)
struct CharacterHUD_Library_C_GetReticleColorAndOpacity final
{
public:
	bool                                          ForceColorReset;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_260F[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            HUD_Widget;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_ReticleElementTypes                         ReticleElementType;                                // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2610[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           ReturnValue;                                       // 0x0020(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable;                              // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_GetOwningPlayerPawn_ReturnValue;          // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMarinerCharacter*                      K2Node_DynamicCast_AsMariner_Character;            // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsReticleRed_ReturnValue;                 // 0x0052(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2611[0x1];                                     // 0x0053(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Temp_struct_Variable_1;                            // 0x0054(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_2;                            // 0x0064(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_ReticleElementTypes                         Temp_byte_Variable;                                // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2612[0x3];                                     // 0x0075(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           K2Node_Select_Default;                             // 0x0078(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CharacterHUD_Library_C_GetReticleColorAndOpacity) == 0x000008, "Wrong alignment on CharacterHUD_Library_C_GetReticleColorAndOpacity");
static_assert(sizeof(CharacterHUD_Library_C_GetReticleColorAndOpacity) == 0x000088, "Wrong size on CharacterHUD_Library_C_GetReticleColorAndOpacity");
static_assert(offsetof(CharacterHUD_Library_C_GetReticleColorAndOpacity, ForceColorReset) == 0x000000, "Member 'CharacterHUD_Library_C_GetReticleColorAndOpacity::ForceColorReset' has a wrong offset!");
static_assert(offsetof(CharacterHUD_Library_C_GetReticleColorAndOpacity, HUD_Widget) == 0x000008, "Member 'CharacterHUD_Library_C_GetReticleColorAndOpacity::HUD_Widget' has a wrong offset!");
static_assert(offsetof(CharacterHUD_Library_C_GetReticleColorAndOpacity, ReticleElementType) == 0x000010, "Member 'CharacterHUD_Library_C_GetReticleColorAndOpacity::ReticleElementType' has a wrong offset!");
static_assert(offsetof(CharacterHUD_Library_C_GetReticleColorAndOpacity, __WorldContext) == 0x000018, "Member 'CharacterHUD_Library_C_GetReticleColorAndOpacity::__WorldContext' has a wrong offset!");
static_assert(offsetof(CharacterHUD_Library_C_GetReticleColorAndOpacity, ReturnValue) == 0x000020, "Member 'CharacterHUD_Library_C_GetReticleColorAndOpacity::ReturnValue' has a wrong offset!");
static_assert(offsetof(CharacterHUD_Library_C_GetReticleColorAndOpacity, Temp_struct_Variable) == 0x000030, "Member 'CharacterHUD_Library_C_GetReticleColorAndOpacity::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(CharacterHUD_Library_C_GetReticleColorAndOpacity, CallFunc_GetOwningPlayerPawn_ReturnValue) == 0x000040, "Member 'CharacterHUD_Library_C_GetReticleColorAndOpacity::CallFunc_GetOwningPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharacterHUD_Library_C_GetReticleColorAndOpacity, K2Node_DynamicCast_AsMariner_Character) == 0x000048, "Member 'CharacterHUD_Library_C_GetReticleColorAndOpacity::K2Node_DynamicCast_AsMariner_Character' has a wrong offset!");
static_assert(offsetof(CharacterHUD_Library_C_GetReticleColorAndOpacity, K2Node_DynamicCast_bSuccess) == 0x000050, "Member 'CharacterHUD_Library_C_GetReticleColorAndOpacity::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(CharacterHUD_Library_C_GetReticleColorAndOpacity, CallFunc_Not_PreBool_ReturnValue) == 0x000051, "Member 'CharacterHUD_Library_C_GetReticleColorAndOpacity::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharacterHUD_Library_C_GetReticleColorAndOpacity, CallFunc_IsReticleRed_ReturnValue) == 0x000052, "Member 'CharacterHUD_Library_C_GetReticleColorAndOpacity::CallFunc_IsReticleRed_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharacterHUD_Library_C_GetReticleColorAndOpacity, Temp_struct_Variable_1) == 0x000054, "Member 'CharacterHUD_Library_C_GetReticleColorAndOpacity::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(CharacterHUD_Library_C_GetReticleColorAndOpacity, Temp_struct_Variable_2) == 0x000064, "Member 'CharacterHUD_Library_C_GetReticleColorAndOpacity::Temp_struct_Variable_2' has a wrong offset!");
static_assert(offsetof(CharacterHUD_Library_C_GetReticleColorAndOpacity, Temp_byte_Variable) == 0x000074, "Member 'CharacterHUD_Library_C_GetReticleColorAndOpacity::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(CharacterHUD_Library_C_GetReticleColorAndOpacity, K2Node_Select_Default) == 0x000078, "Member 'CharacterHUD_Library_C_GetReticleColorAndOpacity::K2Node_Select_Default' has a wrong offset!");

// Function CharacterHUD_Library.CharacterHUD_Library_C.MakeProgressBarReticleWidgetStyle
// 0x0530 (0x0530 - 0x0000)
struct CharacterHUD_Library_C_MakeProgressBarReticleWidgetStyle final
{
public:
	class UProgressBar*                           ProgressBar;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           SpecifiedColor;                                    // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ColorProgressBarFill;                              // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2613[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FProgressBarStyle                      ProgressBarStyle;                                  // 0x0028(0x01A0)(Parm, OutParm)
	bool                                          Temp_bool_Variable;                                // 0x01C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2614[0x7];                                     // 0x01C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x01D0(0x0028)()
	struct FSlateBrush                            K2Node_MakeStruct_SlateBrush;                      // 0x01F8(0x0088)()
	struct FSlateBrush                            K2Node_MakeStruct_SlateBrush_1;                    // 0x0280(0x0088)()
	struct FSlateBrush                            K2Node_Select_Default;                             // 0x0308(0x0088)()
	struct FProgressBarStyle                      K2Node_MakeStruct_ProgressBarStyle;                // 0x0390(0x01A0)()
};
static_assert(alignof(CharacterHUD_Library_C_MakeProgressBarReticleWidgetStyle) == 0x000008, "Wrong alignment on CharacterHUD_Library_C_MakeProgressBarReticleWidgetStyle");
static_assert(sizeof(CharacterHUD_Library_C_MakeProgressBarReticleWidgetStyle) == 0x000530, "Wrong size on CharacterHUD_Library_C_MakeProgressBarReticleWidgetStyle");
static_assert(offsetof(CharacterHUD_Library_C_MakeProgressBarReticleWidgetStyle, ProgressBar) == 0x000000, "Member 'CharacterHUD_Library_C_MakeProgressBarReticleWidgetStyle::ProgressBar' has a wrong offset!");
static_assert(offsetof(CharacterHUD_Library_C_MakeProgressBarReticleWidgetStyle, SpecifiedColor) == 0x000008, "Member 'CharacterHUD_Library_C_MakeProgressBarReticleWidgetStyle::SpecifiedColor' has a wrong offset!");
static_assert(offsetof(CharacterHUD_Library_C_MakeProgressBarReticleWidgetStyle, ColorProgressBarFill) == 0x000018, "Member 'CharacterHUD_Library_C_MakeProgressBarReticleWidgetStyle::ColorProgressBarFill' has a wrong offset!");
static_assert(offsetof(CharacterHUD_Library_C_MakeProgressBarReticleWidgetStyle, __WorldContext) == 0x000020, "Member 'CharacterHUD_Library_C_MakeProgressBarReticleWidgetStyle::__WorldContext' has a wrong offset!");
static_assert(offsetof(CharacterHUD_Library_C_MakeProgressBarReticleWidgetStyle, ProgressBarStyle) == 0x000028, "Member 'CharacterHUD_Library_C_MakeProgressBarReticleWidgetStyle::ProgressBarStyle' has a wrong offset!");
static_assert(offsetof(CharacterHUD_Library_C_MakeProgressBarReticleWidgetStyle, Temp_bool_Variable) == 0x0001C8, "Member 'CharacterHUD_Library_C_MakeProgressBarReticleWidgetStyle::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(CharacterHUD_Library_C_MakeProgressBarReticleWidgetStyle, K2Node_MakeStruct_SlateColor) == 0x0001D0, "Member 'CharacterHUD_Library_C_MakeProgressBarReticleWidgetStyle::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(CharacterHUD_Library_C_MakeProgressBarReticleWidgetStyle, K2Node_MakeStruct_SlateBrush) == 0x0001F8, "Member 'CharacterHUD_Library_C_MakeProgressBarReticleWidgetStyle::K2Node_MakeStruct_SlateBrush' has a wrong offset!");
static_assert(offsetof(CharacterHUD_Library_C_MakeProgressBarReticleWidgetStyle, K2Node_MakeStruct_SlateBrush_1) == 0x000280, "Member 'CharacterHUD_Library_C_MakeProgressBarReticleWidgetStyle::K2Node_MakeStruct_SlateBrush_1' has a wrong offset!");
static_assert(offsetof(CharacterHUD_Library_C_MakeProgressBarReticleWidgetStyle, K2Node_Select_Default) == 0x000308, "Member 'CharacterHUD_Library_C_MakeProgressBarReticleWidgetStyle::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(CharacterHUD_Library_C_MakeProgressBarReticleWidgetStyle, K2Node_MakeStruct_ProgressBarStyle) == 0x000390, "Member 'CharacterHUD_Library_C_MakeProgressBarReticleWidgetStyle::K2Node_MakeStruct_ProgressBarStyle' has a wrong offset!");

// Function CharacterHUD_Library.CharacterHUD_Library_C.BindCharacterAbilityEvents
// 0x0108 (0x0108 - 0x0000)
struct CharacterHUD_Library_C_BindCharacterAbilityEvents final
{
public:
	class UUserWidget*                            HUD_Widget;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             ReloadStarted;                                     // 0x0008(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor)
	TDelegate<void(bool bWasCancelled)>           ReloadFinished;                                    // 0x0018(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor)
	TDelegate<void()>                             WeaponFired;                                       // 0x0028(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor)
	TDelegate<void(class AMarinerProjectile* ProjectileSpawned)> ProjectileSpawned;                                 // 0x0038(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor)
	TDelegate<void(class AActor* CurrentReticleTarget)> ReticleTargetChanged;                              // 0x0048(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor)
	class UObject*                                __WorldContext;                                    // 0x0058(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          DidBindToAbilities;                                // 0x0060(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2615[0x7];                                     // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetOwningPlayerPawn_ReturnValue;          // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2616[0x4];                                     // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AMarinerCharacter*                      K2Node_DynamicCast_AsMariner_Character;            // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2617[0x7];                                     // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UMarinerAbility*>                CallFunc_GetAbilityInstancesOfType_OutAbilityInstances; // 0x0088(0x0010)(ZeroConstructor, ReferenceParm)
	TArray<class UMarinerAbility*>                CallFunc_GetAbilityInstancesOfType_OutAbilityInstances_1; // 0x0098(0x0010)(ZeroConstructor, ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2618[0x4];                                     // 0x00AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMarinerAbility*                        CallFunc_Array_Get_Item;                           // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2619[0x4];                                     // 0x00BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMarinerAbility_Weapon*                 K2Node_DynamicCast_AsMariner_Ability_Weapon;       // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_261A[0x7];                                     // 0x00C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMarinerAbility*                        CallFunc_GetReloadAbility_ReturnValue;             // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_261B[0x3];                                     // 0x00DD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x00EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_261C[0x3];                                     // 0x00ED(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UMarinerAbility*                        CallFunc_Array_Get_Item_1;                         // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMarinerAbility_Projectile_Base*        K2Node_DynamicCast_AsMariner_Ability_Projectile_Base; // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_261D[0x3];                                     // 0x0101(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CharacterHUD_Library_C_BindCharacterAbilityEvents) == 0x000008, "Wrong alignment on CharacterHUD_Library_C_BindCharacterAbilityEvents");
static_assert(sizeof(CharacterHUD_Library_C_BindCharacterAbilityEvents) == 0x000108, "Wrong size on CharacterHUD_Library_C_BindCharacterAbilityEvents");
static_assert(offsetof(CharacterHUD_Library_C_BindCharacterAbilityEvents, HUD_Widget) == 0x000000, "Member 'CharacterHUD_Library_C_BindCharacterAbilityEvents::HUD_Widget' has a wrong offset!");
static_assert(offsetof(CharacterHUD_Library_C_BindCharacterAbilityEvents, ReloadStarted) == 0x000008, "Member 'CharacterHUD_Library_C_BindCharacterAbilityEvents::ReloadStarted' has a wrong offset!");
static_assert(offsetof(CharacterHUD_Library_C_BindCharacterAbilityEvents, ReloadFinished) == 0x000018, "Member 'CharacterHUD_Library_C_BindCharacterAbilityEvents::ReloadFinished' has a wrong offset!");
static_assert(offsetof(CharacterHUD_Library_C_BindCharacterAbilityEvents, WeaponFired) == 0x000028, "Member 'CharacterHUD_Library_C_BindCharacterAbilityEvents::WeaponFired' has a wrong offset!");
static_assert(offsetof(CharacterHUD_Library_C_BindCharacterAbilityEvents, ProjectileSpawned) == 0x000038, "Member 'CharacterHUD_Library_C_BindCharacterAbilityEvents::ProjectileSpawned' has a wrong offset!");
static_assert(offsetof(CharacterHUD_Library_C_BindCharacterAbilityEvents, ReticleTargetChanged) == 0x000048, "Member 'CharacterHUD_Library_C_BindCharacterAbilityEvents::ReticleTargetChanged' has a wrong offset!");
static_assert(offsetof(CharacterHUD_Library_C_BindCharacterAbilityEvents, __WorldContext) == 0x000058, "Member 'CharacterHUD_Library_C_BindCharacterAbilityEvents::__WorldContext' has a wrong offset!");
static_assert(offsetof(CharacterHUD_Library_C_BindCharacterAbilityEvents, DidBindToAbilities) == 0x000060, "Member 'CharacterHUD_Library_C_BindCharacterAbilityEvents::DidBindToAbilities' has a wrong offset!");
static_assert(offsetof(CharacterHUD_Library_C_BindCharacterAbilityEvents, CallFunc_GetOwningPlayerPawn_ReturnValue) == 0x000068, "Member 'CharacterHUD_Library_C_BindCharacterAbilityEvents::CallFunc_GetOwningPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharacterHUD_Library_C_BindCharacterAbilityEvents, Temp_int_Array_Index_Variable) == 0x000070, "Member 'CharacterHUD_Library_C_BindCharacterAbilityEvents::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(CharacterHUD_Library_C_BindCharacterAbilityEvents, K2Node_DynamicCast_AsMariner_Character) == 0x000078, "Member 'CharacterHUD_Library_C_BindCharacterAbilityEvents::K2Node_DynamicCast_AsMariner_Character' has a wrong offset!");
static_assert(offsetof(CharacterHUD_Library_C_BindCharacterAbilityEvents, K2Node_DynamicCast_bSuccess) == 0x000080, "Member 'CharacterHUD_Library_C_BindCharacterAbilityEvents::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(CharacterHUD_Library_C_BindCharacterAbilityEvents, CallFunc_GetAbilityInstancesOfType_OutAbilityInstances) == 0x000088, "Member 'CharacterHUD_Library_C_BindCharacterAbilityEvents::CallFunc_GetAbilityInstancesOfType_OutAbilityInstances' has a wrong offset!");
static_assert(offsetof(CharacterHUD_Library_C_BindCharacterAbilityEvents, CallFunc_GetAbilityInstancesOfType_OutAbilityInstances_1) == 0x000098, "Member 'CharacterHUD_Library_C_BindCharacterAbilityEvents::CallFunc_GetAbilityInstancesOfType_OutAbilityInstances_1' has a wrong offset!");
static_assert(offsetof(CharacterHUD_Library_C_BindCharacterAbilityEvents, CallFunc_Array_Length_ReturnValue) == 0x0000A8, "Member 'CharacterHUD_Library_C_BindCharacterAbilityEvents::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharacterHUD_Library_C_BindCharacterAbilityEvents, CallFunc_Array_Get_Item) == 0x0000B0, "Member 'CharacterHUD_Library_C_BindCharacterAbilityEvents::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(CharacterHUD_Library_C_BindCharacterAbilityEvents, CallFunc_Array_Length_ReturnValue_1) == 0x0000B8, "Member 'CharacterHUD_Library_C_BindCharacterAbilityEvents::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CharacterHUD_Library_C_BindCharacterAbilityEvents, K2Node_DynamicCast_AsMariner_Ability_Weapon) == 0x0000C0, "Member 'CharacterHUD_Library_C_BindCharacterAbilityEvents::K2Node_DynamicCast_AsMariner_Ability_Weapon' has a wrong offset!");
static_assert(offsetof(CharacterHUD_Library_C_BindCharacterAbilityEvents, K2Node_DynamicCast_bSuccess_1) == 0x0000C8, "Member 'CharacterHUD_Library_C_BindCharacterAbilityEvents::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(CharacterHUD_Library_C_BindCharacterAbilityEvents, CallFunc_GetReloadAbility_ReturnValue) == 0x0000D0, "Member 'CharacterHUD_Library_C_BindCharacterAbilityEvents::CallFunc_GetReloadAbility_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharacterHUD_Library_C_BindCharacterAbilityEvents, Temp_int_Loop_Counter_Variable) == 0x0000D8, "Member 'CharacterHUD_Library_C_BindCharacterAbilityEvents::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(CharacterHUD_Library_C_BindCharacterAbilityEvents, CallFunc_Less_IntInt_ReturnValue) == 0x0000DC, "Member 'CharacterHUD_Library_C_BindCharacterAbilityEvents::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharacterHUD_Library_C_BindCharacterAbilityEvents, CallFunc_Add_IntInt_ReturnValue) == 0x0000E0, "Member 'CharacterHUD_Library_C_BindCharacterAbilityEvents::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharacterHUD_Library_C_BindCharacterAbilityEvents, Temp_int_Loop_Counter_Variable_1) == 0x0000E4, "Member 'CharacterHUD_Library_C_BindCharacterAbilityEvents::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(CharacterHUD_Library_C_BindCharacterAbilityEvents, Temp_int_Array_Index_Variable_1) == 0x0000E8, "Member 'CharacterHUD_Library_C_BindCharacterAbilityEvents::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(CharacterHUD_Library_C_BindCharacterAbilityEvents, CallFunc_Less_IntInt_ReturnValue_1) == 0x0000EC, "Member 'CharacterHUD_Library_C_BindCharacterAbilityEvents::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CharacterHUD_Library_C_BindCharacterAbilityEvents, CallFunc_Array_Get_Item_1) == 0x0000F0, "Member 'CharacterHUD_Library_C_BindCharacterAbilityEvents::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(CharacterHUD_Library_C_BindCharacterAbilityEvents, K2Node_DynamicCast_AsMariner_Ability_Projectile_Base) == 0x0000F8, "Member 'CharacterHUD_Library_C_BindCharacterAbilityEvents::K2Node_DynamicCast_AsMariner_Ability_Projectile_Base' has a wrong offset!");
static_assert(offsetof(CharacterHUD_Library_C_BindCharacterAbilityEvents, K2Node_DynamicCast_bSuccess_2) == 0x000100, "Member 'CharacterHUD_Library_C_BindCharacterAbilityEvents::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(CharacterHUD_Library_C_BindCharacterAbilityEvents, CallFunc_Add_IntInt_ReturnValue_1) == 0x000104, "Member 'CharacterHUD_Library_C_BindCharacterAbilityEvents::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");

}

