#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BlastPassTierWidget

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_structs.hpp"
#include "UMG_classes.hpp"
#include "AkAudio_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass BlastPassTierWidget.BlastPassTierWidget_C
// 0x0080 (0x02B0 - 0x0230)
class UBlastPassTierWidget_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0230(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       UnlockAnim;                                        // 0x0238(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       TierUpAnim;                                        // 0x0240(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 Flame;                                             // 0x0248(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Flash;                                             // 0x0250(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 FlashIcon;                                         // 0x0258(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 IconLocked;                                        // 0x0260(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Leftwingglow;                                      // 0x0268(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Rightwingglow;                                     // 0x0270(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Shockwave;                                         // 0x0278(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Starburst;                                         // 0x0280(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 TierImage;                                         // 0x0288(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TierText10;                                        // 0x0290(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 UnlockingAnim;                                     // 0x0298(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	bool                                          FirstInit;                                         // 0x02A0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_218F[0x3];                                     // 0x02A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         LastTier;                                          // 0x02A4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          LastPurchased;                                     // 0x02A8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_BlastPassTierWidget(int32 EntryPoint);
	void Destruct();
	void SetTier(int32 Tier, bool Purchased);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BlastPassTierWidget_C">();
	}
	static class UBlastPassTierWidget_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBlastPassTierWidget_C>();
	}
};
static_assert(alignof(UBlastPassTierWidget_C) == 0x000008, "Wrong alignment on UBlastPassTierWidget_C");
static_assert(sizeof(UBlastPassTierWidget_C) == 0x0002B0, "Wrong size on UBlastPassTierWidget_C");
static_assert(offsetof(UBlastPassTierWidget_C, UberGraphFrame) == 0x000230, "Member 'UBlastPassTierWidget_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBlastPassTierWidget_C, UnlockAnim) == 0x000238, "Member 'UBlastPassTierWidget_C::UnlockAnim' has a wrong offset!");
static_assert(offsetof(UBlastPassTierWidget_C, TierUpAnim) == 0x000240, "Member 'UBlastPassTierWidget_C::TierUpAnim' has a wrong offset!");
static_assert(offsetof(UBlastPassTierWidget_C, Flame) == 0x000248, "Member 'UBlastPassTierWidget_C::Flame' has a wrong offset!");
static_assert(offsetof(UBlastPassTierWidget_C, Flash) == 0x000250, "Member 'UBlastPassTierWidget_C::Flash' has a wrong offset!");
static_assert(offsetof(UBlastPassTierWidget_C, FlashIcon) == 0x000258, "Member 'UBlastPassTierWidget_C::FlashIcon' has a wrong offset!");
static_assert(offsetof(UBlastPassTierWidget_C, IconLocked) == 0x000260, "Member 'UBlastPassTierWidget_C::IconLocked' has a wrong offset!");
static_assert(offsetof(UBlastPassTierWidget_C, Leftwingglow) == 0x000268, "Member 'UBlastPassTierWidget_C::Leftwingglow' has a wrong offset!");
static_assert(offsetof(UBlastPassTierWidget_C, Rightwingglow) == 0x000270, "Member 'UBlastPassTierWidget_C::Rightwingglow' has a wrong offset!");
static_assert(offsetof(UBlastPassTierWidget_C, Shockwave) == 0x000278, "Member 'UBlastPassTierWidget_C::Shockwave' has a wrong offset!");
static_assert(offsetof(UBlastPassTierWidget_C, Starburst) == 0x000280, "Member 'UBlastPassTierWidget_C::Starburst' has a wrong offset!");
static_assert(offsetof(UBlastPassTierWidget_C, TierImage) == 0x000288, "Member 'UBlastPassTierWidget_C::TierImage' has a wrong offset!");
static_assert(offsetof(UBlastPassTierWidget_C, TierText10) == 0x000290, "Member 'UBlastPassTierWidget_C::TierText10' has a wrong offset!");
static_assert(offsetof(UBlastPassTierWidget_C, UnlockingAnim) == 0x000298, "Member 'UBlastPassTierWidget_C::UnlockingAnim' has a wrong offset!");
static_assert(offsetof(UBlastPassTierWidget_C, FirstInit) == 0x0002A0, "Member 'UBlastPassTierWidget_C::FirstInit' has a wrong offset!");
static_assert(offsetof(UBlastPassTierWidget_C, LastTier) == 0x0002A4, "Member 'UBlastPassTierWidget_C::LastTier' has a wrong offset!");
static_assert(offsetof(UBlastPassTierWidget_C, LastPurchased) == 0x0002A8, "Member 'UBlastPassTierWidget_C::LastPurchased' has a wrong offset!");

}

