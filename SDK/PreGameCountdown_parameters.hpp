#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PreGameCountdown

#include "Basic.hpp"

#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function PreGameCountdown.PreGameCountdown_C.ExecuteUbergraph_PreGameCountdown
// 0x0098 (0x0098 - 0x0000)
struct PreGameCountdown_C_ExecuteUbergraph_PreGameCountdown final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_PostEventAtLocation_ReturnValue;          // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AMarinerGameState*                      K2Node_DynamicCast_AsMariner_Game_State;           // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_GetPregameState_ReturnValue;              // 0x0024(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x002E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2F[0x1];                                       // 0x002F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0030(0x0018)()
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue_1;        // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4A[0x6];                                       // 0x004A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0058(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0094(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0095(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PreGameCountdown_C_ExecuteUbergraph_PreGameCountdown) == 0x000008, "Wrong alignment on PreGameCountdown_C_ExecuteUbergraph_PreGameCountdown");
static_assert(sizeof(PreGameCountdown_C_ExecuteUbergraph_PreGameCountdown) == 0x000098, "Wrong size on PreGameCountdown_C_ExecuteUbergraph_PreGameCountdown");
static_assert(offsetof(PreGameCountdown_C_ExecuteUbergraph_PreGameCountdown, EntryPoint) == 0x000000, "Member 'PreGameCountdown_C_ExecuteUbergraph_PreGameCountdown::EntryPoint' has a wrong offset!");
static_assert(offsetof(PreGameCountdown_C_ExecuteUbergraph_PreGameCountdown, CallFunc_GetGameState_ReturnValue) == 0x000008, "Member 'PreGameCountdown_C_ExecuteUbergraph_PreGameCountdown::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(PreGameCountdown_C_ExecuteUbergraph_PreGameCountdown, CallFunc_PostEventAtLocation_ReturnValue) == 0x000010, "Member 'PreGameCountdown_C_ExecuteUbergraph_PreGameCountdown::CallFunc_PostEventAtLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(PreGameCountdown_C_ExecuteUbergraph_PreGameCountdown, K2Node_DynamicCast_AsMariner_Game_State) == 0x000018, "Member 'PreGameCountdown_C_ExecuteUbergraph_PreGameCountdown::K2Node_DynamicCast_AsMariner_Game_State' has a wrong offset!");
static_assert(offsetof(PreGameCountdown_C_ExecuteUbergraph_PreGameCountdown, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'PreGameCountdown_C_ExecuteUbergraph_PreGameCountdown::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(PreGameCountdown_C_ExecuteUbergraph_PreGameCountdown, CallFunc_GetPregameState_ReturnValue) == 0x000024, "Member 'PreGameCountdown_C_ExecuteUbergraph_PreGameCountdown::CallFunc_GetPregameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(PreGameCountdown_C_ExecuteUbergraph_PreGameCountdown, CallFunc_EqualEqual_NameName_ReturnValue) == 0x00002C, "Member 'PreGameCountdown_C_ExecuteUbergraph_PreGameCountdown::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(PreGameCountdown_C_ExecuteUbergraph_PreGameCountdown, CallFunc_NotEqual_IntInt_ReturnValue) == 0x00002D, "Member 'PreGameCountdown_C_ExecuteUbergraph_PreGameCountdown::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PreGameCountdown_C_ExecuteUbergraph_PreGameCountdown, CallFunc_Less_IntInt_ReturnValue) == 0x00002E, "Member 'PreGameCountdown_C_ExecuteUbergraph_PreGameCountdown::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PreGameCountdown_C_ExecuteUbergraph_PreGameCountdown, CallFunc_Conv_IntToText_ReturnValue) == 0x000030, "Member 'PreGameCountdown_C_ExecuteUbergraph_PreGameCountdown::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(PreGameCountdown_C_ExecuteUbergraph_PreGameCountdown, CallFunc_Less_IntInt_ReturnValue_1) == 0x000048, "Member 'PreGameCountdown_C_ExecuteUbergraph_PreGameCountdown::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PreGameCountdown_C_ExecuteUbergraph_PreGameCountdown, CallFunc_EqualEqual_NameName_ReturnValue_1) == 0x000049, "Member 'PreGameCountdown_C_ExecuteUbergraph_PreGameCountdown::CallFunc_EqualEqual_NameName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PreGameCountdown_C_ExecuteUbergraph_PreGameCountdown, CallFunc_PlayAnimation_ReturnValue) == 0x000050, "Member 'PreGameCountdown_C_ExecuteUbergraph_PreGameCountdown::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(PreGameCountdown_C_ExecuteUbergraph_PreGameCountdown, K2Node_Event_MyGeometry) == 0x000058, "Member 'PreGameCountdown_C_ExecuteUbergraph_PreGameCountdown::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(PreGameCountdown_C_ExecuteUbergraph_PreGameCountdown, K2Node_Event_InDeltaTime) == 0x000090, "Member 'PreGameCountdown_C_ExecuteUbergraph_PreGameCountdown::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(PreGameCountdown_C_ExecuteUbergraph_PreGameCountdown, CallFunc_IsValid_ReturnValue) == 0x000094, "Member 'PreGameCountdown_C_ExecuteUbergraph_PreGameCountdown::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(PreGameCountdown_C_ExecuteUbergraph_PreGameCountdown, CallFunc_BooleanAND_ReturnValue) == 0x000095, "Member 'PreGameCountdown_C_ExecuteUbergraph_PreGameCountdown::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function PreGameCountdown.PreGameCountdown_C.Tick
// 0x003C (0x003C - 0x0000)
struct PreGameCountdown_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PreGameCountdown_C_Tick) == 0x000004, "Wrong alignment on PreGameCountdown_C_Tick");
static_assert(sizeof(PreGameCountdown_C_Tick) == 0x00003C, "Wrong size on PreGameCountdown_C_Tick");
static_assert(offsetof(PreGameCountdown_C_Tick, MyGeometry) == 0x000000, "Member 'PreGameCountdown_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(PreGameCountdown_C_Tick, InDeltaTime) == 0x000038, "Member 'PreGameCountdown_C_Tick::InDeltaTime' has a wrong offset!");

}

