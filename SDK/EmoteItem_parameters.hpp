#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: EmoteItem

#include "Basic.hpp"

#include "Mariner_structs.hpp"


namespace SDK::Params
{

// Function EmoteItem.EmoteItem_C.ExecuteUbergraph_EmoteItem
// 0x0028 (0x0028 - 0x0000)
struct EmoteItem_C_ExecuteUbergraph_EmoteItem final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UItemLoadResponse*                      K2Node_Event_LoadResponse;                         // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMarinerCMSItemDataAsset*               K2Node_Event_CMSItem;                              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMarinerChatEmote*                      K2Node_DynamicCast_AsMariner_Chat_Emote;           // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(EmoteItem_C_ExecuteUbergraph_EmoteItem) == 0x000008, "Wrong alignment on EmoteItem_C_ExecuteUbergraph_EmoteItem");
static_assert(sizeof(EmoteItem_C_ExecuteUbergraph_EmoteItem) == 0x000028, "Wrong size on EmoteItem_C_ExecuteUbergraph_EmoteItem");
static_assert(offsetof(EmoteItem_C_ExecuteUbergraph_EmoteItem, EntryPoint) == 0x000000, "Member 'EmoteItem_C_ExecuteUbergraph_EmoteItem::EntryPoint' has a wrong offset!");
static_assert(offsetof(EmoteItem_C_ExecuteUbergraph_EmoteItem, K2Node_Event_LoadResponse) == 0x000008, "Member 'EmoteItem_C_ExecuteUbergraph_EmoteItem::K2Node_Event_LoadResponse' has a wrong offset!");
static_assert(offsetof(EmoteItem_C_ExecuteUbergraph_EmoteItem, K2Node_Event_CMSItem) == 0x000010, "Member 'EmoteItem_C_ExecuteUbergraph_EmoteItem::K2Node_Event_CMSItem' has a wrong offset!");
static_assert(offsetof(EmoteItem_C_ExecuteUbergraph_EmoteItem, K2Node_DynamicCast_AsMariner_Chat_Emote) == 0x000018, "Member 'EmoteItem_C_ExecuteUbergraph_EmoteItem::K2Node_DynamicCast_AsMariner_Chat_Emote' has a wrong offset!");
static_assert(offsetof(EmoteItem_C_ExecuteUbergraph_EmoteItem, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'EmoteItem_C_ExecuteUbergraph_EmoteItem::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function EmoteItem.EmoteItem_C.OnPopulate
// 0x0010 (0x0010 - 0x0000)
struct EmoteItem_C_OnPopulate final
{
public:
	class UItemLoadResponse*                      LoadResponse;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMarinerCMSItemDataAsset*               CMSItem;                                           // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(EmoteItem_C_OnPopulate) == 0x000008, "Wrong alignment on EmoteItem_C_OnPopulate");
static_assert(sizeof(EmoteItem_C_OnPopulate) == 0x000010, "Wrong size on EmoteItem_C_OnPopulate");
static_assert(offsetof(EmoteItem_C_OnPopulate, LoadResponse) == 0x000000, "Member 'EmoteItem_C_OnPopulate::LoadResponse' has a wrong offset!");
static_assert(offsetof(EmoteItem_C_OnPopulate, CMSItem) == 0x000008, "Member 'EmoteItem_C_OnPopulate::CMSItem' has a wrong offset!");

// Function EmoteItem.EmoteItem_C.GetAssets
// 0x00D0 (0x00D0 - 0x0000)
struct EmoteItem_C_GetAssets final
{
public:
	struct FMarinerLayeredButtonAssets            ReturnValue;                                       // 0x0000(0x0068)(Parm, OutParm, ReturnParm, NoDestructor, ContainsInstancedReference)
	struct FMarinerLayeredButtonAssets            K2Node_MakeStruct_MarinerLayeredButtonAssets;      // 0x0068(0x0068)(NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(EmoteItem_C_GetAssets) == 0x000008, "Wrong alignment on EmoteItem_C_GetAssets");
static_assert(sizeof(EmoteItem_C_GetAssets) == 0x0000D0, "Wrong size on EmoteItem_C_GetAssets");
static_assert(offsetof(EmoteItem_C_GetAssets, ReturnValue) == 0x000000, "Member 'EmoteItem_C_GetAssets::ReturnValue' has a wrong offset!");
static_assert(offsetof(EmoteItem_C_GetAssets, K2Node_MakeStruct_MarinerLayeredButtonAssets) == 0x000068, "Member 'EmoteItem_C_GetAssets::K2Node_MakeStruct_MarinerLayeredButtonAssets' has a wrong offset!");

// Function EmoteItem.EmoteItem_C.GetItemLoadResponseAssets
// 0x0010 (0x0010 - 0x0000)
struct EmoteItem_C_GetItemLoadResponseAssets final
{
public:
	struct FMarinerItemLoadResponseAssets         ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FMarinerItemLoadResponseAssets         K2Node_MakeStruct_MarinerItemLoadResponseAssets;   // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(EmoteItem_C_GetItemLoadResponseAssets) == 0x000008, "Wrong alignment on EmoteItem_C_GetItemLoadResponseAssets");
static_assert(sizeof(EmoteItem_C_GetItemLoadResponseAssets) == 0x000010, "Wrong size on EmoteItem_C_GetItemLoadResponseAssets");
static_assert(offsetof(EmoteItem_C_GetItemLoadResponseAssets, ReturnValue) == 0x000000, "Member 'EmoteItem_C_GetItemLoadResponseAssets::ReturnValue' has a wrong offset!");
static_assert(offsetof(EmoteItem_C_GetItemLoadResponseAssets, K2Node_MakeStruct_MarinerItemLoadResponseAssets) == 0x000008, "Member 'EmoteItem_C_GetItemLoadResponseAssets::K2Node_MakeStruct_MarinerItemLoadResponseAssets' has a wrong offset!");

}

