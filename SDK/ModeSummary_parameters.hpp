#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ModeSummary

#include "Basic.hpp"

#include "MangoClient_structs.hpp"


namespace SDK::Params
{

// Function ModeSummary.ModeSummary_C.ExecuteUbergraph_ModeSummary
// 0x0004 (0x0004 - 0x0000)
struct ModeSummary_C_ExecuteUbergraph_ModeSummary final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ModeSummary_C_ExecuteUbergraph_ModeSummary) == 0x000004, "Wrong alignment on ModeSummary_C_ExecuteUbergraph_ModeSummary");
static_assert(sizeof(ModeSummary_C_ExecuteUbergraph_ModeSummary) == 0x000004, "Wrong size on ModeSummary_C_ExecuteUbergraph_ModeSummary");
static_assert(offsetof(ModeSummary_C_ExecuteUbergraph_ModeSummary, EntryPoint) == 0x000000, "Member 'ModeSummary_C_ExecuteUbergraph_ModeSummary::EntryPoint' has a wrong offset!");

// Function ModeSummary.ModeSummary_C.GetGameModeText
// 0x00B8 (0x00B8 - 0x0000)
struct ModeSummary_C_GetGameModeText final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm)
	bool                                          Temp_bool_Variable;                                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable;                                // 0x0020(0x0018)()
	class UMarinerModeGlobals*                    CallFunc_GetModeGlobals_ReturnValue;               // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TryAndGetMangoModeFromCurrentMode_bIsValid; // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMangoMode                             CallFunc_TryAndGetMangoModeFromCurrentMode_ReturnValue; // 0x0048(0x0058)(ConstParm)
	class FText                                   K2Node_Select_Default;                             // 0x00A0(0x0018)()
};
static_assert(alignof(ModeSummary_C_GetGameModeText) == 0x000008, "Wrong alignment on ModeSummary_C_GetGameModeText");
static_assert(sizeof(ModeSummary_C_GetGameModeText) == 0x0000B8, "Wrong size on ModeSummary_C_GetGameModeText");
static_assert(offsetof(ModeSummary_C_GetGameModeText, ReturnValue) == 0x000000, "Member 'ModeSummary_C_GetGameModeText::ReturnValue' has a wrong offset!");
static_assert(offsetof(ModeSummary_C_GetGameModeText, Temp_bool_Variable) == 0x000018, "Member 'ModeSummary_C_GetGameModeText::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(ModeSummary_C_GetGameModeText, Temp_text_Variable) == 0x000020, "Member 'ModeSummary_C_GetGameModeText::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(ModeSummary_C_GetGameModeText, CallFunc_GetModeGlobals_ReturnValue) == 0x000038, "Member 'ModeSummary_C_GetGameModeText::CallFunc_GetModeGlobals_ReturnValue' has a wrong offset!");
static_assert(offsetof(ModeSummary_C_GetGameModeText, CallFunc_TryAndGetMangoModeFromCurrentMode_bIsValid) == 0x000040, "Member 'ModeSummary_C_GetGameModeText::CallFunc_TryAndGetMangoModeFromCurrentMode_bIsValid' has a wrong offset!");
static_assert(offsetof(ModeSummary_C_GetGameModeText, CallFunc_TryAndGetMangoModeFromCurrentMode_ReturnValue) == 0x000048, "Member 'ModeSummary_C_GetGameModeText::CallFunc_TryAndGetMangoModeFromCurrentMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(ModeSummary_C_GetGameModeText, K2Node_Select_Default) == 0x0000A0, "Member 'ModeSummary_C_GetGameModeText::K2Node_Select_Default' has a wrong offset!");

// Function ModeSummary.ModeSummary_C.Initialize
// 0x00B8 (0x00B8 - 0x0000)
struct ModeSummary_C_Initialize final
{
public:
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMarinerModeGlobals*                    CallFunc_GetModeGlobals_ReturnValue;               // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMarinerGameInstance*                   K2Node_DynamicCast_AsMariner_Game_Instance;        // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetCurrentModeData_bIsValid;              // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A[0x6];                                       // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UMarinerModeDataAsset*                  CallFunc_GetCurrentModeData_ReturnValue;           // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMarinerVoiceOverManager*               CallFunc_GetVoiceOverManager_ReturnValue;          // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TryAndGetMangoModeFromCurrentMode_bIsValid; // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMangoMode                             CallFunc_TryAndGetMangoModeFromCurrentMode_ReturnValue; // 0x0038(0x0058)(ConstParm)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_GetGameModeText_ReturnValue;              // 0x0098(0x0018)()
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ModeSummary_C_Initialize) == 0x000008, "Wrong alignment on ModeSummary_C_Initialize");
static_assert(sizeof(ModeSummary_C_Initialize) == 0x0000B8, "Wrong size on ModeSummary_C_Initialize");
static_assert(offsetof(ModeSummary_C_Initialize, CallFunc_GetGameInstance_ReturnValue) == 0x000000, "Member 'ModeSummary_C_Initialize::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(ModeSummary_C_Initialize, CallFunc_GetModeGlobals_ReturnValue) == 0x000008, "Member 'ModeSummary_C_Initialize::CallFunc_GetModeGlobals_ReturnValue' has a wrong offset!");
static_assert(offsetof(ModeSummary_C_Initialize, K2Node_DynamicCast_AsMariner_Game_Instance) == 0x000010, "Member 'ModeSummary_C_Initialize::K2Node_DynamicCast_AsMariner_Game_Instance' has a wrong offset!");
static_assert(offsetof(ModeSummary_C_Initialize, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'ModeSummary_C_Initialize::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ModeSummary_C_Initialize, CallFunc_GetCurrentModeData_bIsValid) == 0x000019, "Member 'ModeSummary_C_Initialize::CallFunc_GetCurrentModeData_bIsValid' has a wrong offset!");
static_assert(offsetof(ModeSummary_C_Initialize, CallFunc_GetCurrentModeData_ReturnValue) == 0x000020, "Member 'ModeSummary_C_Initialize::CallFunc_GetCurrentModeData_ReturnValue' has a wrong offset!");
static_assert(offsetof(ModeSummary_C_Initialize, CallFunc_GetVoiceOverManager_ReturnValue) == 0x000028, "Member 'ModeSummary_C_Initialize::CallFunc_GetVoiceOverManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(ModeSummary_C_Initialize, CallFunc_TryAndGetMangoModeFromCurrentMode_bIsValid) == 0x000030, "Member 'ModeSummary_C_Initialize::CallFunc_TryAndGetMangoModeFromCurrentMode_bIsValid' has a wrong offset!");
static_assert(offsetof(ModeSummary_C_Initialize, CallFunc_TryAndGetMangoModeFromCurrentMode_ReturnValue) == 0x000038, "Member 'ModeSummary_C_Initialize::CallFunc_TryAndGetMangoModeFromCurrentMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(ModeSummary_C_Initialize, CallFunc_Conv_StringToName_ReturnValue) == 0x000090, "Member 'ModeSummary_C_Initialize::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(ModeSummary_C_Initialize, CallFunc_GetGameModeText_ReturnValue) == 0x000098, "Member 'ModeSummary_C_Initialize::CallFunc_GetGameModeText_ReturnValue' has a wrong offset!");
static_assert(offsetof(ModeSummary_C_Initialize, CallFunc_PlayAnimation_ReturnValue) == 0x0000B0, "Member 'ModeSummary_C_Initialize::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");

// Function ModeSummary.ModeSummary_C.InitializeCustom
// 0x0028 (0x0028 - 0x0000)
struct ModeSummary_C_InitializeCustom final
{
public:
	class FText                                   GameModeText_0;                                    // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	class UMarinerModeDataAsset*                  GameModeData;                                      // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ModeSummary_C_InitializeCustom) == 0x000008, "Wrong alignment on ModeSummary_C_InitializeCustom");
static_assert(sizeof(ModeSummary_C_InitializeCustom) == 0x000028, "Wrong size on ModeSummary_C_InitializeCustom");
static_assert(offsetof(ModeSummary_C_InitializeCustom, GameModeText_0) == 0x000000, "Member 'ModeSummary_C_InitializeCustom::GameModeText_0' has a wrong offset!");
static_assert(offsetof(ModeSummary_C_InitializeCustom, GameModeData) == 0x000018, "Member 'ModeSummary_C_InitializeCustom::GameModeData' has a wrong offset!");
static_assert(offsetof(ModeSummary_C_InitializeCustom, CallFunc_PlayAnimation_ReturnValue) == 0x000020, "Member 'ModeSummary_C_InitializeCustom::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");

// Function ModeSummary.ModeSummary_C.RemoveCustom
// 0x0008 (0x0008 - 0x0000)
struct ModeSummary_C_RemoveCustom final
{
public:
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ModeSummary_C_RemoveCustom) == 0x000008, "Wrong alignment on ModeSummary_C_RemoveCustom");
static_assert(sizeof(ModeSummary_C_RemoveCustom) == 0x000008, "Wrong size on ModeSummary_C_RemoveCustom");
static_assert(offsetof(ModeSummary_C_RemoveCustom, CallFunc_PlayAnimation_ReturnValue) == 0x000000, "Member 'ModeSummary_C_RemoveCustom::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");

}

