#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PlayerHeader

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Mariner_structs.hpp"


namespace SDK::Params
{

// Function PlayerHeader.PlayerHeader_C.ExecuteUbergraph_PlayerHeader
// 0x0070 (0x0070 - 0x0000)
struct PlayerHeader_C_ExecuteUbergraph_PlayerHeader final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_20F6[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMangoFriendsManager*                   CallFunc_Get_ReturnValue;                          // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_DoesPlatformSupportViewingFriends_ReturnValue; // 0x0010(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsProfileWidgetAllowed_Allowed;           // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EPlayerInputType                              K2Node_Event_InputType;                            // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_20F7[0x5];                                     // 0x0013(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IMarinerInputInterface> CallFunc_HandleInputDeviceChanged_self_CastInput;  // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bEnabled_1;                           // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bEnabled;                             // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_20F8[0x6];                                     // 0x002A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMarinerGameInstance*                   K2Node_DynamicCast_AsMariner_Game_Instance;        // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_20F9[0x7];                                     // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMarinerMenuManager*                    CallFunc_GetMenuManager_ReturnValue;               // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IMarinerInputInterface> CallFunc_HandleInput_self_CastInput;               // 0x0050(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HandleInput_ReturnValue;                  // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_20FA[0x7];                                     // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlayerHeader_C_ExecuteUbergraph_PlayerHeader) == 0x000008, "Wrong alignment on PlayerHeader_C_ExecuteUbergraph_PlayerHeader");
static_assert(sizeof(PlayerHeader_C_ExecuteUbergraph_PlayerHeader) == 0x000070, "Wrong size on PlayerHeader_C_ExecuteUbergraph_PlayerHeader");
static_assert(offsetof(PlayerHeader_C_ExecuteUbergraph_PlayerHeader, EntryPoint) == 0x000000, "Member 'PlayerHeader_C_ExecuteUbergraph_PlayerHeader::EntryPoint' has a wrong offset!");
static_assert(offsetof(PlayerHeader_C_ExecuteUbergraph_PlayerHeader, CallFunc_Get_ReturnValue) == 0x000008, "Member 'PlayerHeader_C_ExecuteUbergraph_PlayerHeader::CallFunc_Get_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerHeader_C_ExecuteUbergraph_PlayerHeader, CallFunc_DoesPlatformSupportViewingFriends_ReturnValue) == 0x000010, "Member 'PlayerHeader_C_ExecuteUbergraph_PlayerHeader::CallFunc_DoesPlatformSupportViewingFriends_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerHeader_C_ExecuteUbergraph_PlayerHeader, CallFunc_IsProfileWidgetAllowed_Allowed) == 0x000011, "Member 'PlayerHeader_C_ExecuteUbergraph_PlayerHeader::CallFunc_IsProfileWidgetAllowed_Allowed' has a wrong offset!");
static_assert(offsetof(PlayerHeader_C_ExecuteUbergraph_PlayerHeader, K2Node_Event_InputType) == 0x000012, "Member 'PlayerHeader_C_ExecuteUbergraph_PlayerHeader::K2Node_Event_InputType' has a wrong offset!");
static_assert(offsetof(PlayerHeader_C_ExecuteUbergraph_PlayerHeader, CallFunc_HandleInputDeviceChanged_self_CastInput) == 0x000018, "Member 'PlayerHeader_C_ExecuteUbergraph_PlayerHeader::CallFunc_HandleInputDeviceChanged_self_CastInput' has a wrong offset!");
static_assert(offsetof(PlayerHeader_C_ExecuteUbergraph_PlayerHeader, K2Node_Event_bEnabled_1) == 0x000028, "Member 'PlayerHeader_C_ExecuteUbergraph_PlayerHeader::K2Node_Event_bEnabled_1' has a wrong offset!");
static_assert(offsetof(PlayerHeader_C_ExecuteUbergraph_PlayerHeader, K2Node_Event_bEnabled) == 0x000029, "Member 'PlayerHeader_C_ExecuteUbergraph_PlayerHeader::K2Node_Event_bEnabled' has a wrong offset!");
static_assert(offsetof(PlayerHeader_C_ExecuteUbergraph_PlayerHeader, CallFunc_GetGameInstance_ReturnValue) == 0x000030, "Member 'PlayerHeader_C_ExecuteUbergraph_PlayerHeader::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerHeader_C_ExecuteUbergraph_PlayerHeader, K2Node_DynamicCast_AsMariner_Game_Instance) == 0x000038, "Member 'PlayerHeader_C_ExecuteUbergraph_PlayerHeader::K2Node_DynamicCast_AsMariner_Game_Instance' has a wrong offset!");
static_assert(offsetof(PlayerHeader_C_ExecuteUbergraph_PlayerHeader, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'PlayerHeader_C_ExecuteUbergraph_PlayerHeader::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(PlayerHeader_C_ExecuteUbergraph_PlayerHeader, CallFunc_GetMenuManager_ReturnValue) == 0x000048, "Member 'PlayerHeader_C_ExecuteUbergraph_PlayerHeader::CallFunc_GetMenuManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerHeader_C_ExecuteUbergraph_PlayerHeader, CallFunc_HandleInput_self_CastInput) == 0x000050, "Member 'PlayerHeader_C_ExecuteUbergraph_PlayerHeader::CallFunc_HandleInput_self_CastInput' has a wrong offset!");
static_assert(offsetof(PlayerHeader_C_ExecuteUbergraph_PlayerHeader, CallFunc_HandleInput_ReturnValue) == 0x000060, "Member 'PlayerHeader_C_ExecuteUbergraph_PlayerHeader::CallFunc_HandleInput_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerHeader_C_ExecuteUbergraph_PlayerHeader, CallFunc_PlayAnimation_ReturnValue) == 0x000068, "Member 'PlayerHeader_C_ExecuteUbergraph_PlayerHeader::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");

// Function PlayerHeader.PlayerHeader_C.SetProfileWidgetEnabled
// 0x0001 (0x0001 - 0x0000)
struct PlayerHeader_C_SetProfileWidgetEnabled final
{
public:
	bool                                          bEnabled;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PlayerHeader_C_SetProfileWidgetEnabled) == 0x000001, "Wrong alignment on PlayerHeader_C_SetProfileWidgetEnabled");
static_assert(sizeof(PlayerHeader_C_SetProfileWidgetEnabled) == 0x000001, "Wrong size on PlayerHeader_C_SetProfileWidgetEnabled");
static_assert(offsetof(PlayerHeader_C_SetProfileWidgetEnabled, bEnabled) == 0x000000, "Member 'PlayerHeader_C_SetProfileWidgetEnabled::bEnabled' has a wrong offset!");

// Function PlayerHeader.PlayerHeader_C.SetPartyWidgetEnabled
// 0x0001 (0x0001 - 0x0000)
struct PlayerHeader_C_SetPartyWidgetEnabled final
{
public:
	bool                                          bEnabled;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PlayerHeader_C_SetPartyWidgetEnabled) == 0x000001, "Wrong alignment on PlayerHeader_C_SetPartyWidgetEnabled");
static_assert(sizeof(PlayerHeader_C_SetPartyWidgetEnabled) == 0x000001, "Wrong size on PlayerHeader_C_SetPartyWidgetEnabled");
static_assert(offsetof(PlayerHeader_C_SetPartyWidgetEnabled, bEnabled) == 0x000000, "Member 'PlayerHeader_C_SetPartyWidgetEnabled::bEnabled' has a wrong offset!");

// Function PlayerHeader.PlayerHeader_C.HandleInputDeviceChanged
// 0x0001 (0x0001 - 0x0000)
struct PlayerHeader_C_HandleInputDeviceChanged final
{
public:
	EPlayerInputType                              InputType;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlayerHeader_C_HandleInputDeviceChanged) == 0x000001, "Wrong alignment on PlayerHeader_C_HandleInputDeviceChanged");
static_assert(sizeof(PlayerHeader_C_HandleInputDeviceChanged) == 0x000001, "Wrong size on PlayerHeader_C_HandleInputDeviceChanged");
static_assert(offsetof(PlayerHeader_C_HandleInputDeviceChanged, InputType) == 0x000000, "Member 'PlayerHeader_C_HandleInputDeviceChanged::InputType' has a wrong offset!");

// Function PlayerHeader.PlayerHeader_C.HandleInput
// 0x00A0 (0x00A0 - 0x0000)
struct PlayerHeader_C_HandleInput final
{
public:
	EMarinerInputActions                          InInput;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	EPlayerInputType                              CallFunc_GetActiveInputType_ReturnValue;           // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_3;        // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_4;        // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_20FB[0x6];                                     // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UMarinerAsyncUIFlowHandler*             CallFunc_Get_ReturnValue;                          // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 Temp_class_Variable;                               // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAsyncFlowCommon_C*                     K2Node_DynamicCast_AsAsync_Flow_Common;            // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPlatformPC_ReturnValue;                 // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_20FC[0x5];                                     // 0x002B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UMarinerMenuManager*                    CallFunc_GetMenuManager_ReturnValue;               // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ActivateStackManager_ReturnValue;         // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_20FD[0x7];                                     // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 Temp_class_Variable_1;                             // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HandleInput_ReturnValue;                  // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_20FE[0x6];                                     // 0x004A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UMarinerMenuManager*                    CallFunc_GetMenuManager_ReturnValue_1;             // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMangoPartyManager*                     CallFunc_Get_ReturnValue_1;                        // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsStackManagerActive_ReturnValue;         // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_20FF[0x3];                                     // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetPartySize_ReturnValue;                 // 0x0064(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsInParty_ReturnValue;                    // 0x0069(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_ActivateStackManager_ReturnValue_1;       // 0x006A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x006B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2100[0x4];                                     // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 K2Node_Select_Default;                             // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMarinerGameInstance*                   K2Node_DynamicCast_AsMariner_Game_Instance;        // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2101[0x7];                                     // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMarinerMenuManager*                    CallFunc_GetMenuManager_ReturnValue_2;             // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ActivateStackManager_ReturnValue_2;       // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PlayerHeader_C_HandleInput) == 0x000008, "Wrong alignment on PlayerHeader_C_HandleInput");
static_assert(sizeof(PlayerHeader_C_HandleInput) == 0x0000A0, "Wrong size on PlayerHeader_C_HandleInput");
static_assert(offsetof(PlayerHeader_C_HandleInput, InInput) == 0x000000, "Member 'PlayerHeader_C_HandleInput::InInput' has a wrong offset!");
static_assert(offsetof(PlayerHeader_C_HandleInput, ReturnValue) == 0x000001, "Member 'PlayerHeader_C_HandleInput::ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerHeader_C_HandleInput, CallFunc_GetActiveInputType_ReturnValue) == 0x000002, "Member 'PlayerHeader_C_HandleInput::CallFunc_GetActiveInputType_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerHeader_C_HandleInput, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000003, "Member 'PlayerHeader_C_HandleInput::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerHeader_C_HandleInput, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000004, "Member 'PlayerHeader_C_HandleInput::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PlayerHeader_C_HandleInput, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x000005, "Member 'PlayerHeader_C_HandleInput::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PlayerHeader_C_HandleInput, CallFunc_EqualEqual_ByteByte_ReturnValue_3) == 0x000006, "Member 'PlayerHeader_C_HandleInput::CallFunc_EqualEqual_ByteByte_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PlayerHeader_C_HandleInput, CallFunc_BooleanAND_ReturnValue) == 0x000007, "Member 'PlayerHeader_C_HandleInput::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerHeader_C_HandleInput, CallFunc_BooleanOR_ReturnValue) == 0x000008, "Member 'PlayerHeader_C_HandleInput::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerHeader_C_HandleInput, CallFunc_EqualEqual_ByteByte_ReturnValue_4) == 0x000009, "Member 'PlayerHeader_C_HandleInput::CallFunc_EqualEqual_ByteByte_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(PlayerHeader_C_HandleInput, CallFunc_Get_ReturnValue) == 0x000010, "Member 'PlayerHeader_C_HandleInput::CallFunc_Get_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerHeader_C_HandleInput, Temp_class_Variable) == 0x000018, "Member 'PlayerHeader_C_HandleInput::Temp_class_Variable' has a wrong offset!");
static_assert(offsetof(PlayerHeader_C_HandleInput, K2Node_DynamicCast_AsAsync_Flow_Common) == 0x000020, "Member 'PlayerHeader_C_HandleInput::K2Node_DynamicCast_AsAsync_Flow_Common' has a wrong offset!");
static_assert(offsetof(PlayerHeader_C_HandleInput, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'PlayerHeader_C_HandleInput::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(PlayerHeader_C_HandleInput, CallFunc_IsPlatformPC_ReturnValue) == 0x000029, "Member 'PlayerHeader_C_HandleInput::CallFunc_IsPlatformPC_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerHeader_C_HandleInput, CallFunc_BooleanAND_ReturnValue_1) == 0x00002A, "Member 'PlayerHeader_C_HandleInput::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PlayerHeader_C_HandleInput, CallFunc_GetMenuManager_ReturnValue) == 0x000030, "Member 'PlayerHeader_C_HandleInput::CallFunc_GetMenuManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerHeader_C_HandleInput, CallFunc_ActivateStackManager_ReturnValue) == 0x000038, "Member 'PlayerHeader_C_HandleInput::CallFunc_ActivateStackManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerHeader_C_HandleInput, Temp_class_Variable_1) == 0x000040, "Member 'PlayerHeader_C_HandleInput::Temp_class_Variable_1' has a wrong offset!");
static_assert(offsetof(PlayerHeader_C_HandleInput, CallFunc_HandleInput_ReturnValue) == 0x000048, "Member 'PlayerHeader_C_HandleInput::CallFunc_HandleInput_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerHeader_C_HandleInput, Temp_bool_Variable) == 0x000049, "Member 'PlayerHeader_C_HandleInput::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(PlayerHeader_C_HandleInput, CallFunc_GetMenuManager_ReturnValue_1) == 0x000050, "Member 'PlayerHeader_C_HandleInput::CallFunc_GetMenuManager_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PlayerHeader_C_HandleInput, CallFunc_Get_ReturnValue_1) == 0x000058, "Member 'PlayerHeader_C_HandleInput::CallFunc_Get_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PlayerHeader_C_HandleInput, CallFunc_IsStackManagerActive_ReturnValue) == 0x000060, "Member 'PlayerHeader_C_HandleInput::CallFunc_IsStackManagerActive_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerHeader_C_HandleInput, CallFunc_GetPartySize_ReturnValue) == 0x000064, "Member 'PlayerHeader_C_HandleInput::CallFunc_GetPartySize_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerHeader_C_HandleInput, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000068, "Member 'PlayerHeader_C_HandleInput::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerHeader_C_HandleInput, CallFunc_IsInParty_ReturnValue) == 0x000069, "Member 'PlayerHeader_C_HandleInput::CallFunc_IsInParty_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerHeader_C_HandleInput, CallFunc_ActivateStackManager_ReturnValue_1) == 0x00006A, "Member 'PlayerHeader_C_HandleInput::CallFunc_ActivateStackManager_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PlayerHeader_C_HandleInput, CallFunc_BooleanAND_ReturnValue_2) == 0x00006B, "Member 'PlayerHeader_C_HandleInput::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PlayerHeader_C_HandleInput, K2Node_Select_Default) == 0x000070, "Member 'PlayerHeader_C_HandleInput::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(PlayerHeader_C_HandleInput, CallFunc_GetGameInstance_ReturnValue) == 0x000078, "Member 'PlayerHeader_C_HandleInput::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerHeader_C_HandleInput, K2Node_DynamicCast_AsMariner_Game_Instance) == 0x000080, "Member 'PlayerHeader_C_HandleInput::K2Node_DynamicCast_AsMariner_Game_Instance' has a wrong offset!");
static_assert(offsetof(PlayerHeader_C_HandleInput, K2Node_DynamicCast_bSuccess_1) == 0x000088, "Member 'PlayerHeader_C_HandleInput::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(PlayerHeader_C_HandleInput, CallFunc_GetMenuManager_ReturnValue_2) == 0x000090, "Member 'PlayerHeader_C_HandleInput::CallFunc_GetMenuManager_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PlayerHeader_C_HandleInput, CallFunc_ActivateStackManager_ReturnValue_2) == 0x000098, "Member 'PlayerHeader_C_HandleInput::CallFunc_ActivateStackManager_ReturnValue_2' has a wrong offset!");

// Function PlayerHeader.PlayerHeader_C.IsPartyWidgetAllowed
// 0x0018 (0x0018 - 0x0000)
struct PlayerHeader_C_IsPartyWidgetAllowed final
{
public:
	bool                                          Allowed;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2102[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPanelWidget*                           CallFunc_GetParent_ReturnValue;                    // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PlayerHeader_C_IsPartyWidgetAllowed) == 0x000008, "Wrong alignment on PlayerHeader_C_IsPartyWidgetAllowed");
static_assert(sizeof(PlayerHeader_C_IsPartyWidgetAllowed) == 0x000018, "Wrong size on PlayerHeader_C_IsPartyWidgetAllowed");
static_assert(offsetof(PlayerHeader_C_IsPartyWidgetAllowed, Allowed) == 0x000000, "Member 'PlayerHeader_C_IsPartyWidgetAllowed::Allowed' has a wrong offset!");
static_assert(offsetof(PlayerHeader_C_IsPartyWidgetAllowed, CallFunc_GetParent_ReturnValue) == 0x000008, "Member 'PlayerHeader_C_IsPartyWidgetAllowed::CallFunc_GetParent_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerHeader_C_IsPartyWidgetAllowed, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'PlayerHeader_C_IsPartyWidgetAllowed::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerHeader_C_IsPartyWidgetAllowed, CallFunc_BooleanAND_ReturnValue) == 0x000011, "Member 'PlayerHeader_C_IsPartyWidgetAllowed::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function PlayerHeader.PlayerHeader_C.IsProfileWidgetAllowed
// 0x0018 (0x0018 - 0x0000)
struct PlayerHeader_C_IsProfileWidgetAllowed final
{
public:
	bool                                          Allowed;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2103[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPanelWidget*                           CallFunc_GetParent_ReturnValue;                    // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PlayerHeader_C_IsProfileWidgetAllowed) == 0x000008, "Wrong alignment on PlayerHeader_C_IsProfileWidgetAllowed");
static_assert(sizeof(PlayerHeader_C_IsProfileWidgetAllowed) == 0x000018, "Wrong size on PlayerHeader_C_IsProfileWidgetAllowed");
static_assert(offsetof(PlayerHeader_C_IsProfileWidgetAllowed, Allowed) == 0x000000, "Member 'PlayerHeader_C_IsProfileWidgetAllowed::Allowed' has a wrong offset!");
static_assert(offsetof(PlayerHeader_C_IsProfileWidgetAllowed, CallFunc_GetParent_ReturnValue) == 0x000008, "Member 'PlayerHeader_C_IsProfileWidgetAllowed::CallFunc_GetParent_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerHeader_C_IsProfileWidgetAllowed, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'PlayerHeader_C_IsProfileWidgetAllowed::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerHeader_C_IsProfileWidgetAllowed, CallFunc_BooleanAND_ReturnValue) == 0x000011, "Member 'PlayerHeader_C_IsProfileWidgetAllowed::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function PlayerHeader.PlayerHeader_C.UpdateBackground
// 0x0034 (0x0034 - 0x0000)
struct PlayerHeader_C_UpdateBackground final
{
public:
	bool                                          Highlighted;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2104[0x2];                                     // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Temp_struct_Variable;                              // 0x0004(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_1;                            // 0x0014(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_Select_Default;                             // 0x0024(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlayerHeader_C_UpdateBackground) == 0x000004, "Wrong alignment on PlayerHeader_C_UpdateBackground");
static_assert(sizeof(PlayerHeader_C_UpdateBackground) == 0x000034, "Wrong size on PlayerHeader_C_UpdateBackground");
static_assert(offsetof(PlayerHeader_C_UpdateBackground, Highlighted) == 0x000000, "Member 'PlayerHeader_C_UpdateBackground::Highlighted' has a wrong offset!");
static_assert(offsetof(PlayerHeader_C_UpdateBackground, Temp_bool_Variable) == 0x000001, "Member 'PlayerHeader_C_UpdateBackground::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(PlayerHeader_C_UpdateBackground, Temp_struct_Variable) == 0x000004, "Member 'PlayerHeader_C_UpdateBackground::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(PlayerHeader_C_UpdateBackground, Temp_struct_Variable_1) == 0x000014, "Member 'PlayerHeader_C_UpdateBackground::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(PlayerHeader_C_UpdateBackground, K2Node_Select_Default) == 0x000024, "Member 'PlayerHeader_C_UpdateBackground::K2Node_Select_Default' has a wrong offset!");

}

