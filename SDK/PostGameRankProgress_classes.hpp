#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PostGameRankProgress

#include "Basic.hpp"

#include "MangoClient_structs.hpp"
#include "Engine_structs.hpp"
#include "Mariner_classes.hpp"
#include "AkAudio_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass PostGameRankProgress.PostGameRankProgress_C
// 0x00B0 (0x0590 - 0x04E0)
class UPostGameRankProgress_C final : public UMarinerPostGameRankProgressMenu
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x04E0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       PlaylistAnimateOut;                                // 0x04E8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       PlaylistAnimateIn;                                 // 0x04F0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       RankDownAnimation;                                 // 0x04F8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       InAnimation;                                       // 0x0500(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       ResetAnim;                                         // 0x0508(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       OutAnimation;                                      // 0x0510(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       RankUpAnimation;                                   // 0x0518(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 Fuelparticles;                                     // 0x0520(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Glow;                                              // 0x0528(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_93;                                          // 0x0530(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UDefaultPlaylistButton_C*               PlaylistButton;                                    // 0x0538(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class URankWidget_Large_C*                    RankWidget;                                        // 0x0540(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Shockwave;                                         // 0x0548(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USummaryRadialRank_C*                   SummaryRadialRank;                                 // 0x0550(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 UIBackgroundVignette;                              // 0x0558(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	float                                         RewardTimer;                                       // 0x0560(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CurrencyAwarded;                                   // 0x0564(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         NewRank;                                           // 0x0568(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CurrentRank;                                       // 0x056C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FMangoPlaylistResult                   MangoPlaylistProgress;                             // 0x0570(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)

public:
	void ExecuteUbergraph_PostGameRankProgress(int32 EntryPoint);
	void WidgetAnimationEvt_InAnimation_K2Node_WidgetAnimationEvent_1();
	void WidgetAnimationEvt_OutAnimation_K2Node_WidgetAnimationEvent_0();
	void RankAnimationFinished();
	void RankChanged(int32 Level);
	void BP_OnEntered(bool bFromSubMenu);
	void PopulateRankProgress(const struct FMangoPlaylistResult& PlaylistProgression);
	void ConsumeNextReward(bool* IsValid);
	void HasRewardItems(bool* HasRewardItems_0);
	void HasCurrency(bool* HasCurrency_0);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"PostGameRankProgress_C">();
	}
	static class UPostGameRankProgress_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPostGameRankProgress_C>();
	}
};
static_assert(alignof(UPostGameRankProgress_C) == 0x000008, "Wrong alignment on UPostGameRankProgress_C");
static_assert(sizeof(UPostGameRankProgress_C) == 0x000590, "Wrong size on UPostGameRankProgress_C");
static_assert(offsetof(UPostGameRankProgress_C, UberGraphFrame) == 0x0004E0, "Member 'UPostGameRankProgress_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UPostGameRankProgress_C, PlaylistAnimateOut) == 0x0004E8, "Member 'UPostGameRankProgress_C::PlaylistAnimateOut' has a wrong offset!");
static_assert(offsetof(UPostGameRankProgress_C, PlaylistAnimateIn) == 0x0004F0, "Member 'UPostGameRankProgress_C::PlaylistAnimateIn' has a wrong offset!");
static_assert(offsetof(UPostGameRankProgress_C, RankDownAnimation) == 0x0004F8, "Member 'UPostGameRankProgress_C::RankDownAnimation' has a wrong offset!");
static_assert(offsetof(UPostGameRankProgress_C, InAnimation) == 0x000500, "Member 'UPostGameRankProgress_C::InAnimation' has a wrong offset!");
static_assert(offsetof(UPostGameRankProgress_C, ResetAnim) == 0x000508, "Member 'UPostGameRankProgress_C::ResetAnim' has a wrong offset!");
static_assert(offsetof(UPostGameRankProgress_C, OutAnimation) == 0x000510, "Member 'UPostGameRankProgress_C::OutAnimation' has a wrong offset!");
static_assert(offsetof(UPostGameRankProgress_C, RankUpAnimation) == 0x000518, "Member 'UPostGameRankProgress_C::RankUpAnimation' has a wrong offset!");
static_assert(offsetof(UPostGameRankProgress_C, Fuelparticles) == 0x000520, "Member 'UPostGameRankProgress_C::Fuelparticles' has a wrong offset!");
static_assert(offsetof(UPostGameRankProgress_C, Glow) == 0x000528, "Member 'UPostGameRankProgress_C::Glow' has a wrong offset!");
static_assert(offsetof(UPostGameRankProgress_C, Image_93) == 0x000530, "Member 'UPostGameRankProgress_C::Image_93' has a wrong offset!");
static_assert(offsetof(UPostGameRankProgress_C, PlaylistButton) == 0x000538, "Member 'UPostGameRankProgress_C::PlaylistButton' has a wrong offset!");
static_assert(offsetof(UPostGameRankProgress_C, RankWidget) == 0x000540, "Member 'UPostGameRankProgress_C::RankWidget' has a wrong offset!");
static_assert(offsetof(UPostGameRankProgress_C, Shockwave) == 0x000548, "Member 'UPostGameRankProgress_C::Shockwave' has a wrong offset!");
static_assert(offsetof(UPostGameRankProgress_C, SummaryRadialRank) == 0x000550, "Member 'UPostGameRankProgress_C::SummaryRadialRank' has a wrong offset!");
static_assert(offsetof(UPostGameRankProgress_C, UIBackgroundVignette) == 0x000558, "Member 'UPostGameRankProgress_C::UIBackgroundVignette' has a wrong offset!");
static_assert(offsetof(UPostGameRankProgress_C, RewardTimer) == 0x000560, "Member 'UPostGameRankProgress_C::RewardTimer' has a wrong offset!");
static_assert(offsetof(UPostGameRankProgress_C, CurrencyAwarded) == 0x000564, "Member 'UPostGameRankProgress_C::CurrencyAwarded' has a wrong offset!");
static_assert(offsetof(UPostGameRankProgress_C, NewRank) == 0x000568, "Member 'UPostGameRankProgress_C::NewRank' has a wrong offset!");
static_assert(offsetof(UPostGameRankProgress_C, CurrentRank) == 0x00056C, "Member 'UPostGameRankProgress_C::CurrentRank' has a wrong offset!");
static_assert(offsetof(UPostGameRankProgress_C, MangoPlaylistProgress) == 0x000570, "Member 'UPostGameRankProgress_C::MangoPlaylistProgress' has a wrong offset!");

}

