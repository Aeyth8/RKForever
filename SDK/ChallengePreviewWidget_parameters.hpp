#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ChallengePreviewWidget

#include "Basic.hpp"

#include "MangoClient_structs.hpp"


namespace SDK::Params
{

// Function ChallengePreviewWidget.ChallengePreviewWidget_C.ExecuteUbergraph_ChallengePreviewWidget
// 0x0038 (0x0038 - 0x0000)
struct ChallengePreviewWidget_C_ExecuteUbergraph_ChallengePreviewWidget final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_212E[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMangoQuestManager*                     CallFunc_Get_ReturnValue;                          // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(TArray<struct FMangoQuestDescription>& Quests)> K2Node_CreateDelegate_OutputDelegate;              // 0x0010(0x0010)(ZeroConstructor, NoDestructor)
	class UMangoQuestManager*                     CallFunc_Get_ReturnValue_1;                        // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FMangoQuestDescription>         K2Node_CustomEvent_Quests;                         // 0x0028(0x0010)(ConstParm, ZeroConstructor, ReferenceParm)
};
static_assert(alignof(ChallengePreviewWidget_C_ExecuteUbergraph_ChallengePreviewWidget) == 0x000008, "Wrong alignment on ChallengePreviewWidget_C_ExecuteUbergraph_ChallengePreviewWidget");
static_assert(sizeof(ChallengePreviewWidget_C_ExecuteUbergraph_ChallengePreviewWidget) == 0x000038, "Wrong size on ChallengePreviewWidget_C_ExecuteUbergraph_ChallengePreviewWidget");
static_assert(offsetof(ChallengePreviewWidget_C_ExecuteUbergraph_ChallengePreviewWidget, EntryPoint) == 0x000000, "Member 'ChallengePreviewWidget_C_ExecuteUbergraph_ChallengePreviewWidget::EntryPoint' has a wrong offset!");
static_assert(offsetof(ChallengePreviewWidget_C_ExecuteUbergraph_ChallengePreviewWidget, CallFunc_Get_ReturnValue) == 0x000008, "Member 'ChallengePreviewWidget_C_ExecuteUbergraph_ChallengePreviewWidget::CallFunc_Get_ReturnValue' has a wrong offset!");
static_assert(offsetof(ChallengePreviewWidget_C_ExecuteUbergraph_ChallengePreviewWidget, K2Node_CreateDelegate_OutputDelegate) == 0x000010, "Member 'ChallengePreviewWidget_C_ExecuteUbergraph_ChallengePreviewWidget::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(ChallengePreviewWidget_C_ExecuteUbergraph_ChallengePreviewWidget, CallFunc_Get_ReturnValue_1) == 0x000020, "Member 'ChallengePreviewWidget_C_ExecuteUbergraph_ChallengePreviewWidget::CallFunc_Get_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ChallengePreviewWidget_C_ExecuteUbergraph_ChallengePreviewWidget, K2Node_CustomEvent_Quests) == 0x000028, "Member 'ChallengePreviewWidget_C_ExecuteUbergraph_ChallengePreviewWidget::K2Node_CustomEvent_Quests' has a wrong offset!");

// Function ChallengePreviewWidget.ChallengePreviewWidget_C.QuestsRefreshed
// 0x0010 (0x0010 - 0x0000)
struct ChallengePreviewWidget_C_QuestsRefreshed final
{
public:
	TArray<struct FMangoQuestDescription>         Quests;                                            // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm)
};
static_assert(alignof(ChallengePreviewWidget_C_QuestsRefreshed) == 0x000008, "Wrong alignment on ChallengePreviewWidget_C_QuestsRefreshed");
static_assert(sizeof(ChallengePreviewWidget_C_QuestsRefreshed) == 0x000010, "Wrong size on ChallengePreviewWidget_C_QuestsRefreshed");
static_assert(offsetof(ChallengePreviewWidget_C_QuestsRefreshed, Quests) == 0x000000, "Member 'ChallengePreviewWidget_C_QuestsRefreshed::Quests' has a wrong offset!");

// Function ChallengePreviewWidget.ChallengePreviewWidget_C.UpdateChallenges
// 0x0150 (0x0150 - 0x0000)
struct ChallengePreviewWidget_C_UpdateChallenges final
{
public:
	bool                                          RebuildAll;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_212F[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMangoQuestManager*                     CallFunc_Get_ReturnValue;                          // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FMangoQuestDescription>         CallFunc_GetQuests_ReturnValue;                    // 0x0018(0x0010)(ConstParm, ZeroConstructor, ReferenceParm)
	struct FMangoQuestDescription                 CallFunc_Array_Get_Item;                           // 0x0028(0x0118)()
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0144(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0145(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0146(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x0147(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0149(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ChallengePreviewWidget_C_UpdateChallenges) == 0x000008, "Wrong alignment on ChallengePreviewWidget_C_UpdateChallenges");
static_assert(sizeof(ChallengePreviewWidget_C_UpdateChallenges) == 0x000150, "Wrong size on ChallengePreviewWidget_C_UpdateChallenges");
static_assert(offsetof(ChallengePreviewWidget_C_UpdateChallenges, RebuildAll) == 0x000000, "Member 'ChallengePreviewWidget_C_UpdateChallenges::RebuildAll' has a wrong offset!");
static_assert(offsetof(ChallengePreviewWidget_C_UpdateChallenges, Temp_int_Array_Index_Variable) == 0x000004, "Member 'ChallengePreviewWidget_C_UpdateChallenges::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(ChallengePreviewWidget_C_UpdateChallenges, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'ChallengePreviewWidget_C_UpdateChallenges::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(ChallengePreviewWidget_C_UpdateChallenges, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'ChallengePreviewWidget_C_UpdateChallenges::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ChallengePreviewWidget_C_UpdateChallenges, CallFunc_Get_ReturnValue) == 0x000010, "Member 'ChallengePreviewWidget_C_UpdateChallenges::CallFunc_Get_ReturnValue' has a wrong offset!");
static_assert(offsetof(ChallengePreviewWidget_C_UpdateChallenges, CallFunc_GetQuests_ReturnValue) == 0x000018, "Member 'ChallengePreviewWidget_C_UpdateChallenges::CallFunc_GetQuests_ReturnValue' has a wrong offset!");
static_assert(offsetof(ChallengePreviewWidget_C_UpdateChallenges, CallFunc_Array_Get_Item) == 0x000028, "Member 'ChallengePreviewWidget_C_UpdateChallenges::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(ChallengePreviewWidget_C_UpdateChallenges, CallFunc_Array_Length_ReturnValue) == 0x000140, "Member 'ChallengePreviewWidget_C_UpdateChallenges::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(ChallengePreviewWidget_C_UpdateChallenges, CallFunc_Less_IntInt_ReturnValue) == 0x000144, "Member 'ChallengePreviewWidget_C_UpdateChallenges::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ChallengePreviewWidget_C_UpdateChallenges, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000145, "Member 'ChallengePreviewWidget_C_UpdateChallenges::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(ChallengePreviewWidget_C_UpdateChallenges, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000146, "Member 'ChallengePreviewWidget_C_UpdateChallenges::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ChallengePreviewWidget_C_UpdateChallenges, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x000147, "Member 'ChallengePreviewWidget_C_UpdateChallenges::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ChallengePreviewWidget_C_UpdateChallenges, CallFunc_BooleanOR_ReturnValue) == 0x000148, "Member 'ChallengePreviewWidget_C_UpdateChallenges::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(ChallengePreviewWidget_C_UpdateChallenges, CallFunc_BooleanOR_ReturnValue_1) == 0x000149, "Member 'ChallengePreviewWidget_C_UpdateChallenges::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");

}

