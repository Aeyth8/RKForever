#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ItemLibrary

#include "Basic.hpp"

#include "ItemLibrary_classes.hpp"
#include "ItemLibrary_parameters.hpp"


namespace SDK
{

// Function ItemLibrary.ItemLibrary_C.GetGlobalItemMap
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TMap<EItemBoxTypes, TSoftClassPtr<class UClass>>ItemMap                                                (Parm, OutParm, ZeroConstructor)

void UItemLibrary_C::GetGlobalItemMap(class UObject* __WorldContext, TMap<EItemBoxTypes, TSoftClassPtr<class UClass>>* ItemMap)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ItemLibrary_C", "GetGlobalItemMap");

	Params::ItemLibrary_C_GetGlobalItemMap Parms{};

	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (ItemMap != nullptr)
		*ItemMap = std::move(Parms.ItemMap);
}


// Function ItemLibrary.ItemLibrary_C.GetItemUseArtifactItemMap
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TMap<EItemBoxTypes, TSoftClassPtr<class UClass>>ItemMap                                                (Parm, OutParm, ZeroConstructor)

void UItemLibrary_C::GetItemUseArtifactItemMap(class UObject* __WorldContext, TMap<EItemBoxTypes, TSoftClassPtr<class UClass>>* ItemMap)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ItemLibrary_C", "GetItemUseArtifactItemMap");

	Params::ItemLibrary_C_GetItemUseArtifactItemMap Parms{};

	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (ItemMap != nullptr)
		*ItemMap = std::move(Parms.ItemMap);
}


// Function ItemLibrary.ItemLibrary_C.GetEventExclusiveItemMap
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TMap<EItemBoxTypes, TSoftClassPtr<class UClass>>ItemMap                                                (Parm, OutParm, ZeroConstructor)

void UItemLibrary_C::GetEventExclusiveItemMap(class UObject* __WorldContext, TMap<EItemBoxTypes, TSoftClassPtr<class UClass>>* ItemMap)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ItemLibrary_C", "GetEventExclusiveItemMap");

	Params::ItemLibrary_C_GetEventExclusiveItemMap Parms{};

	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (ItemMap != nullptr)
		*ItemMap = std::move(Parms.ItemMap);
}


// Function ItemLibrary.ItemLibrary_C.GetItemUseRankedArtifactItemMap
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TMap<EItemBoxTypes, TSoftClassPtr<class UClass>>ItemMap                                                (Parm, OutParm, ZeroConstructor)

void UItemLibrary_C::GetItemUseRankedArtifactItemMap(class UObject* __WorldContext, TMap<EItemBoxTypes, TSoftClassPtr<class UClass>>* ItemMap)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ItemLibrary_C", "GetItemUseRankedArtifactItemMap");

	Params::ItemLibrary_C_GetItemUseRankedArtifactItemMap Parms{};

	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (ItemMap != nullptr)
		*ItemMap = std::move(Parms.ItemMap);
}


// Function ItemLibrary.ItemLibrary_C.Get Playlist Event Item Map
// (Static, Private, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// TArray<struct FPlaylistEventItemMapStruct>PlaylistEventItemMapsArray                             (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TMap<EItemBoxTypes, TSoftClassPtr<class UClass>>ItemMap                                                (Parm, OutParm, ZeroConstructor)

void UItemLibrary_C::Get_Playlist_Event_Item_Map(TArray<struct FPlaylistEventItemMapStruct>& PlaylistEventItemMapsArray, class UObject* __WorldContext, TMap<EItemBoxTypes, TSoftClassPtr<class UClass>>* ItemMap)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ItemLibrary_C", "Get Playlist Event Item Map");

	Params::ItemLibrary_C_Get_Playlist_Event_Item_Map Parms{};

	Parms.PlaylistEventItemMapsArray = std::move(PlaylistEventItemMapsArray);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	PlaylistEventItemMapsArray = std::move(Parms.PlaylistEventItemMapsArray);

	if (ItemMap != nullptr)
		*ItemMap = std::move(Parms.ItemMap);
}


// Function ItemLibrary.ItemLibrary_C.GetDebugItemMap
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TMap<EItemBoxTypes, TSoftClassPtr<class UClass>>ItemMap                                                (Parm, OutParm, ZeroConstructor)

void UItemLibrary_C::GetDebugItemMap(class UObject* __WorldContext, TMap<EItemBoxTypes, TSoftClassPtr<class UClass>>* ItemMap)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ItemLibrary_C", "GetDebugItemMap");

	Params::ItemLibrary_C_GetDebugItemMap Parms{};

	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (ItemMap != nullptr)
		*ItemMap = std::move(Parms.ItemMap);
}

}

