#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: CharacterCommonName

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "SlateCore_structs.hpp"
#include "Mariner_structs.hpp"


namespace SDK::Params
{

// Function CharacterCommonName.CharacterCommonName_C.PopulateTeam
// 0x0148 (0x0148 - 0x0000)
struct CharacterCommonName_C_PopulateTeam final
{
public:
	class AMarinerCharacter*                      Character;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable;                              // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMarinerPlayerState*                    K2Node_DynamicCast_AsMariner_Player_State;         // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_257F[0x3];                                     // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Temp_struct_Variable_1;                            // 0x0024(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetTeamIndex_ReturnValue;                 // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMarinerHostility                             CallFunc_TryAndGetHostilityRelativeToLocalPlayer_ReturnValue; // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2580[0x3];                                     // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Temp_struct_Variable_2;                            // 0x003C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMarinerHostility                             Temp_byte_Variable;                                // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2581[0x3];                                     // 0x004D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Temp_struct_Variable_3;                            // 0x0050(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_4;                            // 0x0060(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_5;                            // 0x0070(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_6;                            // 0x0080(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMarinerHostility                             Temp_byte_Variable_1;                              // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2582[0x3];                                     // 0x0091(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           K2Node_Select_Default;                             // 0x0094(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2583[0x4];                                     // 0x00A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x00A8(0x0028)()
	struct FLinearColor                           Temp_struct_Variable_7;                            // 0x00D0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_8;                            // 0x00E0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_9;                            // 0x00F0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_10;                           // 0x0100(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_Select_Default_1;                           // 0x0110(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_11;                           // 0x0120(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMarinerHostility                             Temp_byte_Variable_2;                              // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2584[0x3];                                     // 0x0131(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           K2Node_Select_Default_2;                           // 0x0134(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CharacterCommonName_C_PopulateTeam) == 0x000008, "Wrong alignment on CharacterCommonName_C_PopulateTeam");
static_assert(sizeof(CharacterCommonName_C_PopulateTeam) == 0x000148, "Wrong size on CharacterCommonName_C_PopulateTeam");
static_assert(offsetof(CharacterCommonName_C_PopulateTeam, Character) == 0x000000, "Member 'CharacterCommonName_C_PopulateTeam::Character' has a wrong offset!");
static_assert(offsetof(CharacterCommonName_C_PopulateTeam, Temp_struct_Variable) == 0x000008, "Member 'CharacterCommonName_C_PopulateTeam::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(CharacterCommonName_C_PopulateTeam, K2Node_DynamicCast_AsMariner_Player_State) == 0x000018, "Member 'CharacterCommonName_C_PopulateTeam::K2Node_DynamicCast_AsMariner_Player_State' has a wrong offset!");
static_assert(offsetof(CharacterCommonName_C_PopulateTeam, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'CharacterCommonName_C_PopulateTeam::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(CharacterCommonName_C_PopulateTeam, Temp_struct_Variable_1) == 0x000024, "Member 'CharacterCommonName_C_PopulateTeam::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(CharacterCommonName_C_PopulateTeam, CallFunc_GetTeamIndex_ReturnValue) == 0x000034, "Member 'CharacterCommonName_C_PopulateTeam::CallFunc_GetTeamIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharacterCommonName_C_PopulateTeam, CallFunc_TryAndGetHostilityRelativeToLocalPlayer_ReturnValue) == 0x000038, "Member 'CharacterCommonName_C_PopulateTeam::CallFunc_TryAndGetHostilityRelativeToLocalPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharacterCommonName_C_PopulateTeam, Temp_struct_Variable_2) == 0x00003C, "Member 'CharacterCommonName_C_PopulateTeam::Temp_struct_Variable_2' has a wrong offset!");
static_assert(offsetof(CharacterCommonName_C_PopulateTeam, Temp_byte_Variable) == 0x00004C, "Member 'CharacterCommonName_C_PopulateTeam::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(CharacterCommonName_C_PopulateTeam, Temp_struct_Variable_3) == 0x000050, "Member 'CharacterCommonName_C_PopulateTeam::Temp_struct_Variable_3' has a wrong offset!");
static_assert(offsetof(CharacterCommonName_C_PopulateTeam, Temp_struct_Variable_4) == 0x000060, "Member 'CharacterCommonName_C_PopulateTeam::Temp_struct_Variable_4' has a wrong offset!");
static_assert(offsetof(CharacterCommonName_C_PopulateTeam, Temp_struct_Variable_5) == 0x000070, "Member 'CharacterCommonName_C_PopulateTeam::Temp_struct_Variable_5' has a wrong offset!");
static_assert(offsetof(CharacterCommonName_C_PopulateTeam, Temp_struct_Variable_6) == 0x000080, "Member 'CharacterCommonName_C_PopulateTeam::Temp_struct_Variable_6' has a wrong offset!");
static_assert(offsetof(CharacterCommonName_C_PopulateTeam, Temp_byte_Variable_1) == 0x000090, "Member 'CharacterCommonName_C_PopulateTeam::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(CharacterCommonName_C_PopulateTeam, K2Node_Select_Default) == 0x000094, "Member 'CharacterCommonName_C_PopulateTeam::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(CharacterCommonName_C_PopulateTeam, K2Node_MakeStruct_SlateColor) == 0x0000A8, "Member 'CharacterCommonName_C_PopulateTeam::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(CharacterCommonName_C_PopulateTeam, Temp_struct_Variable_7) == 0x0000D0, "Member 'CharacterCommonName_C_PopulateTeam::Temp_struct_Variable_7' has a wrong offset!");
static_assert(offsetof(CharacterCommonName_C_PopulateTeam, Temp_struct_Variable_8) == 0x0000E0, "Member 'CharacterCommonName_C_PopulateTeam::Temp_struct_Variable_8' has a wrong offset!");
static_assert(offsetof(CharacterCommonName_C_PopulateTeam, Temp_struct_Variable_9) == 0x0000F0, "Member 'CharacterCommonName_C_PopulateTeam::Temp_struct_Variable_9' has a wrong offset!");
static_assert(offsetof(CharacterCommonName_C_PopulateTeam, Temp_struct_Variable_10) == 0x000100, "Member 'CharacterCommonName_C_PopulateTeam::Temp_struct_Variable_10' has a wrong offset!");
static_assert(offsetof(CharacterCommonName_C_PopulateTeam, K2Node_Select_Default_1) == 0x000110, "Member 'CharacterCommonName_C_PopulateTeam::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(CharacterCommonName_C_PopulateTeam, Temp_struct_Variable_11) == 0x000120, "Member 'CharacterCommonName_C_PopulateTeam::Temp_struct_Variable_11' has a wrong offset!");
static_assert(offsetof(CharacterCommonName_C_PopulateTeam, Temp_byte_Variable_2) == 0x000130, "Member 'CharacterCommonName_C_PopulateTeam::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(CharacterCommonName_C_PopulateTeam, K2Node_Select_Default_2) == 0x000134, "Member 'CharacterCommonName_C_PopulateTeam::K2Node_Select_Default_2' has a wrong offset!");

// Function CharacterCommonName.CharacterCommonName_C.PopulateName
// 0x0030 (0x0030 - 0x0000)
struct CharacterCommonName_C_PopulateName final
{
public:
	class AMarinerCharacter*                      Character;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetPlayerName_ReturnValue;                // 0x0008(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0018(0x0018)()
};
static_assert(alignof(CharacterCommonName_C_PopulateName) == 0x000008, "Wrong alignment on CharacterCommonName_C_PopulateName");
static_assert(sizeof(CharacterCommonName_C_PopulateName) == 0x000030, "Wrong size on CharacterCommonName_C_PopulateName");
static_assert(offsetof(CharacterCommonName_C_PopulateName, Character) == 0x000000, "Member 'CharacterCommonName_C_PopulateName::Character' has a wrong offset!");
static_assert(offsetof(CharacterCommonName_C_PopulateName, CallFunc_GetPlayerName_ReturnValue) == 0x000008, "Member 'CharacterCommonName_C_PopulateName::CallFunc_GetPlayerName_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharacterCommonName_C_PopulateName, CallFunc_Conv_StringToText_ReturnValue) == 0x000018, "Member 'CharacterCommonName_C_PopulateName::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");

}

