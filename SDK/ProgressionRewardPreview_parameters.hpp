#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ProgressionRewardPreview

#include "Basic.hpp"

#include "Mariner_structs.hpp"
#include "MangoClient_structs.hpp"


namespace SDK::Params
{

// Function ProgressionRewardPreview.ProgressionRewardPreview_C.ExecuteUbergraph_ProgressionRewardPreview
// 0x0028 (0x0028 - 0x0000)
struct ProgressionRewardPreview_C_ExecuteUbergraph_ProgressionRewardPreview final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bIsInit;                              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Event_CurrentLevel;                         // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_CurrentLevelPercent;                  // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0010(0x0018)()
};
static_assert(alignof(ProgressionRewardPreview_C_ExecuteUbergraph_ProgressionRewardPreview) == 0x000008, "Wrong alignment on ProgressionRewardPreview_C_ExecuteUbergraph_ProgressionRewardPreview");
static_assert(sizeof(ProgressionRewardPreview_C_ExecuteUbergraph_ProgressionRewardPreview) == 0x000028, "Wrong size on ProgressionRewardPreview_C_ExecuteUbergraph_ProgressionRewardPreview");
static_assert(offsetof(ProgressionRewardPreview_C_ExecuteUbergraph_ProgressionRewardPreview, EntryPoint) == 0x000000, "Member 'ProgressionRewardPreview_C_ExecuteUbergraph_ProgressionRewardPreview::EntryPoint' has a wrong offset!");
static_assert(offsetof(ProgressionRewardPreview_C_ExecuteUbergraph_ProgressionRewardPreview, K2Node_Event_bIsInit) == 0x000004, "Member 'ProgressionRewardPreview_C_ExecuteUbergraph_ProgressionRewardPreview::K2Node_Event_bIsInit' has a wrong offset!");
static_assert(offsetof(ProgressionRewardPreview_C_ExecuteUbergraph_ProgressionRewardPreview, K2Node_Event_CurrentLevel) == 0x000008, "Member 'ProgressionRewardPreview_C_ExecuteUbergraph_ProgressionRewardPreview::K2Node_Event_CurrentLevel' has a wrong offset!");
static_assert(offsetof(ProgressionRewardPreview_C_ExecuteUbergraph_ProgressionRewardPreview, K2Node_Event_CurrentLevelPercent) == 0x00000C, "Member 'ProgressionRewardPreview_C_ExecuteUbergraph_ProgressionRewardPreview::K2Node_Event_CurrentLevelPercent' has a wrong offset!");
static_assert(offsetof(ProgressionRewardPreview_C_ExecuteUbergraph_ProgressionRewardPreview, CallFunc_Conv_IntToText_ReturnValue) == 0x000010, "Member 'ProgressionRewardPreview_C_ExecuteUbergraph_ProgressionRewardPreview::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");

// Function ProgressionRewardPreview.ProgressionRewardPreview_C.BPOnLevelSet
// 0x000C (0x000C - 0x0000)
struct ProgressionRewardPreview_C_BPOnLevelSet final
{
public:
	bool                                          bIsInit;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CurrentLevel;                                      // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CurrentLevelPercent;                               // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ProgressionRewardPreview_C_BPOnLevelSet) == 0x000004, "Wrong alignment on ProgressionRewardPreview_C_BPOnLevelSet");
static_assert(sizeof(ProgressionRewardPreview_C_BPOnLevelSet) == 0x00000C, "Wrong size on ProgressionRewardPreview_C_BPOnLevelSet");
static_assert(offsetof(ProgressionRewardPreview_C_BPOnLevelSet, bIsInit) == 0x000000, "Member 'ProgressionRewardPreview_C_BPOnLevelSet::bIsInit' has a wrong offset!");
static_assert(offsetof(ProgressionRewardPreview_C_BPOnLevelSet, CurrentLevel) == 0x000004, "Member 'ProgressionRewardPreview_C_BPOnLevelSet::CurrentLevel' has a wrong offset!");
static_assert(offsetof(ProgressionRewardPreview_C_BPOnLevelSet, CurrentLevelPercent) == 0x000008, "Member 'ProgressionRewardPreview_C_BPOnLevelSet::CurrentLevelPercent' has a wrong offset!");

// Function ProgressionRewardPreview.ProgressionRewardPreview_C.InitCharacterXpProgressionBar
// 0x0058 (0x0058 - 0x0000)
struct ProgressionRewardPreview_C_InitCharacterXpProgressionBar final
{
public:
	class UMarinerPlayableCharacter*              CharacterPlayed;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FMangoMatchCharacterProgression        CharacterProgression;                              // 0x0008(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsCharacter;                                       // 0x0020(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         DurationPerLevelSeconds;                           // 0x0024(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         FinalDelaySeconds;                                 // 0x0028(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMangoCMSManager*                       CallFunc_Get_ReturnValue;                          // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetSoftClassAssetName_ReturnValue;        // 0x0040(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetProgressionCharacterMaxLevel_ReturnValue; // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ProgressionRewardPreview_C_InitCharacterXpProgressionBar) == 0x000008, "Wrong alignment on ProgressionRewardPreview_C_InitCharacterXpProgressionBar");
static_assert(sizeof(ProgressionRewardPreview_C_InitCharacterXpProgressionBar) == 0x000058, "Wrong size on ProgressionRewardPreview_C_InitCharacterXpProgressionBar");
static_assert(offsetof(ProgressionRewardPreview_C_InitCharacterXpProgressionBar, CharacterPlayed) == 0x000000, "Member 'ProgressionRewardPreview_C_InitCharacterXpProgressionBar::CharacterPlayed' has a wrong offset!");
static_assert(offsetof(ProgressionRewardPreview_C_InitCharacterXpProgressionBar, CharacterProgression) == 0x000008, "Member 'ProgressionRewardPreview_C_InitCharacterXpProgressionBar::CharacterProgression' has a wrong offset!");
static_assert(offsetof(ProgressionRewardPreview_C_InitCharacterXpProgressionBar, IsCharacter) == 0x000020, "Member 'ProgressionRewardPreview_C_InitCharacterXpProgressionBar::IsCharacter' has a wrong offset!");
static_assert(offsetof(ProgressionRewardPreview_C_InitCharacterXpProgressionBar, DurationPerLevelSeconds) == 0x000024, "Member 'ProgressionRewardPreview_C_InitCharacterXpProgressionBar::DurationPerLevelSeconds' has a wrong offset!");
static_assert(offsetof(ProgressionRewardPreview_C_InitCharacterXpProgressionBar, FinalDelaySeconds) == 0x000028, "Member 'ProgressionRewardPreview_C_InitCharacterXpProgressionBar::FinalDelaySeconds' has a wrong offset!");
static_assert(offsetof(ProgressionRewardPreview_C_InitCharacterXpProgressionBar, CallFunc_Get_ReturnValue) == 0x000030, "Member 'ProgressionRewardPreview_C_InitCharacterXpProgressionBar::CallFunc_Get_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProgressionRewardPreview_C_InitCharacterXpProgressionBar, CallFunc_IsValid_ReturnValue) == 0x000038, "Member 'ProgressionRewardPreview_C_InitCharacterXpProgressionBar::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProgressionRewardPreview_C_InitCharacterXpProgressionBar, CallFunc_GetSoftClassAssetName_ReturnValue) == 0x000040, "Member 'ProgressionRewardPreview_C_InitCharacterXpProgressionBar::CallFunc_GetSoftClassAssetName_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProgressionRewardPreview_C_InitCharacterXpProgressionBar, CallFunc_GetProgressionCharacterMaxLevel_ReturnValue) == 0x000050, "Member 'ProgressionRewardPreview_C_InitCharacterXpProgressionBar::CallFunc_GetProgressionCharacterMaxLevel_ReturnValue' has a wrong offset!");

// Function ProgressionRewardPreview.ProgressionRewardPreview_C.GetAnimations
// 0x0030 (0x0030 - 0x0000)
struct ProgressionRewardPreview_C_GetAnimations final
{
public:
	struct FMarinerAnimatedProgressWidgetAnimations ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm, NoDestructor)
	struct FMarinerAnimatedProgressWidgetAnimations K2Node_MakeStruct_MarinerAnimatedProgressWidgetAnimations; // 0x0018(0x0018)(NoDestructor)
};
static_assert(alignof(ProgressionRewardPreview_C_GetAnimations) == 0x000008, "Wrong alignment on ProgressionRewardPreview_C_GetAnimations");
static_assert(sizeof(ProgressionRewardPreview_C_GetAnimations) == 0x000030, "Wrong size on ProgressionRewardPreview_C_GetAnimations");
static_assert(offsetof(ProgressionRewardPreview_C_GetAnimations, ReturnValue) == 0x000000, "Member 'ProgressionRewardPreview_C_GetAnimations::ReturnValue' has a wrong offset!");
static_assert(offsetof(ProgressionRewardPreview_C_GetAnimations, K2Node_MakeStruct_MarinerAnimatedProgressWidgetAnimations) == 0x000018, "Member 'ProgressionRewardPreview_C_GetAnimations::K2Node_MakeStruct_MarinerAnimatedProgressWidgetAnimations' has a wrong offset!");

}

