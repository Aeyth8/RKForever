#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Item_NinjaHeadband_AttachmentActor

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Mariner_structs.hpp"


namespace SDK::Params
{

// Function Item_NinjaHeadband_AttachmentActor.Item_NinjaHeadband_AttachmentActor_C.ExecuteUbergraph_Item_NinjaHeadband_AttachmentActor
// 0x00E8 (0x00E8 - 0x0000)
struct Item_NinjaHeadband_AttachmentActor_C_ExecuteUbergraph_Item_NinjaHeadband_AttachmentActor final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class AMarinerPlayerController* UnpossessingController, class APawn* UnpossessedPawn)> K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x0014(0x0010)(ZeroConstructor, NoDestructor)
	EMarinerRealityState                          K2Node_CustomEvent_OldReality;                     // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMarinerRealityState                          K2Node_CustomEvent_NewReality;                     // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0026(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_24C6[0x1];                                     // 0x0027(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class AMarinerCharacter*                      K2Node_DynamicCast_AsMariner_Character;            // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_24C7[0x6];                                     // 0x0032(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AMarinerCharacter*                      K2Node_CustomEvent_ShiftingCharacter;              // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMarinerRealityState                          K2Node_CustomEvent_EnteringReality;                // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bCharacterIsLocal;              // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0042(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_24C8[0x5];                                     // 0x0043(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AMarinerCharacter*                      K2Node_DynamicCast_AsMariner_Character_1;          // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_24C9[0x2];                                     // 0x0052(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class AMarinerCharacter* ShiftingCharacter, EMarinerRealityState EnteringReality, bool bCharacterIsLocal)> K2Node_CreateDelegate_OutputDelegate_2;            // 0x0054(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          K2Node_CustomEvent_ToggleOn;                       // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_24CA[0x3];                                     // 0x0065(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AMarinerPlayerController*               K2Node_CustomEvent_UnpossessingController;         // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_CustomEvent_UnpossessedPawn;                // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMarinerPlayerController*               K2Node_DynamicCast_AsMariner_Player_Controller;    // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_24CB[0x7];                                     // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMarinerRealityObjectManager*           CallFunc_GetRealityManager_ReturnValue;            // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(EMarinerRealityState OldReality, EMarinerRealityState NewReality)> K2Node_CreateDelegate_OutputDelegate_3;            // 0x0098(0x0010)(ZeroConstructor, NoDestructor)
	class AMarinerCharacter*                      K2Node_DynamicCast_AsMariner_Character_2;          // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_24CC[0x7];                                     // 0x00B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameplayAbility*                       CallFunc_GetAbilityInstanceForAbilityClass_ReturnValue; // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDodgeAbility_C*                        K2Node_DynamicCast_AsDodge_Ability;                // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_24CD[0x7];                                     // 0x00C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneComponent*                        CallFunc_K2_GetRootComponent_ReturnValue;          // 0x00D0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               CallFunc_SpawnEmitterAttached_ReturnValue;         // 0x00D8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Item_NinjaHeadband_AttachmentActor_C_ExecuteUbergraph_Item_NinjaHeadband_AttachmentActor) == 0x000008, "Wrong alignment on Item_NinjaHeadband_AttachmentActor_C_ExecuteUbergraph_Item_NinjaHeadband_AttachmentActor");
static_assert(sizeof(Item_NinjaHeadband_AttachmentActor_C_ExecuteUbergraph_Item_NinjaHeadband_AttachmentActor) == 0x0000E8, "Wrong size on Item_NinjaHeadband_AttachmentActor_C_ExecuteUbergraph_Item_NinjaHeadband_AttachmentActor");
static_assert(offsetof(Item_NinjaHeadband_AttachmentActor_C_ExecuteUbergraph_Item_NinjaHeadband_AttachmentActor, EntryPoint) == 0x000000, "Member 'Item_NinjaHeadband_AttachmentActor_C_ExecuteUbergraph_Item_NinjaHeadband_AttachmentActor::EntryPoint' has a wrong offset!");
static_assert(offsetof(Item_NinjaHeadband_AttachmentActor_C_ExecuteUbergraph_Item_NinjaHeadband_AttachmentActor, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'Item_NinjaHeadband_AttachmentActor_C_ExecuteUbergraph_Item_NinjaHeadband_AttachmentActor::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(Item_NinjaHeadband_AttachmentActor_C_ExecuteUbergraph_Item_NinjaHeadband_AttachmentActor, K2Node_CreateDelegate_OutputDelegate_1) == 0x000014, "Member 'Item_NinjaHeadband_AttachmentActor_C_ExecuteUbergraph_Item_NinjaHeadband_AttachmentActor::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(Item_NinjaHeadband_AttachmentActor_C_ExecuteUbergraph_Item_NinjaHeadband_AttachmentActor, K2Node_CustomEvent_OldReality) == 0x000024, "Member 'Item_NinjaHeadband_AttachmentActor_C_ExecuteUbergraph_Item_NinjaHeadband_AttachmentActor::K2Node_CustomEvent_OldReality' has a wrong offset!");
static_assert(offsetof(Item_NinjaHeadband_AttachmentActor_C_ExecuteUbergraph_Item_NinjaHeadband_AttachmentActor, K2Node_CustomEvent_NewReality) == 0x000025, "Member 'Item_NinjaHeadband_AttachmentActor_C_ExecuteUbergraph_Item_NinjaHeadband_AttachmentActor::K2Node_CustomEvent_NewReality' has a wrong offset!");
static_assert(offsetof(Item_NinjaHeadband_AttachmentActor_C_ExecuteUbergraph_Item_NinjaHeadband_AttachmentActor, K2Node_SwitchEnum_CmpSuccess) == 0x000026, "Member 'Item_NinjaHeadband_AttachmentActor_C_ExecuteUbergraph_Item_NinjaHeadband_AttachmentActor::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(Item_NinjaHeadband_AttachmentActor_C_ExecuteUbergraph_Item_NinjaHeadband_AttachmentActor, K2Node_DynamicCast_AsMariner_Character) == 0x000028, "Member 'Item_NinjaHeadband_AttachmentActor_C_ExecuteUbergraph_Item_NinjaHeadband_AttachmentActor::K2Node_DynamicCast_AsMariner_Character' has a wrong offset!");
static_assert(offsetof(Item_NinjaHeadband_AttachmentActor_C_ExecuteUbergraph_Item_NinjaHeadband_AttachmentActor, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'Item_NinjaHeadband_AttachmentActor_C_ExecuteUbergraph_Item_NinjaHeadband_AttachmentActor::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Item_NinjaHeadband_AttachmentActor_C_ExecuteUbergraph_Item_NinjaHeadband_AttachmentActor, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000031, "Member 'Item_NinjaHeadband_AttachmentActor_C_ExecuteUbergraph_Item_NinjaHeadband_AttachmentActor::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Item_NinjaHeadband_AttachmentActor_C_ExecuteUbergraph_Item_NinjaHeadband_AttachmentActor, K2Node_CustomEvent_ShiftingCharacter) == 0x000038, "Member 'Item_NinjaHeadband_AttachmentActor_C_ExecuteUbergraph_Item_NinjaHeadband_AttachmentActor::K2Node_CustomEvent_ShiftingCharacter' has a wrong offset!");
static_assert(offsetof(Item_NinjaHeadband_AttachmentActor_C_ExecuteUbergraph_Item_NinjaHeadband_AttachmentActor, K2Node_CustomEvent_EnteringReality) == 0x000040, "Member 'Item_NinjaHeadband_AttachmentActor_C_ExecuteUbergraph_Item_NinjaHeadband_AttachmentActor::K2Node_CustomEvent_EnteringReality' has a wrong offset!");
static_assert(offsetof(Item_NinjaHeadband_AttachmentActor_C_ExecuteUbergraph_Item_NinjaHeadband_AttachmentActor, K2Node_CustomEvent_bCharacterIsLocal) == 0x000041, "Member 'Item_NinjaHeadband_AttachmentActor_C_ExecuteUbergraph_Item_NinjaHeadband_AttachmentActor::K2Node_CustomEvent_bCharacterIsLocal' has a wrong offset!");
static_assert(offsetof(Item_NinjaHeadband_AttachmentActor_C_ExecuteUbergraph_Item_NinjaHeadband_AttachmentActor, CallFunc_Not_PreBool_ReturnValue) == 0x000042, "Member 'Item_NinjaHeadband_AttachmentActor_C_ExecuteUbergraph_Item_NinjaHeadband_AttachmentActor::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Item_NinjaHeadband_AttachmentActor_C_ExecuteUbergraph_Item_NinjaHeadband_AttachmentActor, K2Node_DynamicCast_AsMariner_Character_1) == 0x000048, "Member 'Item_NinjaHeadband_AttachmentActor_C_ExecuteUbergraph_Item_NinjaHeadband_AttachmentActor::K2Node_DynamicCast_AsMariner_Character_1' has a wrong offset!");
static_assert(offsetof(Item_NinjaHeadband_AttachmentActor_C_ExecuteUbergraph_Item_NinjaHeadband_AttachmentActor, K2Node_DynamicCast_bSuccess_1) == 0x000050, "Member 'Item_NinjaHeadband_AttachmentActor_C_ExecuteUbergraph_Item_NinjaHeadband_AttachmentActor::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(Item_NinjaHeadband_AttachmentActor_C_ExecuteUbergraph_Item_NinjaHeadband_AttachmentActor, K2Node_SwitchEnum_CmpSuccess_1) == 0x000051, "Member 'Item_NinjaHeadband_AttachmentActor_C_ExecuteUbergraph_Item_NinjaHeadband_AttachmentActor::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(Item_NinjaHeadband_AttachmentActor_C_ExecuteUbergraph_Item_NinjaHeadband_AttachmentActor, K2Node_CreateDelegate_OutputDelegate_2) == 0x000054, "Member 'Item_NinjaHeadband_AttachmentActor_C_ExecuteUbergraph_Item_NinjaHeadband_AttachmentActor::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(Item_NinjaHeadband_AttachmentActor_C_ExecuteUbergraph_Item_NinjaHeadband_AttachmentActor, K2Node_CustomEvent_ToggleOn) == 0x000064, "Member 'Item_NinjaHeadband_AttachmentActor_C_ExecuteUbergraph_Item_NinjaHeadband_AttachmentActor::K2Node_CustomEvent_ToggleOn' has a wrong offset!");
static_assert(offsetof(Item_NinjaHeadband_AttachmentActor_C_ExecuteUbergraph_Item_NinjaHeadband_AttachmentActor, K2Node_CustomEvent_UnpossessingController) == 0x000068, "Member 'Item_NinjaHeadband_AttachmentActor_C_ExecuteUbergraph_Item_NinjaHeadband_AttachmentActor::K2Node_CustomEvent_UnpossessingController' has a wrong offset!");
static_assert(offsetof(Item_NinjaHeadband_AttachmentActor_C_ExecuteUbergraph_Item_NinjaHeadband_AttachmentActor, K2Node_CustomEvent_UnpossessedPawn) == 0x000070, "Member 'Item_NinjaHeadband_AttachmentActor_C_ExecuteUbergraph_Item_NinjaHeadband_AttachmentActor::K2Node_CustomEvent_UnpossessedPawn' has a wrong offset!");
static_assert(offsetof(Item_NinjaHeadband_AttachmentActor_C_ExecuteUbergraph_Item_NinjaHeadband_AttachmentActor, CallFunc_GetController_ReturnValue) == 0x000078, "Member 'Item_NinjaHeadband_AttachmentActor_C_ExecuteUbergraph_Item_NinjaHeadband_AttachmentActor::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(Item_NinjaHeadband_AttachmentActor_C_ExecuteUbergraph_Item_NinjaHeadband_AttachmentActor, K2Node_DynamicCast_AsMariner_Player_Controller) == 0x000080, "Member 'Item_NinjaHeadband_AttachmentActor_C_ExecuteUbergraph_Item_NinjaHeadband_AttachmentActor::K2Node_DynamicCast_AsMariner_Player_Controller' has a wrong offset!");
static_assert(offsetof(Item_NinjaHeadband_AttachmentActor_C_ExecuteUbergraph_Item_NinjaHeadband_AttachmentActor, K2Node_DynamicCast_bSuccess_2) == 0x000088, "Member 'Item_NinjaHeadband_AttachmentActor_C_ExecuteUbergraph_Item_NinjaHeadband_AttachmentActor::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(Item_NinjaHeadband_AttachmentActor_C_ExecuteUbergraph_Item_NinjaHeadband_AttachmentActor, CallFunc_GetRealityManager_ReturnValue) == 0x000090, "Member 'Item_NinjaHeadband_AttachmentActor_C_ExecuteUbergraph_Item_NinjaHeadband_AttachmentActor::CallFunc_GetRealityManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(Item_NinjaHeadband_AttachmentActor_C_ExecuteUbergraph_Item_NinjaHeadband_AttachmentActor, K2Node_CreateDelegate_OutputDelegate_3) == 0x000098, "Member 'Item_NinjaHeadband_AttachmentActor_C_ExecuteUbergraph_Item_NinjaHeadband_AttachmentActor::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(Item_NinjaHeadband_AttachmentActor_C_ExecuteUbergraph_Item_NinjaHeadband_AttachmentActor, K2Node_DynamicCast_AsMariner_Character_2) == 0x0000A8, "Member 'Item_NinjaHeadband_AttachmentActor_C_ExecuteUbergraph_Item_NinjaHeadband_AttachmentActor::K2Node_DynamicCast_AsMariner_Character_2' has a wrong offset!");
static_assert(offsetof(Item_NinjaHeadband_AttachmentActor_C_ExecuteUbergraph_Item_NinjaHeadband_AttachmentActor, K2Node_DynamicCast_bSuccess_3) == 0x0000B0, "Member 'Item_NinjaHeadband_AttachmentActor_C_ExecuteUbergraph_Item_NinjaHeadband_AttachmentActor::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(Item_NinjaHeadband_AttachmentActor_C_ExecuteUbergraph_Item_NinjaHeadband_AttachmentActor, CallFunc_GetAbilityInstanceForAbilityClass_ReturnValue) == 0x0000B8, "Member 'Item_NinjaHeadband_AttachmentActor_C_ExecuteUbergraph_Item_NinjaHeadband_AttachmentActor::CallFunc_GetAbilityInstanceForAbilityClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(Item_NinjaHeadband_AttachmentActor_C_ExecuteUbergraph_Item_NinjaHeadband_AttachmentActor, K2Node_DynamicCast_AsDodge_Ability) == 0x0000C0, "Member 'Item_NinjaHeadband_AttachmentActor_C_ExecuteUbergraph_Item_NinjaHeadband_AttachmentActor::K2Node_DynamicCast_AsDodge_Ability' has a wrong offset!");
static_assert(offsetof(Item_NinjaHeadband_AttachmentActor_C_ExecuteUbergraph_Item_NinjaHeadband_AttachmentActor, K2Node_DynamicCast_bSuccess_4) == 0x0000C8, "Member 'Item_NinjaHeadband_AttachmentActor_C_ExecuteUbergraph_Item_NinjaHeadband_AttachmentActor::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(Item_NinjaHeadband_AttachmentActor_C_ExecuteUbergraph_Item_NinjaHeadband_AttachmentActor, CallFunc_K2_GetRootComponent_ReturnValue) == 0x0000D0, "Member 'Item_NinjaHeadband_AttachmentActor_C_ExecuteUbergraph_Item_NinjaHeadband_AttachmentActor::CallFunc_K2_GetRootComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(Item_NinjaHeadband_AttachmentActor_C_ExecuteUbergraph_Item_NinjaHeadband_AttachmentActor, CallFunc_SpawnEmitterAttached_ReturnValue) == 0x0000D8, "Member 'Item_NinjaHeadband_AttachmentActor_C_ExecuteUbergraph_Item_NinjaHeadband_AttachmentActor::CallFunc_SpawnEmitterAttached_ReturnValue' has a wrong offset!");
static_assert(offsetof(Item_NinjaHeadband_AttachmentActor_C_ExecuteUbergraph_Item_NinjaHeadband_AttachmentActor, CallFunc_HasAuthority_ReturnValue) == 0x0000E0, "Member 'Item_NinjaHeadband_AttachmentActor_C_ExecuteUbergraph_Item_NinjaHeadband_AttachmentActor::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");

// Function Item_NinjaHeadband_AttachmentActor.Item_NinjaHeadband_AttachmentActor_C.OnOwningPawnUnpossessed
// 0x0010 (0x0010 - 0x0000)
struct Item_NinjaHeadband_AttachmentActor_C_OnOwningPawnUnpossessed final
{
public:
	class AMarinerPlayerController*               UnpossessingController;                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  UnpossessedPawn;                                   // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Item_NinjaHeadband_AttachmentActor_C_OnOwningPawnUnpossessed) == 0x000008, "Wrong alignment on Item_NinjaHeadband_AttachmentActor_C_OnOwningPawnUnpossessed");
static_assert(sizeof(Item_NinjaHeadband_AttachmentActor_C_OnOwningPawnUnpossessed) == 0x000010, "Wrong size on Item_NinjaHeadband_AttachmentActor_C_OnOwningPawnUnpossessed");
static_assert(offsetof(Item_NinjaHeadband_AttachmentActor_C_OnOwningPawnUnpossessed, UnpossessingController) == 0x000000, "Member 'Item_NinjaHeadband_AttachmentActor_C_OnOwningPawnUnpossessed::UnpossessingController' has a wrong offset!");
static_assert(offsetof(Item_NinjaHeadband_AttachmentActor_C_OnOwningPawnUnpossessed, UnpossessedPawn) == 0x000008, "Member 'Item_NinjaHeadband_AttachmentActor_C_OnOwningPawnUnpossessed::UnpossessedPawn' has a wrong offset!");

// Function Item_NinjaHeadband_AttachmentActor.Item_NinjaHeadband_AttachmentActor_C.HandleActivationDeactivationVisuals
// 0x0001 (0x0001 - 0x0000)
struct Item_NinjaHeadband_AttachmentActor_C_HandleActivationDeactivationVisuals final
{
public:
	bool                                          ToggleOn;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Item_NinjaHeadband_AttachmentActor_C_HandleActivationDeactivationVisuals) == 0x000001, "Wrong alignment on Item_NinjaHeadband_AttachmentActor_C_HandleActivationDeactivationVisuals");
static_assert(sizeof(Item_NinjaHeadband_AttachmentActor_C_HandleActivationDeactivationVisuals) == 0x000001, "Wrong size on Item_NinjaHeadband_AttachmentActor_C_HandleActivationDeactivationVisuals");
static_assert(offsetof(Item_NinjaHeadband_AttachmentActor_C_HandleActivationDeactivationVisuals, ToggleOn) == 0x000000, "Member 'Item_NinjaHeadband_AttachmentActor_C_HandleActivationDeactivationVisuals::ToggleOn' has a wrong offset!");

// Function Item_NinjaHeadband_AttachmentActor.Item_NinjaHeadband_AttachmentActor_C.OnEnteredRealityDelegate_Event_0
// 0x0010 (0x0010 - 0x0000)
struct Item_NinjaHeadband_AttachmentActor_C_OnEnteredRealityDelegate_Event_0 final
{
public:
	class AMarinerCharacter*                      ShiftingCharacter;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMarinerRealityState                          EnteringReality;                                   // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bCharacterIsLocal;                                 // 0x0009(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Item_NinjaHeadband_AttachmentActor_C_OnEnteredRealityDelegate_Event_0) == 0x000008, "Wrong alignment on Item_NinjaHeadband_AttachmentActor_C_OnEnteredRealityDelegate_Event_0");
static_assert(sizeof(Item_NinjaHeadband_AttachmentActor_C_OnEnteredRealityDelegate_Event_0) == 0x000010, "Wrong size on Item_NinjaHeadband_AttachmentActor_C_OnEnteredRealityDelegate_Event_0");
static_assert(offsetof(Item_NinjaHeadband_AttachmentActor_C_OnEnteredRealityDelegate_Event_0, ShiftingCharacter) == 0x000000, "Member 'Item_NinjaHeadband_AttachmentActor_C_OnEnteredRealityDelegate_Event_0::ShiftingCharacter' has a wrong offset!");
static_assert(offsetof(Item_NinjaHeadband_AttachmentActor_C_OnEnteredRealityDelegate_Event_0, EnteringReality) == 0x000008, "Member 'Item_NinjaHeadband_AttachmentActor_C_OnEnteredRealityDelegate_Event_0::EnteringReality' has a wrong offset!");
static_assert(offsetof(Item_NinjaHeadband_AttachmentActor_C_OnEnteredRealityDelegate_Event_0, bCharacterIsLocal) == 0x000009, "Member 'Item_NinjaHeadband_AttachmentActor_C_OnEnteredRealityDelegate_Event_0::bCharacterIsLocal' has a wrong offset!");

// Function Item_NinjaHeadband_AttachmentActor.Item_NinjaHeadband_AttachmentActor_C.OnClientRealityChanged
// 0x0002 (0x0002 - 0x0000)
struct Item_NinjaHeadband_AttachmentActor_C_OnClientRealityChanged final
{
public:
	EMarinerRealityState                          OldReality;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMarinerRealityState                          NewReality;                                        // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Item_NinjaHeadband_AttachmentActor_C_OnClientRealityChanged) == 0x000001, "Wrong alignment on Item_NinjaHeadband_AttachmentActor_C_OnClientRealityChanged");
static_assert(sizeof(Item_NinjaHeadband_AttachmentActor_C_OnClientRealityChanged) == 0x000002, "Wrong size on Item_NinjaHeadband_AttachmentActor_C_OnClientRealityChanged");
static_assert(offsetof(Item_NinjaHeadband_AttachmentActor_C_OnClientRealityChanged, OldReality) == 0x000000, "Member 'Item_NinjaHeadband_AttachmentActor_C_OnClientRealityChanged::OldReality' has a wrong offset!");
static_assert(offsetof(Item_NinjaHeadband_AttachmentActor_C_OnClientRealityChanged, NewReality) == 0x000001, "Member 'Item_NinjaHeadband_AttachmentActor_C_OnClientRealityChanged::NewReality' has a wrong offset!");

// Function Item_NinjaHeadband_AttachmentActor.Item_NinjaHeadband_AttachmentActor_C.HandleDynamicMaterial
// 0x0018 (0x0018 - 0x0000)
struct Item_NinjaHeadband_AttachmentActor_C_HandleDynamicMaterial final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_24CE[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     CallFunc_GetMaterial_ReturnValue;                  // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Item_NinjaHeadband_AttachmentActor_C_HandleDynamicMaterial) == 0x000008, "Wrong alignment on Item_NinjaHeadband_AttachmentActor_C_HandleDynamicMaterial");
static_assert(sizeof(Item_NinjaHeadband_AttachmentActor_C_HandleDynamicMaterial) == 0x000018, "Wrong size on Item_NinjaHeadband_AttachmentActor_C_HandleDynamicMaterial");
static_assert(offsetof(Item_NinjaHeadband_AttachmentActor_C_HandleDynamicMaterial, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'Item_NinjaHeadband_AttachmentActor_C_HandleDynamicMaterial::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Item_NinjaHeadband_AttachmentActor_C_HandleDynamicMaterial, CallFunc_GetMaterial_ReturnValue) == 0x000008, "Member 'Item_NinjaHeadband_AttachmentActor_C_HandleDynamicMaterial::CallFunc_GetMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(Item_NinjaHeadband_AttachmentActor_C_HandleDynamicMaterial, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000010, "Member 'Item_NinjaHeadband_AttachmentActor_C_HandleDynamicMaterial::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");

// Function Item_NinjaHeadband_AttachmentActor.Item_NinjaHeadband_AttachmentActor_C.HandleActivationSequence
// 0x0001 (0x0001 - 0x0000)
struct Item_NinjaHeadband_AttachmentActor_C_HandleActivationSequence final
{
public:
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Item_NinjaHeadband_AttachmentActor_C_HandleActivationSequence) == 0x000001, "Wrong alignment on Item_NinjaHeadband_AttachmentActor_C_HandleActivationSequence");
static_assert(sizeof(Item_NinjaHeadband_AttachmentActor_C_HandleActivationSequence) == 0x000001, "Wrong size on Item_NinjaHeadband_AttachmentActor_C_HandleActivationSequence");
static_assert(offsetof(Item_NinjaHeadband_AttachmentActor_C_HandleActivationSequence, CallFunc_HasAuthority_ReturnValue) == 0x000000, "Member 'Item_NinjaHeadband_AttachmentActor_C_HandleActivationSequence::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");

// Function Item_NinjaHeadband_AttachmentActor.Item_NinjaHeadband_AttachmentActor_C.HandleDeactivationSequence
// 0x0020 (0x0020 - 0x0000)
struct Item_NinjaHeadband_AttachmentActor_C_HandleDeactivationSequence final
{
public:
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0000(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_24CF[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0018(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Item_NinjaHeadband_AttachmentActor_C_HandleDeactivationSequence) == 0x000008, "Wrong alignment on Item_NinjaHeadband_AttachmentActor_C_HandleDeactivationSequence");
static_assert(sizeof(Item_NinjaHeadband_AttachmentActor_C_HandleDeactivationSequence) == 0x000020, "Wrong size on Item_NinjaHeadband_AttachmentActor_C_HandleDeactivationSequence");
static_assert(offsetof(Item_NinjaHeadband_AttachmentActor_C_HandleDeactivationSequence, K2Node_CreateDelegate_OutputDelegate) == 0x000000, "Member 'Item_NinjaHeadband_AttachmentActor_C_HandleDeactivationSequence::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(Item_NinjaHeadband_AttachmentActor_C_HandleDeactivationSequence, CallFunc_HasAuthority_ReturnValue) == 0x000010, "Member 'Item_NinjaHeadband_AttachmentActor_C_HandleDeactivationSequence::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(Item_NinjaHeadband_AttachmentActor_C_HandleDeactivationSequence, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000018, "Member 'Item_NinjaHeadband_AttachmentActor_C_HandleDeactivationSequence::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");

// Function Item_NinjaHeadband_AttachmentActor.Item_NinjaHeadband_AttachmentActor_C.HandleActivationFX
// 0x0005 (0x0005 - 0x0000)
struct Item_NinjaHeadband_AttachmentActor_C_HandleActivationFX final
{
public:
	bool                                          Activating;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Item_NinjaHeadband_AttachmentActor_C_HandleActivationFX) == 0x000001, "Wrong alignment on Item_NinjaHeadband_AttachmentActor_C_HandleActivationFX");
static_assert(sizeof(Item_NinjaHeadband_AttachmentActor_C_HandleActivationFX) == 0x000005, "Wrong size on Item_NinjaHeadband_AttachmentActor_C_HandleActivationFX");
static_assert(offsetof(Item_NinjaHeadband_AttachmentActor_C_HandleActivationFX, Activating) == 0x000000, "Member 'Item_NinjaHeadband_AttachmentActor_C_HandleActivationFX::Activating' has a wrong offset!");
static_assert(offsetof(Item_NinjaHeadband_AttachmentActor_C_HandleActivationFX, CallFunc_Not_PreBool_ReturnValue) == 0x000001, "Member 'Item_NinjaHeadband_AttachmentActor_C_HandleActivationFX::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Item_NinjaHeadband_AttachmentActor_C_HandleActivationFX, CallFunc_Not_PreBool_ReturnValue_1) == 0x000002, "Member 'Item_NinjaHeadband_AttachmentActor_C_HandleActivationFX::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Item_NinjaHeadband_AttachmentActor_C_HandleActivationFX, CallFunc_BooleanAND_ReturnValue) == 0x000003, "Member 'Item_NinjaHeadband_AttachmentActor_C_HandleActivationFX::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Item_NinjaHeadband_AttachmentActor_C_HandleActivationFX, CallFunc_BooleanAND_ReturnValue_1) == 0x000004, "Member 'Item_NinjaHeadband_AttachmentActor_C_HandleActivationFX::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");

}

