#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AvatarWidget

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Mariner_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass AvatarWidget.AvatarWidget_C
// 0x0020 (0x0430 - 0x0410)
class UAvatarWidget_C final : public UMarinerAvatarWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0410(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       HoveredAnim;                                       // 0x0418(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 HighlightBorder;                                   // 0x0420(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 HighlightImage;                                    // 0x0428(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_AvatarWidget(int32 EntryPoint);
	struct FEventReply OnMouseButtonDown(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent);
	void OnMouseEnter(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent);
	void OnMouseLeave(const struct FPointerEvent& MouseEvent);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"AvatarWidget_C">();
	}
	static class UAvatarWidget_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAvatarWidget_C>();
	}
};
static_assert(alignof(UAvatarWidget_C) == 0x000008, "Wrong alignment on UAvatarWidget_C");
static_assert(sizeof(UAvatarWidget_C) == 0x000430, "Wrong size on UAvatarWidget_C");
static_assert(offsetof(UAvatarWidget_C, UberGraphFrame) == 0x000410, "Member 'UAvatarWidget_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UAvatarWidget_C, HoveredAnim) == 0x000418, "Member 'UAvatarWidget_C::HoveredAnim' has a wrong offset!");
static_assert(offsetof(UAvatarWidget_C, HighlightBorder) == 0x000420, "Member 'UAvatarWidget_C::HighlightBorder' has a wrong offset!");
static_assert(offsetof(UAvatarWidget_C, HighlightImage) == 0x000428, "Member 'UAvatarWidget_C::HighlightImage' has a wrong offset!");

}

