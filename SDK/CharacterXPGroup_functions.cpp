#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: CharacterXPGroup

#include "Basic.hpp"

#include "CharacterXPGroup_classes.hpp"
#include "CharacterXPGroup_parameters.hpp"


namespace SDK
{

// Function CharacterXPGroup.CharacterXPGroup_C.OnSequenceComplete__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void UCharacterXPGroup_C::OnSequenceComplete__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharacterXPGroup_C", "OnSequenceComplete__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function CharacterXPGroup.CharacterXPGroup_C.ExecuteUbergraph_CharacterXPGroup
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UCharacterXPGroup_C::ExecuteUbergraph_CharacterXPGroup(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharacterXPGroup_C", "ExecuteUbergraph_CharacterXPGroup");

	Params::CharacterXPGroup_C_ExecuteUbergraph_CharacterXPGroup Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function CharacterXPGroup.CharacterXPGroup_C.Destruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UCharacterXPGroup_C::Destruct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharacterXPGroup_C", "Destruct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function CharacterXPGroup.CharacterXPGroup_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UCharacterXPGroup_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharacterXPGroup_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function CharacterXPGroup.CharacterXPGroup_C.PlaySequence
// (BlueprintCallable, BlueprintEvent)

void UCharacterXPGroup_C::PlaySequence()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharacterXPGroup_C", "PlaySequence");

	UObject::ProcessEvent(Func, nullptr);
}


// Function CharacterXPGroup.CharacterXPGroup_C.PreConstruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// bool                                    IsDesignTime                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UCharacterXPGroup_C::PreConstruct(bool IsDesignTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharacterXPGroup_C", "PreConstruct");

	Params::CharacterXPGroup_C_PreConstruct Parms{};

	Parms.IsDesignTime = IsDesignTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function CharacterXPGroup.CharacterXPGroup_C.SetData
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TMap<class FString, struct FMangoXPBonusType>Data                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor)

void UCharacterXPGroup_C::SetData(const TMap<class FString, struct FMangoXPBonusType>& Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharacterXPGroup_C", "SetData");

	Params::CharacterXPGroup_C_SetData Parms{};

	Parms.Data = std::move(Data);

	UObject::ProcessEvent(Func, &Parms);
}


// Function CharacterXPGroup.CharacterXPGroup_C.PlayNextLineAnimation
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Success                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UCharacterXPGroup_C::PlayNextLineAnimation(bool* Success)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CharacterXPGroup_C", "PlayNextLineAnimation");

	Params::CharacterXPGroup_C_PlayNextLineAnimation Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Success != nullptr)
		*Success = Parms.Success;
}

}

