#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: LoginRewardButton

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "MangoClient_structs.hpp"
#include "Mariner_structs.hpp"


namespace SDK::Params
{

// Function LoginRewardButton.LoginRewardButton_C.ExecuteUbergraph_LoginRewardButton
// 0x0148 (0x0148 - 0x0000)
struct LoginRewardButton_C_ExecuteUbergraph_LoginRewardButton final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(bool bWasSuccessful, EMangoQuestSlot SlotId, struct FMangoQuestDescription& NewQuest)> K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_2135[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMangoQuestManager*                     CallFunc_Get_ReturnValue;                          // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bWasSuccessful;                 // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EMangoQuestSlot                               K2Node_CustomEvent_SlotId;                         // 0x0021(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2136[0x6];                                     // 0x0022(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMangoQuestDescription                 K2Node_CustomEvent_NewQuest;                       // 0x0028(0x0118)(ConstParm)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0141(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(LoginRewardButton_C_ExecuteUbergraph_LoginRewardButton) == 0x000008, "Wrong alignment on LoginRewardButton_C_ExecuteUbergraph_LoginRewardButton");
static_assert(sizeof(LoginRewardButton_C_ExecuteUbergraph_LoginRewardButton) == 0x000148, "Wrong size on LoginRewardButton_C_ExecuteUbergraph_LoginRewardButton");
static_assert(offsetof(LoginRewardButton_C_ExecuteUbergraph_LoginRewardButton, EntryPoint) == 0x000000, "Member 'LoginRewardButton_C_ExecuteUbergraph_LoginRewardButton::EntryPoint' has a wrong offset!");
static_assert(offsetof(LoginRewardButton_C_ExecuteUbergraph_LoginRewardButton, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'LoginRewardButton_C_ExecuteUbergraph_LoginRewardButton::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(LoginRewardButton_C_ExecuteUbergraph_LoginRewardButton, CallFunc_Get_ReturnValue) == 0x000018, "Member 'LoginRewardButton_C_ExecuteUbergraph_LoginRewardButton::CallFunc_Get_ReturnValue' has a wrong offset!");
static_assert(offsetof(LoginRewardButton_C_ExecuteUbergraph_LoginRewardButton, K2Node_CustomEvent_bWasSuccessful) == 0x000020, "Member 'LoginRewardButton_C_ExecuteUbergraph_LoginRewardButton::K2Node_CustomEvent_bWasSuccessful' has a wrong offset!");
static_assert(offsetof(LoginRewardButton_C_ExecuteUbergraph_LoginRewardButton, K2Node_CustomEvent_SlotId) == 0x000021, "Member 'LoginRewardButton_C_ExecuteUbergraph_LoginRewardButton::K2Node_CustomEvent_SlotId' has a wrong offset!");
static_assert(offsetof(LoginRewardButton_C_ExecuteUbergraph_LoginRewardButton, K2Node_CustomEvent_NewQuest) == 0x000028, "Member 'LoginRewardButton_C_ExecuteUbergraph_LoginRewardButton::K2Node_CustomEvent_NewQuest' has a wrong offset!");
static_assert(offsetof(LoginRewardButton_C_ExecuteUbergraph_LoginRewardButton, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000140, "Member 'LoginRewardButton_C_ExecuteUbergraph_LoginRewardButton::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(LoginRewardButton_C_ExecuteUbergraph_LoginRewardButton, CallFunc_BooleanAND_ReturnValue) == 0x000141, "Member 'LoginRewardButton_C_ExecuteUbergraph_LoginRewardButton::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function LoginRewardButton.LoginRewardButton_C.ClaimReward
// 0x0120 (0x0120 - 0x0000)
struct LoginRewardButton_C_ClaimReward final
{
public:
	bool                                          bWasSuccessful;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	EMangoQuestSlot                               SlotId;                                            // 0x0001(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2137[0x6];                                     // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMangoQuestDescription                 NewQuest;                                          // 0x0008(0x0118)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(LoginRewardButton_C_ClaimReward) == 0x000008, "Wrong alignment on LoginRewardButton_C_ClaimReward");
static_assert(sizeof(LoginRewardButton_C_ClaimReward) == 0x000120, "Wrong size on LoginRewardButton_C_ClaimReward");
static_assert(offsetof(LoginRewardButton_C_ClaimReward, bWasSuccessful) == 0x000000, "Member 'LoginRewardButton_C_ClaimReward::bWasSuccessful' has a wrong offset!");
static_assert(offsetof(LoginRewardButton_C_ClaimReward, SlotId) == 0x000001, "Member 'LoginRewardButton_C_ClaimReward::SlotId' has a wrong offset!");
static_assert(offsetof(LoginRewardButton_C_ClaimReward, NewQuest) == 0x000008, "Member 'LoginRewardButton_C_ClaimReward::NewQuest' has a wrong offset!");

// Function LoginRewardButton.LoginRewardButton_C.Init
// 0x00C8 (0x00C8 - 0x0000)
struct LoginRewardButton_C_Init final
{
public:
	int32                                         CallFunc_IsClaimable_Progress;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_IsClaimable_Goal;                         // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsClaimable_IsClaimable;                  // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2138[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0018(0x0040)(HasGetValueTypeHash)
	int32                                         CallFunc_Min_ReturnValue;                          // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2139[0x4];                                     // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0060(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x00A0(0x0010)(ZeroConstructor, ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x00B0(0x0018)()
};
static_assert(alignof(LoginRewardButton_C_Init) == 0x000008, "Wrong alignment on LoginRewardButton_C_Init");
static_assert(sizeof(LoginRewardButton_C_Init) == 0x0000C8, "Wrong size on LoginRewardButton_C_Init");
static_assert(offsetof(LoginRewardButton_C_Init, CallFunc_IsClaimable_Progress) == 0x000000, "Member 'LoginRewardButton_C_Init::CallFunc_IsClaimable_Progress' has a wrong offset!");
static_assert(offsetof(LoginRewardButton_C_Init, CallFunc_IsClaimable_Goal) == 0x000004, "Member 'LoginRewardButton_C_Init::CallFunc_IsClaimable_Goal' has a wrong offset!");
static_assert(offsetof(LoginRewardButton_C_Init, CallFunc_IsClaimable_IsClaimable) == 0x000008, "Member 'LoginRewardButton_C_Init::CallFunc_IsClaimable_IsClaimable' has a wrong offset!");
static_assert(offsetof(LoginRewardButton_C_Init, CallFunc_PlayAnimation_ReturnValue) == 0x000010, "Member 'LoginRewardButton_C_Init::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(LoginRewardButton_C_Init, K2Node_MakeStruct_FormatArgumentData) == 0x000018, "Member 'LoginRewardButton_C_Init::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(LoginRewardButton_C_Init, CallFunc_Min_ReturnValue) == 0x000058, "Member 'LoginRewardButton_C_Init::CallFunc_Min_ReturnValue' has a wrong offset!");
static_assert(offsetof(LoginRewardButton_C_Init, K2Node_MakeStruct_FormatArgumentData_1) == 0x000060, "Member 'LoginRewardButton_C_Init::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(LoginRewardButton_C_Init, K2Node_MakeArray_Array) == 0x0000A0, "Member 'LoginRewardButton_C_Init::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(LoginRewardButton_C_Init, CallFunc_Format_ReturnValue) == 0x0000B0, "Member 'LoginRewardButton_C_Init::CallFunc_Format_ReturnValue' has a wrong offset!");

// Function LoginRewardButton.LoginRewardButton_C.IsClaimable
// 0x0138 (0x0138 - 0x0000)
struct LoginRewardButton_C_IsClaimable final
{
public:
	int32                                         Progress;                                          // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Goal;                                              // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Param_IsClaimable;                                 // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_213A[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMangoQuestManager*                     CallFunc_Get_ReturnValue;                          // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FMangoQuestDescription                 CallFunc_GetQuestDescriptionBySlotId_ReturnValue;  // 0x0018(0x0118)()
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(LoginRewardButton_C_IsClaimable) == 0x000008, "Wrong alignment on LoginRewardButton_C_IsClaimable");
static_assert(sizeof(LoginRewardButton_C_IsClaimable) == 0x000138, "Wrong size on LoginRewardButton_C_IsClaimable");
static_assert(offsetof(LoginRewardButton_C_IsClaimable, Progress) == 0x000000, "Member 'LoginRewardButton_C_IsClaimable::Progress' has a wrong offset!");
static_assert(offsetof(LoginRewardButton_C_IsClaimable, Goal) == 0x000004, "Member 'LoginRewardButton_C_IsClaimable::Goal' has a wrong offset!");
static_assert(offsetof(LoginRewardButton_C_IsClaimable, Param_IsClaimable) == 0x000008, "Member 'LoginRewardButton_C_IsClaimable::Param_IsClaimable' has a wrong offset!");
static_assert(offsetof(LoginRewardButton_C_IsClaimable, CallFunc_Get_ReturnValue) == 0x000010, "Member 'LoginRewardButton_C_IsClaimable::CallFunc_Get_ReturnValue' has a wrong offset!");
static_assert(offsetof(LoginRewardButton_C_IsClaimable, CallFunc_GetQuestDescriptionBySlotId_ReturnValue) == 0x000018, "Member 'LoginRewardButton_C_IsClaimable::CallFunc_GetQuestDescriptionBySlotId_ReturnValue' has a wrong offset!");
static_assert(offsetof(LoginRewardButton_C_IsClaimable, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000130, "Member 'LoginRewardButton_C_IsClaimable::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function LoginRewardButton.LoginRewardButton_C.GetAssets
// 0x00D0 (0x00D0 - 0x0000)
struct LoginRewardButton_C_GetAssets final
{
public:
	struct FMarinerLayeredButtonAssets            ReturnValue;                                       // 0x0000(0x0068)(Parm, OutParm, ReturnParm, NoDestructor, ContainsInstancedReference)
	struct FMarinerLayeredButtonAssets            K2Node_MakeStruct_MarinerLayeredButtonAssets;      // 0x0068(0x0068)(NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(LoginRewardButton_C_GetAssets) == 0x000008, "Wrong alignment on LoginRewardButton_C_GetAssets");
static_assert(sizeof(LoginRewardButton_C_GetAssets) == 0x0000D0, "Wrong size on LoginRewardButton_C_GetAssets");
static_assert(offsetof(LoginRewardButton_C_GetAssets, ReturnValue) == 0x000000, "Member 'LoginRewardButton_C_GetAssets::ReturnValue' has a wrong offset!");
static_assert(offsetof(LoginRewardButton_C_GetAssets, K2Node_MakeStruct_MarinerLayeredButtonAssets) == 0x000068, "Member 'LoginRewardButton_C_GetAssets::K2Node_MakeStruct_MarinerLayeredButtonAssets' has a wrong offset!");

}

