#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PostGameCurrencyBase

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function PostGameCurrencyBase.PostGameCurrencyBase_C.ExecuteUbergraph_PostGameCurrencyBase
// 0x00E8 (0x00E8 - 0x0000)
struct PostGameCurrencyBase_C_ExecuteUbergraph_PostGameCurrencyBase final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0004(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   K2Node_CustomEvent_Text;                           // 0x0050(0x0018)()
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_1;            // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue;                         // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Round_ReturnValue;                        // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_74[0x4];                                       // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0078(0x0040)(HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B9[0x7];                                       // 0x00B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x00C0(0x0010)(ZeroConstructor, ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x00D0(0x0018)()
};
static_assert(alignof(PostGameCurrencyBase_C_ExecuteUbergraph_PostGameCurrencyBase) == 0x000008, "Wrong alignment on PostGameCurrencyBase_C_ExecuteUbergraph_PostGameCurrencyBase");
static_assert(sizeof(PostGameCurrencyBase_C_ExecuteUbergraph_PostGameCurrencyBase) == 0x0000E8, "Wrong size on PostGameCurrencyBase_C_ExecuteUbergraph_PostGameCurrencyBase");
static_assert(offsetof(PostGameCurrencyBase_C_ExecuteUbergraph_PostGameCurrencyBase, EntryPoint) == 0x000000, "Member 'PostGameCurrencyBase_C_ExecuteUbergraph_PostGameCurrencyBase::EntryPoint' has a wrong offset!");
static_assert(offsetof(PostGameCurrencyBase_C_ExecuteUbergraph_PostGameCurrencyBase, K2Node_Event_MyGeometry) == 0x000004, "Member 'PostGameCurrencyBase_C_ExecuteUbergraph_PostGameCurrencyBase::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(PostGameCurrencyBase_C_ExecuteUbergraph_PostGameCurrencyBase, K2Node_Event_InDeltaTime) == 0x00003C, "Member 'PostGameCurrencyBase_C_ExecuteUbergraph_PostGameCurrencyBase::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(PostGameCurrencyBase_C_ExecuteUbergraph_PostGameCurrencyBase, CallFunc_Add_FloatFloat_ReturnValue) == 0x000040, "Member 'PostGameCurrencyBase_C_ExecuteUbergraph_PostGameCurrencyBase::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PostGameCurrencyBase_C_ExecuteUbergraph_PostGameCurrencyBase, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000044, "Member 'PostGameCurrencyBase_C_ExecuteUbergraph_PostGameCurrencyBase::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PostGameCurrencyBase_C_ExecuteUbergraph_PostGameCurrencyBase, CallFunc_FClamp_ReturnValue) == 0x000048, "Member 'PostGameCurrencyBase_C_ExecuteUbergraph_PostGameCurrencyBase::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(PostGameCurrencyBase_C_ExecuteUbergraph_PostGameCurrencyBase, CallFunc_Conv_IntToFloat_ReturnValue) == 0x00004C, "Member 'PostGameCurrencyBase_C_ExecuteUbergraph_PostGameCurrencyBase::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PostGameCurrencyBase_C_ExecuteUbergraph_PostGameCurrencyBase, K2Node_CustomEvent_Text) == 0x000050, "Member 'PostGameCurrencyBase_C_ExecuteUbergraph_PostGameCurrencyBase::K2Node_CustomEvent_Text' has a wrong offset!");
static_assert(offsetof(PostGameCurrencyBase_C_ExecuteUbergraph_PostGameCurrencyBase, CallFunc_Conv_IntToFloat_ReturnValue_1) == 0x000068, "Member 'PostGameCurrencyBase_C_ExecuteUbergraph_PostGameCurrencyBase::CallFunc_Conv_IntToFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PostGameCurrencyBase_C_ExecuteUbergraph_PostGameCurrencyBase, CallFunc_Lerp_ReturnValue) == 0x00006C, "Member 'PostGameCurrencyBase_C_ExecuteUbergraph_PostGameCurrencyBase::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(PostGameCurrencyBase_C_ExecuteUbergraph_PostGameCurrencyBase, CallFunc_Round_ReturnValue) == 0x000070, "Member 'PostGameCurrencyBase_C_ExecuteUbergraph_PostGameCurrencyBase::CallFunc_Round_ReturnValue' has a wrong offset!");
static_assert(offsetof(PostGameCurrencyBase_C_ExecuteUbergraph_PostGameCurrencyBase, K2Node_MakeStruct_FormatArgumentData) == 0x000078, "Member 'PostGameCurrencyBase_C_ExecuteUbergraph_PostGameCurrencyBase::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(PostGameCurrencyBase_C_ExecuteUbergraph_PostGameCurrencyBase, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x0000B8, "Member 'PostGameCurrencyBase_C_ExecuteUbergraph_PostGameCurrencyBase::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PostGameCurrencyBase_C_ExecuteUbergraph_PostGameCurrencyBase, K2Node_MakeArray_Array) == 0x0000C0, "Member 'PostGameCurrencyBase_C_ExecuteUbergraph_PostGameCurrencyBase::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(PostGameCurrencyBase_C_ExecuteUbergraph_PostGameCurrencyBase, CallFunc_Format_ReturnValue) == 0x0000D0, "Member 'PostGameCurrencyBase_C_ExecuteUbergraph_PostGameCurrencyBase::CallFunc_Format_ReturnValue' has a wrong offset!");

// Function PostGameCurrencyBase.PostGameCurrencyBase_C.SetCurrencyText
// 0x0018 (0x0018 - 0x0000)
struct PostGameCurrencyBase_C_SetCurrencyText final
{
public:
	class FText                                   Text;                                              // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(PostGameCurrencyBase_C_SetCurrencyText) == 0x000008, "Wrong alignment on PostGameCurrencyBase_C_SetCurrencyText");
static_assert(sizeof(PostGameCurrencyBase_C_SetCurrencyText) == 0x000018, "Wrong size on PostGameCurrencyBase_C_SetCurrencyText");
static_assert(offsetof(PostGameCurrencyBase_C_SetCurrencyText, Text) == 0x000000, "Member 'PostGameCurrencyBase_C_SetCurrencyText::Text' has a wrong offset!");

// Function PostGameCurrencyBase.PostGameCurrencyBase_C.Tick
// 0x003C (0x003C - 0x0000)
struct PostGameCurrencyBase_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PostGameCurrencyBase_C_Tick) == 0x000004, "Wrong alignment on PostGameCurrencyBase_C_Tick");
static_assert(sizeof(PostGameCurrencyBase_C_Tick) == 0x00003C, "Wrong size on PostGameCurrencyBase_C_Tick");
static_assert(offsetof(PostGameCurrencyBase_C_Tick, MyGeometry) == 0x000000, "Member 'PostGameCurrencyBase_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(PostGameCurrencyBase_C_Tick, InDeltaTime) == 0x000038, "Member 'PostGameCurrencyBase_C_Tick::InDeltaTime' has a wrong offset!");

// Function PostGameCurrencyBase.PostGameCurrencyBase_C.AnimateToValue
// 0x0008 (0x0008 - 0x0000)
struct PostGameCurrencyBase_C_AnimateToValue final
{
public:
	int32                                         CurrencyValue;                                     // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetWidgetActive_ReturnValue;              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PostGameCurrencyBase_C_AnimateToValue) == 0x000004, "Wrong alignment on PostGameCurrencyBase_C_AnimateToValue");
static_assert(sizeof(PostGameCurrencyBase_C_AnimateToValue) == 0x000008, "Wrong size on PostGameCurrencyBase_C_AnimateToValue");
static_assert(offsetof(PostGameCurrencyBase_C_AnimateToValue, CurrencyValue) == 0x000000, "Member 'PostGameCurrencyBase_C_AnimateToValue::CurrencyValue' has a wrong offset!");
static_assert(offsetof(PostGameCurrencyBase_C_AnimateToValue, CallFunc_GetWidgetActive_ReturnValue) == 0x000004, "Member 'PostGameCurrencyBase_C_AnimateToValue::CallFunc_GetWidgetActive_ReturnValue' has a wrong offset!");

// Function PostGameCurrencyBase.PostGameCurrencyBase_C.PopulateValue
// 0x0070 (0x0070 - 0x0000)
struct PostGameCurrencyBase_C_PopulateValue final
{
public:
	int32                                         CurrentValue;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetWidgetActive_ReturnValue;              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0008(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0048(0x0010)(ZeroConstructor, ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0058(0x0018)()
};
static_assert(alignof(PostGameCurrencyBase_C_PopulateValue) == 0x000008, "Wrong alignment on PostGameCurrencyBase_C_PopulateValue");
static_assert(sizeof(PostGameCurrencyBase_C_PopulateValue) == 0x000070, "Wrong size on PostGameCurrencyBase_C_PopulateValue");
static_assert(offsetof(PostGameCurrencyBase_C_PopulateValue, CurrentValue) == 0x000000, "Member 'PostGameCurrencyBase_C_PopulateValue::CurrentValue' has a wrong offset!");
static_assert(offsetof(PostGameCurrencyBase_C_PopulateValue, CallFunc_GetWidgetActive_ReturnValue) == 0x000004, "Member 'PostGameCurrencyBase_C_PopulateValue::CallFunc_GetWidgetActive_ReturnValue' has a wrong offset!");
static_assert(offsetof(PostGameCurrencyBase_C_PopulateValue, K2Node_MakeStruct_FormatArgumentData) == 0x000008, "Member 'PostGameCurrencyBase_C_PopulateValue::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(PostGameCurrencyBase_C_PopulateValue, K2Node_MakeArray_Array) == 0x000048, "Member 'PostGameCurrencyBase_C_PopulateValue::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(PostGameCurrencyBase_C_PopulateValue, CallFunc_Format_ReturnValue) == 0x000058, "Member 'PostGameCurrencyBase_C_PopulateValue::CallFunc_Format_ReturnValue' has a wrong offset!");

// Function PostGameCurrencyBase.PostGameCurrencyBase_C.AnimateToDelta
// 0x000C (0x000C - 0x0000)
struct PostGameCurrencyBase_C_AnimateToDelta final
{
public:
	int32                                         CurrencyDelta;                                     // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetWidgetActive_ReturnValue;              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PostGameCurrencyBase_C_AnimateToDelta) == 0x000004, "Wrong alignment on PostGameCurrencyBase_C_AnimateToDelta");
static_assert(sizeof(PostGameCurrencyBase_C_AnimateToDelta) == 0x00000C, "Wrong size on PostGameCurrencyBase_C_AnimateToDelta");
static_assert(offsetof(PostGameCurrencyBase_C_AnimateToDelta, CurrencyDelta) == 0x000000, "Member 'PostGameCurrencyBase_C_AnimateToDelta::CurrencyDelta' has a wrong offset!");
static_assert(offsetof(PostGameCurrencyBase_C_AnimateToDelta, CallFunc_GetWidgetActive_ReturnValue) == 0x000004, "Member 'PostGameCurrencyBase_C_AnimateToDelta::CallFunc_GetWidgetActive_ReturnValue' has a wrong offset!");
static_assert(offsetof(PostGameCurrencyBase_C_AnimateToDelta, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'PostGameCurrencyBase_C_AnimateToDelta::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function PostGameCurrencyBase.PostGameCurrencyBase_C.Populate
// 0x0001 (0x0001 - 0x0000)
struct PostGameCurrencyBase_C_Populate final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PostGameCurrencyBase_C_Populate) == 0x000001, "Wrong alignment on PostGameCurrencyBase_C_Populate");
static_assert(sizeof(PostGameCurrencyBase_C_Populate) == 0x000001, "Wrong size on PostGameCurrencyBase_C_Populate");
static_assert(offsetof(PostGameCurrencyBase_C_Populate, ReturnValue) == 0x000000, "Member 'PostGameCurrencyBase_C_Populate::ReturnValue' has a wrong offset!");

// Function PostGameCurrencyBase.PostGameCurrencyBase_C.PopulateDelta
// 0x0078 (0x0078 - 0x0000)
struct PostGameCurrencyBase_C_PopulateDelta final
{
public:
	int32                                         Delta;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetWidgetActive_ReturnValue;              // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0010(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0050(0x0010)(ZeroConstructor, ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0060(0x0018)()
};
static_assert(alignof(PostGameCurrencyBase_C_PopulateDelta) == 0x000008, "Wrong alignment on PostGameCurrencyBase_C_PopulateDelta");
static_assert(sizeof(PostGameCurrencyBase_C_PopulateDelta) == 0x000078, "Wrong size on PostGameCurrencyBase_C_PopulateDelta");
static_assert(offsetof(PostGameCurrencyBase_C_PopulateDelta, Delta) == 0x000000, "Member 'PostGameCurrencyBase_C_PopulateDelta::Delta' has a wrong offset!");
static_assert(offsetof(PostGameCurrencyBase_C_PopulateDelta, CallFunc_Add_IntInt_ReturnValue) == 0x000004, "Member 'PostGameCurrencyBase_C_PopulateDelta::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PostGameCurrencyBase_C_PopulateDelta, CallFunc_GetWidgetActive_ReturnValue) == 0x000008, "Member 'PostGameCurrencyBase_C_PopulateDelta::CallFunc_GetWidgetActive_ReturnValue' has a wrong offset!");
static_assert(offsetof(PostGameCurrencyBase_C_PopulateDelta, K2Node_MakeStruct_FormatArgumentData) == 0x000010, "Member 'PostGameCurrencyBase_C_PopulateDelta::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(PostGameCurrencyBase_C_PopulateDelta, K2Node_MakeArray_Array) == 0x000050, "Member 'PostGameCurrencyBase_C_PopulateDelta::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(PostGameCurrencyBase_C_PopulateDelta, CallFunc_Format_ReturnValue) == 0x000060, "Member 'PostGameCurrencyBase_C_PopulateDelta::CallFunc_Format_ReturnValue' has a wrong offset!");

}

