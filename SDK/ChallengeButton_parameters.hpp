#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ChallengeButton

#include "Basic.hpp"

#include "MangoClient_structs.hpp"
#include "AkAudio_structs.hpp"
#include "InputCore_structs.hpp"
#include "Mariner_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function ChallengeButton.ChallengeButton_C.ExecuteUbergraph_ChallengeButton
// 0x02B0 (0x02B0 - 0x0000)
struct ChallengeButton_C_ExecuteUbergraph_ChallengeButton final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2176[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FAkExternalSourceInfo>          Temp_struct_Variable;                              // 0x0010(0x0010)(ConstParm, ZeroConstructor, ReferenceParm)
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable;                            // 0x0020(0x0010)(ConstParm, ZeroConstructor, NoDestructor)
	TArray<struct FAkExternalSourceInfo>          Temp_struct_Variable_1;                            // 0x0030(0x0010)(ConstParm, ZeroConstructor, ReferenceParm)
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable_1;                          // 0x0040(0x0010)(ConstParm, ZeroConstructor, NoDestructor)
	int32                                         CallFunc_PostEvent_ReturnValue;                    // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2177[0x4];                                     // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AMarinerBasePlayerController*           CallFunc_TryAndGetLocalPlayerController_ReturnValue; // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_PostEvent_ReturnValue_1;                  // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2178[0x4];                                     // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FMangoQuestDescription                 K2Node_CustomEvent_Quest_1;                        // 0x0070(0x0118)()
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_1;              // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HandleInput_ReturnValue;                  // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2179[0x7];                                     // 0x0191(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMangoQuestDescription                 K2Node_CustomEvent_Quest;                          // 0x0198(0x0118)()
};
static_assert(alignof(ChallengeButton_C_ExecuteUbergraph_ChallengeButton) == 0x000008, "Wrong alignment on ChallengeButton_C_ExecuteUbergraph_ChallengeButton");
static_assert(sizeof(ChallengeButton_C_ExecuteUbergraph_ChallengeButton) == 0x0002B0, "Wrong size on ChallengeButton_C_ExecuteUbergraph_ChallengeButton");
static_assert(offsetof(ChallengeButton_C_ExecuteUbergraph_ChallengeButton, EntryPoint) == 0x000000, "Member 'ChallengeButton_C_ExecuteUbergraph_ChallengeButton::EntryPoint' has a wrong offset!");
static_assert(offsetof(ChallengeButton_C_ExecuteUbergraph_ChallengeButton, CallFunc_GetPlayerController_ReturnValue) == 0x000008, "Member 'ChallengeButton_C_ExecuteUbergraph_ChallengeButton::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(ChallengeButton_C_ExecuteUbergraph_ChallengeButton, Temp_struct_Variable) == 0x000010, "Member 'ChallengeButton_C_ExecuteUbergraph_ChallengeButton::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(ChallengeButton_C_ExecuteUbergraph_ChallengeButton, Temp_delegate_Variable) == 0x000020, "Member 'ChallengeButton_C_ExecuteUbergraph_ChallengeButton::Temp_delegate_Variable' has a wrong offset!");
static_assert(offsetof(ChallengeButton_C_ExecuteUbergraph_ChallengeButton, Temp_struct_Variable_1) == 0x000030, "Member 'ChallengeButton_C_ExecuteUbergraph_ChallengeButton::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(ChallengeButton_C_ExecuteUbergraph_ChallengeButton, Temp_delegate_Variable_1) == 0x000040, "Member 'ChallengeButton_C_ExecuteUbergraph_ChallengeButton::Temp_delegate_Variable_1' has a wrong offset!");
static_assert(offsetof(ChallengeButton_C_ExecuteUbergraph_ChallengeButton, CallFunc_PostEvent_ReturnValue) == 0x000050, "Member 'ChallengeButton_C_ExecuteUbergraph_ChallengeButton::CallFunc_PostEvent_ReturnValue' has a wrong offset!");
static_assert(offsetof(ChallengeButton_C_ExecuteUbergraph_ChallengeButton, CallFunc_TryAndGetLocalPlayerController_ReturnValue) == 0x000058, "Member 'ChallengeButton_C_ExecuteUbergraph_ChallengeButton::CallFunc_TryAndGetLocalPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(ChallengeButton_C_ExecuteUbergraph_ChallengeButton, CallFunc_PostEvent_ReturnValue_1) == 0x000060, "Member 'ChallengeButton_C_ExecuteUbergraph_ChallengeButton::CallFunc_PostEvent_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ChallengeButton_C_ExecuteUbergraph_ChallengeButton, CallFunc_PlayAnimation_ReturnValue) == 0x000068, "Member 'ChallengeButton_C_ExecuteUbergraph_ChallengeButton::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(ChallengeButton_C_ExecuteUbergraph_ChallengeButton, K2Node_CustomEvent_Quest_1) == 0x000070, "Member 'ChallengeButton_C_ExecuteUbergraph_ChallengeButton::K2Node_CustomEvent_Quest_1' has a wrong offset!");
static_assert(offsetof(ChallengeButton_C_ExecuteUbergraph_ChallengeButton, CallFunc_PlayAnimation_ReturnValue_1) == 0x000188, "Member 'ChallengeButton_C_ExecuteUbergraph_ChallengeButton::CallFunc_PlayAnimation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ChallengeButton_C_ExecuteUbergraph_ChallengeButton, CallFunc_HandleInput_ReturnValue) == 0x000190, "Member 'ChallengeButton_C_ExecuteUbergraph_ChallengeButton::CallFunc_HandleInput_ReturnValue' has a wrong offset!");
static_assert(offsetof(ChallengeButton_C_ExecuteUbergraph_ChallengeButton, K2Node_CustomEvent_Quest) == 0x000198, "Member 'ChallengeButton_C_ExecuteUbergraph_ChallengeButton::K2Node_CustomEvent_Quest' has a wrong offset!");

// Function ChallengeButton.ChallengeButton_C.AnimationProgressCompleteEvent
// 0x0118 (0x0118 - 0x0000)
struct ChallengeButton_C_AnimationProgressCompleteEvent final
{
public:
	struct FMangoQuestDescription                 Quest;                                             // 0x0000(0x0118)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(ChallengeButton_C_AnimationProgressCompleteEvent) == 0x000008, "Wrong alignment on ChallengeButton_C_AnimationProgressCompleteEvent");
static_assert(sizeof(ChallengeButton_C_AnimationProgressCompleteEvent) == 0x000118, "Wrong size on ChallengeButton_C_AnimationProgressCompleteEvent");
static_assert(offsetof(ChallengeButton_C_AnimationProgressCompleteEvent, Quest) == 0x000000, "Member 'ChallengeButton_C_AnimationProgressCompleteEvent::Quest' has a wrong offset!");

// Function ChallengeButton.ChallengeButton_C.ChallengeCompleteEvent
// 0x0118 (0x0118 - 0x0000)
struct ChallengeButton_C_ChallengeCompleteEvent final
{
public:
	struct FMangoQuestDescription                 Quest;                                             // 0x0000(0x0118)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(ChallengeButton_C_ChallengeCompleteEvent) == 0x000008, "Wrong alignment on ChallengeButton_C_ChallengeCompleteEvent");
static_assert(sizeof(ChallengeButton_C_ChallengeCompleteEvent) == 0x000118, "Wrong size on ChallengeButton_C_ChallengeCompleteEvent");
static_assert(offsetof(ChallengeButton_C_ChallengeCompleteEvent, Quest) == 0x000000, "Member 'ChallengeButton_C_ChallengeCompleteEvent::Quest' has a wrong offset!");

// Function ChallengeButton.ChallengeButton_C.Init
// 0x02D0 (0x02D0 - 0x0000)
struct ChallengeButton_C_Init final
{
public:
	struct FMangoQuestDescription                 Quest;                                             // 0x0000(0x0118)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          AllowInput;                                        // 0x0118(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDismissable_CanDismiss;                 // 0x0119(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_217A[0x2];                                     // 0x011A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(bool bWasSuccessful, EMangoQuestSlot SlotId, struct FMangoQuestDescription& NewQuest)> K2Node_CreateDelegate_OutputDelegate;              // 0x011C(0x0010)(ZeroConstructor, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x012C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x012D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x012E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x012F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(bool bWasSuccessful, EMangoQuestSlot SlotId, struct FMangoQuestDescription& NewQuest)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x0138(0x0010)(ZeroConstructor, NoDestructor)
	class UMangoQuestManager*                     CallFunc_Get_ReturnValue;                          // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(EMangoQuestSlot SlotId)>       K2Node_CreateDelegate_OutputDelegate_2;            // 0x0150(0x0010)(ZeroConstructor, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0161(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0162(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_217B[0x5];                                     // 0x0163(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_TextFromStringTable_ReturnValue;          // 0x0168(0x0018)()
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x0181(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0182(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_217C[0x5];                                     // 0x0183(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UMangoCMSManager*                       CallFunc_Get_ReturnValue_1;                        // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FMangoQuestReward                      CallFunc_GetQuestReward_OutQuestReward;            // 0x0190(0x00C8)()
	bool                                          CallFunc_GetQuestReward_ReturnValue;               // 0x0258(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x0259(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_217D[0x6];                                     // 0x025A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMangoQuest                            CallFunc_GetQuest_OutQuest;                        // 0x0260(0x0068)()
	bool                                          CallFunc_GetQuest_ReturnValue;                     // 0x02C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ChallengeButton_C_Init) == 0x000008, "Wrong alignment on ChallengeButton_C_Init");
static_assert(sizeof(ChallengeButton_C_Init) == 0x0002D0, "Wrong size on ChallengeButton_C_Init");
static_assert(offsetof(ChallengeButton_C_Init, Quest) == 0x000000, "Member 'ChallengeButton_C_Init::Quest' has a wrong offset!");
static_assert(offsetof(ChallengeButton_C_Init, AllowInput) == 0x000118, "Member 'ChallengeButton_C_Init::AllowInput' has a wrong offset!");
static_assert(offsetof(ChallengeButton_C_Init, CallFunc_IsDismissable_CanDismiss) == 0x000119, "Member 'ChallengeButton_C_Init::CallFunc_IsDismissable_CanDismiss' has a wrong offset!");
static_assert(offsetof(ChallengeButton_C_Init, K2Node_CreateDelegate_OutputDelegate) == 0x00011C, "Member 'ChallengeButton_C_Init::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(ChallengeButton_C_Init, Temp_byte_Variable) == 0x00012C, "Member 'ChallengeButton_C_Init::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(ChallengeButton_C_Init, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00012D, "Member 'ChallengeButton_C_Init::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(ChallengeButton_C_Init, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x00012E, "Member 'ChallengeButton_C_Init::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ChallengeButton_C_Init, CallFunc_BooleanAND_ReturnValue) == 0x00012F, "Member 'ChallengeButton_C_Init::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(ChallengeButton_C_Init, CallFunc_PlayAnimation_ReturnValue) == 0x000130, "Member 'ChallengeButton_C_Init::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(ChallengeButton_C_Init, K2Node_CreateDelegate_OutputDelegate_1) == 0x000138, "Member 'ChallengeButton_C_Init::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(ChallengeButton_C_Init, CallFunc_Get_ReturnValue) == 0x000148, "Member 'ChallengeButton_C_Init::CallFunc_Get_ReturnValue' has a wrong offset!");
static_assert(offsetof(ChallengeButton_C_Init, K2Node_CreateDelegate_OutputDelegate_2) == 0x000150, "Member 'ChallengeButton_C_Init::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(ChallengeButton_C_Init, Temp_byte_Variable_1) == 0x000160, "Member 'ChallengeButton_C_Init::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(ChallengeButton_C_Init, Temp_bool_Variable) == 0x000161, "Member 'ChallengeButton_C_Init::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(ChallengeButton_C_Init, K2Node_Select_Default) == 0x000162, "Member 'ChallengeButton_C_Init::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(ChallengeButton_C_Init, CallFunc_TextFromStringTable_ReturnValue) == 0x000168, "Member 'ChallengeButton_C_Init::CallFunc_TextFromStringTable_ReturnValue' has a wrong offset!");
static_assert(offsetof(ChallengeButton_C_Init, Temp_byte_Variable_2) == 0x000180, "Member 'ChallengeButton_C_Init::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(ChallengeButton_C_Init, Temp_byte_Variable_3) == 0x000181, "Member 'ChallengeButton_C_Init::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(ChallengeButton_C_Init, Temp_bool_Variable_1) == 0x000182, "Member 'ChallengeButton_C_Init::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(ChallengeButton_C_Init, CallFunc_Get_ReturnValue_1) == 0x000188, "Member 'ChallengeButton_C_Init::CallFunc_Get_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ChallengeButton_C_Init, CallFunc_GetQuestReward_OutQuestReward) == 0x000190, "Member 'ChallengeButton_C_Init::CallFunc_GetQuestReward_OutQuestReward' has a wrong offset!");
static_assert(offsetof(ChallengeButton_C_Init, CallFunc_GetQuestReward_ReturnValue) == 0x000258, "Member 'ChallengeButton_C_Init::CallFunc_GetQuestReward_ReturnValue' has a wrong offset!");
static_assert(offsetof(ChallengeButton_C_Init, K2Node_Select_Default_1) == 0x000259, "Member 'ChallengeButton_C_Init::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(ChallengeButton_C_Init, CallFunc_GetQuest_OutQuest) == 0x000260, "Member 'ChallengeButton_C_Init::CallFunc_GetQuest_OutQuest' has a wrong offset!");
static_assert(offsetof(ChallengeButton_C_Init, CallFunc_GetQuest_ReturnValue) == 0x0002C8, "Member 'ChallengeButton_C_Init::CallFunc_GetQuest_ReturnValue' has a wrong offset!");

// Function ChallengeButton.ChallengeButton_C.GetBackgroundColor
// 0x0024 (0x0024 - 0x0000)
struct ChallengeButton_C_GetBackgroundColor final
{
public:
	struct FLinearColor                           OutColor;                                          // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_217E[0x2];                                     // 0x0012(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue;                  // 0x0014(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ChallengeButton_C_GetBackgroundColor) == 0x000004, "Wrong alignment on ChallengeButton_C_GetBackgroundColor");
static_assert(sizeof(ChallengeButton_C_GetBackgroundColor) == 0x000024, "Wrong size on ChallengeButton_C_GetBackgroundColor");
static_assert(offsetof(ChallengeButton_C_GetBackgroundColor, OutColor) == 0x000000, "Member 'ChallengeButton_C_GetBackgroundColor::OutColor' has a wrong offset!");
static_assert(offsetof(ChallengeButton_C_GetBackgroundColor, ReturnValue) == 0x000010, "Member 'ChallengeButton_C_GetBackgroundColor::ReturnValue' has a wrong offset!");
static_assert(offsetof(ChallengeButton_C_GetBackgroundColor, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000011, "Member 'ChallengeButton_C_GetBackgroundColor::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(ChallengeButton_C_GetBackgroundColor, CallFunc_SelectColor_ReturnValue) == 0x000014, "Member 'ChallengeButton_C_GetBackgroundColor::CallFunc_SelectColor_ReturnValue' has a wrong offset!");

// Function ChallengeButton.ChallengeButton_C.OnQuestDismissStarted
// 0x0058 (0x0058 - 0x0000)
struct ChallengeButton_C_OnQuestDismissStarted final
{
public:
	EMangoQuestSlot                               Param_Slot;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_217F[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable;                            // 0x0004(0x0010)(ConstParm, ZeroConstructor, NoDestructor)
	uint8                                         Pad_2180[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMarinerMenuStackLayer*                 CallFunc_GetOwningLayer_ReturnValue;               // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMarinerBasePlayerController*           CallFunc_TryAndGetLocalPlayerController_ReturnValue; // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UChallengeMenu_C*                       K2Node_DynamicCast_AsChallenge_Menu;               // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2181[0x7];                                     // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FAkExternalSourceInfo>          Temp_struct_Variable;                              // 0x0040(0x0010)(ConstParm, ZeroConstructor, ReferenceParm)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2182[0x3];                                     // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_PostEvent_ReturnValue;                    // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ChallengeButton_C_OnQuestDismissStarted) == 0x000008, "Wrong alignment on ChallengeButton_C_OnQuestDismissStarted");
static_assert(sizeof(ChallengeButton_C_OnQuestDismissStarted) == 0x000058, "Wrong size on ChallengeButton_C_OnQuestDismissStarted");
static_assert(offsetof(ChallengeButton_C_OnQuestDismissStarted, Param_Slot) == 0x000000, "Member 'ChallengeButton_C_OnQuestDismissStarted::Param_Slot' has a wrong offset!");
static_assert(offsetof(ChallengeButton_C_OnQuestDismissStarted, Temp_delegate_Variable) == 0x000004, "Member 'ChallengeButton_C_OnQuestDismissStarted::Temp_delegate_Variable' has a wrong offset!");
static_assert(offsetof(ChallengeButton_C_OnQuestDismissStarted, CallFunc_GetOwningLayer_ReturnValue) == 0x000018, "Member 'ChallengeButton_C_OnQuestDismissStarted::CallFunc_GetOwningLayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(ChallengeButton_C_OnQuestDismissStarted, CallFunc_TryAndGetLocalPlayerController_ReturnValue) == 0x000020, "Member 'ChallengeButton_C_OnQuestDismissStarted::CallFunc_TryAndGetLocalPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(ChallengeButton_C_OnQuestDismissStarted, K2Node_DynamicCast_AsChallenge_Menu) == 0x000028, "Member 'ChallengeButton_C_OnQuestDismissStarted::K2Node_DynamicCast_AsChallenge_Menu' has a wrong offset!");
static_assert(offsetof(ChallengeButton_C_OnQuestDismissStarted, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'ChallengeButton_C_OnQuestDismissStarted::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ChallengeButton_C_OnQuestDismissStarted, CallFunc_PlayAnimation_ReturnValue) == 0x000038, "Member 'ChallengeButton_C_OnQuestDismissStarted::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(ChallengeButton_C_OnQuestDismissStarted, Temp_struct_Variable) == 0x000040, "Member 'ChallengeButton_C_OnQuestDismissStarted::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(ChallengeButton_C_OnQuestDismissStarted, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000050, "Member 'ChallengeButton_C_OnQuestDismissStarted::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(ChallengeButton_C_OnQuestDismissStarted, CallFunc_PostEvent_ReturnValue) == 0x000054, "Member 'ChallengeButton_C_OnQuestDismissStarted::CallFunc_PostEvent_ReturnValue' has a wrong offset!");

// Function ChallengeButton.ChallengeButton_C.OnQuestDismissCompleted
// 0x0138 (0x0138 - 0x0000)
struct ChallengeButton_C_OnQuestDismissCompleted final
{
public:
	bool                                          WasSuccessful;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	EMangoQuestSlot                               Param_Slot;                                        // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2183[0x6];                                     // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMangoQuestDescription                 Quest;                                             // 0x0008(0x0118)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class UMarinerMenuStackLayer*                 CallFunc_GetOwningLayer_ReturnValue;               // 0x0120(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UChallengeMenu_C*                       K2Node_DynamicCast_AsChallenge_Menu;               // 0x0128(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0131(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ChallengeButton_C_OnQuestDismissCompleted) == 0x000008, "Wrong alignment on ChallengeButton_C_OnQuestDismissCompleted");
static_assert(sizeof(ChallengeButton_C_OnQuestDismissCompleted) == 0x000138, "Wrong size on ChallengeButton_C_OnQuestDismissCompleted");
static_assert(offsetof(ChallengeButton_C_OnQuestDismissCompleted, WasSuccessful) == 0x000000, "Member 'ChallengeButton_C_OnQuestDismissCompleted::WasSuccessful' has a wrong offset!");
static_assert(offsetof(ChallengeButton_C_OnQuestDismissCompleted, Param_Slot) == 0x000001, "Member 'ChallengeButton_C_OnQuestDismissCompleted::Param_Slot' has a wrong offset!");
static_assert(offsetof(ChallengeButton_C_OnQuestDismissCompleted, Quest) == 0x000008, "Member 'ChallengeButton_C_OnQuestDismissCompleted::Quest' has a wrong offset!");
static_assert(offsetof(ChallengeButton_C_OnQuestDismissCompleted, CallFunc_GetOwningLayer_ReturnValue) == 0x000120, "Member 'ChallengeButton_C_OnQuestDismissCompleted::CallFunc_GetOwningLayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(ChallengeButton_C_OnQuestDismissCompleted, K2Node_DynamicCast_AsChallenge_Menu) == 0x000128, "Member 'ChallengeButton_C_OnQuestDismissCompleted::K2Node_DynamicCast_AsChallenge_Menu' has a wrong offset!");
static_assert(offsetof(ChallengeButton_C_OnQuestDismissCompleted, K2Node_DynamicCast_bSuccess) == 0x000130, "Member 'ChallengeButton_C_OnQuestDismissCompleted::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ChallengeButton_C_OnQuestDismissCompleted, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000131, "Member 'ChallengeButton_C_OnQuestDismissCompleted::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function ChallengeButton.ChallengeButton_C.ReinitFromDismiss
// 0x0010 (0x0010 - 0x0000)
struct ChallengeButton_C_ReinitFromDismiss final
{
public:
	bool                                          CallFunc_IsAnimationPlaying_ReturnValue;           // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2184[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ChallengeButton_C_ReinitFromDismiss) == 0x000008, "Wrong alignment on ChallengeButton_C_ReinitFromDismiss");
static_assert(sizeof(ChallengeButton_C_ReinitFromDismiss) == 0x000010, "Wrong size on ChallengeButton_C_ReinitFromDismiss");
static_assert(offsetof(ChallengeButton_C_ReinitFromDismiss, CallFunc_IsAnimationPlaying_ReturnValue) == 0x000000, "Member 'ChallengeButton_C_ReinitFromDismiss::CallFunc_IsAnimationPlaying_ReturnValue' has a wrong offset!");
static_assert(offsetof(ChallengeButton_C_ReinitFromDismiss, CallFunc_Not_PreBool_ReturnValue) == 0x000001, "Member 'ChallengeButton_C_ReinitFromDismiss::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(ChallengeButton_C_ReinitFromDismiss, CallFunc_Not_PreBool_ReturnValue_1) == 0x000002, "Member 'ChallengeButton_C_ReinitFromDismiss::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ChallengeButton_C_ReinitFromDismiss, CallFunc_BooleanAND_ReturnValue) == 0x000003, "Member 'ChallengeButton_C_ReinitFromDismiss::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(ChallengeButton_C_ReinitFromDismiss, CallFunc_PlayAnimation_ReturnValue) == 0x000008, "Member 'ChallengeButton_C_ReinitFromDismiss::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");

// Function ChallengeButton.ChallengeButton_C.IsDismissable
// 0x0048 (0x0048 - 0x0000)
struct ChallengeButton_C_IsDismissable final
{
public:
	bool                                          CanDismiss;                                        // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2185[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMangoQuestManager*                     CallFunc_Get_ReturnValue;                          // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FDateTime                              CallFunc_UtcNow_ReturnValue;                       // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2186[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDateTime                              CallFunc_DateTimeFromIsoString_Result;             // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_DateTimeFromIsoString_ReturnValue;        // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2187[0x6];                                     // 0x002A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimespan                              CallFunc_Subtract_DateTimeDateTime_ReturnValue;    // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsQuestSlotBeingDismissed_ReturnValue;    // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2188[0x3];                                     // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetTotalSeconds_ReturnValue;              // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0042(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0043(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ChallengeButton_C_IsDismissable) == 0x000008, "Wrong alignment on ChallengeButton_C_IsDismissable");
static_assert(sizeof(ChallengeButton_C_IsDismissable) == 0x000048, "Wrong size on ChallengeButton_C_IsDismissable");
static_assert(offsetof(ChallengeButton_C_IsDismissable, CanDismiss) == 0x000000, "Member 'ChallengeButton_C_IsDismissable::CanDismiss' has a wrong offset!");
static_assert(offsetof(ChallengeButton_C_IsDismissable, CallFunc_Get_ReturnValue) == 0x000008, "Member 'ChallengeButton_C_IsDismissable::CallFunc_Get_ReturnValue' has a wrong offset!");
static_assert(offsetof(ChallengeButton_C_IsDismissable, CallFunc_UtcNow_ReturnValue) == 0x000010, "Member 'ChallengeButton_C_IsDismissable::CallFunc_UtcNow_ReturnValue' has a wrong offset!");
static_assert(offsetof(ChallengeButton_C_IsDismissable, K2Node_SwitchEnum_CmpSuccess) == 0x000018, "Member 'ChallengeButton_C_IsDismissable::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(ChallengeButton_C_IsDismissable, CallFunc_DateTimeFromIsoString_Result) == 0x000020, "Member 'ChallengeButton_C_IsDismissable::CallFunc_DateTimeFromIsoString_Result' has a wrong offset!");
static_assert(offsetof(ChallengeButton_C_IsDismissable, CallFunc_DateTimeFromIsoString_ReturnValue) == 0x000028, "Member 'ChallengeButton_C_IsDismissable::CallFunc_DateTimeFromIsoString_ReturnValue' has a wrong offset!");
static_assert(offsetof(ChallengeButton_C_IsDismissable, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000029, "Member 'ChallengeButton_C_IsDismissable::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(ChallengeButton_C_IsDismissable, CallFunc_Subtract_DateTimeDateTime_ReturnValue) == 0x000030, "Member 'ChallengeButton_C_IsDismissable::CallFunc_Subtract_DateTimeDateTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(ChallengeButton_C_IsDismissable, CallFunc_IsQuestSlotBeingDismissed_ReturnValue) == 0x000038, "Member 'ChallengeButton_C_IsDismissable::CallFunc_IsQuestSlotBeingDismissed_ReturnValue' has a wrong offset!");
static_assert(offsetof(ChallengeButton_C_IsDismissable, CallFunc_GetTotalSeconds_ReturnValue) == 0x00003C, "Member 'ChallengeButton_C_IsDismissable::CallFunc_GetTotalSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(ChallengeButton_C_IsDismissable, CallFunc_Not_PreBool_ReturnValue) == 0x000040, "Member 'ChallengeButton_C_IsDismissable::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(ChallengeButton_C_IsDismissable, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000041, "Member 'ChallengeButton_C_IsDismissable::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ChallengeButton_C_IsDismissable, CallFunc_BooleanAND_ReturnValue) == 0x000042, "Member 'ChallengeButton_C_IsDismissable::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(ChallengeButton_C_IsDismissable, CallFunc_BooleanAND_ReturnValue_1) == 0x000043, "Member 'ChallengeButton_C_IsDismissable::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ChallengeButton_C_IsDismissable, CallFunc_BooleanAND_ReturnValue_2) == 0x000044, "Member 'ChallengeButton_C_IsDismissable::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");

// Function ChallengeButton.ChallengeButton_C.IsClaimable
// 0x0003 (0x0003 - 0x0000)
struct ChallengeButton_C_IsClaimable final
{
public:
	bool                                          CanClaim;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ChallengeButton_C_IsClaimable) == 0x000001, "Wrong alignment on ChallengeButton_C_IsClaimable");
static_assert(sizeof(ChallengeButton_C_IsClaimable) == 0x000003, "Wrong size on ChallengeButton_C_IsClaimable");
static_assert(offsetof(ChallengeButton_C_IsClaimable, CanClaim) == 0x000000, "Member 'ChallengeButton_C_IsClaimable::CanClaim' has a wrong offset!");
static_assert(offsetof(ChallengeButton_C_IsClaimable, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000001, "Member 'ChallengeButton_C_IsClaimable::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(ChallengeButton_C_IsClaimable, CallFunc_BooleanAND_ReturnValue) == 0x000002, "Member 'ChallengeButton_C_IsClaimable::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function ChallengeButton.ChallengeButton_C.OnQuestRewardClaimed
// 0x0140 (0x0140 - 0x0000)
struct ChallengeButton_C_OnQuestRewardClaimed final
{
public:
	bool                                          WasSuccessful;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	EMangoQuestSlot                               SlotId;                                            // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2189[0x6];                                     // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMangoQuestDescription                 Param_QuestDesc;                                   // 0x0008(0x0118)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class UMangoAchievementsManager*              CallFunc_Get_ReturnValue;                          // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_218A[0x7];                                     // 0x0129(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMangoAchievementsManager*              CallFunc_Get_ReturnValue_1;                        // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0139(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ChallengeButton_C_OnQuestRewardClaimed) == 0x000008, "Wrong alignment on ChallengeButton_C_OnQuestRewardClaimed");
static_assert(sizeof(ChallengeButton_C_OnQuestRewardClaimed) == 0x000140, "Wrong size on ChallengeButton_C_OnQuestRewardClaimed");
static_assert(offsetof(ChallengeButton_C_OnQuestRewardClaimed, WasSuccessful) == 0x000000, "Member 'ChallengeButton_C_OnQuestRewardClaimed::WasSuccessful' has a wrong offset!");
static_assert(offsetof(ChallengeButton_C_OnQuestRewardClaimed, SlotId) == 0x000001, "Member 'ChallengeButton_C_OnQuestRewardClaimed::SlotId' has a wrong offset!");
static_assert(offsetof(ChallengeButton_C_OnQuestRewardClaimed, Param_QuestDesc) == 0x000008, "Member 'ChallengeButton_C_OnQuestRewardClaimed::Param_QuestDesc' has a wrong offset!");
static_assert(offsetof(ChallengeButton_C_OnQuestRewardClaimed, CallFunc_Get_ReturnValue) == 0x000120, "Member 'ChallengeButton_C_OnQuestRewardClaimed::CallFunc_Get_ReturnValue' has a wrong offset!");
static_assert(offsetof(ChallengeButton_C_OnQuestRewardClaimed, K2Node_SwitchEnum_CmpSuccess) == 0x000128, "Member 'ChallengeButton_C_OnQuestRewardClaimed::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(ChallengeButton_C_OnQuestRewardClaimed, CallFunc_Get_ReturnValue_1) == 0x000130, "Member 'ChallengeButton_C_OnQuestRewardClaimed::CallFunc_Get_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ChallengeButton_C_OnQuestRewardClaimed, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000138, "Member 'ChallengeButton_C_OnQuestRewardClaimed::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(ChallengeButton_C_OnQuestRewardClaimed, CallFunc_BooleanAND_ReturnValue) == 0x000139, "Member 'ChallengeButton_C_OnQuestRewardClaimed::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function ChallengeButton.ChallengeButton_C.AnimateToGoal
// 0x0150 (0x0150 - 0x0000)
struct ChallengeButton_C_AnimateToGoal final
{
public:
	struct FMangoQuestDescription                 GoalQuestDesc;                                     // 0x0000(0x0118)(BlueprintVisible, BlueprintReadOnly, Parm)
	TDelegate<void(const struct FMangoQuestDescription& Quest)> AnimationComplete;                                 // 0x0118(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor)
	TDelegate<void(const struct FMangoQuestDescription& Quest)> K2Node_CreateDelegate_OutputDelegate;              // 0x0128(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(const struct FMangoQuestDescription& Quest)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x0138(0x0010)(ZeroConstructor, NoDestructor)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ChallengeButton_C_AnimateToGoal) == 0x000008, "Wrong alignment on ChallengeButton_C_AnimateToGoal");
static_assert(sizeof(ChallengeButton_C_AnimateToGoal) == 0x000150, "Wrong size on ChallengeButton_C_AnimateToGoal");
static_assert(offsetof(ChallengeButton_C_AnimateToGoal, GoalQuestDesc) == 0x000000, "Member 'ChallengeButton_C_AnimateToGoal::GoalQuestDesc' has a wrong offset!");
static_assert(offsetof(ChallengeButton_C_AnimateToGoal, AnimationComplete) == 0x000118, "Member 'ChallengeButton_C_AnimateToGoal::AnimationComplete' has a wrong offset!");
static_assert(offsetof(ChallengeButton_C_AnimateToGoal, K2Node_CreateDelegate_OutputDelegate) == 0x000128, "Member 'ChallengeButton_C_AnimateToGoal::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(ChallengeButton_C_AnimateToGoal, K2Node_CreateDelegate_OutputDelegate_1) == 0x000138, "Member 'ChallengeButton_C_AnimateToGoal::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(ChallengeButton_C_AnimateToGoal, CallFunc_PlayAnimation_ReturnValue) == 0x000148, "Member 'ChallengeButton_C_AnimateToGoal::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");

// Function ChallengeButton.ChallengeButton_C.HandleInput
// 0x01B8 (0x01B8 - 0x0000)
struct ChallengeButton_C_HandleInput final
{
public:
	EMarinerInputActions                          InInput;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_218B[0x6];                                     // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UMarinerGameInstance*                   CallFunc_GetMarinerGameInstance_ReturnValue;       // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HandleInput_ReturnValue;                  // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_218C[0x1];                                     // 0x0013(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(struct FKey& KeyPressed)>      K2Node_CreateDelegate_OutputDelegate;              // 0x0014(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(struct FKey& KeyPressed)>      K2Node_CreateDelegate_OutputDelegate_1;            // 0x0024(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsDismissable_CanDismiss;                 // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_218D[0x3];                                     // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMarinerMessageBoxData                 K2Node_MakeStruct_MarinerMessageBoxData;           // 0x0038(0x0170)(ContainsInstancedReference)
	bool                                          CallFunc_IsClaimable_CanClaim;                     // 0x01A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_218E[0x7];                                     // 0x01A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMangoQuestManager*                     CallFunc_Get_ReturnValue;                          // 0x01B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ChallengeButton_C_HandleInput) == 0x000008, "Wrong alignment on ChallengeButton_C_HandleInput");
static_assert(sizeof(ChallengeButton_C_HandleInput) == 0x0001B8, "Wrong size on ChallengeButton_C_HandleInput");
static_assert(offsetof(ChallengeButton_C_HandleInput, InInput) == 0x000000, "Member 'ChallengeButton_C_HandleInput::InInput' has a wrong offset!");
static_assert(offsetof(ChallengeButton_C_HandleInput, ReturnValue) == 0x000001, "Member 'ChallengeButton_C_HandleInput::ReturnValue' has a wrong offset!");
static_assert(offsetof(ChallengeButton_C_HandleInput, CallFunc_GetMarinerGameInstance_ReturnValue) == 0x000008, "Member 'ChallengeButton_C_HandleInput::CallFunc_GetMarinerGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(ChallengeButton_C_HandleInput, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000010, "Member 'ChallengeButton_C_HandleInput::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(ChallengeButton_C_HandleInput, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000011, "Member 'ChallengeButton_C_HandleInput::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ChallengeButton_C_HandleInput, CallFunc_HandleInput_ReturnValue) == 0x000012, "Member 'ChallengeButton_C_HandleInput::CallFunc_HandleInput_ReturnValue' has a wrong offset!");
static_assert(offsetof(ChallengeButton_C_HandleInput, K2Node_CreateDelegate_OutputDelegate) == 0x000014, "Member 'ChallengeButton_C_HandleInput::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(ChallengeButton_C_HandleInput, K2Node_CreateDelegate_OutputDelegate_1) == 0x000024, "Member 'ChallengeButton_C_HandleInput::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(ChallengeButton_C_HandleInput, CallFunc_IsDismissable_CanDismiss) == 0x000034, "Member 'ChallengeButton_C_HandleInput::CallFunc_IsDismissable_CanDismiss' has a wrong offset!");
static_assert(offsetof(ChallengeButton_C_HandleInput, K2Node_MakeStruct_MarinerMessageBoxData) == 0x000038, "Member 'ChallengeButton_C_HandleInput::K2Node_MakeStruct_MarinerMessageBoxData' has a wrong offset!");
static_assert(offsetof(ChallengeButton_C_HandleInput, CallFunc_IsClaimable_CanClaim) == 0x0001A8, "Member 'ChallengeButton_C_HandleInput::CallFunc_IsClaimable_CanClaim' has a wrong offset!");
static_assert(offsetof(ChallengeButton_C_HandleInput, CallFunc_Get_ReturnValue) == 0x0001B0, "Member 'ChallengeButton_C_HandleInput::CallFunc_Get_ReturnValue' has a wrong offset!");

// Function ChallengeButton.ChallengeButton_C.DismissChallengeConfirm
// 0x0020 (0x0020 - 0x0000)
struct ChallengeButton_C_DismissChallengeConfirm final
{
public:
	struct FKey                                   KeyPressed;                                        // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
	class UMangoQuestManager*                     CallFunc_Get_ReturnValue;                          // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ChallengeButton_C_DismissChallengeConfirm) == 0x000008, "Wrong alignment on ChallengeButton_C_DismissChallengeConfirm");
static_assert(sizeof(ChallengeButton_C_DismissChallengeConfirm) == 0x000020, "Wrong size on ChallengeButton_C_DismissChallengeConfirm");
static_assert(offsetof(ChallengeButton_C_DismissChallengeConfirm, KeyPressed) == 0x000000, "Member 'ChallengeButton_C_DismissChallengeConfirm::KeyPressed' has a wrong offset!");
static_assert(offsetof(ChallengeButton_C_DismissChallengeConfirm, CallFunc_Get_ReturnValue) == 0x000018, "Member 'ChallengeButton_C_DismissChallengeConfirm::CallFunc_Get_ReturnValue' has a wrong offset!");

// Function ChallengeButton.ChallengeButton_C.DummyCallback
// 0x0018 (0x0018 - 0x0000)
struct ChallengeButton_C_DummyCallback final
{
public:
	struct FKey                                   KeyPressed;                                        // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
};
static_assert(alignof(ChallengeButton_C_DummyCallback) == 0x000008, "Wrong alignment on ChallengeButton_C_DummyCallback");
static_assert(sizeof(ChallengeButton_C_DummyCallback) == 0x000018, "Wrong size on ChallengeButton_C_DummyCallback");
static_assert(offsetof(ChallengeButton_C_DummyCallback, KeyPressed) == 0x000000, "Member 'ChallengeButton_C_DummyCallback::KeyPressed' has a wrong offset!");

// Function ChallengeButton.ChallengeButton_C.GetRewards
// 0x0130 (0x0130 - 0x0000)
struct ChallengeButton_C_GetRewards final
{
public:
	struct FMangoQuestReward                      Reward;                                            // 0x0000(0x00C8)(Parm, OutParm)
	struct FMangoQuest                            BlastPassXp;                                       // 0x00C8(0x0068)(Parm, OutParm)
};
static_assert(alignof(ChallengeButton_C_GetRewards) == 0x000008, "Wrong alignment on ChallengeButton_C_GetRewards");
static_assert(sizeof(ChallengeButton_C_GetRewards) == 0x000130, "Wrong size on ChallengeButton_C_GetRewards");
static_assert(offsetof(ChallengeButton_C_GetRewards, Reward) == 0x000000, "Member 'ChallengeButton_C_GetRewards::Reward' has a wrong offset!");
static_assert(offsetof(ChallengeButton_C_GetRewards, BlastPassXp) == 0x0000C8, "Member 'ChallengeButton_C_GetRewards::BlastPassXp' has a wrong offset!");

// Function ChallengeButton.ChallengeButton_C.GetAssets
// 0x0070 (0x0070 - 0x0000)
struct ChallengeButton_C_GetAssets final
{
public:
	struct FMarinerSettingButtonAssets            ReturnValue;                                       // 0x0000(0x0038)(Parm, OutParm, ReturnParm, NoDestructor, ContainsInstancedReference)
	struct FMarinerSettingButtonAssets            K2Node_MakeStruct_MarinerSettingButtonAssets;      // 0x0038(0x0038)(NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(ChallengeButton_C_GetAssets) == 0x000008, "Wrong alignment on ChallengeButton_C_GetAssets");
static_assert(sizeof(ChallengeButton_C_GetAssets) == 0x000070, "Wrong size on ChallengeButton_C_GetAssets");
static_assert(offsetof(ChallengeButton_C_GetAssets, ReturnValue) == 0x000000, "Member 'ChallengeButton_C_GetAssets::ReturnValue' has a wrong offset!");
static_assert(offsetof(ChallengeButton_C_GetAssets, K2Node_MakeStruct_MarinerSettingButtonAssets) == 0x000038, "Member 'ChallengeButton_C_GetAssets::K2Node_MakeStruct_MarinerSettingButtonAssets' has a wrong offset!");

}

