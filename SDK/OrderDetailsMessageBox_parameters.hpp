#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: OrderDetailsMessageBox

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "MangoClient_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Mariner_structs.hpp"


namespace SDK::Params
{

// Function OrderDetailsMessageBox.OrderDetailsMessageBox_C.ExecuteUbergraph_OrderDetailsMessageBox
// 0x0140 (0x0140 - 0x0000)
struct OrderDetailsMessageBox_C_ExecuteUbergraph_OrderDetailsMessageBox final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMarinerMessageBoxOrderDetailsData     CallFunc_GetData_ReturnValue;                      // 0x0008(0x0110)(ConstParm, ContainsInstancedReference)
	float                                         CallFunc_BreakVector2D_X;                          // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x011C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_AccumulateTime_IsComplete;                // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_121[0x3];                                      // 0x0121(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_RandomFloatInRange_ReturnValue;           // 0x0124(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_AccumulateTime_IsComplete_1;              // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_129[0x7];                                      // 0x0129(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IMarinerInputInterface> CallFunc_SetActiveInputWidget_InputWidget_CastInput; // 0x0130(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(OrderDetailsMessageBox_C_ExecuteUbergraph_OrderDetailsMessageBox) == 0x000008, "Wrong alignment on OrderDetailsMessageBox_C_ExecuteUbergraph_OrderDetailsMessageBox");
static_assert(sizeof(OrderDetailsMessageBox_C_ExecuteUbergraph_OrderDetailsMessageBox) == 0x000140, "Wrong size on OrderDetailsMessageBox_C_ExecuteUbergraph_OrderDetailsMessageBox");
static_assert(offsetof(OrderDetailsMessageBox_C_ExecuteUbergraph_OrderDetailsMessageBox, EntryPoint) == 0x000000, "Member 'OrderDetailsMessageBox_C_ExecuteUbergraph_OrderDetailsMessageBox::EntryPoint' has a wrong offset!");
static_assert(offsetof(OrderDetailsMessageBox_C_ExecuteUbergraph_OrderDetailsMessageBox, CallFunc_GetData_ReturnValue) == 0x000008, "Member 'OrderDetailsMessageBox_C_ExecuteUbergraph_OrderDetailsMessageBox::CallFunc_GetData_ReturnValue' has a wrong offset!");
static_assert(offsetof(OrderDetailsMessageBox_C_ExecuteUbergraph_OrderDetailsMessageBox, CallFunc_BreakVector2D_X) == 0x000118, "Member 'OrderDetailsMessageBox_C_ExecuteUbergraph_OrderDetailsMessageBox::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(OrderDetailsMessageBox_C_ExecuteUbergraph_OrderDetailsMessageBox, CallFunc_BreakVector2D_Y) == 0x00011C, "Member 'OrderDetailsMessageBox_C_ExecuteUbergraph_OrderDetailsMessageBox::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(OrderDetailsMessageBox_C_ExecuteUbergraph_OrderDetailsMessageBox, CallFunc_AccumulateTime_IsComplete) == 0x000120, "Member 'OrderDetailsMessageBox_C_ExecuteUbergraph_OrderDetailsMessageBox::CallFunc_AccumulateTime_IsComplete' has a wrong offset!");
static_assert(offsetof(OrderDetailsMessageBox_C_ExecuteUbergraph_OrderDetailsMessageBox, CallFunc_RandomFloatInRange_ReturnValue) == 0x000124, "Member 'OrderDetailsMessageBox_C_ExecuteUbergraph_OrderDetailsMessageBox::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(OrderDetailsMessageBox_C_ExecuteUbergraph_OrderDetailsMessageBox, CallFunc_AccumulateTime_IsComplete_1) == 0x000128, "Member 'OrderDetailsMessageBox_C_ExecuteUbergraph_OrderDetailsMessageBox::CallFunc_AccumulateTime_IsComplete_1' has a wrong offset!");
static_assert(offsetof(OrderDetailsMessageBox_C_ExecuteUbergraph_OrderDetailsMessageBox, CallFunc_SetActiveInputWidget_InputWidget_CastInput) == 0x000130, "Member 'OrderDetailsMessageBox_C_ExecuteUbergraph_OrderDetailsMessageBox::CallFunc_SetActiveInputWidget_InputWidget_CastInput' has a wrong offset!");

// Function OrderDetailsMessageBox.OrderDetailsMessageBox_C.CreateFirework
// 0x0070 (0x0070 - 0x0000)
struct OrderDetailsMessageBox_C_CreateFirework final
{
public:
	class UFireworkFX_C*                          FireworkFX_Ref;                                    // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFireworkFX_C*                          CallFunc_Array_Get_Item;                           // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UFireworkFX_C*                          CallFunc_Create_ReturnValue;                       // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetViewportSize_ReturnValue;              // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X;                          // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRange_ReturnValue;           // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RandomIntegerInRange_ReturnValue;         // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRange_ReturnValue_1;         // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0044(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X_1;                        // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y_1;                        // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCanvasPanelSlot*                       CallFunc_AddChildToCanvas_ReturnValue;             // 0x0058(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRange_ReturnValue_2;         // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_1;               // 0x0064(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(OrderDetailsMessageBox_C_CreateFirework) == 0x000008, "Wrong alignment on OrderDetailsMessageBox_C_CreateFirework");
static_assert(sizeof(OrderDetailsMessageBox_C_CreateFirework) == 0x000070, "Wrong size on OrderDetailsMessageBox_C_CreateFirework");
static_assert(offsetof(OrderDetailsMessageBox_C_CreateFirework, FireworkFX_Ref) == 0x000000, "Member 'OrderDetailsMessageBox_C_CreateFirework::FireworkFX_Ref' has a wrong offset!");
static_assert(offsetof(OrderDetailsMessageBox_C_CreateFirework, CallFunc_Array_Get_Item) == 0x000008, "Member 'OrderDetailsMessageBox_C_CreateFirework::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(OrderDetailsMessageBox_C_CreateFirework, CallFunc_Array_Length_ReturnValue) == 0x000010, "Member 'OrderDetailsMessageBox_C_CreateFirework::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(OrderDetailsMessageBox_C_CreateFirework, CallFunc_Greater_IntInt_ReturnValue) == 0x000014, "Member 'OrderDetailsMessageBox_C_CreateFirework::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(OrderDetailsMessageBox_C_CreateFirework, CallFunc_Create_ReturnValue) == 0x000018, "Member 'OrderDetailsMessageBox_C_CreateFirework::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(OrderDetailsMessageBox_C_CreateFirework, CallFunc_GetViewportSize_ReturnValue) == 0x000020, "Member 'OrderDetailsMessageBox_C_CreateFirework::CallFunc_GetViewportSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(OrderDetailsMessageBox_C_CreateFirework, CallFunc_Array_Length_ReturnValue_1) == 0x000028, "Member 'OrderDetailsMessageBox_C_CreateFirework::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(OrderDetailsMessageBox_C_CreateFirework, CallFunc_BreakVector2D_X) == 0x00002C, "Member 'OrderDetailsMessageBox_C_CreateFirework::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(OrderDetailsMessageBox_C_CreateFirework, CallFunc_BreakVector2D_Y) == 0x000030, "Member 'OrderDetailsMessageBox_C_CreateFirework::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(OrderDetailsMessageBox_C_CreateFirework, CallFunc_Subtract_IntInt_ReturnValue) == 0x000034, "Member 'OrderDetailsMessageBox_C_CreateFirework::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(OrderDetailsMessageBox_C_CreateFirework, CallFunc_RandomFloatInRange_ReturnValue) == 0x000038, "Member 'OrderDetailsMessageBox_C_CreateFirework::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(OrderDetailsMessageBox_C_CreateFirework, CallFunc_RandomIntegerInRange_ReturnValue) == 0x00003C, "Member 'OrderDetailsMessageBox_C_CreateFirework::CallFunc_RandomIntegerInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(OrderDetailsMessageBox_C_CreateFirework, CallFunc_RandomFloatInRange_ReturnValue_1) == 0x000040, "Member 'OrderDetailsMessageBox_C_CreateFirework::CallFunc_RandomFloatInRange_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(OrderDetailsMessageBox_C_CreateFirework, CallFunc_MakeVector2D_ReturnValue) == 0x000044, "Member 'OrderDetailsMessageBox_C_CreateFirework::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(OrderDetailsMessageBox_C_CreateFirework, CallFunc_BreakVector2D_X_1) == 0x00004C, "Member 'OrderDetailsMessageBox_C_CreateFirework::CallFunc_BreakVector2D_X_1' has a wrong offset!");
static_assert(offsetof(OrderDetailsMessageBox_C_CreateFirework, CallFunc_BreakVector2D_Y_1) == 0x000050, "Member 'OrderDetailsMessageBox_C_CreateFirework::CallFunc_BreakVector2D_Y_1' has a wrong offset!");
static_assert(offsetof(OrderDetailsMessageBox_C_CreateFirework, CallFunc_AddChildToCanvas_ReturnValue) == 0x000058, "Member 'OrderDetailsMessageBox_C_CreateFirework::CallFunc_AddChildToCanvas_ReturnValue' has a wrong offset!");
static_assert(offsetof(OrderDetailsMessageBox_C_CreateFirework, CallFunc_RandomFloatInRange_ReturnValue_2) == 0x000060, "Member 'OrderDetailsMessageBox_C_CreateFirework::CallFunc_RandomFloatInRange_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(OrderDetailsMessageBox_C_CreateFirework, CallFunc_MakeVector2D_ReturnValue_1) == 0x000064, "Member 'OrderDetailsMessageBox_C_CreateFirework::CallFunc_MakeVector2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(OrderDetailsMessageBox_C_CreateFirework, CallFunc_Array_RemoveItem_ReturnValue) == 0x00006C, "Member 'OrderDetailsMessageBox_C_CreateFirework::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");

// Function OrderDetailsMessageBox.OrderDetailsMessageBox_C.AccumulateTime
// 0x000C (0x000C - 0x0000)
struct OrderDetailsMessageBox_C_AccumulateTime final
{
public:
	float                                         Time;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsComplete;                                        // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(OrderDetailsMessageBox_C_AccumulateTime) == 0x000004, "Wrong alignment on OrderDetailsMessageBox_C_AccumulateTime");
static_assert(sizeof(OrderDetailsMessageBox_C_AccumulateTime) == 0x00000C, "Wrong size on OrderDetailsMessageBox_C_AccumulateTime");
static_assert(offsetof(OrderDetailsMessageBox_C_AccumulateTime, Time) == 0x000000, "Member 'OrderDetailsMessageBox_C_AccumulateTime::Time' has a wrong offset!");
static_assert(offsetof(OrderDetailsMessageBox_C_AccumulateTime, IsComplete) == 0x000004, "Member 'OrderDetailsMessageBox_C_AccumulateTime::IsComplete' has a wrong offset!");
static_assert(offsetof(OrderDetailsMessageBox_C_AccumulateTime, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x000005, "Member 'OrderDetailsMessageBox_C_AccumulateTime::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(OrderDetailsMessageBox_C_AccumulateTime, CallFunc_Add_FloatFloat_ReturnValue) == 0x000008, "Member 'OrderDetailsMessageBox_C_AccumulateTime::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");

// Function OrderDetailsMessageBox.OrderDetailsMessageBox_C.SetHeaderAndBody
// 0x0468 (0x0468 - 0x0000)
struct OrderDetailsMessageBox_C_SetHeaderAndBody final
{
public:
	struct FMangoOrderDetails                     OrderDetails;                                      // 0x0000(0x0050)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class FText                                   Temp_text_Variable;                                // 0x0050(0x0018)()
	int32                                         CallFunc_GetOrderObjectCount_Count;                // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6D[0x3];                                       // 0x006D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_StrStr_ReturnValue;              // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0075(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_76[0x2];                                       // 0x0076(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7D[0x3];                                       // 0x007D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable_1;                              // 0x0080(0x0018)()
	class FText                                   Temp_text_Variable_2;                              // 0x0098(0x0018)()
	class FText                                   Temp_text_Variable_3;                              // 0x00B0(0x0018)()
	class FText                                   Temp_text_Variable_4;                              // 0x00C8(0x0018)()
	class FText                                   Temp_text_Variable_5;                              // 0x00E0(0x0018)()
	class FText                                   Temp_text_Variable_6;                              // 0x00F8(0x0018)()
	class FText                                   Temp_text_Variable_7;                              // 0x0110(0x0018)()
	class FText                                   Temp_text_Variable_8;                              // 0x0128(0x0018)()
	class FText                                   Temp_text_Variable_9;                              // 0x0140(0x0018)()
	class FText                                   Temp_text_Variable_10;                             // 0x0158(0x0018)()
	class FText                                   Temp_text_Variable_11;                             // 0x0170(0x0018)()
	class FText                                   Temp_text_Variable_12;                             // 0x0188(0x0018)()
	class FText                                   Temp_text_Variable_13;                             // 0x01A0(0x0018)()
	class FText                                   Temp_text_Variable_14;                             // 0x01B8(0x0018)()
	class FText                                   Temp_text_Variable_15;                             // 0x01D0(0x0018)()
	class FText                                   Temp_text_Variable_16;                             // 0x01E8(0x0018)()
	class FText                                   Temp_text_Variable_17;                             // 0x0200(0x0018)()
	class FText                                   Temp_text_Variable_18;                             // 0x0218(0x0018)()
	class FText                                   Temp_text_Variable_19;                             // 0x0230(0x0018)()
	EMangoItemType                                Temp_byte_Variable;                                // 0x0248(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_249[0x7];                                      // 0x0249(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable_20;                             // 0x0250(0x0018)()
	class FText                                   Temp_text_Variable_21;                             // 0x0268(0x0018)()
	class FText                                   Temp_text_Variable_22;                             // 0x0280(0x0018)()
	class FText                                   Temp_text_Variable_23;                             // 0x0298(0x0018)()
	class FText                                   Temp_text_Variable_24;                             // 0x02B0(0x0018)()
	class FText                                   Temp_text_Variable_25;                             // 0x02C8(0x0018)()
	class FText                                   Temp_text_Variable_26;                             // 0x02E0(0x0018)()
	class FText                                   Temp_text_Variable_27;                             // 0x02F8(0x0018)()
	class FText                                   Temp_text_Variable_28;                             // 0x0310(0x0018)()
	class FText                                   Temp_text_Variable_29;                             // 0x0328(0x0018)()
	class FText                                   Temp_text_Variable_30;                             // 0x0340(0x0018)()
	class FText                                   Temp_text_Variable_31;                             // 0x0358(0x0018)()
	class FText                                   Temp_text_Variable_32;                             // 0x0370(0x0018)()
	class FText                                   Temp_text_Variable_33;                             // 0x0388(0x0018)()
	class FText                                   Temp_text_Variable_34;                             // 0x03A0(0x0018)()
	class FText                                   Temp_text_Variable_35;                             // 0x03B8(0x0018)()
	class FText                                   Temp_text_Variable_36;                             // 0x03D0(0x0018)()
	class FText                                   Temp_text_Variable_37;                             // 0x03E8(0x0018)()
	class FText                                   Temp_text_Variable_38;                             // 0x0400(0x0018)()
	class FText                                   Temp_text_Variable_39;                             // 0x0418(0x0018)()
	class FText                                   K2Node_Select_Default;                             // 0x0430(0x0018)()
	EMangoItemType                                Temp_byte_Variable_1;                              // 0x0448(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_449[0x7];                                      // 0x0449(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default_1;                           // 0x0450(0x0018)()
};
static_assert(alignof(OrderDetailsMessageBox_C_SetHeaderAndBody) == 0x000008, "Wrong alignment on OrderDetailsMessageBox_C_SetHeaderAndBody");
static_assert(sizeof(OrderDetailsMessageBox_C_SetHeaderAndBody) == 0x000468, "Wrong size on OrderDetailsMessageBox_C_SetHeaderAndBody");
static_assert(offsetof(OrderDetailsMessageBox_C_SetHeaderAndBody, OrderDetails) == 0x000000, "Member 'OrderDetailsMessageBox_C_SetHeaderAndBody::OrderDetails' has a wrong offset!");
static_assert(offsetof(OrderDetailsMessageBox_C_SetHeaderAndBody, Temp_text_Variable) == 0x000050, "Member 'OrderDetailsMessageBox_C_SetHeaderAndBody::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(OrderDetailsMessageBox_C_SetHeaderAndBody, CallFunc_GetOrderObjectCount_Count) == 0x000068, "Member 'OrderDetailsMessageBox_C_SetHeaderAndBody::CallFunc_GetOrderObjectCount_Count' has a wrong offset!");
static_assert(offsetof(OrderDetailsMessageBox_C_SetHeaderAndBody, CallFunc_NotEqual_IntInt_ReturnValue) == 0x00006C, "Member 'OrderDetailsMessageBox_C_SetHeaderAndBody::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(OrderDetailsMessageBox_C_SetHeaderAndBody, CallFunc_Array_Length_ReturnValue) == 0x000070, "Member 'OrderDetailsMessageBox_C_SetHeaderAndBody::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(OrderDetailsMessageBox_C_SetHeaderAndBody, CallFunc_NotEqual_StrStr_ReturnValue) == 0x000074, "Member 'OrderDetailsMessageBox_C_SetHeaderAndBody::CallFunc_NotEqual_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(OrderDetailsMessageBox_C_SetHeaderAndBody, CallFunc_Greater_IntInt_ReturnValue) == 0x000075, "Member 'OrderDetailsMessageBox_C_SetHeaderAndBody::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(OrderDetailsMessageBox_C_SetHeaderAndBody, CallFunc_Array_Length_ReturnValue_1) == 0x000078, "Member 'OrderDetailsMessageBox_C_SetHeaderAndBody::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(OrderDetailsMessageBox_C_SetHeaderAndBody, CallFunc_Greater_IntInt_ReturnValue_1) == 0x00007C, "Member 'OrderDetailsMessageBox_C_SetHeaderAndBody::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(OrderDetailsMessageBox_C_SetHeaderAndBody, Temp_text_Variable_1) == 0x000080, "Member 'OrderDetailsMessageBox_C_SetHeaderAndBody::Temp_text_Variable_1' has a wrong offset!");
static_assert(offsetof(OrderDetailsMessageBox_C_SetHeaderAndBody, Temp_text_Variable_2) == 0x000098, "Member 'OrderDetailsMessageBox_C_SetHeaderAndBody::Temp_text_Variable_2' has a wrong offset!");
static_assert(offsetof(OrderDetailsMessageBox_C_SetHeaderAndBody, Temp_text_Variable_3) == 0x0000B0, "Member 'OrderDetailsMessageBox_C_SetHeaderAndBody::Temp_text_Variable_3' has a wrong offset!");
static_assert(offsetof(OrderDetailsMessageBox_C_SetHeaderAndBody, Temp_text_Variable_4) == 0x0000C8, "Member 'OrderDetailsMessageBox_C_SetHeaderAndBody::Temp_text_Variable_4' has a wrong offset!");
static_assert(offsetof(OrderDetailsMessageBox_C_SetHeaderAndBody, Temp_text_Variable_5) == 0x0000E0, "Member 'OrderDetailsMessageBox_C_SetHeaderAndBody::Temp_text_Variable_5' has a wrong offset!");
static_assert(offsetof(OrderDetailsMessageBox_C_SetHeaderAndBody, Temp_text_Variable_6) == 0x0000F8, "Member 'OrderDetailsMessageBox_C_SetHeaderAndBody::Temp_text_Variable_6' has a wrong offset!");
static_assert(offsetof(OrderDetailsMessageBox_C_SetHeaderAndBody, Temp_text_Variable_7) == 0x000110, "Member 'OrderDetailsMessageBox_C_SetHeaderAndBody::Temp_text_Variable_7' has a wrong offset!");
static_assert(offsetof(OrderDetailsMessageBox_C_SetHeaderAndBody, Temp_text_Variable_8) == 0x000128, "Member 'OrderDetailsMessageBox_C_SetHeaderAndBody::Temp_text_Variable_8' has a wrong offset!");
static_assert(offsetof(OrderDetailsMessageBox_C_SetHeaderAndBody, Temp_text_Variable_9) == 0x000140, "Member 'OrderDetailsMessageBox_C_SetHeaderAndBody::Temp_text_Variable_9' has a wrong offset!");
static_assert(offsetof(OrderDetailsMessageBox_C_SetHeaderAndBody, Temp_text_Variable_10) == 0x000158, "Member 'OrderDetailsMessageBox_C_SetHeaderAndBody::Temp_text_Variable_10' has a wrong offset!");
static_assert(offsetof(OrderDetailsMessageBox_C_SetHeaderAndBody, Temp_text_Variable_11) == 0x000170, "Member 'OrderDetailsMessageBox_C_SetHeaderAndBody::Temp_text_Variable_11' has a wrong offset!");
static_assert(offsetof(OrderDetailsMessageBox_C_SetHeaderAndBody, Temp_text_Variable_12) == 0x000188, "Member 'OrderDetailsMessageBox_C_SetHeaderAndBody::Temp_text_Variable_12' has a wrong offset!");
static_assert(offsetof(OrderDetailsMessageBox_C_SetHeaderAndBody, Temp_text_Variable_13) == 0x0001A0, "Member 'OrderDetailsMessageBox_C_SetHeaderAndBody::Temp_text_Variable_13' has a wrong offset!");
static_assert(offsetof(OrderDetailsMessageBox_C_SetHeaderAndBody, Temp_text_Variable_14) == 0x0001B8, "Member 'OrderDetailsMessageBox_C_SetHeaderAndBody::Temp_text_Variable_14' has a wrong offset!");
static_assert(offsetof(OrderDetailsMessageBox_C_SetHeaderAndBody, Temp_text_Variable_15) == 0x0001D0, "Member 'OrderDetailsMessageBox_C_SetHeaderAndBody::Temp_text_Variable_15' has a wrong offset!");
static_assert(offsetof(OrderDetailsMessageBox_C_SetHeaderAndBody, Temp_text_Variable_16) == 0x0001E8, "Member 'OrderDetailsMessageBox_C_SetHeaderAndBody::Temp_text_Variable_16' has a wrong offset!");
static_assert(offsetof(OrderDetailsMessageBox_C_SetHeaderAndBody, Temp_text_Variable_17) == 0x000200, "Member 'OrderDetailsMessageBox_C_SetHeaderAndBody::Temp_text_Variable_17' has a wrong offset!");
static_assert(offsetof(OrderDetailsMessageBox_C_SetHeaderAndBody, Temp_text_Variable_18) == 0x000218, "Member 'OrderDetailsMessageBox_C_SetHeaderAndBody::Temp_text_Variable_18' has a wrong offset!");
static_assert(offsetof(OrderDetailsMessageBox_C_SetHeaderAndBody, Temp_text_Variable_19) == 0x000230, "Member 'OrderDetailsMessageBox_C_SetHeaderAndBody::Temp_text_Variable_19' has a wrong offset!");
static_assert(offsetof(OrderDetailsMessageBox_C_SetHeaderAndBody, Temp_byte_Variable) == 0x000248, "Member 'OrderDetailsMessageBox_C_SetHeaderAndBody::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(OrderDetailsMessageBox_C_SetHeaderAndBody, Temp_text_Variable_20) == 0x000250, "Member 'OrderDetailsMessageBox_C_SetHeaderAndBody::Temp_text_Variable_20' has a wrong offset!");
static_assert(offsetof(OrderDetailsMessageBox_C_SetHeaderAndBody, Temp_text_Variable_21) == 0x000268, "Member 'OrderDetailsMessageBox_C_SetHeaderAndBody::Temp_text_Variable_21' has a wrong offset!");
static_assert(offsetof(OrderDetailsMessageBox_C_SetHeaderAndBody, Temp_text_Variable_22) == 0x000280, "Member 'OrderDetailsMessageBox_C_SetHeaderAndBody::Temp_text_Variable_22' has a wrong offset!");
static_assert(offsetof(OrderDetailsMessageBox_C_SetHeaderAndBody, Temp_text_Variable_23) == 0x000298, "Member 'OrderDetailsMessageBox_C_SetHeaderAndBody::Temp_text_Variable_23' has a wrong offset!");
static_assert(offsetof(OrderDetailsMessageBox_C_SetHeaderAndBody, Temp_text_Variable_24) == 0x0002B0, "Member 'OrderDetailsMessageBox_C_SetHeaderAndBody::Temp_text_Variable_24' has a wrong offset!");
static_assert(offsetof(OrderDetailsMessageBox_C_SetHeaderAndBody, Temp_text_Variable_25) == 0x0002C8, "Member 'OrderDetailsMessageBox_C_SetHeaderAndBody::Temp_text_Variable_25' has a wrong offset!");
static_assert(offsetof(OrderDetailsMessageBox_C_SetHeaderAndBody, Temp_text_Variable_26) == 0x0002E0, "Member 'OrderDetailsMessageBox_C_SetHeaderAndBody::Temp_text_Variable_26' has a wrong offset!");
static_assert(offsetof(OrderDetailsMessageBox_C_SetHeaderAndBody, Temp_text_Variable_27) == 0x0002F8, "Member 'OrderDetailsMessageBox_C_SetHeaderAndBody::Temp_text_Variable_27' has a wrong offset!");
static_assert(offsetof(OrderDetailsMessageBox_C_SetHeaderAndBody, Temp_text_Variable_28) == 0x000310, "Member 'OrderDetailsMessageBox_C_SetHeaderAndBody::Temp_text_Variable_28' has a wrong offset!");
static_assert(offsetof(OrderDetailsMessageBox_C_SetHeaderAndBody, Temp_text_Variable_29) == 0x000328, "Member 'OrderDetailsMessageBox_C_SetHeaderAndBody::Temp_text_Variable_29' has a wrong offset!");
static_assert(offsetof(OrderDetailsMessageBox_C_SetHeaderAndBody, Temp_text_Variable_30) == 0x000340, "Member 'OrderDetailsMessageBox_C_SetHeaderAndBody::Temp_text_Variable_30' has a wrong offset!");
static_assert(offsetof(OrderDetailsMessageBox_C_SetHeaderAndBody, Temp_text_Variable_31) == 0x000358, "Member 'OrderDetailsMessageBox_C_SetHeaderAndBody::Temp_text_Variable_31' has a wrong offset!");
static_assert(offsetof(OrderDetailsMessageBox_C_SetHeaderAndBody, Temp_text_Variable_32) == 0x000370, "Member 'OrderDetailsMessageBox_C_SetHeaderAndBody::Temp_text_Variable_32' has a wrong offset!");
static_assert(offsetof(OrderDetailsMessageBox_C_SetHeaderAndBody, Temp_text_Variable_33) == 0x000388, "Member 'OrderDetailsMessageBox_C_SetHeaderAndBody::Temp_text_Variable_33' has a wrong offset!");
static_assert(offsetof(OrderDetailsMessageBox_C_SetHeaderAndBody, Temp_text_Variable_34) == 0x0003A0, "Member 'OrderDetailsMessageBox_C_SetHeaderAndBody::Temp_text_Variable_34' has a wrong offset!");
static_assert(offsetof(OrderDetailsMessageBox_C_SetHeaderAndBody, Temp_text_Variable_35) == 0x0003B8, "Member 'OrderDetailsMessageBox_C_SetHeaderAndBody::Temp_text_Variable_35' has a wrong offset!");
static_assert(offsetof(OrderDetailsMessageBox_C_SetHeaderAndBody, Temp_text_Variable_36) == 0x0003D0, "Member 'OrderDetailsMessageBox_C_SetHeaderAndBody::Temp_text_Variable_36' has a wrong offset!");
static_assert(offsetof(OrderDetailsMessageBox_C_SetHeaderAndBody, Temp_text_Variable_37) == 0x0003E8, "Member 'OrderDetailsMessageBox_C_SetHeaderAndBody::Temp_text_Variable_37' has a wrong offset!");
static_assert(offsetof(OrderDetailsMessageBox_C_SetHeaderAndBody, Temp_text_Variable_38) == 0x000400, "Member 'OrderDetailsMessageBox_C_SetHeaderAndBody::Temp_text_Variable_38' has a wrong offset!");
static_assert(offsetof(OrderDetailsMessageBox_C_SetHeaderAndBody, Temp_text_Variable_39) == 0x000418, "Member 'OrderDetailsMessageBox_C_SetHeaderAndBody::Temp_text_Variable_39' has a wrong offset!");
static_assert(offsetof(OrderDetailsMessageBox_C_SetHeaderAndBody, K2Node_Select_Default) == 0x000430, "Member 'OrderDetailsMessageBox_C_SetHeaderAndBody::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(OrderDetailsMessageBox_C_SetHeaderAndBody, Temp_byte_Variable_1) == 0x000448, "Member 'OrderDetailsMessageBox_C_SetHeaderAndBody::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(OrderDetailsMessageBox_C_SetHeaderAndBody, K2Node_Select_Default_1) == 0x000450, "Member 'OrderDetailsMessageBox_C_SetHeaderAndBody::K2Node_Select_Default_1' has a wrong offset!");

// Function OrderDetailsMessageBox.OrderDetailsMessageBox_C.AddRewardWidget
// 0x0028 (0x0028 - 0x0000)
struct OrderDetailsMessageBox_C_AddRewardWidget final
{
public:
	class UDefaultRewardButton_C*                 ButtonInstance;                                    // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FMargin                                K2Node_MakeStruct_Margin;                          // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UDefaultRewardButton_C*                 CallFunc_Create_ReturnValue;                       // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UHorizontalBoxSlot*                     CallFunc_AddChildToHorizontalBox_ReturnValue;      // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(OrderDetailsMessageBox_C_AddRewardWidget) == 0x000008, "Wrong alignment on OrderDetailsMessageBox_C_AddRewardWidget");
static_assert(sizeof(OrderDetailsMessageBox_C_AddRewardWidget) == 0x000028, "Wrong size on OrderDetailsMessageBox_C_AddRewardWidget");
static_assert(offsetof(OrderDetailsMessageBox_C_AddRewardWidget, ButtonInstance) == 0x000000, "Member 'OrderDetailsMessageBox_C_AddRewardWidget::ButtonInstance' has a wrong offset!");
static_assert(offsetof(OrderDetailsMessageBox_C_AddRewardWidget, K2Node_MakeStruct_Margin) == 0x000008, "Member 'OrderDetailsMessageBox_C_AddRewardWidget::K2Node_MakeStruct_Margin' has a wrong offset!");
static_assert(offsetof(OrderDetailsMessageBox_C_AddRewardWidget, CallFunc_Create_ReturnValue) == 0x000018, "Member 'OrderDetailsMessageBox_C_AddRewardWidget::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(OrderDetailsMessageBox_C_AddRewardWidget, CallFunc_AddChildToHorizontalBox_ReturnValue) == 0x000020, "Member 'OrderDetailsMessageBox_C_AddRewardWidget::CallFunc_AddChildToHorizontalBox_ReturnValue' has a wrong offset!");

// Function OrderDetailsMessageBox.OrderDetailsMessageBox_C.AddRocketbucksWidgets
// 0x0070 (0x0070 - 0x0000)
struct OrderDetailsMessageBox_C_AddRocketbucksWidgets final
{
public:
	struct FMangoOrderDetails                     OrderDetails;                                      // 0x0000(0x0050)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item;                           // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDefaultRewardButton_C*                 CallFunc_AddRewardWidget_ButtonInstance;           // 0x0060(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_69[0x3];                                       // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(OrderDetailsMessageBox_C_AddRocketbucksWidgets) == 0x000008, "Wrong alignment on OrderDetailsMessageBox_C_AddRocketbucksWidgets");
static_assert(sizeof(OrderDetailsMessageBox_C_AddRocketbucksWidgets) == 0x000070, "Wrong size on OrderDetailsMessageBox_C_AddRocketbucksWidgets");
static_assert(offsetof(OrderDetailsMessageBox_C_AddRocketbucksWidgets, OrderDetails) == 0x000000, "Member 'OrderDetailsMessageBox_C_AddRocketbucksWidgets::OrderDetails' has a wrong offset!");
static_assert(offsetof(OrderDetailsMessageBox_C_AddRocketbucksWidgets, Temp_int_Array_Index_Variable) == 0x000050, "Member 'OrderDetailsMessageBox_C_AddRocketbucksWidgets::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(OrderDetailsMessageBox_C_AddRocketbucksWidgets, CallFunc_Array_Length_ReturnValue) == 0x000054, "Member 'OrderDetailsMessageBox_C_AddRocketbucksWidgets::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(OrderDetailsMessageBox_C_AddRocketbucksWidgets, CallFunc_Array_Get_Item) == 0x000058, "Member 'OrderDetailsMessageBox_C_AddRocketbucksWidgets::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(OrderDetailsMessageBox_C_AddRocketbucksWidgets, Temp_int_Loop_Counter_Variable) == 0x00005C, "Member 'OrderDetailsMessageBox_C_AddRocketbucksWidgets::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(OrderDetailsMessageBox_C_AddRocketbucksWidgets, CallFunc_AddRewardWidget_ButtonInstance) == 0x000060, "Member 'OrderDetailsMessageBox_C_AddRocketbucksWidgets::CallFunc_AddRewardWidget_ButtonInstance' has a wrong offset!");
static_assert(offsetof(OrderDetailsMessageBox_C_AddRocketbucksWidgets, CallFunc_Less_IntInt_ReturnValue) == 0x000068, "Member 'OrderDetailsMessageBox_C_AddRocketbucksWidgets::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(OrderDetailsMessageBox_C_AddRocketbucksWidgets, CallFunc_Add_IntInt_ReturnValue) == 0x00006C, "Member 'OrderDetailsMessageBox_C_AddRocketbucksWidgets::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function OrderDetailsMessageBox.OrderDetailsMessageBox_C.AddItemWidgets
// 0x00F8 (0x00F8 - 0x0000)
struct OrderDetailsMessageBox_C_AddItemWidgets final
{
public:
	struct FMangoOrderDetails                     OrderDetails;                                      // 0x0000(0x0050)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMangoOrderItem                        CallFunc_Array_Get_Item;                           // 0x0058(0x0020)()
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_82[0x2];                                       // 0x0082(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDefaultRewardButton_C*                 CallFunc_AddRewardWidget_ButtonInstance;           // 0x0088(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDefaultRewardButton_C*                 CallFunc_AddRewardWidget_ButtonInstance_1;         // 0x0090(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMangoCMSManager*                       CallFunc_Get_ReturnValue;                          // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FMangoItem                             CallFunc_TryGetItemByCMSID_OutItem;                // 0x00A0(0x0050)()
	bool                                          CallFunc_TryGetItemByCMSID_ReturnValue;            // 0x00F0(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(OrderDetailsMessageBox_C_AddItemWidgets) == 0x000008, "Wrong alignment on OrderDetailsMessageBox_C_AddItemWidgets");
static_assert(sizeof(OrderDetailsMessageBox_C_AddItemWidgets) == 0x0000F8, "Wrong size on OrderDetailsMessageBox_C_AddItemWidgets");
static_assert(offsetof(OrderDetailsMessageBox_C_AddItemWidgets, OrderDetails) == 0x000000, "Member 'OrderDetailsMessageBox_C_AddItemWidgets::OrderDetails' has a wrong offset!");
static_assert(offsetof(OrderDetailsMessageBox_C_AddItemWidgets, Temp_int_Array_Index_Variable) == 0x000050, "Member 'OrderDetailsMessageBox_C_AddItemWidgets::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(OrderDetailsMessageBox_C_AddItemWidgets, CallFunc_Array_Get_Item) == 0x000058, "Member 'OrderDetailsMessageBox_C_AddItemWidgets::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(OrderDetailsMessageBox_C_AddItemWidgets, CallFunc_Array_Length_ReturnValue) == 0x000078, "Member 'OrderDetailsMessageBox_C_AddItemWidgets::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(OrderDetailsMessageBox_C_AddItemWidgets, Temp_int_Loop_Counter_Variable) == 0x00007C, "Member 'OrderDetailsMessageBox_C_AddItemWidgets::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(OrderDetailsMessageBox_C_AddItemWidgets, CallFunc_Greater_IntInt_ReturnValue) == 0x000080, "Member 'OrderDetailsMessageBox_C_AddItemWidgets::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(OrderDetailsMessageBox_C_AddItemWidgets, CallFunc_Less_IntInt_ReturnValue) == 0x000081, "Member 'OrderDetailsMessageBox_C_AddItemWidgets::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(OrderDetailsMessageBox_C_AddItemWidgets, CallFunc_Add_IntInt_ReturnValue) == 0x000084, "Member 'OrderDetailsMessageBox_C_AddItemWidgets::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(OrderDetailsMessageBox_C_AddItemWidgets, CallFunc_AddRewardWidget_ButtonInstance) == 0x000088, "Member 'OrderDetailsMessageBox_C_AddItemWidgets::CallFunc_AddRewardWidget_ButtonInstance' has a wrong offset!");
static_assert(offsetof(OrderDetailsMessageBox_C_AddItemWidgets, CallFunc_AddRewardWidget_ButtonInstance_1) == 0x000090, "Member 'OrderDetailsMessageBox_C_AddItemWidgets::CallFunc_AddRewardWidget_ButtonInstance_1' has a wrong offset!");
static_assert(offsetof(OrderDetailsMessageBox_C_AddItemWidgets, CallFunc_Get_ReturnValue) == 0x000098, "Member 'OrderDetailsMessageBox_C_AddItemWidgets::CallFunc_Get_ReturnValue' has a wrong offset!");
static_assert(offsetof(OrderDetailsMessageBox_C_AddItemWidgets, CallFunc_TryGetItemByCMSID_OutItem) == 0x0000A0, "Member 'OrderDetailsMessageBox_C_AddItemWidgets::CallFunc_TryGetItemByCMSID_OutItem' has a wrong offset!");
static_assert(offsetof(OrderDetailsMessageBox_C_AddItemWidgets, CallFunc_TryGetItemByCMSID_ReturnValue) == 0x0000F0, "Member 'OrderDetailsMessageBox_C_AddItemWidgets::CallFunc_TryGetItemByCMSID_ReturnValue' has a wrong offset!");

// Function OrderDetailsMessageBox.OrderDetailsMessageBox_C.AddBlastPassWidgets
// 0x0070 (0x0070 - 0x0000)
struct OrderDetailsMessageBox_C_AddBlastPassWidgets final
{
public:
	class FString                                 OfferId;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	struct FMangoOrderDetails                     OrderDetails;                                      // 0x0010(0x0050)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class UDefaultRewardButton_C*                 CallFunc_AddRewardWidget_ButtonInstance;           // 0x0060(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_StrStr_ReturnValue;              // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(OrderDetailsMessageBox_C_AddBlastPassWidgets) == 0x000008, "Wrong alignment on OrderDetailsMessageBox_C_AddBlastPassWidgets");
static_assert(sizeof(OrderDetailsMessageBox_C_AddBlastPassWidgets) == 0x000070, "Wrong size on OrderDetailsMessageBox_C_AddBlastPassWidgets");
static_assert(offsetof(OrderDetailsMessageBox_C_AddBlastPassWidgets, OfferId) == 0x000000, "Member 'OrderDetailsMessageBox_C_AddBlastPassWidgets::OfferId' has a wrong offset!");
static_assert(offsetof(OrderDetailsMessageBox_C_AddBlastPassWidgets, OrderDetails) == 0x000010, "Member 'OrderDetailsMessageBox_C_AddBlastPassWidgets::OrderDetails' has a wrong offset!");
static_assert(offsetof(OrderDetailsMessageBox_C_AddBlastPassWidgets, CallFunc_AddRewardWidget_ButtonInstance) == 0x000060, "Member 'OrderDetailsMessageBox_C_AddBlastPassWidgets::CallFunc_AddRewardWidget_ButtonInstance' has a wrong offset!");
static_assert(offsetof(OrderDetailsMessageBox_C_AddBlastPassWidgets, CallFunc_NotEqual_StrStr_ReturnValue) == 0x000068, "Member 'OrderDetailsMessageBox_C_AddBlastPassWidgets::CallFunc_NotEqual_StrStr_ReturnValue' has a wrong offset!");

// Function OrderDetailsMessageBox.OrderDetailsMessageBox_C.GetOrderObjectCount
// 0x0080 (0x0080 - 0x0000)
struct OrderDetailsMessageBox_C_GetOrderObjectCount final
{
public:
	struct FMangoOrderDetails                     OrderDetails;                                      // 0x0000(0x0050)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	int32                                         Count;                                             // 0x0050(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ObjectCount;                                       // 0x0054(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_StrStr_ReturnValue;              // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5D[0x3];                                       // 0x005D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(OrderDetailsMessageBox_C_GetOrderObjectCount) == 0x000008, "Wrong alignment on OrderDetailsMessageBox_C_GetOrderObjectCount");
static_assert(sizeof(OrderDetailsMessageBox_C_GetOrderObjectCount) == 0x000080, "Wrong size on OrderDetailsMessageBox_C_GetOrderObjectCount");
static_assert(offsetof(OrderDetailsMessageBox_C_GetOrderObjectCount, OrderDetails) == 0x000000, "Member 'OrderDetailsMessageBox_C_GetOrderObjectCount::OrderDetails' has a wrong offset!");
static_assert(offsetof(OrderDetailsMessageBox_C_GetOrderObjectCount, Count) == 0x000050, "Member 'OrderDetailsMessageBox_C_GetOrderObjectCount::Count' has a wrong offset!");
static_assert(offsetof(OrderDetailsMessageBox_C_GetOrderObjectCount, ObjectCount) == 0x000054, "Member 'OrderDetailsMessageBox_C_GetOrderObjectCount::ObjectCount' has a wrong offset!");
static_assert(offsetof(OrderDetailsMessageBox_C_GetOrderObjectCount, Temp_int_Variable) == 0x000058, "Member 'OrderDetailsMessageBox_C_GetOrderObjectCount::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(OrderDetailsMessageBox_C_GetOrderObjectCount, CallFunc_NotEqual_StrStr_ReturnValue) == 0x00005C, "Member 'OrderDetailsMessageBox_C_GetOrderObjectCount::CallFunc_NotEqual_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(OrderDetailsMessageBox_C_GetOrderObjectCount, CallFunc_Add_IntInt_ReturnValue) == 0x000060, "Member 'OrderDetailsMessageBox_C_GetOrderObjectCount::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(OrderDetailsMessageBox_C_GetOrderObjectCount, CallFunc_Array_Length_ReturnValue) == 0x000064, "Member 'OrderDetailsMessageBox_C_GetOrderObjectCount::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(OrderDetailsMessageBox_C_GetOrderObjectCount, CallFunc_Array_Length_ReturnValue_1) == 0x000068, "Member 'OrderDetailsMessageBox_C_GetOrderObjectCount::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(OrderDetailsMessageBox_C_GetOrderObjectCount, CallFunc_Array_Length_ReturnValue_2) == 0x00006C, "Member 'OrderDetailsMessageBox_C_GetOrderObjectCount::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(OrderDetailsMessageBox_C_GetOrderObjectCount, CallFunc_Add_IntInt_ReturnValue_1) == 0x000070, "Member 'OrderDetailsMessageBox_C_GetOrderObjectCount::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(OrderDetailsMessageBox_C_GetOrderObjectCount, CallFunc_Add_IntInt_ReturnValue_2) == 0x000074, "Member 'OrderDetailsMessageBox_C_GetOrderObjectCount::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(OrderDetailsMessageBox_C_GetOrderObjectCount, CallFunc_Add_IntInt_ReturnValue_3) == 0x000078, "Member 'OrderDetailsMessageBox_C_GetOrderObjectCount::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");

// Function OrderDetailsMessageBox.OrderDetailsMessageBox_C.AddXPBonusWidgets
// 0x0078 (0x0078 - 0x0000)
struct OrderDetailsMessageBox_C_AddXPBonusWidgets final
{
public:
	struct FMangoOrderDetails                     OrderDetails;                                      // 0x0000(0x0050)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FMangoOrderXPBonus                     CallFunc_Array_Get_Item;                           // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UDefaultRewardButton_C*                 CallFunc_AddRewardWidget_ButtonInstance;           // 0x0068(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71[0x3];                                       // 0x0071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(OrderDetailsMessageBox_C_AddXPBonusWidgets) == 0x000008, "Wrong alignment on OrderDetailsMessageBox_C_AddXPBonusWidgets");
static_assert(sizeof(OrderDetailsMessageBox_C_AddXPBonusWidgets) == 0x000078, "Wrong size on OrderDetailsMessageBox_C_AddXPBonusWidgets");
static_assert(offsetof(OrderDetailsMessageBox_C_AddXPBonusWidgets, OrderDetails) == 0x000000, "Member 'OrderDetailsMessageBox_C_AddXPBonusWidgets::OrderDetails' has a wrong offset!");
static_assert(offsetof(OrderDetailsMessageBox_C_AddXPBonusWidgets, Temp_int_Array_Index_Variable) == 0x000050, "Member 'OrderDetailsMessageBox_C_AddXPBonusWidgets::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(OrderDetailsMessageBox_C_AddXPBonusWidgets, CallFunc_Array_Length_ReturnValue) == 0x000054, "Member 'OrderDetailsMessageBox_C_AddXPBonusWidgets::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(OrderDetailsMessageBox_C_AddXPBonusWidgets, CallFunc_Array_Get_Item) == 0x000058, "Member 'OrderDetailsMessageBox_C_AddXPBonusWidgets::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(OrderDetailsMessageBox_C_AddXPBonusWidgets, Temp_int_Loop_Counter_Variable) == 0x000060, "Member 'OrderDetailsMessageBox_C_AddXPBonusWidgets::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(OrderDetailsMessageBox_C_AddXPBonusWidgets, CallFunc_AddRewardWidget_ButtonInstance) == 0x000068, "Member 'OrderDetailsMessageBox_C_AddXPBonusWidgets::CallFunc_AddRewardWidget_ButtonInstance' has a wrong offset!");
static_assert(offsetof(OrderDetailsMessageBox_C_AddXPBonusWidgets, CallFunc_Less_IntInt_ReturnValue) == 0x000070, "Member 'OrderDetailsMessageBox_C_AddXPBonusWidgets::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(OrderDetailsMessageBox_C_AddXPBonusWidgets, CallFunc_Add_IntInt_ReturnValue) == 0x000074, "Member 'OrderDetailsMessageBox_C_AddXPBonusWidgets::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

}

