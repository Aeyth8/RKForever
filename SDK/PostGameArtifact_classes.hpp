#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PostGameArtifact

#include "Basic.hpp"

#include "MangoClient_structs.hpp"
#include "Engine_structs.hpp"
#include "UMG_classes.hpp"
#include "AkAudio_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass PostGameArtifact.PostGameArtifact_C
// 0x0098 (0x02C8 - 0x0230)
class UPostGameArtifact_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0230(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       HideArtifact;                                      // 0x0238(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       PresentArtifact;                                   // 0x0240(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class URichTextBlock*                         ArtifactDescription;                               // 0x0248(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UArtifactImage_C*                       ArtifactImage;                                     // 0x0250(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             ArtifactName;                                      // 0x0258(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UArtifactProgressBar_C*                 ArtifactProgressBar;                               // 0x0260(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               RootSizeBox;                                       // 0x0268(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	UMulticastInlineDelegateProperty_             OnPresentationComplete;                            // 0x0270(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	UMulticastInlineDelegateProperty_             OnHideComplete;                                    // 0x0280(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	struct FMangoItemResult                       ItemProgress;                                      // 0x0290(0x0030)(Edit, BlueprintVisible, DisableEditOnInstance)
	int32                                         MaxArtifactLevel;                                  // 0x02C0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void OnPresentationComplete__DelegateSignature();
	void OnHideComplete__DelegateSignature();
	void ExecuteUbergraph_PostGameArtifact(int32 EntryPoint);
	void PresentReward(const struct FMangoReward& Reward);
	void LevelChanged(int32 Level);
	void WidgetAnimationEvt_PresentArtifact_K2Node_WidgetAnimationEvent_0();
	void WidgetAnimationEvt_HideArtifact_K2Node_WidgetAnimationEvent_1();
	void PresentProgress(const struct FMangoItemResult& ItemResult);
	void PresentUnlock(EMangoItemType ItemType, const class FString& ItemID);
	void ProgressBarComplete();
	void TransitionOut();
	void UpdateArtifactLevel(int32 Level, EMangoItemType ArtifactType, const class FString& ItemID, bool bJustUnlocked);
	void SetSize(float Size);
	void GetArtifactImprovementText(float ImprovementNumber, const class FString& ImprovementSymbol, class FText* ImprovementText);
	void Get_Artifact_Progress_Bar(class UArtifactProgressBar_C** ArtifactProgressBar_0);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"PostGameArtifact_C">();
	}
	static class UPostGameArtifact_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPostGameArtifact_C>();
	}
};
static_assert(alignof(UPostGameArtifact_C) == 0x000008, "Wrong alignment on UPostGameArtifact_C");
static_assert(sizeof(UPostGameArtifact_C) == 0x0002C8, "Wrong size on UPostGameArtifact_C");
static_assert(offsetof(UPostGameArtifact_C, UberGraphFrame) == 0x000230, "Member 'UPostGameArtifact_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UPostGameArtifact_C, HideArtifact) == 0x000238, "Member 'UPostGameArtifact_C::HideArtifact' has a wrong offset!");
static_assert(offsetof(UPostGameArtifact_C, PresentArtifact) == 0x000240, "Member 'UPostGameArtifact_C::PresentArtifact' has a wrong offset!");
static_assert(offsetof(UPostGameArtifact_C, ArtifactDescription) == 0x000248, "Member 'UPostGameArtifact_C::ArtifactDescription' has a wrong offset!");
static_assert(offsetof(UPostGameArtifact_C, ArtifactImage) == 0x000250, "Member 'UPostGameArtifact_C::ArtifactImage' has a wrong offset!");
static_assert(offsetof(UPostGameArtifact_C, ArtifactName) == 0x000258, "Member 'UPostGameArtifact_C::ArtifactName' has a wrong offset!");
static_assert(offsetof(UPostGameArtifact_C, ArtifactProgressBar) == 0x000260, "Member 'UPostGameArtifact_C::ArtifactProgressBar' has a wrong offset!");
static_assert(offsetof(UPostGameArtifact_C, RootSizeBox) == 0x000268, "Member 'UPostGameArtifact_C::RootSizeBox' has a wrong offset!");
static_assert(offsetof(UPostGameArtifact_C, OnPresentationComplete) == 0x000270, "Member 'UPostGameArtifact_C::OnPresentationComplete' has a wrong offset!");
static_assert(offsetof(UPostGameArtifact_C, OnHideComplete) == 0x000280, "Member 'UPostGameArtifact_C::OnHideComplete' has a wrong offset!");
static_assert(offsetof(UPostGameArtifact_C, ItemProgress) == 0x000290, "Member 'UPostGameArtifact_C::ItemProgress' has a wrong offset!");
static_assert(offsetof(UPostGameArtifact_C, MaxArtifactLevel) == 0x0002C0, "Member 'UPostGameArtifact_C::MaxArtifactLevel' has a wrong offset!");

}

