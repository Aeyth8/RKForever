#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: NewItemLine

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass NewItemLine.NewItemLine_C
// 0x0038 (0x0268 - 0x0230)
class UNewItemLine_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0230(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       NoticeIconAnim;                                    // 0x0238(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 GlowCircle;                                        // 0x0240(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             ItemText;                                          // 0x0248(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class FText                                   DisplayText;                                       // 0x0250(0x0018)(Edit, BlueprintVisible)

public:
	void ExecuteUbergraph_NewItemLine(int32 EntryPoint);
	void Construct();
	void PreConstruct(bool IsDesignTime);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"NewItemLine_C">();
	}
	static class UNewItemLine_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UNewItemLine_C>();
	}
};
static_assert(alignof(UNewItemLine_C) == 0x000008, "Wrong alignment on UNewItemLine_C");
static_assert(sizeof(UNewItemLine_C) == 0x000268, "Wrong size on UNewItemLine_C");
static_assert(offsetof(UNewItemLine_C, UberGraphFrame) == 0x000230, "Member 'UNewItemLine_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UNewItemLine_C, NoticeIconAnim) == 0x000238, "Member 'UNewItemLine_C::NoticeIconAnim' has a wrong offset!");
static_assert(offsetof(UNewItemLine_C, GlowCircle) == 0x000240, "Member 'UNewItemLine_C::GlowCircle' has a wrong offset!");
static_assert(offsetof(UNewItemLine_C, ItemText) == 0x000248, "Member 'UNewItemLine_C::ItemText' has a wrong offset!");
static_assert(offsetof(UNewItemLine_C, DisplayText) == 0x000250, "Member 'UNewItemLine_C::DisplayText' has a wrong offset!");

}

