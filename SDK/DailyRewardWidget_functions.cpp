#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: DailyRewardWidget

#include "Basic.hpp"

#include "DailyRewardWidget_classes.hpp"
#include "DailyRewardWidget_parameters.hpp"


namespace SDK
{

// Function DailyRewardWidget.DailyRewardWidget_C.OnButtonSelected__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UDailyRewardWidget_C*             Widget                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UDailyRewardWidget_C::OnButtonSelected__DelegateSignature(class UDailyRewardWidget_C* Widget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DailyRewardWidget_C", "OnButtonSelected__DelegateSignature");

	Params::DailyRewardWidget_C_OnButtonSelected__DelegateSignature Parms{};

	Parms.Widget = Widget;

	UObject::ProcessEvent(Func, &Parms);
}


// Function DailyRewardWidget.DailyRewardWidget_C.ExecuteUbergraph_DailyRewardWidget
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UDailyRewardWidget_C::ExecuteUbergraph_DailyRewardWidget(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DailyRewardWidget_C", "ExecuteUbergraph_DailyRewardWidget");

	Params::DailyRewardWidget_C_ExecuteUbergraph_DailyRewardWidget Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function DailyRewardWidget.DailyRewardWidget_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UDailyRewardWidget_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DailyRewardWidget_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function DailyRewardWidget.DailyRewardWidget_C.PopulateReward
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FMangoLoginReward                LoginReward_0                                          (BlueprintVisible, BlueprintReadOnly, Parm)
// bool                                    IsActiveReward                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UDailyRewardWidget_C::PopulateReward(const struct FMangoLoginReward& LoginReward_0, bool* IsActiveReward)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DailyRewardWidget_C", "PopulateReward");

	Params::DailyRewardWidget_C_PopulateReward Parms{};

	Parms.LoginReward_0 = std::move(LoginReward_0);

	UObject::ProcessEvent(Func, &Parms);

	if (IsActiveReward != nullptr)
		*IsActiveReward = Parms.IsActiveReward;
}


// Function DailyRewardWidget.DailyRewardWidget_C.SetAsActiveReward
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsActive                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UDailyRewardWidget_C::SetAsActiveReward(bool IsActive)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DailyRewardWidget_C", "SetAsActiveReward");

	Params::DailyRewardWidget_C_SetAsActiveReward Parms{};

	Parms.IsActive = IsActive;

	UObject::ProcessEvent(Func, &Parms);
}


// Function DailyRewardWidget.DailyRewardWidget_C.OnSelected
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UMarinerLayeredButton*            Button                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UDailyRewardWidget_C::OnSelected(class UMarinerLayeredButton* Button)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DailyRewardWidget_C", "OnSelected");

	Params::DailyRewardWidget_C_OnSelected Parms{};

	Parms.Button = Button;

	UObject::ProcessEvent(Func, &Parms);
}

}

