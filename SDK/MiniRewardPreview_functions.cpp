#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: MiniRewardPreview

#include "Basic.hpp"

#include "MiniRewardPreview_classes.hpp"
#include "MiniRewardPreview_parameters.hpp"


namespace SDK
{

// Function MiniRewardPreview.MiniRewardPreview_C.Init CurrencyReward
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   CurrencyNum                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bPremium                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UMiniRewardPreview_C::Init_CurrencyReward(int32 CurrencyNum, bool bPremium)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MiniRewardPreview_C", "Init CurrencyReward");

	Params::MiniRewardPreview_C_Init_CurrencyReward Parms{};

	Parms.CurrencyNum = CurrencyNum;
	Parms.bPremium = bPremium;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MiniRewardPreview.MiniRewardPreview_C.InitBlastPassReward
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   BlastPassPips                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UMiniRewardPreview_C::InitBlastPassReward(float BlastPassPips)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MiniRewardPreview_C", "InitBlastPassReward");

	Params::MiniRewardPreview_C_InitBlastPassReward Parms{};

	Parms.BlastPassPips = BlastPassPips;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MiniRewardPreview.MiniRewardPreview_C.InitItemReward
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FMangoItem                       Item                                                   (BlueprintVisible, BlueprintReadOnly, Parm)

void UMiniRewardPreview_C::InitItemReward(const struct FMangoItem& Item)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MiniRewardPreview_C", "InitItemReward");

	Params::MiniRewardPreview_C_InitItemReward Parms{};

	Parms.Item = std::move(Item);

	UObject::ProcessEvent(Func, &Parms);
}


// Function MiniRewardPreview.MiniRewardPreview_C.Set Item Type
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FMangoItem                       Item                                                   (BlueprintVisible, BlueprintReadOnly, Parm)

void UMiniRewardPreview_C::Set_Item_Type(const struct FMangoItem& Item)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MiniRewardPreview_C", "Set Item Type");

	Params::MiniRewardPreview_C_Set_Item_Type Parms{};

	Parms.Item = std::move(Item);

	UObject::ProcessEvent(Func, &Parms);
}

}

