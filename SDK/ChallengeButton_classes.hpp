#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ChallengeButton

#include "Basic.hpp"

#include "MangoClient_structs.hpp"
#include "Engine_structs.hpp"
#include "Mariner_structs.hpp"
#include "Mariner_classes.hpp"
#include "AkAudio_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass ChallengeButton.ChallengeButton_C
// 0x0448 (0x0900 - 0x04B8)
class UChallengeButton_C final : public UMarinerSettingButton
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x04B8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       ProgressAnim;                                      // 0x04C0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       ChallengeComplete;                                 // 0x04C8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       HoveredAnim;                                       // 0x04D0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       AvailableToClaim;                                  // 0x04D8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       DismissCompleted;                                  // 0x04E0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       DismissStarted;                                    // 0x04E8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 AvailableBackground_1;                             // 0x04F0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Background;                                        // 0x04F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UChallengeProgress_C*                   ChallengeProgress;                                 // 0x0500(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 ClaimedGradient;                                   // 0x0508(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               ClaimedPanel;                                      // 0x0510(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             Description;                                       // 0x0518(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UDismissChallengePrompt_C*              DismissChallangePrompt;                            // 0x0520(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 DismissSpinner;                                    // 0x0528(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Flash00;                                           // 0x0530(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Flash01;                                           // 0x0538(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Flash02;                                           // 0x0540(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Flash03;                                           // 0x0548(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Flash04;                                           // 0x0550(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Flash05;                                           // 0x0558(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Fuelparticles;                                     // 0x0560(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Highlight;                                         // 0x0568(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UMarinerButton*                         HitArea;                                           // 0x0570(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UMiniRewardsPreview_C*                  MiniRewardsPreview;                                // 0x0578(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Progress;                                          // 0x0580(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Shockwave;                                         // 0x0588(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Solidwhite;                                        // 0x0590(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	struct FMangoQuestDescription                 QuestDesc;                                         // 0x0598(0x0118)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FMangoQuest                            CMSQuest;                                          // 0x06B0(0x0068)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FMangoQuestReward                      CMSQuestReward;                                    // 0x0718(0x00C8)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          DismissActive;                                     // 0x07E0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2175[0x7];                                     // 0x07E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMangoQuestDescription                 AnimGoalDesc;                                      // 0x07E8(0x0118)(Edit, BlueprintVisible, DisableEditOnInstance)

public:
	void ExecuteUbergraph_ChallengeButton(int32 EntryPoint);
	void BPOnUnhighlight();
	void BPOnHighlight();
	void Destruct();
	void AnimationProgressCompleteEvent(const struct FMangoQuestDescription& Quest);
	void WidgetAnimationEvt_DismissStarted_K2Node_WidgetAnimationEvent_0();
	void BndEvt__HitArea_K2Node_ComponentBoundEvent_1_OnButtonClickedEvent__DelegateSignature();
	void ChallengeCompleteEvent(const struct FMangoQuestDescription& Quest);
	void Init(struct FMangoQuestDescription& Quest, bool AllowInput);
	bool GetBackgroundColor(struct FLinearColor* OutColor);
	void OnQuestDismissStarted(EMangoQuestSlot Param_Slot);
	void OnQuestDismissCompleted(bool WasSuccessful, EMangoQuestSlot Param_Slot, struct FMangoQuestDescription& Quest);
	void ReinitFromDismiss();
	void IsDismissable(bool* CanDismiss);
	void IsClaimable(bool* CanClaim);
	void OnQuestRewardClaimed(bool WasSuccessful, EMangoQuestSlot SlotId, struct FMangoQuestDescription& Param_QuestDesc);
	void AnimateToGoal(const struct FMangoQuestDescription& GoalQuestDesc, const TDelegate<void(const struct FMangoQuestDescription& Quest)>& AnimationComplete);
	bool HandleInput(EMarinerInputActions InInput);
	void DismissChallengeConfirm(struct FKey& KeyPressed);
	void DummyCallback(struct FKey& KeyPressed);
	void GetRewards(struct FMangoQuestReward* Reward, struct FMangoQuest* BlastPassXp);
	void PopulateReward();

	struct FMarinerSettingButtonAssets GetAssets() const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ChallengeButton_C">();
	}
	static class UChallengeButton_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UChallengeButton_C>();
	}
};
static_assert(alignof(UChallengeButton_C) == 0x000008, "Wrong alignment on UChallengeButton_C");
static_assert(sizeof(UChallengeButton_C) == 0x000900, "Wrong size on UChallengeButton_C");
static_assert(offsetof(UChallengeButton_C, UberGraphFrame) == 0x0004B8, "Member 'UChallengeButton_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UChallengeButton_C, ProgressAnim) == 0x0004C0, "Member 'UChallengeButton_C::ProgressAnim' has a wrong offset!");
static_assert(offsetof(UChallengeButton_C, ChallengeComplete) == 0x0004C8, "Member 'UChallengeButton_C::ChallengeComplete' has a wrong offset!");
static_assert(offsetof(UChallengeButton_C, HoveredAnim) == 0x0004D0, "Member 'UChallengeButton_C::HoveredAnim' has a wrong offset!");
static_assert(offsetof(UChallengeButton_C, AvailableToClaim) == 0x0004D8, "Member 'UChallengeButton_C::AvailableToClaim' has a wrong offset!");
static_assert(offsetof(UChallengeButton_C, DismissCompleted) == 0x0004E0, "Member 'UChallengeButton_C::DismissCompleted' has a wrong offset!");
static_assert(offsetof(UChallengeButton_C, DismissStarted) == 0x0004E8, "Member 'UChallengeButton_C::DismissStarted' has a wrong offset!");
static_assert(offsetof(UChallengeButton_C, AvailableBackground_1) == 0x0004F0, "Member 'UChallengeButton_C::AvailableBackground_1' has a wrong offset!");
static_assert(offsetof(UChallengeButton_C, Background) == 0x0004F8, "Member 'UChallengeButton_C::Background' has a wrong offset!");
static_assert(offsetof(UChallengeButton_C, ChallengeProgress) == 0x000500, "Member 'UChallengeButton_C::ChallengeProgress' has a wrong offset!");
static_assert(offsetof(UChallengeButton_C, ClaimedGradient) == 0x000508, "Member 'UChallengeButton_C::ClaimedGradient' has a wrong offset!");
static_assert(offsetof(UChallengeButton_C, ClaimedPanel) == 0x000510, "Member 'UChallengeButton_C::ClaimedPanel' has a wrong offset!");
static_assert(offsetof(UChallengeButton_C, Description) == 0x000518, "Member 'UChallengeButton_C::Description' has a wrong offset!");
static_assert(offsetof(UChallengeButton_C, DismissChallangePrompt) == 0x000520, "Member 'UChallengeButton_C::DismissChallangePrompt' has a wrong offset!");
static_assert(offsetof(UChallengeButton_C, DismissSpinner) == 0x000528, "Member 'UChallengeButton_C::DismissSpinner' has a wrong offset!");
static_assert(offsetof(UChallengeButton_C, Flash00) == 0x000530, "Member 'UChallengeButton_C::Flash00' has a wrong offset!");
static_assert(offsetof(UChallengeButton_C, Flash01) == 0x000538, "Member 'UChallengeButton_C::Flash01' has a wrong offset!");
static_assert(offsetof(UChallengeButton_C, Flash02) == 0x000540, "Member 'UChallengeButton_C::Flash02' has a wrong offset!");
static_assert(offsetof(UChallengeButton_C, Flash03) == 0x000548, "Member 'UChallengeButton_C::Flash03' has a wrong offset!");
static_assert(offsetof(UChallengeButton_C, Flash04) == 0x000550, "Member 'UChallengeButton_C::Flash04' has a wrong offset!");
static_assert(offsetof(UChallengeButton_C, Flash05) == 0x000558, "Member 'UChallengeButton_C::Flash05' has a wrong offset!");
static_assert(offsetof(UChallengeButton_C, Fuelparticles) == 0x000560, "Member 'UChallengeButton_C::Fuelparticles' has a wrong offset!");
static_assert(offsetof(UChallengeButton_C, Highlight) == 0x000568, "Member 'UChallengeButton_C::Highlight' has a wrong offset!");
static_assert(offsetof(UChallengeButton_C, HitArea) == 0x000570, "Member 'UChallengeButton_C::HitArea' has a wrong offset!");
static_assert(offsetof(UChallengeButton_C, MiniRewardsPreview) == 0x000578, "Member 'UChallengeButton_C::MiniRewardsPreview' has a wrong offset!");
static_assert(offsetof(UChallengeButton_C, Progress) == 0x000580, "Member 'UChallengeButton_C::Progress' has a wrong offset!");
static_assert(offsetof(UChallengeButton_C, Shockwave) == 0x000588, "Member 'UChallengeButton_C::Shockwave' has a wrong offset!");
static_assert(offsetof(UChallengeButton_C, Solidwhite) == 0x000590, "Member 'UChallengeButton_C::Solidwhite' has a wrong offset!");
static_assert(offsetof(UChallengeButton_C, QuestDesc) == 0x000598, "Member 'UChallengeButton_C::QuestDesc' has a wrong offset!");
static_assert(offsetof(UChallengeButton_C, CMSQuest) == 0x0006B0, "Member 'UChallengeButton_C::CMSQuest' has a wrong offset!");
static_assert(offsetof(UChallengeButton_C, CMSQuestReward) == 0x000718, "Member 'UChallengeButton_C::CMSQuestReward' has a wrong offset!");
static_assert(offsetof(UChallengeButton_C, DismissActive) == 0x0007E0, "Member 'UChallengeButton_C::DismissActive' has a wrong offset!");
static_assert(offsetof(UChallengeButton_C, AnimGoalDesc) == 0x0007E8, "Member 'UChallengeButton_C::AnimGoalDesc' has a wrong offset!");

}

