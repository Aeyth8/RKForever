#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PregamePlayerWidget

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Mariner_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass PregamePlayerWidget.PregamePlayerWidget_C
// 0x0040 (0x0388 - 0x0348)
class UPregamePlayerWidget_C final : public UMarinerCharacterSelectedWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0348(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UCharacterLevelWidget_C*                CharacterLevel;                                    // 0x0350(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             CharacterName;                                     // 0x0358(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_55;                                          // 0x0360(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           MainPanel;                                         // 0x0368(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Platform;                                          // 0x0370(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             PlayerName;                                        // 0x0378(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class URankWidget_Large_C*                    RankWidget_Large;                                  // 0x0380(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_PregamePlayerWidget(int32 EntryPoint);
	void OnSetUnselectedState();
	void DisplayHoveredData(class AMarinerPlayerState* PlayerState, class UMarinerPlayableCharacter* CharacterData, class UMarinerSkinCollectionDataAsset* ActiveSkin, int32 Level, class UMarinerArtifactDataAsset* Artifact);
	void OnSetSelectedState();
	void DisplayData(class AMarinerPlayerState* PlayerState, class UMarinerSkinCollectionDataAsset* ActiveSkin, int32 Level, class UMarinerArtifactDataAsset* Artifact);
	void OnLockedSelectionChanged();
	void DisplayUnselectedState();
	void UpdateCharacterLevel(class AMarinerPlayerState* PlayerState, int32 Level);
	void IsLocalPlayerControlled(bool* bIsLocalPlayerControlled);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"PregamePlayerWidget_C">();
	}
	static class UPregamePlayerWidget_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPregamePlayerWidget_C>();
	}
};
static_assert(alignof(UPregamePlayerWidget_C) == 0x000008, "Wrong alignment on UPregamePlayerWidget_C");
static_assert(sizeof(UPregamePlayerWidget_C) == 0x000388, "Wrong size on UPregamePlayerWidget_C");
static_assert(offsetof(UPregamePlayerWidget_C, UberGraphFrame) == 0x000348, "Member 'UPregamePlayerWidget_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UPregamePlayerWidget_C, CharacterLevel) == 0x000350, "Member 'UPregamePlayerWidget_C::CharacterLevel' has a wrong offset!");
static_assert(offsetof(UPregamePlayerWidget_C, CharacterName) == 0x000358, "Member 'UPregamePlayerWidget_C::CharacterName' has a wrong offset!");
static_assert(offsetof(UPregamePlayerWidget_C, Image_55) == 0x000360, "Member 'UPregamePlayerWidget_C::Image_55' has a wrong offset!");
static_assert(offsetof(UPregamePlayerWidget_C, MainPanel) == 0x000368, "Member 'UPregamePlayerWidget_C::MainPanel' has a wrong offset!");
static_assert(offsetof(UPregamePlayerWidget_C, Platform) == 0x000370, "Member 'UPregamePlayerWidget_C::Platform' has a wrong offset!");
static_assert(offsetof(UPregamePlayerWidget_C, PlayerName) == 0x000378, "Member 'UPregamePlayerWidget_C::PlayerName' has a wrong offset!");
static_assert(offsetof(UPregamePlayerWidget_C, RankWidget_Large) == 0x000380, "Member 'UPregamePlayerWidget_C::RankWidget_Large' has a wrong offset!");

}

