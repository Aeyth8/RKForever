#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Splitgun_Lite_AnimBP

#include "Basic.hpp"

#include "E_ItemActivationTypes_structs.hpp"
#include "Engine_structs.hpp"
#include "AnimGraphRuntime_structs.hpp"
#include "Mariner_structs.hpp"
#include "Mariner_classes.hpp"
#include "DodgeDirections_structs.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass Splitgun_Lite_AnimBP.Splitgun_Lite_AnimBP_C
// 0x0BB0 (0x0E70 - 0x02C0)
class USplitgun_Lite_AnimBP_C final : public UMarinerAnimInstanceLite
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02C0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FAnimNode_Root                         AnimGraphNode_Root_93EB82FC4D0ECCCEA26842A53B044EEA; // 0x02C8(0x0030)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot_6601877049A48F6306F32798AB503BCE; // 0x02F8(0x0048)()
	struct FAnimNode_CopyBone                     AnimGraphNode_CopyBone_B5A96A884BD8FC8C3A2B7CB0900FF774; // 0x0340(0x00F0)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_81FBCFCD4DD1279AC11699A2224A6DE7; // 0x0430(0x0020)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_12EF1ED748066769537E5289298F197D; // 0x0450(0x0020)()
	struct FAnimNode_LegIK                        AnimGraphNode_LegIK_9C83CAB74826E880B728539D655EDE0B; // 0x0470(0x00F8)()
	struct FAnimNode_BlendListByEnum              AnimGraphNode_BlendListByEnum_AF5643C4473B1AF7461C9080F93295CD; // 0x0568(0x00B0)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_04D35A114266AFD93A6F59B16F807DC5; // 0x0618(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_66E98748487F98B3C0E91ABFF3EC8873; // 0x0640(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_C15B007340F6B08D75FF46ADEE0A6C20; // 0x0668(0x0078)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_FD9F3E6149A2E4F98303CD8475D4EABF; // 0x06E0(0x0030)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_0ABD8ACD4D19E9CB8AA0A29B297C39C0; // 0x0710(0x0078)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_3CDDCCB648FFE5EFAB27DE80A326E374; // 0x0788(0x0030)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_0B65254A456B9712CA741CA3218DE5A4; // 0x07B8(0x0078)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_A2FD0BFF4FC81AA5C4C74DBE753F071E; // 0x0830(0x0030)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine_B5C07C894F13B6F7A9425BA46D8E20BB; // 0x0860(0x00B0)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_0C053EAC4A6C896B98337DA1A11A0647; // 0x0910(0x0078)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_8136CC844037D3A3825A63A2DA3BD2CB; // 0x0988(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_825B54C94909E102291BD7893061B324; // 0x09B0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_C2D859F3441DF2C07369B3AB4CB5DEBB; // 0x09D8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_09B19A5B4E4C5501561599BD5124A605; // 0x0A00(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_F7D5D2754A3A5BCD930483AF166762C5; // 0x0A28(0x0078)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_2386C4B04A8DCFE5937B82BB2307456E; // 0x0AA0(0x0030)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_70234CC14DA41DEEB07A39A96E6404A0; // 0x0AD0(0x0078)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_D2F1A48044F90FABDF843E8CC705741C; // 0x0B48(0x0030)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot_175B872F48FA4A742596D1A3D79E2B0F; // 0x0B78(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_56CA539344891D52CEC4A7A8D6F58A70; // 0x0BC0(0x0078)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_8106FD3049F1CBB61525C59A057AE311; // 0x0C38(0x0030)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot_8B400C4248B98992C7D13282A104389A; // 0x0C68(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_5272215B46D2D26E767F48A67979F79A; // 0x0CB0(0x0078)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_B547730E4C1418F5BF37049AFE1152FA; // 0x0D28(0x0030)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine_1DEB8A7745D3663D61F3C09D65626C92; // 0x0D58(0x00B0)()
	class UAnimSequenceBase*                      CS_Idle;                                           // 0x0E08(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimSequenceBase*                      PG_Intro;                                          // 0x0E10(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)
	class UAnimSequenceBase*                      PG_Idle;                                           // 0x0E18(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimSequenceBase*                      PG_Showdown;                                       // 0x0E20(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimSequenceBase*                      PG_Showdown_Idle;                                  // 0x0E28(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimSequenceBase*                      PG_Victory;                                        // 0x0E30(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimSequenceBase*                      PG_Victory_Idle;                                   // 0x0E38(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CharacterLockedIn;                                 // 0x0E40(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          Won;                                               // 0x0E41(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_232F[0x6];                                     // 0x0E42(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimSequenceBase*                      PG_MythicTransition;                               // 0x0E48(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AnimatedProp_C*                     Prop;                                              // 0x0E50(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMesh*                          PropMesh;                                          // 0x0E58(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimSequence*                          PropAnim;                                          // 0x0E60(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ResetVictoryState;                                 // 0x0E68(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          MontagePlayed;                                     // 0x0E69(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_Splitgun_Lite_AnimBP(int32 EntryPoint);
	void MontageStarted(class UAnimMontage* Montage);
	void Anim_DebugPlayAnimation(const class FString& Character, const class FString& Number);
	void DestroyedCleanup(class AActor* DestroyedActor);
	void Cleanup(class UMarinerSkinCollectionDataAsset* SkinCollection);
	void BlueprintInitializeAnimation();
	void OnMenuExit();
	void Anim_ItemActivation(const E_ItemActivationTypes ItemUseType);
	void AnimNotify_EnteredVictoryState();
	void OnPreviewAnimationRequested(bool bIsReplayingLastAnimation);
	void Anim_CharacterEmote(EMarinerInputActions MarinerInputAction);
	void Anim_DodgeStarted(EDodgeDirections DodgeCardinalDirection);
	void Anim_DestroyProp();
	void Anim_SpawnProp(class USkeletalMesh* SkeletalMesh, class UAnimSequence* Animation, class FName Socket, bool LoopAnim);
	void Anim_PregameEmote(int32 Number);
	void OnGameOutcomeDetermined(bool bHasWonOrDraw);
	void AnimGraph(struct FPoseLink* Param_AnimGraph);
	void OnCharacterLockedIn();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Splitgun_Lite_AnimBP_C">();
	}
	static class USplitgun_Lite_AnimBP_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<USplitgun_Lite_AnimBP_C>();
	}
};
static_assert(alignof(USplitgun_Lite_AnimBP_C) == 0x000010, "Wrong alignment on USplitgun_Lite_AnimBP_C");
static_assert(sizeof(USplitgun_Lite_AnimBP_C) == 0x000E70, "Wrong size on USplitgun_Lite_AnimBP_C");
static_assert(offsetof(USplitgun_Lite_AnimBP_C, UberGraphFrame) == 0x0002C0, "Member 'USplitgun_Lite_AnimBP_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(USplitgun_Lite_AnimBP_C, AnimGraphNode_Root_93EB82FC4D0ECCCEA26842A53B044EEA) == 0x0002C8, "Member 'USplitgun_Lite_AnimBP_C::AnimGraphNode_Root_93EB82FC4D0ECCCEA26842A53B044EEA' has a wrong offset!");
static_assert(offsetof(USplitgun_Lite_AnimBP_C, AnimGraphNode_Slot_6601877049A48F6306F32798AB503BCE) == 0x0002F8, "Member 'USplitgun_Lite_AnimBP_C::AnimGraphNode_Slot_6601877049A48F6306F32798AB503BCE' has a wrong offset!");
static_assert(offsetof(USplitgun_Lite_AnimBP_C, AnimGraphNode_CopyBone_B5A96A884BD8FC8C3A2B7CB0900FF774) == 0x000340, "Member 'USplitgun_Lite_AnimBP_C::AnimGraphNode_CopyBone_B5A96A884BD8FC8C3A2B7CB0900FF774' has a wrong offset!");
static_assert(offsetof(USplitgun_Lite_AnimBP_C, AnimGraphNode_LocalToComponentSpace_81FBCFCD4DD1279AC11699A2224A6DE7) == 0x000430, "Member 'USplitgun_Lite_AnimBP_C::AnimGraphNode_LocalToComponentSpace_81FBCFCD4DD1279AC11699A2224A6DE7' has a wrong offset!");
static_assert(offsetof(USplitgun_Lite_AnimBP_C, AnimGraphNode_ComponentToLocalSpace_12EF1ED748066769537E5289298F197D) == 0x000450, "Member 'USplitgun_Lite_AnimBP_C::AnimGraphNode_ComponentToLocalSpace_12EF1ED748066769537E5289298F197D' has a wrong offset!");
static_assert(offsetof(USplitgun_Lite_AnimBP_C, AnimGraphNode_LegIK_9C83CAB74826E880B728539D655EDE0B) == 0x000470, "Member 'USplitgun_Lite_AnimBP_C::AnimGraphNode_LegIK_9C83CAB74826E880B728539D655EDE0B' has a wrong offset!");
static_assert(offsetof(USplitgun_Lite_AnimBP_C, AnimGraphNode_BlendListByEnum_AF5643C4473B1AF7461C9080F93295CD) == 0x000568, "Member 'USplitgun_Lite_AnimBP_C::AnimGraphNode_BlendListByEnum_AF5643C4473B1AF7461C9080F93295CD' has a wrong offset!");
static_assert(offsetof(USplitgun_Lite_AnimBP_C, AnimGraphNode_TransitionResult_04D35A114266AFD93A6F59B16F807DC5) == 0x000618, "Member 'USplitgun_Lite_AnimBP_C::AnimGraphNode_TransitionResult_04D35A114266AFD93A6F59B16F807DC5' has a wrong offset!");
static_assert(offsetof(USplitgun_Lite_AnimBP_C, AnimGraphNode_TransitionResult_66E98748487F98B3C0E91ABFF3EC8873) == 0x000640, "Member 'USplitgun_Lite_AnimBP_C::AnimGraphNode_TransitionResult_66E98748487F98B3C0E91ABFF3EC8873' has a wrong offset!");
static_assert(offsetof(USplitgun_Lite_AnimBP_C, AnimGraphNode_SequencePlayer_C15B007340F6B08D75FF46ADEE0A6C20) == 0x000668, "Member 'USplitgun_Lite_AnimBP_C::AnimGraphNode_SequencePlayer_C15B007340F6B08D75FF46ADEE0A6C20' has a wrong offset!");
static_assert(offsetof(USplitgun_Lite_AnimBP_C, AnimGraphNode_StateResult_FD9F3E6149A2E4F98303CD8475D4EABF) == 0x0006E0, "Member 'USplitgun_Lite_AnimBP_C::AnimGraphNode_StateResult_FD9F3E6149A2E4F98303CD8475D4EABF' has a wrong offset!");
static_assert(offsetof(USplitgun_Lite_AnimBP_C, AnimGraphNode_SequencePlayer_0ABD8ACD4D19E9CB8AA0A29B297C39C0) == 0x000710, "Member 'USplitgun_Lite_AnimBP_C::AnimGraphNode_SequencePlayer_0ABD8ACD4D19E9CB8AA0A29B297C39C0' has a wrong offset!");
static_assert(offsetof(USplitgun_Lite_AnimBP_C, AnimGraphNode_StateResult_3CDDCCB648FFE5EFAB27DE80A326E374) == 0x000788, "Member 'USplitgun_Lite_AnimBP_C::AnimGraphNode_StateResult_3CDDCCB648FFE5EFAB27DE80A326E374' has a wrong offset!");
static_assert(offsetof(USplitgun_Lite_AnimBP_C, AnimGraphNode_SequencePlayer_0B65254A456B9712CA741CA3218DE5A4) == 0x0007B8, "Member 'USplitgun_Lite_AnimBP_C::AnimGraphNode_SequencePlayer_0B65254A456B9712CA741CA3218DE5A4' has a wrong offset!");
static_assert(offsetof(USplitgun_Lite_AnimBP_C, AnimGraphNode_StateResult_A2FD0BFF4FC81AA5C4C74DBE753F071E) == 0x000830, "Member 'USplitgun_Lite_AnimBP_C::AnimGraphNode_StateResult_A2FD0BFF4FC81AA5C4C74DBE753F071E' has a wrong offset!");
static_assert(offsetof(USplitgun_Lite_AnimBP_C, AnimGraphNode_StateMachine_B5C07C894F13B6F7A9425BA46D8E20BB) == 0x000860, "Member 'USplitgun_Lite_AnimBP_C::AnimGraphNode_StateMachine_B5C07C894F13B6F7A9425BA46D8E20BB' has a wrong offset!");
static_assert(offsetof(USplitgun_Lite_AnimBP_C, AnimGraphNode_SequencePlayer_0C053EAC4A6C896B98337DA1A11A0647) == 0x000910, "Member 'USplitgun_Lite_AnimBP_C::AnimGraphNode_SequencePlayer_0C053EAC4A6C896B98337DA1A11A0647' has a wrong offset!");
static_assert(offsetof(USplitgun_Lite_AnimBP_C, AnimGraphNode_TransitionResult_8136CC844037D3A3825A63A2DA3BD2CB) == 0x000988, "Member 'USplitgun_Lite_AnimBP_C::AnimGraphNode_TransitionResult_8136CC844037D3A3825A63A2DA3BD2CB' has a wrong offset!");
static_assert(offsetof(USplitgun_Lite_AnimBP_C, AnimGraphNode_TransitionResult_825B54C94909E102291BD7893061B324) == 0x0009B0, "Member 'USplitgun_Lite_AnimBP_C::AnimGraphNode_TransitionResult_825B54C94909E102291BD7893061B324' has a wrong offset!");
static_assert(offsetof(USplitgun_Lite_AnimBP_C, AnimGraphNode_TransitionResult_C2D859F3441DF2C07369B3AB4CB5DEBB) == 0x0009D8, "Member 'USplitgun_Lite_AnimBP_C::AnimGraphNode_TransitionResult_C2D859F3441DF2C07369B3AB4CB5DEBB' has a wrong offset!");
static_assert(offsetof(USplitgun_Lite_AnimBP_C, AnimGraphNode_TransitionResult_09B19A5B4E4C5501561599BD5124A605) == 0x000A00, "Member 'USplitgun_Lite_AnimBP_C::AnimGraphNode_TransitionResult_09B19A5B4E4C5501561599BD5124A605' has a wrong offset!");
static_assert(offsetof(USplitgun_Lite_AnimBP_C, AnimGraphNode_SequencePlayer_F7D5D2754A3A5BCD930483AF166762C5) == 0x000A28, "Member 'USplitgun_Lite_AnimBP_C::AnimGraphNode_SequencePlayer_F7D5D2754A3A5BCD930483AF166762C5' has a wrong offset!");
static_assert(offsetof(USplitgun_Lite_AnimBP_C, AnimGraphNode_StateResult_2386C4B04A8DCFE5937B82BB2307456E) == 0x000AA0, "Member 'USplitgun_Lite_AnimBP_C::AnimGraphNode_StateResult_2386C4B04A8DCFE5937B82BB2307456E' has a wrong offset!");
static_assert(offsetof(USplitgun_Lite_AnimBP_C, AnimGraphNode_SequencePlayer_70234CC14DA41DEEB07A39A96E6404A0) == 0x000AD0, "Member 'USplitgun_Lite_AnimBP_C::AnimGraphNode_SequencePlayer_70234CC14DA41DEEB07A39A96E6404A0' has a wrong offset!");
static_assert(offsetof(USplitgun_Lite_AnimBP_C, AnimGraphNode_StateResult_D2F1A48044F90FABDF843E8CC705741C) == 0x000B48, "Member 'USplitgun_Lite_AnimBP_C::AnimGraphNode_StateResult_D2F1A48044F90FABDF843E8CC705741C' has a wrong offset!");
static_assert(offsetof(USplitgun_Lite_AnimBP_C, AnimGraphNode_Slot_175B872F48FA4A742596D1A3D79E2B0F) == 0x000B78, "Member 'USplitgun_Lite_AnimBP_C::AnimGraphNode_Slot_175B872F48FA4A742596D1A3D79E2B0F' has a wrong offset!");
static_assert(offsetof(USplitgun_Lite_AnimBP_C, AnimGraphNode_SequencePlayer_56CA539344891D52CEC4A7A8D6F58A70) == 0x000BC0, "Member 'USplitgun_Lite_AnimBP_C::AnimGraphNode_SequencePlayer_56CA539344891D52CEC4A7A8D6F58A70' has a wrong offset!");
static_assert(offsetof(USplitgun_Lite_AnimBP_C, AnimGraphNode_StateResult_8106FD3049F1CBB61525C59A057AE311) == 0x000C38, "Member 'USplitgun_Lite_AnimBP_C::AnimGraphNode_StateResult_8106FD3049F1CBB61525C59A057AE311' has a wrong offset!");
static_assert(offsetof(USplitgun_Lite_AnimBP_C, AnimGraphNode_Slot_8B400C4248B98992C7D13282A104389A) == 0x000C68, "Member 'USplitgun_Lite_AnimBP_C::AnimGraphNode_Slot_8B400C4248B98992C7D13282A104389A' has a wrong offset!");
static_assert(offsetof(USplitgun_Lite_AnimBP_C, AnimGraphNode_SequencePlayer_5272215B46D2D26E767F48A67979F79A) == 0x000CB0, "Member 'USplitgun_Lite_AnimBP_C::AnimGraphNode_SequencePlayer_5272215B46D2D26E767F48A67979F79A' has a wrong offset!");
static_assert(offsetof(USplitgun_Lite_AnimBP_C, AnimGraphNode_StateResult_B547730E4C1418F5BF37049AFE1152FA) == 0x000D28, "Member 'USplitgun_Lite_AnimBP_C::AnimGraphNode_StateResult_B547730E4C1418F5BF37049AFE1152FA' has a wrong offset!");
static_assert(offsetof(USplitgun_Lite_AnimBP_C, AnimGraphNode_StateMachine_1DEB8A7745D3663D61F3C09D65626C92) == 0x000D58, "Member 'USplitgun_Lite_AnimBP_C::AnimGraphNode_StateMachine_1DEB8A7745D3663D61F3C09D65626C92' has a wrong offset!");
static_assert(offsetof(USplitgun_Lite_AnimBP_C, CS_Idle) == 0x000E08, "Member 'USplitgun_Lite_AnimBP_C::CS_Idle' has a wrong offset!");
static_assert(offsetof(USplitgun_Lite_AnimBP_C, PG_Intro) == 0x000E10, "Member 'USplitgun_Lite_AnimBP_C::PG_Intro' has a wrong offset!");
static_assert(offsetof(USplitgun_Lite_AnimBP_C, PG_Idle) == 0x000E18, "Member 'USplitgun_Lite_AnimBP_C::PG_Idle' has a wrong offset!");
static_assert(offsetof(USplitgun_Lite_AnimBP_C, PG_Showdown) == 0x000E20, "Member 'USplitgun_Lite_AnimBP_C::PG_Showdown' has a wrong offset!");
static_assert(offsetof(USplitgun_Lite_AnimBP_C, PG_Showdown_Idle) == 0x000E28, "Member 'USplitgun_Lite_AnimBP_C::PG_Showdown_Idle' has a wrong offset!");
static_assert(offsetof(USplitgun_Lite_AnimBP_C, PG_Victory) == 0x000E30, "Member 'USplitgun_Lite_AnimBP_C::PG_Victory' has a wrong offset!");
static_assert(offsetof(USplitgun_Lite_AnimBP_C, PG_Victory_Idle) == 0x000E38, "Member 'USplitgun_Lite_AnimBP_C::PG_Victory_Idle' has a wrong offset!");
static_assert(offsetof(USplitgun_Lite_AnimBP_C, CharacterLockedIn) == 0x000E40, "Member 'USplitgun_Lite_AnimBP_C::CharacterLockedIn' has a wrong offset!");
static_assert(offsetof(USplitgun_Lite_AnimBP_C, Won) == 0x000E41, "Member 'USplitgun_Lite_AnimBP_C::Won' has a wrong offset!");
static_assert(offsetof(USplitgun_Lite_AnimBP_C, PG_MythicTransition) == 0x000E48, "Member 'USplitgun_Lite_AnimBP_C::PG_MythicTransition' has a wrong offset!");
static_assert(offsetof(USplitgun_Lite_AnimBP_C, Prop) == 0x000E50, "Member 'USplitgun_Lite_AnimBP_C::Prop' has a wrong offset!");
static_assert(offsetof(USplitgun_Lite_AnimBP_C, PropMesh) == 0x000E58, "Member 'USplitgun_Lite_AnimBP_C::PropMesh' has a wrong offset!");
static_assert(offsetof(USplitgun_Lite_AnimBP_C, PropAnim) == 0x000E60, "Member 'USplitgun_Lite_AnimBP_C::PropAnim' has a wrong offset!");
static_assert(offsetof(USplitgun_Lite_AnimBP_C, ResetVictoryState) == 0x000E68, "Member 'USplitgun_Lite_AnimBP_C::ResetVictoryState' has a wrong offset!");
static_assert(offsetof(USplitgun_Lite_AnimBP_C, MontagePlayed) == 0x000E69, "Member 'USplitgun_Lite_AnimBP_C::MontagePlayed' has a wrong offset!");

}

