#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: StoreBundleButton

#include "Basic.hpp"

#include "StoreBundleButton_classes.hpp"
#include "StoreBundleButton_parameters.hpp"


namespace SDK
{

// Function StoreBundleButton.StoreBundleButton_C.SetCategoryText
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FText                             InText                                                 (BlueprintVisible, BlueprintReadOnly, Parm)

void UStoreBundleButton_C::SetCategoryText(const class FText& InText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StoreBundleButton_C", "SetCategoryText");

	Params::StoreBundleButton_C_SetCategoryText Parms{};

	Parms.InText = std::move(InText);

	UObject::ProcessEvent(Func, &Parms);
}


// Function StoreBundleButton.StoreBundleButton_C.SetAssociatedOffer
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FMangoNativeOffer                InOffer                                                (BlueprintVisible, BlueprintReadOnly, Parm)

void UStoreBundleButton_C::SetAssociatedOffer(const struct FMangoNativeOffer& InOffer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StoreBundleButton_C", "SetAssociatedOffer");

	Params::StoreBundleButton_C_SetAssociatedOffer Parms{};

	Parms.InOffer = std::move(InOffer);

	UObject::ProcessEvent(Func, &Parms);
}


// Function StoreBundleButton.StoreBundleButton_C.GetAssociatedOffer
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FMangoNativeOffer                Offer                                                  (Parm, OutParm)

void UStoreBundleButton_C::GetAssociatedOffer(struct FMangoNativeOffer* Offer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StoreBundleButton_C", "GetAssociatedOffer");

	Params::StoreBundleButton_C_GetAssociatedOffer Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Offer != nullptr)
		*Offer = std::move(Parms.Offer);
}


// Function StoreBundleButton.StoreBundleButton_C.GetAssets
// (Event, Protected, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// struct FMarinerLayeredButtonAssets      ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, ContainsInstancedReference)

struct FMarinerLayeredButtonAssets UStoreBundleButton_C::GetAssets() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StoreBundleButton_C", "GetAssets");

	Params::StoreBundleButton_C_GetAssets Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}

}

