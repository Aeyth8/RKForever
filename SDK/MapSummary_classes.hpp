#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: MapSummary

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Mariner_classes.hpp"
#include "AkAudio_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass MapSummary.MapSummary_C
// 0x0058 (0x0538 - 0x04E0)
class UMapSummary_C final : public UMarinerMenu
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x04E0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       SlideOut;                                          // 0x04E8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       SlideIn;                                           // 0x04F0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UTextBlock*                             GameModeText;                                      // 0x04F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_155;                                         // 0x0500(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_156;                                         // 0x0508(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             MapText;                                           // 0x0510(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Material;                                          // 0x0518(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 MaterialBacker;                                    // 0x0520(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 ModeDetailsFrame;                                  // 0x0528(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 RocketTrail;                                       // 0x0530(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_MapSummary(int32 EntryPoint);
	void Destruct();
	class FText GetMapText();
	class FText GetGameModeText();
	void Initialize();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"MapSummary_C">();
	}
	static class UMapSummary_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMapSummary_C>();
	}
};
static_assert(alignof(UMapSummary_C) == 0x000008, "Wrong alignment on UMapSummary_C");
static_assert(sizeof(UMapSummary_C) == 0x000538, "Wrong size on UMapSummary_C");
static_assert(offsetof(UMapSummary_C, UberGraphFrame) == 0x0004E0, "Member 'UMapSummary_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UMapSummary_C, SlideOut) == 0x0004E8, "Member 'UMapSummary_C::SlideOut' has a wrong offset!");
static_assert(offsetof(UMapSummary_C, SlideIn) == 0x0004F0, "Member 'UMapSummary_C::SlideIn' has a wrong offset!");
static_assert(offsetof(UMapSummary_C, GameModeText) == 0x0004F8, "Member 'UMapSummary_C::GameModeText' has a wrong offset!");
static_assert(offsetof(UMapSummary_C, Image_155) == 0x000500, "Member 'UMapSummary_C::Image_155' has a wrong offset!");
static_assert(offsetof(UMapSummary_C, Image_156) == 0x000508, "Member 'UMapSummary_C::Image_156' has a wrong offset!");
static_assert(offsetof(UMapSummary_C, MapText) == 0x000510, "Member 'UMapSummary_C::MapText' has a wrong offset!");
static_assert(offsetof(UMapSummary_C, Material) == 0x000518, "Member 'UMapSummary_C::Material' has a wrong offset!");
static_assert(offsetof(UMapSummary_C, MaterialBacker) == 0x000520, "Member 'UMapSummary_C::MaterialBacker' has a wrong offset!");
static_assert(offsetof(UMapSummary_C, ModeDetailsFrame) == 0x000528, "Member 'UMapSummary_C::ModeDetailsFrame' has a wrong offset!");
static_assert(offsetof(UMapSummary_C, RocketTrail) == 0x000530, "Member 'UMapSummary_C::RocketTrail' has a wrong offset!");

}

