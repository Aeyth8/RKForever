#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BlastBarElement

#include "Basic.hpp"

#include "AkAudio_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BlastBarElement.BlastBarElement_C.ExecuteUbergraph_BlastBarElement
// 0x0260 (0x0260 - 0x0000)
struct BlastBarElement_C_ExecuteUbergraph_BlastBarElement final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable;                            // 0x0004(0x0010)(ConstParm, ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0014(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x0024(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_25A9[0x4];                                     // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0038(0x0008)(NoDestructor, HasGetValueTypeHash)
	class ABaseCharacter_C*                       K2Node_DynamicCast_AsBase_Character;               // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25AA[0x3];                                     // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(float DodgeDuration)>          K2Node_CreateDelegate_OutputDelegate_2;            // 0x004C(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(bool IsEnabled)>               K2Node_CreateDelegate_OutputDelegate_3;            // 0x005C(0x0010)(ZeroConstructor, NoDestructor)
	float                                         CallFunc_K2_GetTimerElapsedTimeHandle_ReturnValue; // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25AB[0x3];                                     // 0x0071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_FInterpTo_ReturnValue;                    // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_BoolToFloat_ReturnValue;             // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue;                         // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_IsTimerActiveHandle_ReturnValue;       // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25AC[0x3];                                     // 0x0085(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_1;            // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25AD[0x6];                                     // 0x0092(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FAkExternalSourceInfo>          Temp_struct_Variable;                              // 0x0098(0x0010)(ConstParm, ZeroConstructor, ReferenceParm)
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable_1;                          // 0x00A8(0x0010)(ConstParm, ZeroConstructor, NoDestructor)
	TArray<struct FAkExternalSourceInfo>          Temp_struct_Variable_1;                            // 0x00B8(0x0010)(ConstParm, ZeroConstructor, ReferenceParm)
	bool                                          CallFunc_K2_IsTimerActiveHandle_ReturnValue_1;     // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25AE[0x3];                                     // 0x00C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_4;            // 0x00CC(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x00DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25AF[0x3];                                     // 0x00DD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_CustomEvent_StartingDamage;                 // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_EndingDamage;                   // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMarinerDamageableComponent*            K2Node_CustomEvent_DamageableComponent;            // 0x00E8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_IsTimerActiveHandle_ReturnValue_2;     // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25B0[0x3];                                     // 0x00F1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_1;        // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25B1[0x3];                                     // 0x00F9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25B2[0x3];                                     // 0x0101(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_FClamp_ReturnValue_1;                     // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue_1;    // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_1;         // 0x0109(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25B3[0x2];                                     // 0x010A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_FClamp_ReturnValue_2;                     // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_BoolToFloat_ReturnValue_1;           // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_2;            // 0x0114(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue_2;    // 0x0115(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25B4[0x2];                                     // 0x0116(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue_3;    // 0x011C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25B5[0x3];                                     // 0x011D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_K2_GetTimerElapsedTimeHandle_ReturnValue_1; // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0124(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_SetupMats_Output_Get;                     // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25B6[0x3];                                     // 0x0131(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default;                             // 0x0134(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue_1;        // 0x0138(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25B7[0x3];                                     // 0x0141(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default_1;                           // 0x0144(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_1;          // 0x0148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_5;            // 0x014C(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_25B8[0x4];                                     // 0x015C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue_2;        // 0x0160(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25B9[0x7];                                     // 0x0169(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_SetupMats_Output_Get_1;                   // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0179(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25BA[0x2];                                     // 0x017A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_6;            // 0x017C(0x0010)(ZeroConstructor, NoDestructor)
	float                                         K2Node_CustomEvent_CurrentHealth_2;                // 0x018C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_FakeCurrent;                    // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25BB[0x7];                                     // 0x0191(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue_3;        // 0x0198(0x0008)(NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_7;            // 0x01A0(0x0010)(ZeroConstructor, NoDestructor)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue_4;        // 0x01B0(0x0008)(NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_2;          // 0x01B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_2;        // 0x01BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_8;            // 0x01C0(0x0010)(ZeroConstructor, NoDestructor)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue_5;        // 0x01D0(0x0008)(NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_CurrentHealth_1;                // 0x01D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue;        // 0x01DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25BC[0x3];                                     // 0x01DD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_CustomEvent_CurrentHealth;                  // 0x01E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_25BD[0x4];                                     // 0x01E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue_6;        // 0x01E8(0x0008)(NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_K2_GetTimerRemainingTimeHandle_ReturnValue; // 0x01F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_3;          // 0x01F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_9;            // 0x01F8(0x0010)(ZeroConstructor, NoDestructor)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue_7;        // 0x0208(0x0008)(NoDestructor, HasGetValueTypeHash)
	class AMarinerCharacter*                      K2Node_CustomEvent_Character;                      // 0x0210(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_DodgeDuration;                  // 0x0218(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_4;          // 0x021C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayManagedAnimation_ReturnValue;         // 0x0220(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_GetOwningPlayerPawn_ReturnValue;          // 0x0228(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_GetOwningPlayerPawn_ReturnValue_1;        // 0x0230(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_PostEvent_ReturnValue;                    // 0x0238(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_PostEvent_ReturnValue_1;                  // 0x023C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0240(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_IsEnabled;                      // 0x0248(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25BE[0x7];                                     // 0x0249(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_MarinerGameState_C*                 K2Node_DynamicCast_AsBP_Mariner_Game_State;        // 0x0250(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0258(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BlastBarElement_C_ExecuteUbergraph_BlastBarElement) == 0x000008, "Wrong alignment on BlastBarElement_C_ExecuteUbergraph_BlastBarElement");
static_assert(sizeof(BlastBarElement_C_ExecuteUbergraph_BlastBarElement) == 0x000260, "Wrong size on BlastBarElement_C_ExecuteUbergraph_BlastBarElement");
static_assert(offsetof(BlastBarElement_C_ExecuteUbergraph_BlastBarElement, EntryPoint) == 0x000000, "Member 'BlastBarElement_C_ExecuteUbergraph_BlastBarElement::EntryPoint' has a wrong offset!");
static_assert(offsetof(BlastBarElement_C_ExecuteUbergraph_BlastBarElement, Temp_delegate_Variable) == 0x000004, "Member 'BlastBarElement_C_ExecuteUbergraph_BlastBarElement::Temp_delegate_Variable' has a wrong offset!");
static_assert(offsetof(BlastBarElement_C_ExecuteUbergraph_BlastBarElement, K2Node_CreateDelegate_OutputDelegate) == 0x000014, "Member 'BlastBarElement_C_ExecuteUbergraph_BlastBarElement::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BlastBarElement_C_ExecuteUbergraph_BlastBarElement, K2Node_CreateDelegate_OutputDelegate_1) == 0x000024, "Member 'BlastBarElement_C_ExecuteUbergraph_BlastBarElement::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BlastBarElement_C_ExecuteUbergraph_BlastBarElement, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000038, "Member 'BlastBarElement_C_ExecuteUbergraph_BlastBarElement::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(BlastBarElement_C_ExecuteUbergraph_BlastBarElement, K2Node_DynamicCast_AsBase_Character) == 0x000040, "Member 'BlastBarElement_C_ExecuteUbergraph_BlastBarElement::K2Node_DynamicCast_AsBase_Character' has a wrong offset!");
static_assert(offsetof(BlastBarElement_C_ExecuteUbergraph_BlastBarElement, K2Node_DynamicCast_bSuccess) == 0x000048, "Member 'BlastBarElement_C_ExecuteUbergraph_BlastBarElement::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BlastBarElement_C_ExecuteUbergraph_BlastBarElement, K2Node_CreateDelegate_OutputDelegate_2) == 0x00004C, "Member 'BlastBarElement_C_ExecuteUbergraph_BlastBarElement::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(BlastBarElement_C_ExecuteUbergraph_BlastBarElement, K2Node_CreateDelegate_OutputDelegate_3) == 0x00005C, "Member 'BlastBarElement_C_ExecuteUbergraph_BlastBarElement::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(BlastBarElement_C_ExecuteUbergraph_BlastBarElement, CallFunc_K2_GetTimerElapsedTimeHandle_ReturnValue) == 0x00006C, "Member 'BlastBarElement_C_ExecuteUbergraph_BlastBarElement::CallFunc_K2_GetTimerElapsedTimeHandle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BlastBarElement_C_ExecuteUbergraph_BlastBarElement, CallFunc_Less_FloatFloat_ReturnValue) == 0x000070, "Member 'BlastBarElement_C_ExecuteUbergraph_BlastBarElement::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BlastBarElement_C_ExecuteUbergraph_BlastBarElement, CallFunc_FInterpTo_ReturnValue) == 0x000074, "Member 'BlastBarElement_C_ExecuteUbergraph_BlastBarElement::CallFunc_FInterpTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(BlastBarElement_C_ExecuteUbergraph_BlastBarElement, CallFunc_Conv_BoolToFloat_ReturnValue) == 0x000078, "Member 'BlastBarElement_C_ExecuteUbergraph_BlastBarElement::CallFunc_Conv_BoolToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BlastBarElement_C_ExecuteUbergraph_BlastBarElement, CallFunc_Lerp_ReturnValue) == 0x00007C, "Member 'BlastBarElement_C_ExecuteUbergraph_BlastBarElement::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BlastBarElement_C_ExecuteUbergraph_BlastBarElement, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000080, "Member 'BlastBarElement_C_ExecuteUbergraph_BlastBarElement::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BlastBarElement_C_ExecuteUbergraph_BlastBarElement, CallFunc_K2_IsTimerActiveHandle_ReturnValue) == 0x000084, "Member 'BlastBarElement_C_ExecuteUbergraph_BlastBarElement::CallFunc_K2_IsTimerActiveHandle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BlastBarElement_C_ExecuteUbergraph_BlastBarElement, CallFunc_Add_FloatFloat_ReturnValue) == 0x000088, "Member 'BlastBarElement_C_ExecuteUbergraph_BlastBarElement::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BlastBarElement_C_ExecuteUbergraph_BlastBarElement, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x00008C, "Member 'BlastBarElement_C_ExecuteUbergraph_BlastBarElement::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BlastBarElement_C_ExecuteUbergraph_BlastBarElement, CallFunc_Less_FloatFloat_ReturnValue_1) == 0x000090, "Member 'BlastBarElement_C_ExecuteUbergraph_BlastBarElement::CallFunc_Less_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BlastBarElement_C_ExecuteUbergraph_BlastBarElement, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000091, "Member 'BlastBarElement_C_ExecuteUbergraph_BlastBarElement::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BlastBarElement_C_ExecuteUbergraph_BlastBarElement, Temp_struct_Variable) == 0x000098, "Member 'BlastBarElement_C_ExecuteUbergraph_BlastBarElement::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BlastBarElement_C_ExecuteUbergraph_BlastBarElement, Temp_delegate_Variable_1) == 0x0000A8, "Member 'BlastBarElement_C_ExecuteUbergraph_BlastBarElement::Temp_delegate_Variable_1' has a wrong offset!");
static_assert(offsetof(BlastBarElement_C_ExecuteUbergraph_BlastBarElement, Temp_struct_Variable_1) == 0x0000B8, "Member 'BlastBarElement_C_ExecuteUbergraph_BlastBarElement::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(BlastBarElement_C_ExecuteUbergraph_BlastBarElement, CallFunc_K2_IsTimerActiveHandle_ReturnValue_1) == 0x0000C8, "Member 'BlastBarElement_C_ExecuteUbergraph_BlastBarElement::CallFunc_K2_IsTimerActiveHandle_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BlastBarElement_C_ExecuteUbergraph_BlastBarElement, K2Node_CreateDelegate_OutputDelegate_4) == 0x0000CC, "Member 'BlastBarElement_C_ExecuteUbergraph_BlastBarElement::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(BlastBarElement_C_ExecuteUbergraph_BlastBarElement, CallFunc_BooleanOR_ReturnValue) == 0x0000DC, "Member 'BlastBarElement_C_ExecuteUbergraph_BlastBarElement::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BlastBarElement_C_ExecuteUbergraph_BlastBarElement, K2Node_CustomEvent_StartingDamage) == 0x0000E0, "Member 'BlastBarElement_C_ExecuteUbergraph_BlastBarElement::K2Node_CustomEvent_StartingDamage' has a wrong offset!");
static_assert(offsetof(BlastBarElement_C_ExecuteUbergraph_BlastBarElement, K2Node_CustomEvent_EndingDamage) == 0x0000E4, "Member 'BlastBarElement_C_ExecuteUbergraph_BlastBarElement::K2Node_CustomEvent_EndingDamage' has a wrong offset!");
static_assert(offsetof(BlastBarElement_C_ExecuteUbergraph_BlastBarElement, K2Node_CustomEvent_DamageableComponent) == 0x0000E8, "Member 'BlastBarElement_C_ExecuteUbergraph_BlastBarElement::K2Node_CustomEvent_DamageableComponent' has a wrong offset!");
static_assert(offsetof(BlastBarElement_C_ExecuteUbergraph_BlastBarElement, CallFunc_K2_IsTimerActiveHandle_ReturnValue_2) == 0x0000F0, "Member 'BlastBarElement_C_ExecuteUbergraph_BlastBarElement::CallFunc_K2_IsTimerActiveHandle_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BlastBarElement_C_ExecuteUbergraph_BlastBarElement, CallFunc_Subtract_FloatFloat_ReturnValue_1) == 0x0000F4, "Member 'BlastBarElement_C_ExecuteUbergraph_BlastBarElement::CallFunc_Subtract_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BlastBarElement_C_ExecuteUbergraph_BlastBarElement, CallFunc_Not_PreBool_ReturnValue) == 0x0000F8, "Member 'BlastBarElement_C_ExecuteUbergraph_BlastBarElement::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BlastBarElement_C_ExecuteUbergraph_BlastBarElement, CallFunc_FClamp_ReturnValue) == 0x0000FC, "Member 'BlastBarElement_C_ExecuteUbergraph_BlastBarElement::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BlastBarElement_C_ExecuteUbergraph_BlastBarElement, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x000100, "Member 'BlastBarElement_C_ExecuteUbergraph_BlastBarElement::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BlastBarElement_C_ExecuteUbergraph_BlastBarElement, CallFunc_FClamp_ReturnValue_1) == 0x000104, "Member 'BlastBarElement_C_ExecuteUbergraph_BlastBarElement::CallFunc_FClamp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BlastBarElement_C_ExecuteUbergraph_BlastBarElement, CallFunc_GreaterEqual_FloatFloat_ReturnValue_1) == 0x000108, "Member 'BlastBarElement_C_ExecuteUbergraph_BlastBarElement::CallFunc_GreaterEqual_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BlastBarElement_C_ExecuteUbergraph_BlastBarElement, CallFunc_Greater_FloatFloat_ReturnValue_1) == 0x000109, "Member 'BlastBarElement_C_ExecuteUbergraph_BlastBarElement::CallFunc_Greater_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BlastBarElement_C_ExecuteUbergraph_BlastBarElement, CallFunc_FClamp_ReturnValue_2) == 0x00010C, "Member 'BlastBarElement_C_ExecuteUbergraph_BlastBarElement::CallFunc_FClamp_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BlastBarElement_C_ExecuteUbergraph_BlastBarElement, CallFunc_Conv_BoolToFloat_ReturnValue_1) == 0x000110, "Member 'BlastBarElement_C_ExecuteUbergraph_BlastBarElement::CallFunc_Conv_BoolToFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BlastBarElement_C_ExecuteUbergraph_BlastBarElement, CallFunc_Less_FloatFloat_ReturnValue_2) == 0x000114, "Member 'BlastBarElement_C_ExecuteUbergraph_BlastBarElement::CallFunc_Less_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BlastBarElement_C_ExecuteUbergraph_BlastBarElement, CallFunc_GreaterEqual_FloatFloat_ReturnValue_2) == 0x000115, "Member 'BlastBarElement_C_ExecuteUbergraph_BlastBarElement::CallFunc_GreaterEqual_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BlastBarElement_C_ExecuteUbergraph_BlastBarElement, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x000118, "Member 'BlastBarElement_C_ExecuteUbergraph_BlastBarElement::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BlastBarElement_C_ExecuteUbergraph_BlastBarElement, CallFunc_GreaterEqual_FloatFloat_ReturnValue_3) == 0x00011C, "Member 'BlastBarElement_C_ExecuteUbergraph_BlastBarElement::CallFunc_GreaterEqual_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BlastBarElement_C_ExecuteUbergraph_BlastBarElement, CallFunc_K2_GetTimerElapsedTimeHandle_ReturnValue_1) == 0x000120, "Member 'BlastBarElement_C_ExecuteUbergraph_BlastBarElement::CallFunc_K2_GetTimerElapsedTimeHandle_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BlastBarElement_C_ExecuteUbergraph_BlastBarElement, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000124, "Member 'BlastBarElement_C_ExecuteUbergraph_BlastBarElement::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BlastBarElement_C_ExecuteUbergraph_BlastBarElement, CallFunc_SetupMats_Output_Get) == 0x000128, "Member 'BlastBarElement_C_ExecuteUbergraph_BlastBarElement::CallFunc_SetupMats_Output_Get' has a wrong offset!");
static_assert(offsetof(BlastBarElement_C_ExecuteUbergraph_BlastBarElement, Temp_bool_Variable) == 0x000130, "Member 'BlastBarElement_C_ExecuteUbergraph_BlastBarElement::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BlastBarElement_C_ExecuteUbergraph_BlastBarElement, K2Node_Select_Default) == 0x000134, "Member 'BlastBarElement_C_ExecuteUbergraph_BlastBarElement::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BlastBarElement_C_ExecuteUbergraph_BlastBarElement, CallFunc_K2_SetTimerDelegate_ReturnValue_1) == 0x000138, "Member 'BlastBarElement_C_ExecuteUbergraph_BlastBarElement::CallFunc_K2_SetTimerDelegate_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BlastBarElement_C_ExecuteUbergraph_BlastBarElement, Temp_bool_Variable_1) == 0x000140, "Member 'BlastBarElement_C_ExecuteUbergraph_BlastBarElement::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BlastBarElement_C_ExecuteUbergraph_BlastBarElement, K2Node_Select_Default_1) == 0x000144, "Member 'BlastBarElement_C_ExecuteUbergraph_BlastBarElement::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BlastBarElement_C_ExecuteUbergraph_BlastBarElement, CallFunc_Divide_FloatFloat_ReturnValue_1) == 0x000148, "Member 'BlastBarElement_C_ExecuteUbergraph_BlastBarElement::CallFunc_Divide_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BlastBarElement_C_ExecuteUbergraph_BlastBarElement, K2Node_CreateDelegate_OutputDelegate_5) == 0x00014C, "Member 'BlastBarElement_C_ExecuteUbergraph_BlastBarElement::K2Node_CreateDelegate_OutputDelegate_5' has a wrong offset!");
static_assert(offsetof(BlastBarElement_C_ExecuteUbergraph_BlastBarElement, CallFunc_K2_SetTimerDelegate_ReturnValue_2) == 0x000160, "Member 'BlastBarElement_C_ExecuteUbergraph_BlastBarElement::CallFunc_K2_SetTimerDelegate_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BlastBarElement_C_ExecuteUbergraph_BlastBarElement, CallFunc_IsValid_ReturnValue) == 0x000168, "Member 'BlastBarElement_C_ExecuteUbergraph_BlastBarElement::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BlastBarElement_C_ExecuteUbergraph_BlastBarElement, CallFunc_SetupMats_Output_Get_1) == 0x000170, "Member 'BlastBarElement_C_ExecuteUbergraph_BlastBarElement::CallFunc_SetupMats_Output_Get_1' has a wrong offset!");
static_assert(offsetof(BlastBarElement_C_ExecuteUbergraph_BlastBarElement, CallFunc_IsValid_ReturnValue_1) == 0x000178, "Member 'BlastBarElement_C_ExecuteUbergraph_BlastBarElement::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BlastBarElement_C_ExecuteUbergraph_BlastBarElement, CallFunc_BooleanAND_ReturnValue) == 0x000179, "Member 'BlastBarElement_C_ExecuteUbergraph_BlastBarElement::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BlastBarElement_C_ExecuteUbergraph_BlastBarElement, K2Node_CreateDelegate_OutputDelegate_6) == 0x00017C, "Member 'BlastBarElement_C_ExecuteUbergraph_BlastBarElement::K2Node_CreateDelegate_OutputDelegate_6' has a wrong offset!");
static_assert(offsetof(BlastBarElement_C_ExecuteUbergraph_BlastBarElement, K2Node_CustomEvent_CurrentHealth_2) == 0x00018C, "Member 'BlastBarElement_C_ExecuteUbergraph_BlastBarElement::K2Node_CustomEvent_CurrentHealth_2' has a wrong offset!");
static_assert(offsetof(BlastBarElement_C_ExecuteUbergraph_BlastBarElement, K2Node_CustomEvent_FakeCurrent) == 0x000190, "Member 'BlastBarElement_C_ExecuteUbergraph_BlastBarElement::K2Node_CustomEvent_FakeCurrent' has a wrong offset!");
static_assert(offsetof(BlastBarElement_C_ExecuteUbergraph_BlastBarElement, CallFunc_K2_SetTimerDelegate_ReturnValue_3) == 0x000198, "Member 'BlastBarElement_C_ExecuteUbergraph_BlastBarElement::CallFunc_K2_SetTimerDelegate_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BlastBarElement_C_ExecuteUbergraph_BlastBarElement, K2Node_CreateDelegate_OutputDelegate_7) == 0x0001A0, "Member 'BlastBarElement_C_ExecuteUbergraph_BlastBarElement::K2Node_CreateDelegate_OutputDelegate_7' has a wrong offset!");
static_assert(offsetof(BlastBarElement_C_ExecuteUbergraph_BlastBarElement, CallFunc_K2_SetTimerDelegate_ReturnValue_4) == 0x0001B0, "Member 'BlastBarElement_C_ExecuteUbergraph_BlastBarElement::CallFunc_K2_SetTimerDelegate_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BlastBarElement_C_ExecuteUbergraph_BlastBarElement, CallFunc_Divide_FloatFloat_ReturnValue_2) == 0x0001B8, "Member 'BlastBarElement_C_ExecuteUbergraph_BlastBarElement::CallFunc_Divide_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BlastBarElement_C_ExecuteUbergraph_BlastBarElement, CallFunc_Multiply_FloatFloat_ReturnValue_2) == 0x0001BC, "Member 'BlastBarElement_C_ExecuteUbergraph_BlastBarElement::CallFunc_Multiply_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BlastBarElement_C_ExecuteUbergraph_BlastBarElement, K2Node_CreateDelegate_OutputDelegate_8) == 0x0001C0, "Member 'BlastBarElement_C_ExecuteUbergraph_BlastBarElement::K2Node_CreateDelegate_OutputDelegate_8' has a wrong offset!");
static_assert(offsetof(BlastBarElement_C_ExecuteUbergraph_BlastBarElement, CallFunc_K2_SetTimerDelegate_ReturnValue_5) == 0x0001D0, "Member 'BlastBarElement_C_ExecuteUbergraph_BlastBarElement::CallFunc_K2_SetTimerDelegate_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BlastBarElement_C_ExecuteUbergraph_BlastBarElement, K2Node_CustomEvent_CurrentHealth_1) == 0x0001D8, "Member 'BlastBarElement_C_ExecuteUbergraph_BlastBarElement::K2Node_CustomEvent_CurrentHealth_1' has a wrong offset!");
static_assert(offsetof(BlastBarElement_C_ExecuteUbergraph_BlastBarElement, CallFunc_EqualEqual_FloatFloat_ReturnValue) == 0x0001DC, "Member 'BlastBarElement_C_ExecuteUbergraph_BlastBarElement::CallFunc_EqualEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BlastBarElement_C_ExecuteUbergraph_BlastBarElement, K2Node_CustomEvent_CurrentHealth) == 0x0001E0, "Member 'BlastBarElement_C_ExecuteUbergraph_BlastBarElement::K2Node_CustomEvent_CurrentHealth' has a wrong offset!");
static_assert(offsetof(BlastBarElement_C_ExecuteUbergraph_BlastBarElement, CallFunc_K2_SetTimerDelegate_ReturnValue_6) == 0x0001E8, "Member 'BlastBarElement_C_ExecuteUbergraph_BlastBarElement::CallFunc_K2_SetTimerDelegate_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BlastBarElement_C_ExecuteUbergraph_BlastBarElement, CallFunc_K2_GetTimerRemainingTimeHandle_ReturnValue) == 0x0001F0, "Member 'BlastBarElement_C_ExecuteUbergraph_BlastBarElement::CallFunc_K2_GetTimerRemainingTimeHandle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BlastBarElement_C_ExecuteUbergraph_BlastBarElement, CallFunc_Divide_FloatFloat_ReturnValue_3) == 0x0001F4, "Member 'BlastBarElement_C_ExecuteUbergraph_BlastBarElement::CallFunc_Divide_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BlastBarElement_C_ExecuteUbergraph_BlastBarElement, K2Node_CreateDelegate_OutputDelegate_9) == 0x0001F8, "Member 'BlastBarElement_C_ExecuteUbergraph_BlastBarElement::K2Node_CreateDelegate_OutputDelegate_9' has a wrong offset!");
static_assert(offsetof(BlastBarElement_C_ExecuteUbergraph_BlastBarElement, CallFunc_K2_SetTimerDelegate_ReturnValue_7) == 0x000208, "Member 'BlastBarElement_C_ExecuteUbergraph_BlastBarElement::CallFunc_K2_SetTimerDelegate_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BlastBarElement_C_ExecuteUbergraph_BlastBarElement, K2Node_CustomEvent_Character) == 0x000210, "Member 'BlastBarElement_C_ExecuteUbergraph_BlastBarElement::K2Node_CustomEvent_Character' has a wrong offset!");
static_assert(offsetof(BlastBarElement_C_ExecuteUbergraph_BlastBarElement, K2Node_CustomEvent_DodgeDuration) == 0x000218, "Member 'BlastBarElement_C_ExecuteUbergraph_BlastBarElement::K2Node_CustomEvent_DodgeDuration' has a wrong offset!");
static_assert(offsetof(BlastBarElement_C_ExecuteUbergraph_BlastBarElement, CallFunc_Divide_FloatFloat_ReturnValue_4) == 0x00021C, "Member 'BlastBarElement_C_ExecuteUbergraph_BlastBarElement::CallFunc_Divide_FloatFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BlastBarElement_C_ExecuteUbergraph_BlastBarElement, CallFunc_PlayManagedAnimation_ReturnValue) == 0x000220, "Member 'BlastBarElement_C_ExecuteUbergraph_BlastBarElement::CallFunc_PlayManagedAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BlastBarElement_C_ExecuteUbergraph_BlastBarElement, CallFunc_GetOwningPlayerPawn_ReturnValue) == 0x000228, "Member 'BlastBarElement_C_ExecuteUbergraph_BlastBarElement::CallFunc_GetOwningPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BlastBarElement_C_ExecuteUbergraph_BlastBarElement, CallFunc_GetOwningPlayerPawn_ReturnValue_1) == 0x000230, "Member 'BlastBarElement_C_ExecuteUbergraph_BlastBarElement::CallFunc_GetOwningPlayerPawn_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BlastBarElement_C_ExecuteUbergraph_BlastBarElement, CallFunc_PostEvent_ReturnValue) == 0x000238, "Member 'BlastBarElement_C_ExecuteUbergraph_BlastBarElement::CallFunc_PostEvent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BlastBarElement_C_ExecuteUbergraph_BlastBarElement, CallFunc_PostEvent_ReturnValue_1) == 0x00023C, "Member 'BlastBarElement_C_ExecuteUbergraph_BlastBarElement::CallFunc_PostEvent_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BlastBarElement_C_ExecuteUbergraph_BlastBarElement, CallFunc_GetGameState_ReturnValue) == 0x000240, "Member 'BlastBarElement_C_ExecuteUbergraph_BlastBarElement::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BlastBarElement_C_ExecuteUbergraph_BlastBarElement, K2Node_CustomEvent_IsEnabled) == 0x000248, "Member 'BlastBarElement_C_ExecuteUbergraph_BlastBarElement::K2Node_CustomEvent_IsEnabled' has a wrong offset!");
static_assert(offsetof(BlastBarElement_C_ExecuteUbergraph_BlastBarElement, K2Node_DynamicCast_AsBP_Mariner_Game_State) == 0x000250, "Member 'BlastBarElement_C_ExecuteUbergraph_BlastBarElement::K2Node_DynamicCast_AsBP_Mariner_Game_State' has a wrong offset!");
static_assert(offsetof(BlastBarElement_C_ExecuteUbergraph_BlastBarElement, K2Node_DynamicCast_bSuccess_1) == 0x000258, "Member 'BlastBarElement_C_ExecuteUbergraph_BlastBarElement::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");

// Function BlastBarElement.BlastBarElement_C.OnRoundTransitionChange_Event_0
// 0x0001 (0x0001 - 0x0000)
struct BlastBarElement_C_OnRoundTransitionChange_Event_0 final
{
public:
	bool                                          IsEnabled;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BlastBarElement_C_OnRoundTransitionChange_Event_0) == 0x000001, "Wrong alignment on BlastBarElement_C_OnRoundTransitionChange_Event_0");
static_assert(sizeof(BlastBarElement_C_OnRoundTransitionChange_Event_0) == 0x000001, "Wrong size on BlastBarElement_C_OnRoundTransitionChange_Event_0");
static_assert(offsetof(BlastBarElement_C_OnRoundTransitionChange_Event_0, IsEnabled) == 0x000000, "Member 'BlastBarElement_C_OnRoundTransitionChange_Event_0::IsEnabled' has a wrong offset!");

// Function BlastBarElement.BlastBarElement_C.DodgeStarted
// 0x0004 (0x0004 - 0x0000)
struct BlastBarElement_C_DodgeStarted final
{
public:
	float                                         DodgeDuration;                                     // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BlastBarElement_C_DodgeStarted) == 0x000004, "Wrong alignment on BlastBarElement_C_DodgeStarted");
static_assert(sizeof(BlastBarElement_C_DodgeStarted) == 0x000004, "Wrong size on BlastBarElement_C_DodgeStarted");
static_assert(offsetof(BlastBarElement_C_DodgeStarted, DodgeDuration) == 0x000000, "Member 'BlastBarElement_C_DodgeStarted::DodgeDuration' has a wrong offset!");

// Function BlastBarElement.BlastBarElement_C.SetupCharacterRef
// 0x0008 (0x0008 - 0x0000)
struct BlastBarElement_C_SetupCharacterRef final
{
public:
	class AMarinerCharacter*                      Character;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BlastBarElement_C_SetupCharacterRef) == 0x000008, "Wrong alignment on BlastBarElement_C_SetupCharacterRef");
static_assert(sizeof(BlastBarElement_C_SetupCharacterRef) == 0x000008, "Wrong size on BlastBarElement_C_SetupCharacterRef");
static_assert(offsetof(BlastBarElement_C_SetupCharacterRef, Character) == 0x000000, "Member 'BlastBarElement_C_SetupCharacterRef::Character' has a wrong offset!");

// Function BlastBarElement.BlastBarElement_C.AlreadyHealing
// 0x0004 (0x0004 - 0x0000)
struct BlastBarElement_C_AlreadyHealing final
{
public:
	float                                         CurrentHealth;                                     // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BlastBarElement_C_AlreadyHealing) == 0x000004, "Wrong alignment on BlastBarElement_C_AlreadyHealing");
static_assert(sizeof(BlastBarElement_C_AlreadyHealing) == 0x000004, "Wrong size on BlastBarElement_C_AlreadyHealing");
static_assert(offsetof(BlastBarElement_C_AlreadyHealing, CurrentHealth) == 0x000000, "Member 'BlastBarElement_C_AlreadyHealing::CurrentHealth' has a wrong offset!");

// Function BlastBarElement.BlastBarElement_C.StartHealAnim
// 0x0004 (0x0004 - 0x0000)
struct BlastBarElement_C_StartHealAnim final
{
public:
	float                                         CurrentHealth;                                     // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BlastBarElement_C_StartHealAnim) == 0x000004, "Wrong alignment on BlastBarElement_C_StartHealAnim");
static_assert(sizeof(BlastBarElement_C_StartHealAnim) == 0x000004, "Wrong size on BlastBarElement_C_StartHealAnim");
static_assert(offsetof(BlastBarElement_C_StartHealAnim, CurrentHealth) == 0x000000, "Member 'BlastBarElement_C_StartHealAnim::CurrentHealth' has a wrong offset!");

// Function BlastBarElement.BlastBarElement_C.UpdateHealProgress
// 0x0008 (0x0008 - 0x0000)
struct BlastBarElement_C_UpdateHealProgress final
{
public:
	float                                         CurrentHealth;                                     // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          FakeCurrent;                                       // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BlastBarElement_C_UpdateHealProgress) == 0x000004, "Wrong alignment on BlastBarElement_C_UpdateHealProgress");
static_assert(sizeof(BlastBarElement_C_UpdateHealProgress) == 0x000008, "Wrong size on BlastBarElement_C_UpdateHealProgress");
static_assert(offsetof(BlastBarElement_C_UpdateHealProgress, CurrentHealth) == 0x000000, "Member 'BlastBarElement_C_UpdateHealProgress::CurrentHealth' has a wrong offset!");
static_assert(offsetof(BlastBarElement_C_UpdateHealProgress, FakeCurrent) == 0x000004, "Member 'BlastBarElement_C_UpdateHealProgress::FakeCurrent' has a wrong offset!");

// Function BlastBarElement.BlastBarElement_C.UpdateDamageValue
// 0x0010 (0x0010 - 0x0000)
struct BlastBarElement_C_UpdateDamageValue final
{
public:
	float                                         StartingDamage;                                    // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         EndingDamage;                                      // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMarinerDamageableComponent*            DamageableComponent;                               // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BlastBarElement_C_UpdateDamageValue) == 0x000008, "Wrong alignment on BlastBarElement_C_UpdateDamageValue");
static_assert(sizeof(BlastBarElement_C_UpdateDamageValue) == 0x000010, "Wrong size on BlastBarElement_C_UpdateDamageValue");
static_assert(offsetof(BlastBarElement_C_UpdateDamageValue, StartingDamage) == 0x000000, "Member 'BlastBarElement_C_UpdateDamageValue::StartingDamage' has a wrong offset!");
static_assert(offsetof(BlastBarElement_C_UpdateDamageValue, EndingDamage) == 0x000004, "Member 'BlastBarElement_C_UpdateDamageValue::EndingDamage' has a wrong offset!");
static_assert(offsetof(BlastBarElement_C_UpdateDamageValue, DamageableComponent) == 0x000008, "Member 'BlastBarElement_C_UpdateDamageValue::DamageableComponent' has a wrong offset!");

// Function BlastBarElement.BlastBarElement_C.SetupMats
// 0x0030 (0x0030 - 0x0000)
struct BlastBarElement_C_SetupMats final
{
public:
	class UMaterialInstanceDynamic*               Output_Get;                                        // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_1;                              // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25BF[0x6];                                     // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     K2Node_Select_Default;                             // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     K2Node_Select_Default_1;                           // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue_1; // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BlastBarElement_C_SetupMats) == 0x000008, "Wrong alignment on BlastBarElement_C_SetupMats");
static_assert(sizeof(BlastBarElement_C_SetupMats) == 0x000030, "Wrong size on BlastBarElement_C_SetupMats");
static_assert(offsetof(BlastBarElement_C_SetupMats, Output_Get) == 0x000000, "Member 'BlastBarElement_C_SetupMats::Output_Get' has a wrong offset!");
static_assert(offsetof(BlastBarElement_C_SetupMats, Temp_bool_Variable) == 0x000008, "Member 'BlastBarElement_C_SetupMats::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BlastBarElement_C_SetupMats, Temp_bool_Variable_1) == 0x000009, "Member 'BlastBarElement_C_SetupMats::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BlastBarElement_C_SetupMats, K2Node_Select_Default) == 0x000010, "Member 'BlastBarElement_C_SetupMats::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BlastBarElement_C_SetupMats, K2Node_Select_Default_1) == 0x000018, "Member 'BlastBarElement_C_SetupMats::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BlastBarElement_C_SetupMats, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000020, "Member 'BlastBarElement_C_SetupMats::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BlastBarElement_C_SetupMats, CallFunc_CreateDynamicMaterialInstance_ReturnValue_1) == 0x000028, "Member 'BlastBarElement_C_SetupMats::CallFunc_CreateDynamicMaterialInstance_ReturnValue_1' has a wrong offset!");

// Function BlastBarElement.BlastBarElement_C.Get Dodge Ability
// 0x0028 (0x0028 - 0x0000)
struct BlastBarElement_C_Get_Dodge_Ability final
{
public:
	class UDodgeAbility_C*                        AsDodge_Ability;                                   // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25C0[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameplayAbility*                       CallFunc_GetAbilityInstanceForAbilityClass_ReturnValue; // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDodgeAbility_C*                        K2Node_DynamicCast_AsDodge_Ability;                // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BlastBarElement_C_Get_Dodge_Ability) == 0x000008, "Wrong alignment on BlastBarElement_C_Get_Dodge_Ability");
static_assert(sizeof(BlastBarElement_C_Get_Dodge_Ability) == 0x000028, "Wrong size on BlastBarElement_C_Get_Dodge_Ability");
static_assert(offsetof(BlastBarElement_C_Get_Dodge_Ability, AsDodge_Ability) == 0x000000, "Member 'BlastBarElement_C_Get_Dodge_Ability::AsDodge_Ability' has a wrong offset!");
static_assert(offsetof(BlastBarElement_C_Get_Dodge_Ability, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'BlastBarElement_C_Get_Dodge_Ability::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BlastBarElement_C_Get_Dodge_Ability, CallFunc_GetAbilityInstanceForAbilityClass_ReturnValue) == 0x000010, "Member 'BlastBarElement_C_Get_Dodge_Ability::CallFunc_GetAbilityInstanceForAbilityClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BlastBarElement_C_Get_Dodge_Ability, K2Node_DynamicCast_AsDodge_Ability) == 0x000018, "Member 'BlastBarElement_C_Get_Dodge_Ability::K2Node_DynamicCast_AsDodge_Ability' has a wrong offset!");
static_assert(offsetof(BlastBarElement_C_Get_Dodge_Ability, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BlastBarElement_C_Get_Dodge_Ability::K2Node_DynamicCast_bSuccess' has a wrong offset!");

}

