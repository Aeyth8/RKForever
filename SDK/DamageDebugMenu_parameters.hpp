#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: DamageDebugMenu

#include "Basic.hpp"

#include "Slate_structs.hpp"
#include "UMG_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function DamageDebugMenu.DamageDebugMenu_C.OnDamageDebugRecordEntryClicked__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct DamageDebugMenu_C_OnDamageDebugRecordEntryClicked__DelegateSignature final
{
public:
	class UDamageDebugRecordEntry_C*              EntryClicked;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(DamageDebugMenu_C_OnDamageDebugRecordEntryClicked__DelegateSignature) == 0x000008, "Wrong alignment on DamageDebugMenu_C_OnDamageDebugRecordEntryClicked__DelegateSignature");
static_assert(sizeof(DamageDebugMenu_C_OnDamageDebugRecordEntryClicked__DelegateSignature) == 0x000008, "Wrong size on DamageDebugMenu_C_OnDamageDebugRecordEntryClicked__DelegateSignature");
static_assert(offsetof(DamageDebugMenu_C_OnDamageDebugRecordEntryClicked__DelegateSignature, EntryClicked) == 0x000000, "Member 'DamageDebugMenu_C_OnDamageDebugRecordEntryClicked__DelegateSignature::EntryClicked' has a wrong offset!");

// Function DamageDebugMenu.DamageDebugMenu_C.ExecuteUbergraph_DamageDebugMenu
// 0x0100 (0x0100 - 0x0000)
struct DamageDebugMenu_C_ExecuteUbergraph_DamageDebugMenu final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bToSubLayer;                          // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1318[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0008(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1319[0x4];                                     // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	const class UMarinerDamageDebugRecord*        K2Node_CustomEvent_AddedRecord;                    // 0x0048(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_131A[0x4];                                     // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMarinerGameInstance*                   K2Node_DynamicCast_AsMariner_Game_Instance;        // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_131B[0x3];                                     // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class UMarinerDamageDebugRecord* AddedRecord)> K2Node_CreateDelegate_OutputDelegate;              // 0x006C(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_131C[0x4];                                     // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMarinerDamageDebugManager*             CallFunc_GetDamageDebugManager_ReturnValue;        // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x0088(0x0010)(ZeroConstructor, NoDestructor)
	TArray<class UMarinerDamageDebugRecord*>      CallFunc_GetDamageDebugArchive_ReturnValue;        // 0x0098(0x0010)(ZeroConstructor, ReferenceParm)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_131D[0x7];                                     // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMarinerDamageDebugRecord*              CallFunc_Array_Get_Item;                           // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue_1;            // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMarinerGameInstance*                   K2Node_DynamicCast_AsMariner_Game_Instance_1;      // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_131E[0x7];                                     // 0x00C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMarinerMenuManager*                    CallFunc_GetMenuManager_ReturnValue;               // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_DeactivateRootLayer_ReturnValue;          // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_131F[0x7];                                     // 0x00D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue_2;            // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMarinerGameInstance*                   K2Node_DynamicCast_AsMariner_Game_Instance_2;      // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bFromSubMenu;                         // 0x00F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1320[0x6];                                     // 0x00F2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UMarinerDamageDebugManager*             CallFunc_GetDamageDebugManager_ReturnValue_1;      // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(DamageDebugMenu_C_ExecuteUbergraph_DamageDebugMenu) == 0x000008, "Wrong alignment on DamageDebugMenu_C_ExecuteUbergraph_DamageDebugMenu");
static_assert(sizeof(DamageDebugMenu_C_ExecuteUbergraph_DamageDebugMenu) == 0x000100, "Wrong size on DamageDebugMenu_C_ExecuteUbergraph_DamageDebugMenu");
static_assert(offsetof(DamageDebugMenu_C_ExecuteUbergraph_DamageDebugMenu, EntryPoint) == 0x000000, "Member 'DamageDebugMenu_C_ExecuteUbergraph_DamageDebugMenu::EntryPoint' has a wrong offset!");
static_assert(offsetof(DamageDebugMenu_C_ExecuteUbergraph_DamageDebugMenu, K2Node_Event_bToSubLayer) == 0x000004, "Member 'DamageDebugMenu_C_ExecuteUbergraph_DamageDebugMenu::K2Node_Event_bToSubLayer' has a wrong offset!");
static_assert(offsetof(DamageDebugMenu_C_ExecuteUbergraph_DamageDebugMenu, K2Node_Event_MyGeometry) == 0x000008, "Member 'DamageDebugMenu_C_ExecuteUbergraph_DamageDebugMenu::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(DamageDebugMenu_C_ExecuteUbergraph_DamageDebugMenu, K2Node_Event_InDeltaTime) == 0x000040, "Member 'DamageDebugMenu_C_ExecuteUbergraph_DamageDebugMenu::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(DamageDebugMenu_C_ExecuteUbergraph_DamageDebugMenu, K2Node_CustomEvent_AddedRecord) == 0x000048, "Member 'DamageDebugMenu_C_ExecuteUbergraph_DamageDebugMenu::K2Node_CustomEvent_AddedRecord' has a wrong offset!");
static_assert(offsetof(DamageDebugMenu_C_ExecuteUbergraph_DamageDebugMenu, CallFunc_Array_Add_ReturnValue) == 0x000050, "Member 'DamageDebugMenu_C_ExecuteUbergraph_DamageDebugMenu::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(DamageDebugMenu_C_ExecuteUbergraph_DamageDebugMenu, CallFunc_GetGameInstance_ReturnValue) == 0x000058, "Member 'DamageDebugMenu_C_ExecuteUbergraph_DamageDebugMenu::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(DamageDebugMenu_C_ExecuteUbergraph_DamageDebugMenu, K2Node_DynamicCast_AsMariner_Game_Instance) == 0x000060, "Member 'DamageDebugMenu_C_ExecuteUbergraph_DamageDebugMenu::K2Node_DynamicCast_AsMariner_Game_Instance' has a wrong offset!");
static_assert(offsetof(DamageDebugMenu_C_ExecuteUbergraph_DamageDebugMenu, K2Node_DynamicCast_bSuccess) == 0x000068, "Member 'DamageDebugMenu_C_ExecuteUbergraph_DamageDebugMenu::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(DamageDebugMenu_C_ExecuteUbergraph_DamageDebugMenu, K2Node_CreateDelegate_OutputDelegate) == 0x00006C, "Member 'DamageDebugMenu_C_ExecuteUbergraph_DamageDebugMenu::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(DamageDebugMenu_C_ExecuteUbergraph_DamageDebugMenu, CallFunc_GetDamageDebugManager_ReturnValue) == 0x000080, "Member 'DamageDebugMenu_C_ExecuteUbergraph_DamageDebugMenu::CallFunc_GetDamageDebugManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(DamageDebugMenu_C_ExecuteUbergraph_DamageDebugMenu, K2Node_CreateDelegate_OutputDelegate_1) == 0x000088, "Member 'DamageDebugMenu_C_ExecuteUbergraph_DamageDebugMenu::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(DamageDebugMenu_C_ExecuteUbergraph_DamageDebugMenu, CallFunc_GetDamageDebugArchive_ReturnValue) == 0x000098, "Member 'DamageDebugMenu_C_ExecuteUbergraph_DamageDebugMenu::CallFunc_GetDamageDebugArchive_ReturnValue' has a wrong offset!");
static_assert(offsetof(DamageDebugMenu_C_ExecuteUbergraph_DamageDebugMenu, CallFunc_NotEqual_IntInt_ReturnValue) == 0x0000A8, "Member 'DamageDebugMenu_C_ExecuteUbergraph_DamageDebugMenu::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(DamageDebugMenu_C_ExecuteUbergraph_DamageDebugMenu, CallFunc_Array_Get_Item) == 0x0000B0, "Member 'DamageDebugMenu_C_ExecuteUbergraph_DamageDebugMenu::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(DamageDebugMenu_C_ExecuteUbergraph_DamageDebugMenu, CallFunc_GetGameInstance_ReturnValue_1) == 0x0000B8, "Member 'DamageDebugMenu_C_ExecuteUbergraph_DamageDebugMenu::CallFunc_GetGameInstance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(DamageDebugMenu_C_ExecuteUbergraph_DamageDebugMenu, K2Node_DynamicCast_AsMariner_Game_Instance_1) == 0x0000C0, "Member 'DamageDebugMenu_C_ExecuteUbergraph_DamageDebugMenu::K2Node_DynamicCast_AsMariner_Game_Instance_1' has a wrong offset!");
static_assert(offsetof(DamageDebugMenu_C_ExecuteUbergraph_DamageDebugMenu, K2Node_DynamicCast_bSuccess_1) == 0x0000C8, "Member 'DamageDebugMenu_C_ExecuteUbergraph_DamageDebugMenu::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(DamageDebugMenu_C_ExecuteUbergraph_DamageDebugMenu, CallFunc_GetMenuManager_ReturnValue) == 0x0000D0, "Member 'DamageDebugMenu_C_ExecuteUbergraph_DamageDebugMenu::CallFunc_GetMenuManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(DamageDebugMenu_C_ExecuteUbergraph_DamageDebugMenu, CallFunc_DeactivateRootLayer_ReturnValue) == 0x0000D8, "Member 'DamageDebugMenu_C_ExecuteUbergraph_DamageDebugMenu::CallFunc_DeactivateRootLayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(DamageDebugMenu_C_ExecuteUbergraph_DamageDebugMenu, CallFunc_GetGameInstance_ReturnValue_2) == 0x0000E0, "Member 'DamageDebugMenu_C_ExecuteUbergraph_DamageDebugMenu::CallFunc_GetGameInstance_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(DamageDebugMenu_C_ExecuteUbergraph_DamageDebugMenu, K2Node_DynamicCast_AsMariner_Game_Instance_2) == 0x0000E8, "Member 'DamageDebugMenu_C_ExecuteUbergraph_DamageDebugMenu::K2Node_DynamicCast_AsMariner_Game_Instance_2' has a wrong offset!");
static_assert(offsetof(DamageDebugMenu_C_ExecuteUbergraph_DamageDebugMenu, K2Node_DynamicCast_bSuccess_2) == 0x0000F0, "Member 'DamageDebugMenu_C_ExecuteUbergraph_DamageDebugMenu::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(DamageDebugMenu_C_ExecuteUbergraph_DamageDebugMenu, K2Node_Event_bFromSubMenu) == 0x0000F1, "Member 'DamageDebugMenu_C_ExecuteUbergraph_DamageDebugMenu::K2Node_Event_bFromSubMenu' has a wrong offset!");
static_assert(offsetof(DamageDebugMenu_C_ExecuteUbergraph_DamageDebugMenu, CallFunc_GetDamageDebugManager_ReturnValue_1) == 0x0000F8, "Member 'DamageDebugMenu_C_ExecuteUbergraph_DamageDebugMenu::CallFunc_GetDamageDebugManager_ReturnValue_1' has a wrong offset!");

// Function DamageDebugMenu.DamageDebugMenu_C.BP_OnExited
// 0x0001 (0x0001 - 0x0000)
struct DamageDebugMenu_C_BP_OnExited final
{
public:
	bool                                          bToSubLayer;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(DamageDebugMenu_C_BP_OnExited) == 0x000001, "Wrong alignment on DamageDebugMenu_C_BP_OnExited");
static_assert(sizeof(DamageDebugMenu_C_BP_OnExited) == 0x000001, "Wrong size on DamageDebugMenu_C_BP_OnExited");
static_assert(offsetof(DamageDebugMenu_C_BP_OnExited, bToSubLayer) == 0x000000, "Member 'DamageDebugMenu_C_BP_OnExited::bToSubLayer' has a wrong offset!");

// Function DamageDebugMenu.DamageDebugMenu_C.BP_OnEntered
// 0x0001 (0x0001 - 0x0000)
struct DamageDebugMenu_C_BP_OnEntered final
{
public:
	bool                                          bFromSubMenu;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(DamageDebugMenu_C_BP_OnEntered) == 0x000001, "Wrong alignment on DamageDebugMenu_C_BP_OnEntered");
static_assert(sizeof(DamageDebugMenu_C_BP_OnEntered) == 0x000001, "Wrong size on DamageDebugMenu_C_BP_OnEntered");
static_assert(offsetof(DamageDebugMenu_C_BP_OnEntered, bFromSubMenu) == 0x000000, "Member 'DamageDebugMenu_C_BP_OnEntered::bFromSubMenu' has a wrong offset!");

// Function DamageDebugMenu.DamageDebugMenu_C.OnDamageDebugRecordAdded
// 0x0008 (0x0008 - 0x0000)
struct DamageDebugMenu_C_OnDamageDebugRecordAdded final
{
public:
	const class UMarinerDamageDebugRecord*        AddedRecord;                                       // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(DamageDebugMenu_C_OnDamageDebugRecordAdded) == 0x000008, "Wrong alignment on DamageDebugMenu_C_OnDamageDebugRecordAdded");
static_assert(sizeof(DamageDebugMenu_C_OnDamageDebugRecordAdded) == 0x000008, "Wrong size on DamageDebugMenu_C_OnDamageDebugRecordAdded");
static_assert(offsetof(DamageDebugMenu_C_OnDamageDebugRecordAdded, AddedRecord) == 0x000000, "Member 'DamageDebugMenu_C_OnDamageDebugRecordAdded::AddedRecord' has a wrong offset!");

// Function DamageDebugMenu.DamageDebugMenu_C.Tick
// 0x003C (0x003C - 0x0000)
struct DamageDebugMenu_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(DamageDebugMenu_C_Tick) == 0x000004, "Wrong alignment on DamageDebugMenu_C_Tick");
static_assert(sizeof(DamageDebugMenu_C_Tick) == 0x00003C, "Wrong size on DamageDebugMenu_C_Tick");
static_assert(offsetof(DamageDebugMenu_C_Tick, MyGeometry) == 0x000000, "Member 'DamageDebugMenu_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(DamageDebugMenu_C_Tick, InDeltaTime) == 0x000038, "Member 'DamageDebugMenu_C_Tick::InDeltaTime' has a wrong offset!");

// Function DamageDebugMenu.DamageDebugMenu_C.AddDamageDebugRecord
// 0x0010 (0x0010 - 0x0000)
struct DamageDebugMenu_C_AddDamageDebugRecord final
{
public:
	class UMarinerDamageDebugRecord*              DamageRecord;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(DamageDebugMenu_C_AddDamageDebugRecord) == 0x000008, "Wrong alignment on DamageDebugMenu_C_AddDamageDebugRecord");
static_assert(sizeof(DamageDebugMenu_C_AddDamageDebugRecord) == 0x000010, "Wrong size on DamageDebugMenu_C_AddDamageDebugRecord");
static_assert(offsetof(DamageDebugMenu_C_AddDamageDebugRecord, DamageRecord) == 0x000000, "Member 'DamageDebugMenu_C_AddDamageDebugRecord::DamageRecord' has a wrong offset!");
static_assert(offsetof(DamageDebugMenu_C_AddDamageDebugRecord, CallFunc_Array_Add_ReturnValue) == 0x000008, "Member 'DamageDebugMenu_C_AddDamageDebugRecord::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function DamageDebugMenu.DamageDebugMenu_C.SelectDamageDebugRecord
// 0x00A0 (0x00A0 - 0x0000)
struct DamageDebugMenu_C_SelectDamageDebugRecord final
{
public:
	class UDamageDebugRecordEntry_C*              DamageDebugRecordEntry;                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAOEDamageDebugRecordDisplay_C*         CallFunc_Create_ReturnValue;                       // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_GetText_ReturnValue;                      // 0x0018(0x0018)()
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue_1;            // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDirectDamageDebugRecordDisplay_C*      CallFunc_Create_ReturnValue_1;                     // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1321[0x6];                                     // 0x0042(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UMarinerDamageDebugRecord*              CallFunc_Array_Get_Item;                           // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1322[0x4];                                     // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMarinerAOEDamageDebugRecord*           K2Node_DynamicCast_AsMariner_AOEDamage_Debug_Record; // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0062(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1323[0x5];                                     // 0x0063(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UMarinerDirectDamageDebugRecord*        K2Node_DynamicCast_AsMariner_Direct_Damage_Debug_Record; // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1324[0x7];                                     // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue;               // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_GetShortDescription_ReturnValue;          // 0x0080(0x0018)()
	bool                                          CallFunc_EqualEqual_ClassClass_ReturnValue;        // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_TextText_ReturnValue;          // 0x0099(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ClassClass_ReturnValue_1;      // 0x009A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(DamageDebugMenu_C_SelectDamageDebugRecord) == 0x000008, "Wrong alignment on DamageDebugMenu_C_SelectDamageDebugRecord");
static_assert(sizeof(DamageDebugMenu_C_SelectDamageDebugRecord) == 0x0000A0, "Wrong size on DamageDebugMenu_C_SelectDamageDebugRecord");
static_assert(offsetof(DamageDebugMenu_C_SelectDamageDebugRecord, DamageDebugRecordEntry) == 0x000000, "Member 'DamageDebugMenu_C_SelectDamageDebugRecord::DamageDebugRecordEntry' has a wrong offset!");
static_assert(offsetof(DamageDebugMenu_C_SelectDamageDebugRecord, CallFunc_GetOwningPlayer_ReturnValue) == 0x000008, "Member 'DamageDebugMenu_C_SelectDamageDebugRecord::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(DamageDebugMenu_C_SelectDamageDebugRecord, CallFunc_Create_ReturnValue) == 0x000010, "Member 'DamageDebugMenu_C_SelectDamageDebugRecord::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(DamageDebugMenu_C_SelectDamageDebugRecord, CallFunc_GetText_ReturnValue) == 0x000018, "Member 'DamageDebugMenu_C_SelectDamageDebugRecord::CallFunc_GetText_ReturnValue' has a wrong offset!");
static_assert(offsetof(DamageDebugMenu_C_SelectDamageDebugRecord, CallFunc_GetOwningPlayer_ReturnValue_1) == 0x000030, "Member 'DamageDebugMenu_C_SelectDamageDebugRecord::CallFunc_GetOwningPlayer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(DamageDebugMenu_C_SelectDamageDebugRecord, CallFunc_Create_ReturnValue_1) == 0x000038, "Member 'DamageDebugMenu_C_SelectDamageDebugRecord::CallFunc_Create_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(DamageDebugMenu_C_SelectDamageDebugRecord, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000040, "Member 'DamageDebugMenu_C_SelectDamageDebugRecord::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(DamageDebugMenu_C_SelectDamageDebugRecord, CallFunc_IsValid_ReturnValue) == 0x000041, "Member 'DamageDebugMenu_C_SelectDamageDebugRecord::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(DamageDebugMenu_C_SelectDamageDebugRecord, CallFunc_Array_Get_Item) == 0x000048, "Member 'DamageDebugMenu_C_SelectDamageDebugRecord::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(DamageDebugMenu_C_SelectDamageDebugRecord, CallFunc_Array_Length_ReturnValue) == 0x000050, "Member 'DamageDebugMenu_C_SelectDamageDebugRecord::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(DamageDebugMenu_C_SelectDamageDebugRecord, K2Node_DynamicCast_AsMariner_AOEDamage_Debug_Record) == 0x000058, "Member 'DamageDebugMenu_C_SelectDamageDebugRecord::K2Node_DynamicCast_AsMariner_AOEDamage_Debug_Record' has a wrong offset!");
static_assert(offsetof(DamageDebugMenu_C_SelectDamageDebugRecord, K2Node_DynamicCast_bSuccess) == 0x000060, "Member 'DamageDebugMenu_C_SelectDamageDebugRecord::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(DamageDebugMenu_C_SelectDamageDebugRecord, CallFunc_Less_IntInt_ReturnValue) == 0x000061, "Member 'DamageDebugMenu_C_SelectDamageDebugRecord::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(DamageDebugMenu_C_SelectDamageDebugRecord, CallFunc_BooleanAND_ReturnValue) == 0x000062, "Member 'DamageDebugMenu_C_SelectDamageDebugRecord::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(DamageDebugMenu_C_SelectDamageDebugRecord, K2Node_DynamicCast_AsMariner_Direct_Damage_Debug_Record) == 0x000068, "Member 'DamageDebugMenu_C_SelectDamageDebugRecord::K2Node_DynamicCast_AsMariner_Direct_Damage_Debug_Record' has a wrong offset!");
static_assert(offsetof(DamageDebugMenu_C_SelectDamageDebugRecord, K2Node_DynamicCast_bSuccess_1) == 0x000070, "Member 'DamageDebugMenu_C_SelectDamageDebugRecord::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(DamageDebugMenu_C_SelectDamageDebugRecord, CallFunc_GetObjectClass_ReturnValue) == 0x000078, "Member 'DamageDebugMenu_C_SelectDamageDebugRecord::CallFunc_GetObjectClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(DamageDebugMenu_C_SelectDamageDebugRecord, CallFunc_GetShortDescription_ReturnValue) == 0x000080, "Member 'DamageDebugMenu_C_SelectDamageDebugRecord::CallFunc_GetShortDescription_ReturnValue' has a wrong offset!");
static_assert(offsetof(DamageDebugMenu_C_SelectDamageDebugRecord, CallFunc_EqualEqual_ClassClass_ReturnValue) == 0x000098, "Member 'DamageDebugMenu_C_SelectDamageDebugRecord::CallFunc_EqualEqual_ClassClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(DamageDebugMenu_C_SelectDamageDebugRecord, CallFunc_EqualEqual_TextText_ReturnValue) == 0x000099, "Member 'DamageDebugMenu_C_SelectDamageDebugRecord::CallFunc_EqualEqual_TextText_ReturnValue' has a wrong offset!");
static_assert(offsetof(DamageDebugMenu_C_SelectDamageDebugRecord, CallFunc_EqualEqual_ClassClass_ReturnValue_1) == 0x00009A, "Member 'DamageDebugMenu_C_SelectDamageDebugRecord::CallFunc_EqualEqual_ClassClass_ReturnValue_1' has a wrong offset!");

// Function DamageDebugMenu.DamageDebugMenu_C.ReconstructDamageDebugRecordList
// 0x0020 (0x0020 - 0x0000)
struct DamageDebugMenu_C_ReconstructDamageDebugRecordList final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1325[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMarinerDamageDebugRecord*              CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(DamageDebugMenu_C_ReconstructDamageDebugRecordList) == 0x000008, "Wrong alignment on DamageDebugMenu_C_ReconstructDamageDebugRecordList");
static_assert(sizeof(DamageDebugMenu_C_ReconstructDamageDebugRecordList) == 0x000020, "Wrong size on DamageDebugMenu_C_ReconstructDamageDebugRecordList");
static_assert(offsetof(DamageDebugMenu_C_ReconstructDamageDebugRecordList, Temp_int_Array_Index_Variable) == 0x000000, "Member 'DamageDebugMenu_C_ReconstructDamageDebugRecordList::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(DamageDebugMenu_C_ReconstructDamageDebugRecordList, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'DamageDebugMenu_C_ReconstructDamageDebugRecordList::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(DamageDebugMenu_C_ReconstructDamageDebugRecordList, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'DamageDebugMenu_C_ReconstructDamageDebugRecordList::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(DamageDebugMenu_C_ReconstructDamageDebugRecordList, CallFunc_Array_Get_Item) == 0x000010, "Member 'DamageDebugMenu_C_ReconstructDamageDebugRecordList::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(DamageDebugMenu_C_ReconstructDamageDebugRecordList, CallFunc_Array_Length_ReturnValue) == 0x000018, "Member 'DamageDebugMenu_C_ReconstructDamageDebugRecordList::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(DamageDebugMenu_C_ReconstructDamageDebugRecordList, CallFunc_Less_IntInt_ReturnValue) == 0x00001C, "Member 'DamageDebugMenu_C_ReconstructDamageDebugRecordList::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function DamageDebugMenu.DamageDebugMenu_C.CreateDamageDebugRecordEntry
// 0x0050 (0x0050 - 0x0000)
struct DamageDebugMenu_C_CreateDamageDebugRecordEntry final
{
public:
	class UMarinerDamageDebugRecord*              DamageRecord;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         DamageRecordIndex;                                 // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UDamageDebugRecordEntry_C* SelectedDamageRecordIndex)> K2Node_CreateDelegate_OutputDelegate;              // 0x000C(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_1326[0x4];                                     // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetShortDescription_ReturnValue;          // 0x0020(0x0018)()
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDamageDebugRecordEntry_C*              CallFunc_Create_ReturnValue;                       // 0x0040(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPanelSlot*                             CallFunc_AddChild_ReturnValue;                     // 0x0048(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(DamageDebugMenu_C_CreateDamageDebugRecordEntry) == 0x000008, "Wrong alignment on DamageDebugMenu_C_CreateDamageDebugRecordEntry");
static_assert(sizeof(DamageDebugMenu_C_CreateDamageDebugRecordEntry) == 0x000050, "Wrong size on DamageDebugMenu_C_CreateDamageDebugRecordEntry");
static_assert(offsetof(DamageDebugMenu_C_CreateDamageDebugRecordEntry, DamageRecord) == 0x000000, "Member 'DamageDebugMenu_C_CreateDamageDebugRecordEntry::DamageRecord' has a wrong offset!");
static_assert(offsetof(DamageDebugMenu_C_CreateDamageDebugRecordEntry, DamageRecordIndex) == 0x000008, "Member 'DamageDebugMenu_C_CreateDamageDebugRecordEntry::DamageRecordIndex' has a wrong offset!");
static_assert(offsetof(DamageDebugMenu_C_CreateDamageDebugRecordEntry, K2Node_CreateDelegate_OutputDelegate) == 0x00000C, "Member 'DamageDebugMenu_C_CreateDamageDebugRecordEntry::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(DamageDebugMenu_C_CreateDamageDebugRecordEntry, CallFunc_GetShortDescription_ReturnValue) == 0x000020, "Member 'DamageDebugMenu_C_CreateDamageDebugRecordEntry::CallFunc_GetShortDescription_ReturnValue' has a wrong offset!");
static_assert(offsetof(DamageDebugMenu_C_CreateDamageDebugRecordEntry, CallFunc_GetOwningPlayer_ReturnValue) == 0x000038, "Member 'DamageDebugMenu_C_CreateDamageDebugRecordEntry::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(DamageDebugMenu_C_CreateDamageDebugRecordEntry, CallFunc_Create_ReturnValue) == 0x000040, "Member 'DamageDebugMenu_C_CreateDamageDebugRecordEntry::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(DamageDebugMenu_C_CreateDamageDebugRecordEntry, CallFunc_AddChild_ReturnValue) == 0x000048, "Member 'DamageDebugMenu_C_CreateDamageDebugRecordEntry::CallFunc_AddChild_ReturnValue' has a wrong offset!");

// Function DamageDebugMenu.DamageDebugMenu_C.GetLegendGridVisibility
// 0x0006 (0x0006 - 0x0000)
struct DamageDebugMenu_C_GetLegendGridVisibility final
{
public:
	ESlateVisibility                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(DamageDebugMenu_C_GetLegendGridVisibility) == 0x000001, "Wrong alignment on DamageDebugMenu_C_GetLegendGridVisibility");
static_assert(sizeof(DamageDebugMenu_C_GetLegendGridVisibility) == 0x000006, "Wrong size on DamageDebugMenu_C_GetLegendGridVisibility");
static_assert(offsetof(DamageDebugMenu_C_GetLegendGridVisibility, ReturnValue) == 0x000000, "Member 'DamageDebugMenu_C_GetLegendGridVisibility::ReturnValue' has a wrong offset!");
static_assert(offsetof(DamageDebugMenu_C_GetLegendGridVisibility, Temp_bool_Variable) == 0x000001, "Member 'DamageDebugMenu_C_GetLegendGridVisibility::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(DamageDebugMenu_C_GetLegendGridVisibility, Temp_byte_Variable) == 0x000002, "Member 'DamageDebugMenu_C_GetLegendGridVisibility::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(DamageDebugMenu_C_GetLegendGridVisibility, Temp_byte_Variable_1) == 0x000003, "Member 'DamageDebugMenu_C_GetLegendGridVisibility::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(DamageDebugMenu_C_GetLegendGridVisibility, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000004, "Member 'DamageDebugMenu_C_GetLegendGridVisibility::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(DamageDebugMenu_C_GetLegendGridVisibility, K2Node_Select_Default) == 0x000005, "Member 'DamageDebugMenu_C_GetLegendGridVisibility::K2Node_Select_Default' has a wrong offset!");

// Function DamageDebugMenu.DamageDebugMenu_C.GetAOEOnlyLegendFieldVisibility
// 0x0028 (0x0028 - 0x0000)
struct DamageDebugMenu_C_GetAOEOnlyLegendFieldVisibility final
{
public:
	ESlateVisibility                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1327[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMarinerDamageDebugRecord*              CallFunc_Array_Get_Item;                           // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1328[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMarinerAOEDamageDebugRecord*           K2Node_DynamicCast_AsMariner_AOEDamage_Debug_Record; // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(DamageDebugMenu_C_GetAOEOnlyLegendFieldVisibility) == 0x000008, "Wrong alignment on DamageDebugMenu_C_GetAOEOnlyLegendFieldVisibility");
static_assert(sizeof(DamageDebugMenu_C_GetAOEOnlyLegendFieldVisibility) == 0x000028, "Wrong size on DamageDebugMenu_C_GetAOEOnlyLegendFieldVisibility");
static_assert(offsetof(DamageDebugMenu_C_GetAOEOnlyLegendFieldVisibility, ReturnValue) == 0x000000, "Member 'DamageDebugMenu_C_GetAOEOnlyLegendFieldVisibility::ReturnValue' has a wrong offset!");
static_assert(offsetof(DamageDebugMenu_C_GetAOEOnlyLegendFieldVisibility, CallFunc_Array_Get_Item) == 0x000008, "Member 'DamageDebugMenu_C_GetAOEOnlyLegendFieldVisibility::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(DamageDebugMenu_C_GetAOEOnlyLegendFieldVisibility, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000010, "Member 'DamageDebugMenu_C_GetAOEOnlyLegendFieldVisibility::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(DamageDebugMenu_C_GetAOEOnlyLegendFieldVisibility, K2Node_DynamicCast_AsMariner_AOEDamage_Debug_Record) == 0x000018, "Member 'DamageDebugMenu_C_GetAOEOnlyLegendFieldVisibility::K2Node_DynamicCast_AsMariner_AOEDamage_Debug_Record' has a wrong offset!");
static_assert(offsetof(DamageDebugMenu_C_GetAOEOnlyLegendFieldVisibility, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'DamageDebugMenu_C_GetAOEOnlyLegendFieldVisibility::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function DamageDebugMenu.DamageDebugMenu_C.SetSelectedDamageDebugRecordInfoWidget
// 0x0020 (0x0020 - 0x0000)
struct DamageDebugMenu_C_SetSelectedDamageDebugRecordInfoWidget final
{
public:
	class UUserWidget*                            Param_SelectedDamageDebugRecordInfo;               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FAnchors                               K2Node_MakeStruct_Anchors;                         // 0x0008(0x0010)(NoDestructor)
	class UCanvasPanelSlot*                       CallFunc_AddChildToCanvas_ReturnValue;             // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(DamageDebugMenu_C_SetSelectedDamageDebugRecordInfoWidget) == 0x000008, "Wrong alignment on DamageDebugMenu_C_SetSelectedDamageDebugRecordInfoWidget");
static_assert(sizeof(DamageDebugMenu_C_SetSelectedDamageDebugRecordInfoWidget) == 0x000020, "Wrong size on DamageDebugMenu_C_SetSelectedDamageDebugRecordInfoWidget");
static_assert(offsetof(DamageDebugMenu_C_SetSelectedDamageDebugRecordInfoWidget, Param_SelectedDamageDebugRecordInfo) == 0x000000, "Member 'DamageDebugMenu_C_SetSelectedDamageDebugRecordInfoWidget::Param_SelectedDamageDebugRecordInfo' has a wrong offset!");
static_assert(offsetof(DamageDebugMenu_C_SetSelectedDamageDebugRecordInfoWidget, K2Node_MakeStruct_Anchors) == 0x000008, "Member 'DamageDebugMenu_C_SetSelectedDamageDebugRecordInfoWidget::K2Node_MakeStruct_Anchors' has a wrong offset!");
static_assert(offsetof(DamageDebugMenu_C_SetSelectedDamageDebugRecordInfoWidget, CallFunc_AddChildToCanvas_ReturnValue) == 0x000018, "Member 'DamageDebugMenu_C_SetSelectedDamageDebugRecordInfoWidget::CallFunc_AddChildToCanvas_ReturnValue' has a wrong offset!");

}

