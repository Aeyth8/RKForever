#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: RocketTotem

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Mariner_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass RocketTotem.RocketTotem_C
// 0x0020 (0x0360 - 0x0340)
class ARocketTotem_C final : public AMarinerRocketTotem
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0340(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FTimerHandle                           TimerHandle_CheckViewAngle;                        // 0x0348(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	float                                         TotemLabelMinViewAngle;                            // 0x0350(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TotemLabelMaxViewAngle;                            // 0x0354(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ViewingAngleUpdateRate;                            // 0x0358(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_RocketTotem(int32 EntryPoint);
	void OnRefreshTotem();
	void CheckViewAngle();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"RocketTotem_C">();
	}
	static class ARocketTotem_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ARocketTotem_C>();
	}
};
static_assert(alignof(ARocketTotem_C) == 0x000008, "Wrong alignment on ARocketTotem_C");
static_assert(sizeof(ARocketTotem_C) == 0x000360, "Wrong size on ARocketTotem_C");
static_assert(offsetof(ARocketTotem_C, UberGraphFrame) == 0x000340, "Member 'ARocketTotem_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ARocketTotem_C, TimerHandle_CheckViewAngle) == 0x000348, "Member 'ARocketTotem_C::TimerHandle_CheckViewAngle' has a wrong offset!");
static_assert(offsetof(ARocketTotem_C, TotemLabelMinViewAngle) == 0x000350, "Member 'ARocketTotem_C::TotemLabelMinViewAngle' has a wrong offset!");
static_assert(offsetof(ARocketTotem_C, TotemLabelMaxViewAngle) == 0x000354, "Member 'ARocketTotem_C::TotemLabelMaxViewAngle' has a wrong offset!");
static_assert(offsetof(ARocketTotem_C, ViewingAngleUpdateRate) == 0x000358, "Member 'ARocketTotem_C::ViewingAngleUpdateRate' has a wrong offset!");

}

