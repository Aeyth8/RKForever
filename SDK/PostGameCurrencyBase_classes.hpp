#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PostGameCurrencyBase

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Mariner_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass PostGameCurrencyBase.PostGameCurrencyBase_C
// 0x0030 (0x0448 - 0x0418)
class UPostGameCurrencyBase_C : public UMarinerAnimatedWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0418(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	UMulticastInlineDelegateProperty_             CurrencyAnimationComplete;                         // 0x0420(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	int32                                         CurrencyEndValue;                                  // 0x0430(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CountUpDuration;                                   // 0x0434(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CurrentTime;                                       // 0x0438(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          AnimationActive;                                   // 0x043C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2231[0x3];                                     // 0x043D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CurrencyStartValue;                                // 0x0440(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          AllowedVisible;                                    // 0x0444(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void CurrencyAnimationComplete__DelegateSignature();
	void ExecuteUbergraph_PostGameCurrencyBase(int32 EntryPoint);
	void Destruct();
	void StopFillLoopAnim();
	void PlayCompleteAnim();
	void PlayFillLoopAnim();
	void SetCurrencyText(const class FText& Text);
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);
	void AnimateToValue(int32 CurrencyValue);
	void PopulateValue(int32 CurrentValue);
	void AnimateToDelta(int32 CurrencyDelta);
	bool Populate();
	void HideWidget();
	void PopulateDelta(int32 Delta);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"PostGameCurrencyBase_C">();
	}
	static class UPostGameCurrencyBase_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPostGameCurrencyBase_C>();
	}
};
static_assert(alignof(UPostGameCurrencyBase_C) == 0x000008, "Wrong alignment on UPostGameCurrencyBase_C");
static_assert(sizeof(UPostGameCurrencyBase_C) == 0x000448, "Wrong size on UPostGameCurrencyBase_C");
static_assert(offsetof(UPostGameCurrencyBase_C, UberGraphFrame) == 0x000418, "Member 'UPostGameCurrencyBase_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UPostGameCurrencyBase_C, CurrencyAnimationComplete) == 0x000420, "Member 'UPostGameCurrencyBase_C::CurrencyAnimationComplete' has a wrong offset!");
static_assert(offsetof(UPostGameCurrencyBase_C, CurrencyEndValue) == 0x000430, "Member 'UPostGameCurrencyBase_C::CurrencyEndValue' has a wrong offset!");
static_assert(offsetof(UPostGameCurrencyBase_C, CountUpDuration) == 0x000434, "Member 'UPostGameCurrencyBase_C::CountUpDuration' has a wrong offset!");
static_assert(offsetof(UPostGameCurrencyBase_C, CurrentTime) == 0x000438, "Member 'UPostGameCurrencyBase_C::CurrentTime' has a wrong offset!");
static_assert(offsetof(UPostGameCurrencyBase_C, AnimationActive) == 0x00043C, "Member 'UPostGameCurrencyBase_C::AnimationActive' has a wrong offset!");
static_assert(offsetof(UPostGameCurrencyBase_C, CurrencyStartValue) == 0x000440, "Member 'UPostGameCurrencyBase_C::CurrencyStartValue' has a wrong offset!");
static_assert(offsetof(UPostGameCurrencyBase_C, AllowedVisible) == 0x000444, "Member 'UPostGameCurrencyBase_C::AllowedVisible' has a wrong offset!");

}

