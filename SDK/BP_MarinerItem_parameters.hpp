#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_MarinerItem

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Mariner_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_MarinerItem.BP_MarinerItem_C.ExecuteUbergraph_BP_MarinerItem
// 0x0208 (0x0208 - 0x0000)
struct BP_MarinerItem_C_ExecuteUbergraph_BP_MarinerItem final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0004(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_CustomEvent_HitComponent;                   // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_CustomEvent_OtherActor;                     // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_CustomEvent_OtherComp;                      // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_NormalImpulse;                  // 0x0028(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             K2Node_CustomEvent_Hit;                            // 0x0034(0x0088)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	ECollisionChannel                             CallFunc_GetCollisionObjectType_ReturnValue;       // 0x00BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BD[0x3];                                       // 0x00BD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetPhysicsLinearVelocity_ReturnValue;     // 0x00C0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x00CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_CD[0x3];                                       // 0x00CD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_VSizeSquared_ReturnValue;                 // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x00D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x00D5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D6[0x2];                                       // 0x00D6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x00D8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Square_ReturnValue;                       // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_1;         // 0x00E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00EA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_K2_IsTimerActiveHandle_ReturnValue;       // 0x00EB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x00ED(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_EE[0x2];                                       // 0x00EE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x00F0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_FC[0x4];                                       // 0x00FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AMarinerCharacter*                      K2Node_Event_CharacterDroppingItem;                // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               CallFunc_SpawnEmitterAtLocation_ReturnValue;       // 0x0108(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_111[0x3];                                      // 0x0111(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0114(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               CallFunc_SpawnEmitterAtLocation_ReturnValue_1;     // 0x0120(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsSimulatingPhysics_ReturnValue;          // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0129(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12A[0x2];                                      // 0x012A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class AActor* DamagedActor, float Damage, class UDamageType* DamageType, class AController* InstigatedBy, class AActor* DamageCauser)> K2Node_CreateDelegate_OutputDelegate;              // 0x012C(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_13C[0x4];                                      // 0x013C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMarinerRealityObjectManager*           CallFunc_GetRealityManager_ReturnValue;            // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMarinerRealityState                          CallFunc_GetCurrentReality_ReturnValue;            // 0x0148(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0149(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EMarinerRealityState                          K2Node_CustomEvent_OldReality;                     // 0x014A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMarinerRealityState                          K2Node_CustomEvent_NewReality;                     // 0x014B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& NormalImpulse, struct FHitResult& Hit)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x014C(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_HasAuthority_ReturnValue_1;               // 0x015C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x015D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x015E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x015F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_3;                // 0x0161(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0162(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_163[0x1];                                      // 0x0163(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_2;        // 0x0164(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_4;                // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_171[0x7];                                      // 0x0171(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystemComponent*               CallFunc_SpawnEmitterAtLocation_ReturnValue_2;     // 0x0178(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_181[0x3];                                      // 0x0181(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(EMarinerRealityState OldReality, EMarinerRealityState NewReality)> K2Node_CreateDelegate_OutputDelegate_2;            // 0x0184(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_3;            // 0x0194(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_1A4[0x4];                                      // 0x01A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x01A8(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_3;        // 0x01B0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_StunActive;                           // 0x01BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1BD[0x3];                                      // 0x01BD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_StunDuration;                         // 0x01C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C4[0x4];                                      // 0x01C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystem*                        K2Node_Event_Emitter;                              // 0x01C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_CustomEvent_DamagedActor;                   // 0x01D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_Damage;                         // 0x01D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1DC[0x4];                                      // 0x01DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	const class UDamageType*                      K2Node_CustomEvent_DamageType;                     // 0x01E0(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AController*                            K2Node_CustomEvent_InstigatedBy;                   // 0x01E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_CustomEvent_DamageCauser;                   // 0x01F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ShouldItemUsePool_ReturnValue;            // 0x01F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1F9[0x7];                                      // 0x01F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMarinerRealityObjectManager*           CallFunc_GetRealityManager_ReturnValue_1;          // 0x0200(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MarinerItem_C_ExecuteUbergraph_BP_MarinerItem) == 0x000008, "Wrong alignment on BP_MarinerItem_C_ExecuteUbergraph_BP_MarinerItem");
static_assert(sizeof(BP_MarinerItem_C_ExecuteUbergraph_BP_MarinerItem) == 0x000208, "Wrong size on BP_MarinerItem_C_ExecuteUbergraph_BP_MarinerItem");
static_assert(offsetof(BP_MarinerItem_C_ExecuteUbergraph_BP_MarinerItem, EntryPoint) == 0x000000, "Member 'BP_MarinerItem_C_ExecuteUbergraph_BP_MarinerItem::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_MarinerItem_C_ExecuteUbergraph_BP_MarinerItem, CallFunc_MakeVector_ReturnValue) == 0x000004, "Member 'BP_MarinerItem_C_ExecuteUbergraph_BP_MarinerItem::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MarinerItem_C_ExecuteUbergraph_BP_MarinerItem, K2Node_CustomEvent_HitComponent) == 0x000010, "Member 'BP_MarinerItem_C_ExecuteUbergraph_BP_MarinerItem::K2Node_CustomEvent_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_MarinerItem_C_ExecuteUbergraph_BP_MarinerItem, K2Node_CustomEvent_OtherActor) == 0x000018, "Member 'BP_MarinerItem_C_ExecuteUbergraph_BP_MarinerItem::K2Node_CustomEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(BP_MarinerItem_C_ExecuteUbergraph_BP_MarinerItem, K2Node_CustomEvent_OtherComp) == 0x000020, "Member 'BP_MarinerItem_C_ExecuteUbergraph_BP_MarinerItem::K2Node_CustomEvent_OtherComp' has a wrong offset!");
static_assert(offsetof(BP_MarinerItem_C_ExecuteUbergraph_BP_MarinerItem, K2Node_CustomEvent_NormalImpulse) == 0x000028, "Member 'BP_MarinerItem_C_ExecuteUbergraph_BP_MarinerItem::K2Node_CustomEvent_NormalImpulse' has a wrong offset!");
static_assert(offsetof(BP_MarinerItem_C_ExecuteUbergraph_BP_MarinerItem, K2Node_CustomEvent_Hit) == 0x000034, "Member 'BP_MarinerItem_C_ExecuteUbergraph_BP_MarinerItem::K2Node_CustomEvent_Hit' has a wrong offset!");
static_assert(offsetof(BP_MarinerItem_C_ExecuteUbergraph_BP_MarinerItem, CallFunc_GetCollisionObjectType_ReturnValue) == 0x0000BC, "Member 'BP_MarinerItem_C_ExecuteUbergraph_BP_MarinerItem::CallFunc_GetCollisionObjectType_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MarinerItem_C_ExecuteUbergraph_BP_MarinerItem, CallFunc_GetPhysicsLinearVelocity_ReturnValue) == 0x0000C0, "Member 'BP_MarinerItem_C_ExecuteUbergraph_BP_MarinerItem::CallFunc_GetPhysicsLinearVelocity_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MarinerItem_C_ExecuteUbergraph_BP_MarinerItem, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0000CC, "Member 'BP_MarinerItem_C_ExecuteUbergraph_BP_MarinerItem::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MarinerItem_C_ExecuteUbergraph_BP_MarinerItem, CallFunc_VSizeSquared_ReturnValue) == 0x0000D0, "Member 'BP_MarinerItem_C_ExecuteUbergraph_BP_MarinerItem::CallFunc_VSizeSquared_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MarinerItem_C_ExecuteUbergraph_BP_MarinerItem, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x0000D4, "Member 'BP_MarinerItem_C_ExecuteUbergraph_BP_MarinerItem::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MarinerItem_C_ExecuteUbergraph_BP_MarinerItem, CallFunc_BooleanOR_ReturnValue) == 0x0000D5, "Member 'BP_MarinerItem_C_ExecuteUbergraph_BP_MarinerItem::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MarinerItem_C_ExecuteUbergraph_BP_MarinerItem, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x0000D8, "Member 'BP_MarinerItem_C_ExecuteUbergraph_BP_MarinerItem::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MarinerItem_C_ExecuteUbergraph_BP_MarinerItem, CallFunc_Square_ReturnValue) == 0x0000E4, "Member 'BP_MarinerItem_C_ExecuteUbergraph_BP_MarinerItem::CallFunc_Square_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MarinerItem_C_ExecuteUbergraph_BP_MarinerItem, CallFunc_Greater_FloatFloat_ReturnValue) == 0x0000E8, "Member 'BP_MarinerItem_C_ExecuteUbergraph_BP_MarinerItem::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MarinerItem_C_ExecuteUbergraph_BP_MarinerItem, CallFunc_Greater_FloatFloat_ReturnValue_1) == 0x0000E9, "Member 'BP_MarinerItem_C_ExecuteUbergraph_BP_MarinerItem::CallFunc_Greater_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MarinerItem_C_ExecuteUbergraph_BP_MarinerItem, CallFunc_BooleanAND_ReturnValue) == 0x0000EA, "Member 'BP_MarinerItem_C_ExecuteUbergraph_BP_MarinerItem::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MarinerItem_C_ExecuteUbergraph_BP_MarinerItem, CallFunc_K2_IsTimerActiveHandle_ReturnValue) == 0x0000EB, "Member 'BP_MarinerItem_C_ExecuteUbergraph_BP_MarinerItem::CallFunc_K2_IsTimerActiveHandle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MarinerItem_C_ExecuteUbergraph_BP_MarinerItem, CallFunc_Not_PreBool_ReturnValue) == 0x0000EC, "Member 'BP_MarinerItem_C_ExecuteUbergraph_BP_MarinerItem::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MarinerItem_C_ExecuteUbergraph_BP_MarinerItem, CallFunc_BooleanAND_ReturnValue_1) == 0x0000ED, "Member 'BP_MarinerItem_C_ExecuteUbergraph_BP_MarinerItem::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MarinerItem_C_ExecuteUbergraph_BP_MarinerItem, CallFunc_K2_GetActorLocation_ReturnValue) == 0x0000F0, "Member 'BP_MarinerItem_C_ExecuteUbergraph_BP_MarinerItem::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MarinerItem_C_ExecuteUbergraph_BP_MarinerItem, K2Node_Event_CharacterDroppingItem) == 0x000100, "Member 'BP_MarinerItem_C_ExecuteUbergraph_BP_MarinerItem::K2Node_Event_CharacterDroppingItem' has a wrong offset!");
static_assert(offsetof(BP_MarinerItem_C_ExecuteUbergraph_BP_MarinerItem, CallFunc_SpawnEmitterAtLocation_ReturnValue) == 0x000108, "Member 'BP_MarinerItem_C_ExecuteUbergraph_BP_MarinerItem::CallFunc_SpawnEmitterAtLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MarinerItem_C_ExecuteUbergraph_BP_MarinerItem, CallFunc_IsValid_ReturnValue) == 0x000110, "Member 'BP_MarinerItem_C_ExecuteUbergraph_BP_MarinerItem::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MarinerItem_C_ExecuteUbergraph_BP_MarinerItem, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000114, "Member 'BP_MarinerItem_C_ExecuteUbergraph_BP_MarinerItem::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MarinerItem_C_ExecuteUbergraph_BP_MarinerItem, CallFunc_SpawnEmitterAtLocation_ReturnValue_1) == 0x000120, "Member 'BP_MarinerItem_C_ExecuteUbergraph_BP_MarinerItem::CallFunc_SpawnEmitterAtLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MarinerItem_C_ExecuteUbergraph_BP_MarinerItem, CallFunc_IsSimulatingPhysics_ReturnValue) == 0x000128, "Member 'BP_MarinerItem_C_ExecuteUbergraph_BP_MarinerItem::CallFunc_IsSimulatingPhysics_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MarinerItem_C_ExecuteUbergraph_BP_MarinerItem, CallFunc_HasAuthority_ReturnValue) == 0x000129, "Member 'BP_MarinerItem_C_ExecuteUbergraph_BP_MarinerItem::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MarinerItem_C_ExecuteUbergraph_BP_MarinerItem, K2Node_CreateDelegate_OutputDelegate) == 0x00012C, "Member 'BP_MarinerItem_C_ExecuteUbergraph_BP_MarinerItem::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_MarinerItem_C_ExecuteUbergraph_BP_MarinerItem, CallFunc_GetRealityManager_ReturnValue) == 0x000140, "Member 'BP_MarinerItem_C_ExecuteUbergraph_BP_MarinerItem::CallFunc_GetRealityManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MarinerItem_C_ExecuteUbergraph_BP_MarinerItem, CallFunc_GetCurrentReality_ReturnValue) == 0x000148, "Member 'BP_MarinerItem_C_ExecuteUbergraph_BP_MarinerItem::CallFunc_GetCurrentReality_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MarinerItem_C_ExecuteUbergraph_BP_MarinerItem, CallFunc_IsValid_ReturnValue_1) == 0x000149, "Member 'BP_MarinerItem_C_ExecuteUbergraph_BP_MarinerItem::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MarinerItem_C_ExecuteUbergraph_BP_MarinerItem, K2Node_CustomEvent_OldReality) == 0x00014A, "Member 'BP_MarinerItem_C_ExecuteUbergraph_BP_MarinerItem::K2Node_CustomEvent_OldReality' has a wrong offset!");
static_assert(offsetof(BP_MarinerItem_C_ExecuteUbergraph_BP_MarinerItem, K2Node_CustomEvent_NewReality) == 0x00014B, "Member 'BP_MarinerItem_C_ExecuteUbergraph_BP_MarinerItem::K2Node_CustomEvent_NewReality' has a wrong offset!");
static_assert(offsetof(BP_MarinerItem_C_ExecuteUbergraph_BP_MarinerItem, K2Node_CreateDelegate_OutputDelegate_1) == 0x00014C, "Member 'BP_MarinerItem_C_ExecuteUbergraph_BP_MarinerItem::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BP_MarinerItem_C_ExecuteUbergraph_BP_MarinerItem, CallFunc_HasAuthority_ReturnValue_1) == 0x00015C, "Member 'BP_MarinerItem_C_ExecuteUbergraph_BP_MarinerItem::CallFunc_HasAuthority_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MarinerItem_C_ExecuteUbergraph_BP_MarinerItem, CallFunc_Not_PreBool_ReturnValue_1) == 0x00015D, "Member 'BP_MarinerItem_C_ExecuteUbergraph_BP_MarinerItem::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MarinerItem_C_ExecuteUbergraph_BP_MarinerItem, CallFunc_IsValid_ReturnValue_2) == 0x00015E, "Member 'BP_MarinerItem_C_ExecuteUbergraph_BP_MarinerItem::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_MarinerItem_C_ExecuteUbergraph_BP_MarinerItem, CallFunc_IsValid_ReturnValue_3) == 0x00015F, "Member 'BP_MarinerItem_C_ExecuteUbergraph_BP_MarinerItem::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_MarinerItem_C_ExecuteUbergraph_BP_MarinerItem, CallFunc_Not_PreBool_ReturnValue_2) == 0x000160, "Member 'BP_MarinerItem_C_ExecuteUbergraph_BP_MarinerItem::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_MarinerItem_C_ExecuteUbergraph_BP_MarinerItem, CallFunc_Not_PreBool_ReturnValue_3) == 0x000161, "Member 'BP_MarinerItem_C_ExecuteUbergraph_BP_MarinerItem::CallFunc_Not_PreBool_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_MarinerItem_C_ExecuteUbergraph_BP_MarinerItem, CallFunc_BooleanAND_ReturnValue_2) == 0x000162, "Member 'BP_MarinerItem_C_ExecuteUbergraph_BP_MarinerItem::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_MarinerItem_C_ExecuteUbergraph_BP_MarinerItem, CallFunc_K2_GetActorLocation_ReturnValue_2) == 0x000164, "Member 'BP_MarinerItem_C_ExecuteUbergraph_BP_MarinerItem::CallFunc_K2_GetActorLocation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_MarinerItem_C_ExecuteUbergraph_BP_MarinerItem, CallFunc_Not_PreBool_ReturnValue_4) == 0x000170, "Member 'BP_MarinerItem_C_ExecuteUbergraph_BP_MarinerItem::CallFunc_Not_PreBool_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_MarinerItem_C_ExecuteUbergraph_BP_MarinerItem, CallFunc_SpawnEmitterAtLocation_ReturnValue_2) == 0x000178, "Member 'BP_MarinerItem_C_ExecuteUbergraph_BP_MarinerItem::CallFunc_SpawnEmitterAtLocation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_MarinerItem_C_ExecuteUbergraph_BP_MarinerItem, CallFunc_BooleanAND_ReturnValue_3) == 0x000180, "Member 'BP_MarinerItem_C_ExecuteUbergraph_BP_MarinerItem::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_MarinerItem_C_ExecuteUbergraph_BP_MarinerItem, K2Node_CreateDelegate_OutputDelegate_2) == 0x000184, "Member 'BP_MarinerItem_C_ExecuteUbergraph_BP_MarinerItem::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(BP_MarinerItem_C_ExecuteUbergraph_BP_MarinerItem, K2Node_CreateDelegate_OutputDelegate_3) == 0x000194, "Member 'BP_MarinerItem_C_ExecuteUbergraph_BP_MarinerItem::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(BP_MarinerItem_C_ExecuteUbergraph_BP_MarinerItem, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x0001A8, "Member 'BP_MarinerItem_C_ExecuteUbergraph_BP_MarinerItem::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MarinerItem_C_ExecuteUbergraph_BP_MarinerItem, CallFunc_K2_GetActorLocation_ReturnValue_3) == 0x0001B0, "Member 'BP_MarinerItem_C_ExecuteUbergraph_BP_MarinerItem::CallFunc_K2_GetActorLocation_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_MarinerItem_C_ExecuteUbergraph_BP_MarinerItem, K2Node_Event_StunActive) == 0x0001BC, "Member 'BP_MarinerItem_C_ExecuteUbergraph_BP_MarinerItem::K2Node_Event_StunActive' has a wrong offset!");
static_assert(offsetof(BP_MarinerItem_C_ExecuteUbergraph_BP_MarinerItem, K2Node_Event_StunDuration) == 0x0001C0, "Member 'BP_MarinerItem_C_ExecuteUbergraph_BP_MarinerItem::K2Node_Event_StunDuration' has a wrong offset!");
static_assert(offsetof(BP_MarinerItem_C_ExecuteUbergraph_BP_MarinerItem, K2Node_Event_Emitter) == 0x0001C8, "Member 'BP_MarinerItem_C_ExecuteUbergraph_BP_MarinerItem::K2Node_Event_Emitter' has a wrong offset!");
static_assert(offsetof(BP_MarinerItem_C_ExecuteUbergraph_BP_MarinerItem, K2Node_CustomEvent_DamagedActor) == 0x0001D0, "Member 'BP_MarinerItem_C_ExecuteUbergraph_BP_MarinerItem::K2Node_CustomEvent_DamagedActor' has a wrong offset!");
static_assert(offsetof(BP_MarinerItem_C_ExecuteUbergraph_BP_MarinerItem, K2Node_CustomEvent_Damage) == 0x0001D8, "Member 'BP_MarinerItem_C_ExecuteUbergraph_BP_MarinerItem::K2Node_CustomEvent_Damage' has a wrong offset!");
static_assert(offsetof(BP_MarinerItem_C_ExecuteUbergraph_BP_MarinerItem, K2Node_CustomEvent_DamageType) == 0x0001E0, "Member 'BP_MarinerItem_C_ExecuteUbergraph_BP_MarinerItem::K2Node_CustomEvent_DamageType' has a wrong offset!");
static_assert(offsetof(BP_MarinerItem_C_ExecuteUbergraph_BP_MarinerItem, K2Node_CustomEvent_InstigatedBy) == 0x0001E8, "Member 'BP_MarinerItem_C_ExecuteUbergraph_BP_MarinerItem::K2Node_CustomEvent_InstigatedBy' has a wrong offset!");
static_assert(offsetof(BP_MarinerItem_C_ExecuteUbergraph_BP_MarinerItem, K2Node_CustomEvent_DamageCauser) == 0x0001F0, "Member 'BP_MarinerItem_C_ExecuteUbergraph_BP_MarinerItem::K2Node_CustomEvent_DamageCauser' has a wrong offset!");
static_assert(offsetof(BP_MarinerItem_C_ExecuteUbergraph_BP_MarinerItem, CallFunc_ShouldItemUsePool_ReturnValue) == 0x0001F8, "Member 'BP_MarinerItem_C_ExecuteUbergraph_BP_MarinerItem::CallFunc_ShouldItemUsePool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MarinerItem_C_ExecuteUbergraph_BP_MarinerItem, CallFunc_GetRealityManager_ReturnValue_1) == 0x000200, "Member 'BP_MarinerItem_C_ExecuteUbergraph_BP_MarinerItem::CallFunc_GetRealityManager_ReturnValue_1' has a wrong offset!");

// Function BP_MarinerItem.BP_MarinerItem_C.OnTakeAnyDamage_Event_0
// 0x0028 (0x0028 - 0x0000)
struct BP_MarinerItem_C_OnTakeAnyDamage_Event_0 final
{
public:
	class AActor*                                 DamagedActor;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Damage;                                            // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	const class UDamageType*                      DamageType;                                        // 0x0010(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AController*                            InstigatedBy;                                      // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 DamageCauser;                                      // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MarinerItem_C_OnTakeAnyDamage_Event_0) == 0x000008, "Wrong alignment on BP_MarinerItem_C_OnTakeAnyDamage_Event_0");
static_assert(sizeof(BP_MarinerItem_C_OnTakeAnyDamage_Event_0) == 0x000028, "Wrong size on BP_MarinerItem_C_OnTakeAnyDamage_Event_0");
static_assert(offsetof(BP_MarinerItem_C_OnTakeAnyDamage_Event_0, DamagedActor) == 0x000000, "Member 'BP_MarinerItem_C_OnTakeAnyDamage_Event_0::DamagedActor' has a wrong offset!");
static_assert(offsetof(BP_MarinerItem_C_OnTakeAnyDamage_Event_0, Damage) == 0x000008, "Member 'BP_MarinerItem_C_OnTakeAnyDamage_Event_0::Damage' has a wrong offset!");
static_assert(offsetof(BP_MarinerItem_C_OnTakeAnyDamage_Event_0, DamageType) == 0x000010, "Member 'BP_MarinerItem_C_OnTakeAnyDamage_Event_0::DamageType' has a wrong offset!");
static_assert(offsetof(BP_MarinerItem_C_OnTakeAnyDamage_Event_0, InstigatedBy) == 0x000018, "Member 'BP_MarinerItem_C_OnTakeAnyDamage_Event_0::InstigatedBy' has a wrong offset!");
static_assert(offsetof(BP_MarinerItem_C_OnTakeAnyDamage_Event_0, DamageCauser) == 0x000020, "Member 'BP_MarinerItem_C_OnTakeAnyDamage_Event_0::DamageCauser' has a wrong offset!");

// Function BP_MarinerItem.BP_MarinerItem_C.ToggleItemStun
// 0x0010 (0x0010 - 0x0000)
struct BP_MarinerItem_C_ToggleItemStun final
{
public:
	bool                                          StunActive;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         StunDuration;                                      // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Emitter;                                           // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MarinerItem_C_ToggleItemStun) == 0x000008, "Wrong alignment on BP_MarinerItem_C_ToggleItemStun");
static_assert(sizeof(BP_MarinerItem_C_ToggleItemStun) == 0x000010, "Wrong size on BP_MarinerItem_C_ToggleItemStun");
static_assert(offsetof(BP_MarinerItem_C_ToggleItemStun, StunActive) == 0x000000, "Member 'BP_MarinerItem_C_ToggleItemStun::StunActive' has a wrong offset!");
static_assert(offsetof(BP_MarinerItem_C_ToggleItemStun, StunDuration) == 0x000004, "Member 'BP_MarinerItem_C_ToggleItemStun::StunDuration' has a wrong offset!");
static_assert(offsetof(BP_MarinerItem_C_ToggleItemStun, Emitter) == 0x000008, "Member 'BP_MarinerItem_C_ToggleItemStun::Emitter' has a wrong offset!");

// Function BP_MarinerItem.BP_MarinerItem_C.OnLocalClientRealityChanged
// 0x0002 (0x0002 - 0x0000)
struct BP_MarinerItem_C_OnLocalClientRealityChanged final
{
public:
	EMarinerRealityState                          OldReality;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMarinerRealityState                          NewReality;                                        // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MarinerItem_C_OnLocalClientRealityChanged) == 0x000001, "Wrong alignment on BP_MarinerItem_C_OnLocalClientRealityChanged");
static_assert(sizeof(BP_MarinerItem_C_OnLocalClientRealityChanged) == 0x000002, "Wrong size on BP_MarinerItem_C_OnLocalClientRealityChanged");
static_assert(offsetof(BP_MarinerItem_C_OnLocalClientRealityChanged, OldReality) == 0x000000, "Member 'BP_MarinerItem_C_OnLocalClientRealityChanged::OldReality' has a wrong offset!");
static_assert(offsetof(BP_MarinerItem_C_OnLocalClientRealityChanged, NewReality) == 0x000001, "Member 'BP_MarinerItem_C_OnLocalClientRealityChanged::NewReality' has a wrong offset!");

// Function BP_MarinerItem.BP_MarinerItem_C.OnHit
// 0x00B0 (0x00B0 - 0x0000)
struct BP_MarinerItem_C_OnHit final
{
public:
	class UPrimitiveComponent*                    HitComponent;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                NormalImpulse;                                     // 0x0018(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             Hit;                                               // 0x0024(0x0088)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_MarinerItem_C_OnHit) == 0x000008, "Wrong alignment on BP_MarinerItem_C_OnHit");
static_assert(sizeof(BP_MarinerItem_C_OnHit) == 0x0000B0, "Wrong size on BP_MarinerItem_C_OnHit");
static_assert(offsetof(BP_MarinerItem_C_OnHit, HitComponent) == 0x000000, "Member 'BP_MarinerItem_C_OnHit::HitComponent' has a wrong offset!");
static_assert(offsetof(BP_MarinerItem_C_OnHit, OtherActor) == 0x000008, "Member 'BP_MarinerItem_C_OnHit::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_MarinerItem_C_OnHit, OtherComp) == 0x000010, "Member 'BP_MarinerItem_C_OnHit::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_MarinerItem_C_OnHit, NormalImpulse) == 0x000018, "Member 'BP_MarinerItem_C_OnHit::NormalImpulse' has a wrong offset!");
static_assert(offsetof(BP_MarinerItem_C_OnHit, Hit) == 0x000024, "Member 'BP_MarinerItem_C_OnHit::Hit' has a wrong offset!");

// Function BP_MarinerItem.BP_MarinerItem_C.BP_OnDropped
// 0x0008 (0x0008 - 0x0000)
struct BP_MarinerItem_C_BP_OnDropped final
{
public:
	class AMarinerCharacter*                      CharacterDroppingItem;                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MarinerItem_C_BP_OnDropped) == 0x000008, "Wrong alignment on BP_MarinerItem_C_BP_OnDropped");
static_assert(sizeof(BP_MarinerItem_C_BP_OnDropped) == 0x000008, "Wrong size on BP_MarinerItem_C_BP_OnDropped");
static_assert(offsetof(BP_MarinerItem_C_BP_OnDropped, CharacterDroppingItem) == 0x000000, "Member 'BP_MarinerItem_C_BP_OnDropped::CharacterDroppingItem' has a wrong offset!");

// Function BP_MarinerItem.BP_MarinerItem_C.HandleRealityChange
// 0x0002 (0x0002 - 0x0000)
struct BP_MarinerItem_C_HandleRealityChange final
{
public:
	EMarinerRealityState                          NewReality;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_MarinerItem_C_HandleRealityChange) == 0x000001, "Wrong alignment on BP_MarinerItem_C_HandleRealityChange");
static_assert(sizeof(BP_MarinerItem_C_HandleRealityChange) == 0x000002, "Wrong size on BP_MarinerItem_C_HandleRealityChange");
static_assert(offsetof(BP_MarinerItem_C_HandleRealityChange, NewReality) == 0x000000, "Member 'BP_MarinerItem_C_HandleRealityChange::NewReality' has a wrong offset!");
static_assert(offsetof(BP_MarinerItem_C_HandleRealityChange, K2Node_SwitchEnum_CmpSuccess) == 0x000001, "Member 'BP_MarinerItem_C_HandleRealityChange::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function BP_MarinerItem.BP_MarinerItem_C.HandleItemStunApplied
// 0x0030 (0x0030 - 0x0000)
struct BP_MarinerItem_C_HandleItemStunApplied final
{
public:
	bool                                          NewStunActiveStatus;                               // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         StunDuration;                                      // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         NewStunDuration;                                   // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x000C(0x0010)(ZeroConstructor, NoDestructor)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0020(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetCanItemBeStunned_CanItemBeStunned;     // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_MarinerItem_C_HandleItemStunApplied) == 0x000008, "Wrong alignment on BP_MarinerItem_C_HandleItemStunApplied");
static_assert(sizeof(BP_MarinerItem_C_HandleItemStunApplied) == 0x000030, "Wrong size on BP_MarinerItem_C_HandleItemStunApplied");
static_assert(offsetof(BP_MarinerItem_C_HandleItemStunApplied, NewStunActiveStatus) == 0x000000, "Member 'BP_MarinerItem_C_HandleItemStunApplied::NewStunActiveStatus' has a wrong offset!");
static_assert(offsetof(BP_MarinerItem_C_HandleItemStunApplied, StunDuration) == 0x000004, "Member 'BP_MarinerItem_C_HandleItemStunApplied::StunDuration' has a wrong offset!");
static_assert(offsetof(BP_MarinerItem_C_HandleItemStunApplied, NewStunDuration) == 0x000008, "Member 'BP_MarinerItem_C_HandleItemStunApplied::NewStunDuration' has a wrong offset!");
static_assert(offsetof(BP_MarinerItem_C_HandleItemStunApplied, K2Node_CreateDelegate_OutputDelegate) == 0x00000C, "Member 'BP_MarinerItem_C_HandleItemStunApplied::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_MarinerItem_C_HandleItemStunApplied, CallFunc_Add_FloatFloat_ReturnValue) == 0x00001C, "Member 'BP_MarinerItem_C_HandleItemStunApplied::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MarinerItem_C_HandleItemStunApplied, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000020, "Member 'BP_MarinerItem_C_HandleItemStunApplied::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MarinerItem_C_HandleItemStunApplied, CallFunc_GetCanItemBeStunned_CanItemBeStunned) == 0x000028, "Member 'BP_MarinerItem_C_HandleItemStunApplied::CallFunc_GetCanItemBeStunned_CanItemBeStunned' has a wrong offset!");

// Function BP_MarinerItem.BP_MarinerItem_C.TryRemoveItemStun
// 0x0003 (0x0003 - 0x0000)
struct BP_MarinerItem_C_TryRemoveItemStun final
{
public:
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetCanItemBeStunned_CanItemBeStunned;     // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_MarinerItem_C_TryRemoveItemStun) == 0x000001, "Wrong alignment on BP_MarinerItem_C_TryRemoveItemStun");
static_assert(sizeof(BP_MarinerItem_C_TryRemoveItemStun) == 0x000003, "Wrong size on BP_MarinerItem_C_TryRemoveItemStun");
static_assert(offsetof(BP_MarinerItem_C_TryRemoveItemStun, CallFunc_HasAuthority_ReturnValue) == 0x000000, "Member 'BP_MarinerItem_C_TryRemoveItemStun::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MarinerItem_C_TryRemoveItemStun, CallFunc_GetCanItemBeStunned_CanItemBeStunned) == 0x000001, "Member 'BP_MarinerItem_C_TryRemoveItemStun::CallFunc_GetCanItemBeStunned_CanItemBeStunned' has a wrong offset!");
static_assert(offsetof(BP_MarinerItem_C_TryRemoveItemStun, CallFunc_BooleanAND_ReturnValue) == 0x000002, "Member 'BP_MarinerItem_C_TryRemoveItemStun::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BP_MarinerItem.BP_MarinerItem_C.GetCanItemBeStunned
// 0x0001 (0x0001 - 0x0000)
struct BP_MarinerItem_C_GetCanItemBeStunned final
{
public:
	bool                                          CanItemBeStunned;                                  // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_MarinerItem_C_GetCanItemBeStunned) == 0x000001, "Wrong alignment on BP_MarinerItem_C_GetCanItemBeStunned");
static_assert(sizeof(BP_MarinerItem_C_GetCanItemBeStunned) == 0x000001, "Wrong size on BP_MarinerItem_C_GetCanItemBeStunned");
static_assert(offsetof(BP_MarinerItem_C_GetCanItemBeStunned, CanItemBeStunned) == 0x000000, "Member 'BP_MarinerItem_C_GetCanItemBeStunned::CanItemBeStunned' has a wrong offset!");

// Function BP_MarinerItem.BP_MarinerItem_C.GetIsItemStunned
// 0x0001 (0x0001 - 0x0000)
struct BP_MarinerItem_C_GetIsItemStunned final
{
public:
	bool                                          IsStunned;                                         // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_MarinerItem_C_GetIsItemStunned) == 0x000001, "Wrong alignment on BP_MarinerItem_C_GetIsItemStunned");
static_assert(sizeof(BP_MarinerItem_C_GetIsItemStunned) == 0x000001, "Wrong size on BP_MarinerItem_C_GetIsItemStunned");
static_assert(offsetof(BP_MarinerItem_C_GetIsItemStunned, IsStunned) == 0x000000, "Member 'BP_MarinerItem_C_GetIsItemStunned::IsStunned' has a wrong offset!");

}

