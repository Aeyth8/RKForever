#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: CharacterCommonDamage

#include "Basic.hpp"

#include "Mariner_structs.hpp"


namespace SDK::Params
{

// Function CharacterCommonDamage.CharacterCommonDamage_C.UpdateDamage
// 0x0028 (0x0028 - 0x0000)
struct CharacterCommonDamage_C_UpdateDamage final
{
public:
	float                                         NewDamage;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2588[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AMarinerCharacter*                      Character;                                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABaseCharacter_C*                       K2Node_DynamicCast_AsBase_Character;               // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2589[0x3];                                     // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_1;          // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CharacterCommonDamage_C_UpdateDamage) == 0x000008, "Wrong alignment on CharacterCommonDamage_C_UpdateDamage");
static_assert(sizeof(CharacterCommonDamage_C_UpdateDamage) == 0x000028, "Wrong size on CharacterCommonDamage_C_UpdateDamage");
static_assert(offsetof(CharacterCommonDamage_C_UpdateDamage, NewDamage) == 0x000000, "Member 'CharacterCommonDamage_C_UpdateDamage::NewDamage' has a wrong offset!");
static_assert(offsetof(CharacterCommonDamage_C_UpdateDamage, Character) == 0x000008, "Member 'CharacterCommonDamage_C_UpdateDamage::Character' has a wrong offset!");
static_assert(offsetof(CharacterCommonDamage_C_UpdateDamage, K2Node_DynamicCast_AsBase_Character) == 0x000010, "Member 'CharacterCommonDamage_C_UpdateDamage::K2Node_DynamicCast_AsBase_Character' has a wrong offset!");
static_assert(offsetof(CharacterCommonDamage_C_UpdateDamage, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'CharacterCommonDamage_C_UpdateDamage::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(CharacterCommonDamage_C_UpdateDamage, CallFunc_Divide_FloatFloat_ReturnValue) == 0x00001C, "Member 'CharacterCommonDamage_C_UpdateDamage::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharacterCommonDamage_C_UpdateDamage, CallFunc_Divide_FloatFloat_ReturnValue_1) == 0x000020, "Member 'CharacterCommonDamage_C_UpdateDamage::CallFunc_Divide_FloatFloat_ReturnValue_1' has a wrong offset!");

// Function CharacterCommonDamage.CharacterCommonDamage_C.PopulateTeam
// 0x0020 (0x0020 - 0x0000)
struct CharacterCommonDamage_C_PopulateTeam final
{
public:
	class AMarinerCharacter*                      Character;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_258A[0x3];                                     // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetTeamIndex_ReturnValue;                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMarinerHostility                             CallFunc_TryAndGetHostilityRelativeToLocalPlayer_ReturnValue; // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_2;                              // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_3;                              // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EMarinerHostility                             Temp_byte_Variable;                                // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Select_Default;                             // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_258B[0x2];                                     // 0x0016(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_SetupMats_Output_Get;                     // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CharacterCommonDamage_C_PopulateTeam) == 0x000008, "Wrong alignment on CharacterCommonDamage_C_PopulateTeam");
static_assert(sizeof(CharacterCommonDamage_C_PopulateTeam) == 0x000020, "Wrong size on CharacterCommonDamage_C_PopulateTeam");
static_assert(offsetof(CharacterCommonDamage_C_PopulateTeam, Character) == 0x000000, "Member 'CharacterCommonDamage_C_PopulateTeam::Character' has a wrong offset!");
static_assert(offsetof(CharacterCommonDamage_C_PopulateTeam, Temp_bool_Variable) == 0x000008, "Member 'CharacterCommonDamage_C_PopulateTeam::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(CharacterCommonDamage_C_PopulateTeam, CallFunc_GetTeamIndex_ReturnValue) == 0x00000C, "Member 'CharacterCommonDamage_C_PopulateTeam::CallFunc_GetTeamIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharacterCommonDamage_C_PopulateTeam, CallFunc_TryAndGetHostilityRelativeToLocalPlayer_ReturnValue) == 0x000010, "Member 'CharacterCommonDamage_C_PopulateTeam::CallFunc_TryAndGetHostilityRelativeToLocalPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharacterCommonDamage_C_PopulateTeam, Temp_bool_Variable_1) == 0x000011, "Member 'CharacterCommonDamage_C_PopulateTeam::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(CharacterCommonDamage_C_PopulateTeam, Temp_bool_Variable_2) == 0x000012, "Member 'CharacterCommonDamage_C_PopulateTeam::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(CharacterCommonDamage_C_PopulateTeam, Temp_bool_Variable_3) == 0x000013, "Member 'CharacterCommonDamage_C_PopulateTeam::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(CharacterCommonDamage_C_PopulateTeam, Temp_byte_Variable) == 0x000014, "Member 'CharacterCommonDamage_C_PopulateTeam::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(CharacterCommonDamage_C_PopulateTeam, K2Node_Select_Default) == 0x000015, "Member 'CharacterCommonDamage_C_PopulateTeam::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(CharacterCommonDamage_C_PopulateTeam, CallFunc_SetupMats_Output_Get) == 0x000018, "Member 'CharacterCommonDamage_C_PopulateTeam::CallFunc_SetupMats_Output_Get' has a wrong offset!");

}

