#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PostGameArtifact

#include "Basic.hpp"

#include "PostGameArtifact_classes.hpp"
#include "PostGameArtifact_parameters.hpp"


namespace SDK
{

// Function PostGameArtifact.PostGameArtifact_C.OnPresentationComplete__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void UPostGameArtifact_C::OnPresentationComplete__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PostGameArtifact_C", "OnPresentationComplete__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PostGameArtifact.PostGameArtifact_C.OnHideComplete__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void UPostGameArtifact_C::OnHideComplete__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PostGameArtifact_C", "OnHideComplete__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PostGameArtifact.PostGameArtifact_C.ExecuteUbergraph_PostGameArtifact
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UPostGameArtifact_C::ExecuteUbergraph_PostGameArtifact(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PostGameArtifact_C", "ExecuteUbergraph_PostGameArtifact");

	Params::PostGameArtifact_C_ExecuteUbergraph_PostGameArtifact Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PostGameArtifact.PostGameArtifact_C.PresentReward
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FMangoReward                     Reward                                                 (BlueprintVisible, BlueprintReadOnly, Parm)

void UPostGameArtifact_C::PresentReward(const struct FMangoReward& Reward)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PostGameArtifact_C", "PresentReward");

	Params::PostGameArtifact_C_PresentReward Parms{};

	Parms.Reward = std::move(Reward);

	UObject::ProcessEvent(Func, &Parms);
}


// Function PostGameArtifact.PostGameArtifact_C.LevelChanged
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Level                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UPostGameArtifact_C::LevelChanged(int32 Level)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PostGameArtifact_C", "LevelChanged");

	Params::PostGameArtifact_C_LevelChanged Parms{};

	Parms.Level = Level;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PostGameArtifact.PostGameArtifact_C.WidgetAnimationEvt_PresentArtifact_K2Node_WidgetAnimationEvent_0
// (BlueprintEvent)

void UPostGameArtifact_C::WidgetAnimationEvt_PresentArtifact_K2Node_WidgetAnimationEvent_0()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PostGameArtifact_C", "WidgetAnimationEvt_PresentArtifact_K2Node_WidgetAnimationEvent_0");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PostGameArtifact.PostGameArtifact_C.WidgetAnimationEvt_HideArtifact_K2Node_WidgetAnimationEvent_1
// (BlueprintEvent)

void UPostGameArtifact_C::WidgetAnimationEvt_HideArtifact_K2Node_WidgetAnimationEvent_1()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PostGameArtifact_C", "WidgetAnimationEvt_HideArtifact_K2Node_WidgetAnimationEvent_1");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PostGameArtifact.PostGameArtifact_C.PresentProgress
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FMangoItemResult                 ItemResult                                             (BlueprintVisible, BlueprintReadOnly, Parm)

void UPostGameArtifact_C::PresentProgress(const struct FMangoItemResult& ItemResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PostGameArtifact_C", "PresentProgress");

	Params::PostGameArtifact_C_PresentProgress Parms{};

	Parms.ItemResult = std::move(ItemResult);

	UObject::ProcessEvent(Func, &Parms);
}


// Function PostGameArtifact.PostGameArtifact_C.PresentUnlock
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// EMangoItemType                          ItemType                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           ItemID                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void UPostGameArtifact_C::PresentUnlock(EMangoItemType ItemType, const class FString& ItemID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PostGameArtifact_C", "PresentUnlock");

	Params::PostGameArtifact_C_PresentUnlock Parms{};

	Parms.ItemType = ItemType;
	Parms.ItemID = std::move(ItemID);

	UObject::ProcessEvent(Func, &Parms);
}


// Function PostGameArtifact.PostGameArtifact_C.ProgressBarComplete
// (BlueprintCallable, BlueprintEvent)

void UPostGameArtifact_C::ProgressBarComplete()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PostGameArtifact_C", "ProgressBarComplete");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PostGameArtifact.PostGameArtifact_C.TransitionOut
// (Public, BlueprintCallable, BlueprintEvent)

void UPostGameArtifact_C::TransitionOut()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PostGameArtifact_C", "TransitionOut");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PostGameArtifact.PostGameArtifact_C.UpdateArtifactLevel
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Level                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EMangoItemType                          ArtifactType                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           ItemID                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// bool                                    bJustUnlocked                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UPostGameArtifact_C::UpdateArtifactLevel(int32 Level, EMangoItemType ArtifactType, const class FString& ItemID, bool bJustUnlocked)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PostGameArtifact_C", "UpdateArtifactLevel");

	Params::PostGameArtifact_C_UpdateArtifactLevel Parms{};

	Parms.Level = Level;
	Parms.ArtifactType = ArtifactType;
	Parms.ItemID = std::move(ItemID);
	Parms.bJustUnlocked = bJustUnlocked;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PostGameArtifact.PostGameArtifact_C.SetSize
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Size                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UPostGameArtifact_C::SetSize(float Size)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PostGameArtifact_C", "SetSize");

	Params::PostGameArtifact_C_SetSize Parms{};

	Parms.Size = Size;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PostGameArtifact.PostGameArtifact_C.GetArtifactImprovementText
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   ImprovementNumber                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           ImprovementSymbol                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class FText                             ImprovementText                                        (Parm, OutParm)

void UPostGameArtifact_C::GetArtifactImprovementText(float ImprovementNumber, const class FString& ImprovementSymbol, class FText* ImprovementText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PostGameArtifact_C", "GetArtifactImprovementText");

	Params::PostGameArtifact_C_GetArtifactImprovementText Parms{};

	Parms.ImprovementNumber = ImprovementNumber;
	Parms.ImprovementSymbol = std::move(ImprovementSymbol);

	UObject::ProcessEvent(Func, &Parms);

	if (ImprovementText != nullptr)
		*ImprovementText = std::move(Parms.ImprovementText);
}


// Function PostGameArtifact.PostGameArtifact_C.Get Artifact Progress Bar
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UArtifactProgressBar_C*           ArtifactProgressBar_0                                  (Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UPostGameArtifact_C::Get_Artifact_Progress_Bar(class UArtifactProgressBar_C** ArtifactProgressBar_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PostGameArtifact_C", "Get Artifact Progress Bar");

	Params::PostGameArtifact_C_Get_Artifact_Progress_Bar Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (ArtifactProgressBar_0 != nullptr)
		*ArtifactProgressBar_0 = Parms.ArtifactProgressBar_0;
}

}

