#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: MiniRewardButton

#include "Basic.hpp"

#include "Mariner_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass MiniRewardButton.MiniRewardButton_C
// 0x0058 (0x3510 - 0x34B8)
class UMiniRewardButton_C final : public UMarinerRewardButton
{
public:
	class UWidgetAnimation*                       UnhoveredAnim;                                     // 0x34B8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       HoveredAnim;                                       // 0x34C0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 Background;                                        // 0x34C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 BackgroundCollectionColorGradient;                 // 0x34D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UButton*                                Button;                                            // 0x34D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 ContentStateIcon;                                  // 0x34E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_80;                                          // 0x34E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_174;                                         // 0x34F0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 ItemFrame;                                         // 0x34F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 ItemRarityPanel;                                   // 0x3500(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               RootSizeBox;                                       // 0x3508(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)

public:
	struct FMarinerLayeredButtonAssets GetAssets() const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"MiniRewardButton_C">();
	}
	static class UMiniRewardButton_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMiniRewardButton_C>();
	}
};
static_assert(alignof(UMiniRewardButton_C) == 0x000008, "Wrong alignment on UMiniRewardButton_C");
static_assert(sizeof(UMiniRewardButton_C) == 0x003510, "Wrong size on UMiniRewardButton_C");
static_assert(offsetof(UMiniRewardButton_C, UnhoveredAnim) == 0x0034B8, "Member 'UMiniRewardButton_C::UnhoveredAnim' has a wrong offset!");
static_assert(offsetof(UMiniRewardButton_C, HoveredAnim) == 0x0034C0, "Member 'UMiniRewardButton_C::HoveredAnim' has a wrong offset!");
static_assert(offsetof(UMiniRewardButton_C, Background) == 0x0034C8, "Member 'UMiniRewardButton_C::Background' has a wrong offset!");
static_assert(offsetof(UMiniRewardButton_C, BackgroundCollectionColorGradient) == 0x0034D0, "Member 'UMiniRewardButton_C::BackgroundCollectionColorGradient' has a wrong offset!");
static_assert(offsetof(UMiniRewardButton_C, Button) == 0x0034D8, "Member 'UMiniRewardButton_C::Button' has a wrong offset!");
static_assert(offsetof(UMiniRewardButton_C, ContentStateIcon) == 0x0034E0, "Member 'UMiniRewardButton_C::ContentStateIcon' has a wrong offset!");
static_assert(offsetof(UMiniRewardButton_C, Image_80) == 0x0034E8, "Member 'UMiniRewardButton_C::Image_80' has a wrong offset!");
static_assert(offsetof(UMiniRewardButton_C, Image_174) == 0x0034F0, "Member 'UMiniRewardButton_C::Image_174' has a wrong offset!");
static_assert(offsetof(UMiniRewardButton_C, ItemFrame) == 0x0034F8, "Member 'UMiniRewardButton_C::ItemFrame' has a wrong offset!");
static_assert(offsetof(UMiniRewardButton_C, ItemRarityPanel) == 0x003500, "Member 'UMiniRewardButton_C::ItemRarityPanel' has a wrong offset!");
static_assert(offsetof(UMiniRewardButton_C, RootSizeBox) == 0x003508, "Member 'UMiniRewardButton_C::RootSizeBox' has a wrong offset!");

}

