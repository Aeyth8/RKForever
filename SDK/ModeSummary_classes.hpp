#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ModeSummary

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Mariner_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass ModeSummary.ModeSummary_C
// 0x0090 (0x0570 - 0x04E0)
class UModeSummary_C final : public UMarinerMenu
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x04E0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       SlideOutPlusFrames;                                // 0x04E8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       SlideInPlusFrames;                                 // 0x04F0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       SlideOut;                                          // 0x04F8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       SlideIn;                                           // 0x0500(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UTextBlock*                             GameModeText;                                      // 0x0508(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_87;                                          // 0x0510(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_153;                                         // 0x0518(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Material;                                          // 0x0520(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 MaterialBacker;                                    // 0x0528(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UModeSummaryPanel_C*                    ModeSummaryPanel_1;                                // 0x0530(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Transitionblue;                                    // 0x0538(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 TransitionGrey;                                    // 0x0540(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 TransitionWhite;                                   // 0x0548(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 WhiteFadeIn;                                       // 0x0550(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	bool                                          HasInitialized;                                    // 0x0558(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_559[0x7];                                      // 0x0559(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	UMulticastInlineDelegateProperty_             OnSlideOutComplete;                                // 0x0560(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)

public:
	void OnSlideOutComplete__DelegateSignature();
	void ExecuteUbergraph_ModeSummary(int32 EntryPoint);
	void WidgetAnimationEvt_SlideOutPlusFrames_K2Node_WidgetAnimationEvent_1();
	void WidgetAnimationEvt_SlideOut_K2Node_WidgetAnimationEvent_0();
	void Destruct();
	class FText GetGameModeText();
	void Initialize();
	void InitializeCustom(const class FText& GameModeText_0, class UMarinerModeDataAsset* GameModeData);
	void RemoveCustom();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ModeSummary_C">();
	}
	static class UModeSummary_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UModeSummary_C>();
	}
};
static_assert(alignof(UModeSummary_C) == 0x000008, "Wrong alignment on UModeSummary_C");
static_assert(sizeof(UModeSummary_C) == 0x000570, "Wrong size on UModeSummary_C");
static_assert(offsetof(UModeSummary_C, UberGraphFrame) == 0x0004E0, "Member 'UModeSummary_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UModeSummary_C, SlideOutPlusFrames) == 0x0004E8, "Member 'UModeSummary_C::SlideOutPlusFrames' has a wrong offset!");
static_assert(offsetof(UModeSummary_C, SlideInPlusFrames) == 0x0004F0, "Member 'UModeSummary_C::SlideInPlusFrames' has a wrong offset!");
static_assert(offsetof(UModeSummary_C, SlideOut) == 0x0004F8, "Member 'UModeSummary_C::SlideOut' has a wrong offset!");
static_assert(offsetof(UModeSummary_C, SlideIn) == 0x000500, "Member 'UModeSummary_C::SlideIn' has a wrong offset!");
static_assert(offsetof(UModeSummary_C, GameModeText) == 0x000508, "Member 'UModeSummary_C::GameModeText' has a wrong offset!");
static_assert(offsetof(UModeSummary_C, Image_87) == 0x000510, "Member 'UModeSummary_C::Image_87' has a wrong offset!");
static_assert(offsetof(UModeSummary_C, Image_153) == 0x000518, "Member 'UModeSummary_C::Image_153' has a wrong offset!");
static_assert(offsetof(UModeSummary_C, Material) == 0x000520, "Member 'UModeSummary_C::Material' has a wrong offset!");
static_assert(offsetof(UModeSummary_C, MaterialBacker) == 0x000528, "Member 'UModeSummary_C::MaterialBacker' has a wrong offset!");
static_assert(offsetof(UModeSummary_C, ModeSummaryPanel_1) == 0x000530, "Member 'UModeSummary_C::ModeSummaryPanel_1' has a wrong offset!");
static_assert(offsetof(UModeSummary_C, Transitionblue) == 0x000538, "Member 'UModeSummary_C::Transitionblue' has a wrong offset!");
static_assert(offsetof(UModeSummary_C, TransitionGrey) == 0x000540, "Member 'UModeSummary_C::TransitionGrey' has a wrong offset!");
static_assert(offsetof(UModeSummary_C, TransitionWhite) == 0x000548, "Member 'UModeSummary_C::TransitionWhite' has a wrong offset!");
static_assert(offsetof(UModeSummary_C, WhiteFadeIn) == 0x000550, "Member 'UModeSummary_C::WhiteFadeIn' has a wrong offset!");
static_assert(offsetof(UModeSummary_C, HasInitialized) == 0x000558, "Member 'UModeSummary_C::HasInitialized' has a wrong offset!");
static_assert(offsetof(UModeSummary_C, OnSlideOutComplete) == 0x000560, "Member 'UModeSummary_C::OnSlideOutComplete' has a wrong offset!");

}

