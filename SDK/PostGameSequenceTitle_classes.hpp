#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PostGameSequenceTitle

#include "Basic.hpp"

#include "Mariner_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass PostGameSequenceTitle.PostGameSequenceTitle_C
// 0x0038 (0x0450 - 0x0418)
class UPostGameSequenceTitle_C final : public UMarinerAnimatedWidget
{
public:
	class UWidgetAnimation*                       TextUpdate;                                        // 0x0418(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 Image_0;                                           // 0x0420(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_155;                                         // 0x0428(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_156;                                         // 0x0430(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 MaterialBacker;                                    // 0x0438(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             Title;                                             // 0x0440(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	bool                                          AllowedVisible;                                    // 0x0448(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void SetTitle(const class FText& Title_0);
	bool Populate();
	void HideTitle();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"PostGameSequenceTitle_C">();
	}
	static class UPostGameSequenceTitle_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPostGameSequenceTitle_C>();
	}
};
static_assert(alignof(UPostGameSequenceTitle_C) == 0x000008, "Wrong alignment on UPostGameSequenceTitle_C");
static_assert(sizeof(UPostGameSequenceTitle_C) == 0x000450, "Wrong size on UPostGameSequenceTitle_C");
static_assert(offsetof(UPostGameSequenceTitle_C, TextUpdate) == 0x000418, "Member 'UPostGameSequenceTitle_C::TextUpdate' has a wrong offset!");
static_assert(offsetof(UPostGameSequenceTitle_C, Image_0) == 0x000420, "Member 'UPostGameSequenceTitle_C::Image_0' has a wrong offset!");
static_assert(offsetof(UPostGameSequenceTitle_C, Image_155) == 0x000428, "Member 'UPostGameSequenceTitle_C::Image_155' has a wrong offset!");
static_assert(offsetof(UPostGameSequenceTitle_C, Image_156) == 0x000430, "Member 'UPostGameSequenceTitle_C::Image_156' has a wrong offset!");
static_assert(offsetof(UPostGameSequenceTitle_C, MaterialBacker) == 0x000438, "Member 'UPostGameSequenceTitle_C::MaterialBacker' has a wrong offset!");
static_assert(offsetof(UPostGameSequenceTitle_C, Title) == 0x000440, "Member 'UPostGameSequenceTitle_C::Title' has a wrong offset!");
static_assert(offsetof(UPostGameSequenceTitle_C, AllowedVisible) == 0x000448, "Member 'UPostGameSequenceTitle_C::AllowedVisible' has a wrong offset!");

}

