#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: MiniProgressionRewardPreview

#include "Basic.hpp"

#include "MiniProgressionRewardPreview_classes.hpp"
#include "MiniProgressionRewardPreview_parameters.hpp"


namespace SDK
{

// Function MiniProgressionRewardPreview.MiniProgressionRewardPreview_C.ExecuteUbergraph_MiniProgressionRewardPreview
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UMiniProgressionRewardPreview_C::ExecuteUbergraph_MiniProgressionRewardPreview(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MiniProgressionRewardPreview_C", "ExecuteUbergraph_MiniProgressionRewardPreview");

	Params::MiniProgressionRewardPreview_C_ExecuteUbergraph_MiniProgressionRewardPreview Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MiniProgressionRewardPreview.MiniProgressionRewardPreview_C.PopulateRewardPreview
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// struct FMangoReward                     Reward                                                 (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UMiniProgressionRewardPreview_C::PopulateRewardPreview(const struct FMangoReward& Reward)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MiniProgressionRewardPreview_C", "PopulateRewardPreview");

	Params::MiniProgressionRewardPreview_C_PopulateRewardPreview Parms{};

	Parms.Reward = std::move(Reward);

	UObject::ProcessEvent(Func, &Parms);
}


// Function MiniProgressionRewardPreview.MiniProgressionRewardPreview_C.PopulateQuestReward
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FMangoQuestReward                Reward                                                 (BlueprintVisible, BlueprintReadOnly, Parm)

void UMiniProgressionRewardPreview_C::PopulateQuestReward(const struct FMangoQuestReward& Reward)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MiniProgressionRewardPreview_C", "PopulateQuestReward");

	Params::MiniProgressionRewardPreview_C_PopulateQuestReward Parms{};

	Parms.Reward = std::move(Reward);

	UObject::ProcessEvent(Func, &Parms);
}


// Function MiniProgressionRewardPreview.MiniProgressionRewardPreview_C.PopulateXP
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Xp                                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UMiniProgressionRewardPreview_C::PopulateXP(int32 Xp)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MiniProgressionRewardPreview_C", "PopulateXP");

	Params::MiniProgressionRewardPreview_C_PopulateXP Parms{};

	Parms.Xp = Xp;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MiniProgressionRewardPreview.MiniProgressionRewardPreview_C.PopulateRocketbucks
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   RocketBucks                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UMiniProgressionRewardPreview_C::PopulateRocketbucks(int32 RocketBucks)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MiniProgressionRewardPreview_C", "PopulateRocketbucks");

	Params::MiniProgressionRewardPreview_C_PopulateRocketbucks Parms{};

	Parms.RocketBucks = RocketBucks;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MiniProgressionRewardPreview.MiniProgressionRewardPreview_C.PopulateRocketparts
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   RocketParts                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UMiniProgressionRewardPreview_C::PopulateRocketparts(int32 RocketParts)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MiniProgressionRewardPreview_C", "PopulateRocketparts");

	Params::MiniProgressionRewardPreview_C_PopulateRocketparts Parms{};

	Parms.RocketParts = RocketParts;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MiniProgressionRewardPreview.MiniProgressionRewardPreview_C.PopulateItem
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FMangoItem                       Item                                                   (BlueprintVisible, BlueprintReadOnly, Parm)

void UMiniProgressionRewardPreview_C::PopulateItem(const struct FMangoItem& Item)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MiniProgressionRewardPreview_C", "PopulateItem");

	Params::MiniProgressionRewardPreview_C_PopulateItem Parms{};

	Parms.Item = std::move(Item);

	UObject::ProcessEvent(Func, &Parms);
}


// Function MiniProgressionRewardPreview.MiniProgressionRewardPreview_C.PopulateNativeOffer
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FMangoNativeOffer                Nativeoffer                                            (BlueprintVisible, BlueprintReadOnly, Parm)

void UMiniProgressionRewardPreview_C::PopulateNativeOffer(const struct FMangoNativeOffer& Nativeoffer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MiniProgressionRewardPreview_C", "PopulateNativeOffer");

	Params::MiniProgressionRewardPreview_C_PopulateNativeOffer Parms{};

	Parms.Nativeoffer = std::move(Nativeoffer);

	UObject::ProcessEvent(Func, &Parms);
}


// Function MiniProgressionRewardPreview.MiniProgressionRewardPreview_C.PopulateProgressionReward
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FMangoReward                     Reward                                                 (BlueprintVisible, BlueprintReadOnly, Parm)

void UMiniProgressionRewardPreview_C::PopulateProgressionReward(const struct FMangoReward& Reward)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MiniProgressionRewardPreview_C", "PopulateProgressionReward");

	Params::MiniProgressionRewardPreview_C_PopulateProgressionReward Parms{};

	Parms.Reward = std::move(Reward);

	UObject::ProcessEvent(Func, &Parms);
}


// Function MiniProgressionRewardPreview.MiniProgressionRewardPreview_C.PopulateUIItemData
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FMarinerUIItemButtonData         Param_UIItemButtonData                                 (BlueprintVisible, BlueprintReadOnly, Parm)

void UMiniProgressionRewardPreview_C::PopulateUIItemData(const struct FMarinerUIItemButtonData& Param_UIItemButtonData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MiniProgressionRewardPreview_C", "PopulateUIItemData");

	Params::MiniProgressionRewardPreview_C_PopulateUIItemData Parms{};

	Parms.Param_UIItemButtonData = std::move(Param_UIItemButtonData);

	UObject::ProcessEvent(Func, &Parms);
}


// Function MiniProgressionRewardPreview.MiniProgressionRewardPreview_C.PopulateBPXPBonusPersonal
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   BonusPct                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UMiniProgressionRewardPreview_C::PopulateBPXPBonusPersonal(int32 BonusPct)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MiniProgressionRewardPreview_C", "PopulateBPXPBonusPersonal");

	Params::MiniProgressionRewardPreview_C_PopulateBPXPBonusPersonal Parms{};

	Parms.BonusPct = BonusPct;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MiniProgressionRewardPreview.MiniProgressionRewardPreview_C.PopulateBPXPBonusParty
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   BonusPct                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UMiniProgressionRewardPreview_C::PopulateBPXPBonusParty(int32 BonusPct)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MiniProgressionRewardPreview_C", "PopulateBPXPBonusParty");

	Params::MiniProgressionRewardPreview_C_PopulateBPXPBonusParty Parms{};

	Parms.BonusPct = BonusPct;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MiniProgressionRewardPreview.MiniProgressionRewardPreview_C.PopulateMangoReward
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FMangoReward                     MangoReward                                            (BlueprintVisible, BlueprintReadOnly, Parm)

void UMiniProgressionRewardPreview_C::PopulateMangoReward(const struct FMangoReward& MangoReward)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MiniProgressionRewardPreview_C", "PopulateMangoReward");

	Params::MiniProgressionRewardPreview_C_PopulateMangoReward Parms{};

	Parms.MangoReward = std::move(MangoReward);

	UObject::ProcessEvent(Func, &Parms);
}


// Function MiniProgressionRewardPreview.MiniProgressionRewardPreview_C.GetAssets
// (Event, Protected, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// struct FMarinerLayeredButtonAssets      ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, ContainsInstancedReference)

struct FMarinerLayeredButtonAssets UMiniProgressionRewardPreview_C::GetAssets() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MiniProgressionRewardPreview_C", "GetAssets");

	Params::MiniProgressionRewardPreview_C_GetAssets Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}

}

