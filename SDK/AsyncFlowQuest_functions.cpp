#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AsyncFlowQuest

#include "Basic.hpp"

#include "AsyncFlowQuest_classes.hpp"
#include "AsyncFlowQuest_parameters.hpp"


namespace SDK
{

// Function AsyncFlowQuest.AsyncFlowQuest_C.ExecuteUbergraph_AsyncFlowQuest
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UAsyncFlowQuest_C::ExecuteUbergraph_AsyncFlowQuest(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AsyncFlowQuest_C", "ExecuteUbergraph_AsyncFlowQuest");

	Params::AsyncFlowQuest_C_ExecuteUbergraph_AsyncFlowQuest Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function AsyncFlowQuest.AsyncFlowQuest_C.ClaimCompleted
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bWasSuccessful                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// EMangoQuestSlot                         SlotId                                                 (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FMangoQuestDescription           NewQuest                                               (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UAsyncFlowQuest_C::ClaimCompleted(bool bWasSuccessful, const EMangoQuestSlot SlotId, const struct FMangoQuestDescription& NewQuest)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AsyncFlowQuest_C", "ClaimCompleted");

	Params::AsyncFlowQuest_C_ClaimCompleted Parms{};

	Parms.bWasSuccessful = bWasSuccessful;
	Parms.SlotId = SlotId;
	Parms.NewQuest = std::move(NewQuest);

	UObject::ProcessEvent(Func, &Parms);
}


// Function AsyncFlowQuest.AsyncFlowQuest_C.OnConstruct
// (Event, Protected, BlueprintEvent)

void UAsyncFlowQuest_C::OnConstruct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AsyncFlowQuest_C", "OnConstruct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function AsyncFlowQuest.AsyncFlowQuest_C.ClaimStarted
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// EMangoQuestSlot                         SlotId                                                 (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UAsyncFlowQuest_C::ClaimStarted(const EMangoQuestSlot SlotId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AsyncFlowQuest_C", "ClaimStarted");

	Params::AsyncFlowQuest_C_ClaimStarted Parms{};

	Parms.SlotId = SlotId;

	UObject::ProcessEvent(Func, &Parms);
}


// Function AsyncFlowQuest.AsyncFlowQuest_C.DummyCallback
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FKey                             KeyPressed                                             (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)

void UAsyncFlowQuest_C::DummyCallback(struct FKey& KeyPressed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AsyncFlowQuest_C", "DummyCallback");

	Params::AsyncFlowQuest_C_DummyCallback Parms{};

	Parms.KeyPressed = std::move(KeyPressed);

	UObject::ProcessEvent(Func, &Parms);

	KeyPressed = std::move(Parms.KeyPressed);
}


// Function AsyncFlowQuest.AsyncFlowQuest_C.OnClaimRewardStarted
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// EMangoQuestSlot                         SlotId                                                 (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UAsyncFlowQuest_C::OnClaimRewardStarted(EMangoQuestSlot& SlotId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AsyncFlowQuest_C", "OnClaimRewardStarted");

	Params::AsyncFlowQuest_C_OnClaimRewardStarted Parms{};

	Parms.SlotId = SlotId;

	UObject::ProcessEvent(Func, &Parms);

	SlotId = Parms.SlotId;
}


// Function AsyncFlowQuest.AsyncFlowQuest_C.EvalPendingQuestRewardIsOwned
// (Private, BlueprintCallable, BlueprintEvent)

void UAsyncFlowQuest_C::EvalPendingQuestRewardIsOwned()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AsyncFlowQuest_C", "EvalPendingQuestRewardIsOwned");

	UObject::ProcessEvent(Func, nullptr);
}


// Function AsyncFlowQuest.AsyncFlowQuest_C.OnClaimRewardCompleted
// (Private, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    WasSuccessful                                          (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
// EMangoQuestSlot                         SlotId                                                 (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UAsyncFlowQuest_C::OnClaimRewardCompleted(bool& WasSuccessful, EMangoQuestSlot& SlotId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AsyncFlowQuest_C", "OnClaimRewardCompleted");

	Params::AsyncFlowQuest_C_OnClaimRewardCompleted Parms{};

	Parms.WasSuccessful = WasSuccessful;
	Parms.SlotId = SlotId;

	UObject::ProcessEvent(Func, &Parms);

	WasSuccessful = Parms.WasSuccessful;
	SlotId = Parms.SlotId;
}


// Function AsyncFlowQuest.AsyncFlowQuest_C.ClaimFailedRetry
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FKey                             KeyPressed                                             (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)

void UAsyncFlowQuest_C::ClaimFailedRetry(struct FKey& KeyPressed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AsyncFlowQuest_C", "ClaimFailedRetry");

	Params::AsyncFlowQuest_C_ClaimFailedRetry Parms{};

	Parms.KeyPressed = std::move(KeyPressed);

	UObject::ProcessEvent(Func, &Parms);

	KeyPressed = std::move(Parms.KeyPressed);
}

}

