#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: SensitivityInputDebug

#include "Basic.hpp"

#include "Mariner_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function SensitivityInputDebug.SensitivityInputDebug_C.ExecuteUbergraph_SensitivityInputDebug
// 0x0140 (0x0140 - 0x0000)
struct SensitivityInputDebug_C_ExecuteUbergraph_SensitivityInputDebug final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerInputType                              Temp_byte_Variable;                                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMarinerGameInstance*                   K2Node_DynamicCast_AsMariner_Game_Instance;        // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMarinerInputOverlay*                   CallFunc_GetInputOverlay_ReturnValue;              // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerInputType                              CallFunc_GetLastActiveGamepadType_ReturnValue;     // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_1;                               // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_2;                               // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_3;                               // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_4;                               // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0044(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue_1;            // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default;                             // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8C[0x4];                                       // 0x008C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMarinerGameInstance*                   K2Node_DynamicCast_AsMariner_Game_Instance_1;      // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_99[0x7];                                       // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMarinerMenuManager*                    CallFunc_GetMenuManager_ReturnValue;               // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_DeactivateRootLayer_ReturnValue;          // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A9[0x7];                                       // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue;           // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMarinerCharacter*                      K2Node_DynamicCast_AsMariner_Character;            // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C1[0x7];                                       // 0x00C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCurveVector*                           CallFunc_Array_Get_Item;                           // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x00D0(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          K2Node_Event_bFromSubMenu;                         // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bToSubLayer;                          // 0x00E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E2[0x6];                                       // 0x00E2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetSensitivityTimeWhilePegged_ReturnValue; // 0x00F0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_FC[0x4];                                       // 0x00FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_114[0x4];                                      // 0x0114(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AMarinerCharacter*                      K2Node_DynamicCast_AsMariner_Character_1;          // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0121(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_122[0x2];                                      // 0x0122(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_GetDeadzonedInput_ReturnValue;            // 0x0124(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetCurrentInputs_ReturnValue;             // 0x012C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetInputBuffer_ReturnValue;               // 0x0134(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SensitivityInputDebug_C_ExecuteUbergraph_SensitivityInputDebug) == 0x000008, "Wrong alignment on SensitivityInputDebug_C_ExecuteUbergraph_SensitivityInputDebug");
static_assert(sizeof(SensitivityInputDebug_C_ExecuteUbergraph_SensitivityInputDebug) == 0x000140, "Wrong size on SensitivityInputDebug_C_ExecuteUbergraph_SensitivityInputDebug");
static_assert(offsetof(SensitivityInputDebug_C_ExecuteUbergraph_SensitivityInputDebug, EntryPoint) == 0x000000, "Member 'SensitivityInputDebug_C_ExecuteUbergraph_SensitivityInputDebug::EntryPoint' has a wrong offset!");
static_assert(offsetof(SensitivityInputDebug_C_ExecuteUbergraph_SensitivityInputDebug, CallFunc_GetGameInstance_ReturnValue) == 0x000008, "Member 'SensitivityInputDebug_C_ExecuteUbergraph_SensitivityInputDebug::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(SensitivityInputDebug_C_ExecuteUbergraph_SensitivityInputDebug, Temp_byte_Variable) == 0x000010, "Member 'SensitivityInputDebug_C_ExecuteUbergraph_SensitivityInputDebug::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(SensitivityInputDebug_C_ExecuteUbergraph_SensitivityInputDebug, K2Node_DynamicCast_AsMariner_Game_Instance) == 0x000018, "Member 'SensitivityInputDebug_C_ExecuteUbergraph_SensitivityInputDebug::K2Node_DynamicCast_AsMariner_Game_Instance' has a wrong offset!");
static_assert(offsetof(SensitivityInputDebug_C_ExecuteUbergraph_SensitivityInputDebug, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'SensitivityInputDebug_C_ExecuteUbergraph_SensitivityInputDebug::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(SensitivityInputDebug_C_ExecuteUbergraph_SensitivityInputDebug, Temp_int_Variable) == 0x000024, "Member 'SensitivityInputDebug_C_ExecuteUbergraph_SensitivityInputDebug::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(SensitivityInputDebug_C_ExecuteUbergraph_SensitivityInputDebug, CallFunc_GetInputOverlay_ReturnValue) == 0x000028, "Member 'SensitivityInputDebug_C_ExecuteUbergraph_SensitivityInputDebug::CallFunc_GetInputOverlay_ReturnValue' has a wrong offset!");
static_assert(offsetof(SensitivityInputDebug_C_ExecuteUbergraph_SensitivityInputDebug, CallFunc_GetLastActiveGamepadType_ReturnValue) == 0x000030, "Member 'SensitivityInputDebug_C_ExecuteUbergraph_SensitivityInputDebug::CallFunc_GetLastActiveGamepadType_ReturnValue' has a wrong offset!");
static_assert(offsetof(SensitivityInputDebug_C_ExecuteUbergraph_SensitivityInputDebug, Temp_int_Variable_1) == 0x000034, "Member 'SensitivityInputDebug_C_ExecuteUbergraph_SensitivityInputDebug::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(SensitivityInputDebug_C_ExecuteUbergraph_SensitivityInputDebug, Temp_int_Variable_2) == 0x000038, "Member 'SensitivityInputDebug_C_ExecuteUbergraph_SensitivityInputDebug::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(SensitivityInputDebug_C_ExecuteUbergraph_SensitivityInputDebug, Temp_int_Variable_3) == 0x00003C, "Member 'SensitivityInputDebug_C_ExecuteUbergraph_SensitivityInputDebug::Temp_int_Variable_3' has a wrong offset!");
static_assert(offsetof(SensitivityInputDebug_C_ExecuteUbergraph_SensitivityInputDebug, Temp_int_Variable_4) == 0x000040, "Member 'SensitivityInputDebug_C_ExecuteUbergraph_SensitivityInputDebug::Temp_int_Variable_4' has a wrong offset!");
static_assert(offsetof(SensitivityInputDebug_C_ExecuteUbergraph_SensitivityInputDebug, K2Node_Event_MyGeometry) == 0x000044, "Member 'SensitivityInputDebug_C_ExecuteUbergraph_SensitivityInputDebug::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(SensitivityInputDebug_C_ExecuteUbergraph_SensitivityInputDebug, K2Node_Event_InDeltaTime) == 0x00007C, "Member 'SensitivityInputDebug_C_ExecuteUbergraph_SensitivityInputDebug::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(SensitivityInputDebug_C_ExecuteUbergraph_SensitivityInputDebug, CallFunc_GetGameInstance_ReturnValue_1) == 0x000080, "Member 'SensitivityInputDebug_C_ExecuteUbergraph_SensitivityInputDebug::CallFunc_GetGameInstance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SensitivityInputDebug_C_ExecuteUbergraph_SensitivityInputDebug, K2Node_Select_Default) == 0x000088, "Member 'SensitivityInputDebug_C_ExecuteUbergraph_SensitivityInputDebug::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(SensitivityInputDebug_C_ExecuteUbergraph_SensitivityInputDebug, K2Node_DynamicCast_AsMariner_Game_Instance_1) == 0x000090, "Member 'SensitivityInputDebug_C_ExecuteUbergraph_SensitivityInputDebug::K2Node_DynamicCast_AsMariner_Game_Instance_1' has a wrong offset!");
static_assert(offsetof(SensitivityInputDebug_C_ExecuteUbergraph_SensitivityInputDebug, K2Node_DynamicCast_bSuccess_1) == 0x000098, "Member 'SensitivityInputDebug_C_ExecuteUbergraph_SensitivityInputDebug::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(SensitivityInputDebug_C_ExecuteUbergraph_SensitivityInputDebug, CallFunc_GetMenuManager_ReturnValue) == 0x0000A0, "Member 'SensitivityInputDebug_C_ExecuteUbergraph_SensitivityInputDebug::CallFunc_GetMenuManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(SensitivityInputDebug_C_ExecuteUbergraph_SensitivityInputDebug, CallFunc_DeactivateRootLayer_ReturnValue) == 0x0000A8, "Member 'SensitivityInputDebug_C_ExecuteUbergraph_SensitivityInputDebug::CallFunc_DeactivateRootLayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(SensitivityInputDebug_C_ExecuteUbergraph_SensitivityInputDebug, CallFunc_GetPlayerCharacter_ReturnValue) == 0x0000B0, "Member 'SensitivityInputDebug_C_ExecuteUbergraph_SensitivityInputDebug::CallFunc_GetPlayerCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(SensitivityInputDebug_C_ExecuteUbergraph_SensitivityInputDebug, K2Node_DynamicCast_AsMariner_Character) == 0x0000B8, "Member 'SensitivityInputDebug_C_ExecuteUbergraph_SensitivityInputDebug::K2Node_DynamicCast_AsMariner_Character' has a wrong offset!");
static_assert(offsetof(SensitivityInputDebug_C_ExecuteUbergraph_SensitivityInputDebug, K2Node_DynamicCast_bSuccess_2) == 0x0000C0, "Member 'SensitivityInputDebug_C_ExecuteUbergraph_SensitivityInputDebug::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(SensitivityInputDebug_C_ExecuteUbergraph_SensitivityInputDebug, CallFunc_Array_Get_Item) == 0x0000C8, "Member 'SensitivityInputDebug_C_ExecuteUbergraph_SensitivityInputDebug::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(SensitivityInputDebug_C_ExecuteUbergraph_SensitivityInputDebug, K2Node_CreateDelegate_OutputDelegate) == 0x0000D0, "Member 'SensitivityInputDebug_C_ExecuteUbergraph_SensitivityInputDebug::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(SensitivityInputDebug_C_ExecuteUbergraph_SensitivityInputDebug, K2Node_Event_bFromSubMenu) == 0x0000E0, "Member 'SensitivityInputDebug_C_ExecuteUbergraph_SensitivityInputDebug::K2Node_Event_bFromSubMenu' has a wrong offset!");
static_assert(offsetof(SensitivityInputDebug_C_ExecuteUbergraph_SensitivityInputDebug, K2Node_Event_bToSubLayer) == 0x0000E1, "Member 'SensitivityInputDebug_C_ExecuteUbergraph_SensitivityInputDebug::K2Node_Event_bToSubLayer' has a wrong offset!");
static_assert(offsetof(SensitivityInputDebug_C_ExecuteUbergraph_SensitivityInputDebug, CallFunc_GetOwningPlayer_ReturnValue) == 0x0000E8, "Member 'SensitivityInputDebug_C_ExecuteUbergraph_SensitivityInputDebug::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(SensitivityInputDebug_C_ExecuteUbergraph_SensitivityInputDebug, CallFunc_GetSensitivityTimeWhilePegged_ReturnValue) == 0x0000F0, "Member 'SensitivityInputDebug_C_ExecuteUbergraph_SensitivityInputDebug::CallFunc_GetSensitivityTimeWhilePegged_ReturnValue' has a wrong offset!");
static_assert(offsetof(SensitivityInputDebug_C_ExecuteUbergraph_SensitivityInputDebug, CallFunc_K2_GetPawn_ReturnValue) == 0x000100, "Member 'SensitivityInputDebug_C_ExecuteUbergraph_SensitivityInputDebug::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(SensitivityInputDebug_C_ExecuteUbergraph_SensitivityInputDebug, CallFunc_BreakVector_X) == 0x000108, "Member 'SensitivityInputDebug_C_ExecuteUbergraph_SensitivityInputDebug::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(SensitivityInputDebug_C_ExecuteUbergraph_SensitivityInputDebug, CallFunc_BreakVector_Y) == 0x00010C, "Member 'SensitivityInputDebug_C_ExecuteUbergraph_SensitivityInputDebug::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(SensitivityInputDebug_C_ExecuteUbergraph_SensitivityInputDebug, CallFunc_BreakVector_Z) == 0x000110, "Member 'SensitivityInputDebug_C_ExecuteUbergraph_SensitivityInputDebug::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(SensitivityInputDebug_C_ExecuteUbergraph_SensitivityInputDebug, K2Node_DynamicCast_AsMariner_Character_1) == 0x000118, "Member 'SensitivityInputDebug_C_ExecuteUbergraph_SensitivityInputDebug::K2Node_DynamicCast_AsMariner_Character_1' has a wrong offset!");
static_assert(offsetof(SensitivityInputDebug_C_ExecuteUbergraph_SensitivityInputDebug, K2Node_DynamicCast_bSuccess_3) == 0x000120, "Member 'SensitivityInputDebug_C_ExecuteUbergraph_SensitivityInputDebug::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(SensitivityInputDebug_C_ExecuteUbergraph_SensitivityInputDebug, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000121, "Member 'SensitivityInputDebug_C_ExecuteUbergraph_SensitivityInputDebug::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(SensitivityInputDebug_C_ExecuteUbergraph_SensitivityInputDebug, CallFunc_GetDeadzonedInput_ReturnValue) == 0x000124, "Member 'SensitivityInputDebug_C_ExecuteUbergraph_SensitivityInputDebug::CallFunc_GetDeadzonedInput_ReturnValue' has a wrong offset!");
static_assert(offsetof(SensitivityInputDebug_C_ExecuteUbergraph_SensitivityInputDebug, CallFunc_GetCurrentInputs_ReturnValue) == 0x00012C, "Member 'SensitivityInputDebug_C_ExecuteUbergraph_SensitivityInputDebug::CallFunc_GetCurrentInputs_ReturnValue' has a wrong offset!");
static_assert(offsetof(SensitivityInputDebug_C_ExecuteUbergraph_SensitivityInputDebug, CallFunc_GetInputBuffer_ReturnValue) == 0x000134, "Member 'SensitivityInputDebug_C_ExecuteUbergraph_SensitivityInputDebug::CallFunc_GetInputBuffer_ReturnValue' has a wrong offset!");

// Function SensitivityInputDebug.SensitivityInputDebug_C.BP_OnExited
// 0x0001 (0x0001 - 0x0000)
struct SensitivityInputDebug_C_BP_OnExited final
{
public:
	bool                                          bToSubLayer;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(SensitivityInputDebug_C_BP_OnExited) == 0x000001, "Wrong alignment on SensitivityInputDebug_C_BP_OnExited");
static_assert(sizeof(SensitivityInputDebug_C_BP_OnExited) == 0x000001, "Wrong size on SensitivityInputDebug_C_BP_OnExited");
static_assert(offsetof(SensitivityInputDebug_C_BP_OnExited, bToSubLayer) == 0x000000, "Member 'SensitivityInputDebug_C_BP_OnExited::bToSubLayer' has a wrong offset!");

// Function SensitivityInputDebug.SensitivityInputDebug_C.BP_OnEntered
// 0x0001 (0x0001 - 0x0000)
struct SensitivityInputDebug_C_BP_OnEntered final
{
public:
	bool                                          bFromSubMenu;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(SensitivityInputDebug_C_BP_OnEntered) == 0x000001, "Wrong alignment on SensitivityInputDebug_C_BP_OnEntered");
static_assert(sizeof(SensitivityInputDebug_C_BP_OnEntered) == 0x000001, "Wrong size on SensitivityInputDebug_C_BP_OnEntered");
static_assert(offsetof(SensitivityInputDebug_C_BP_OnEntered, bFromSubMenu) == 0x000000, "Member 'SensitivityInputDebug_C_BP_OnEntered::bFromSubMenu' has a wrong offset!");

// Function SensitivityInputDebug.SensitivityInputDebug_C.Tick
// 0x003C (0x003C - 0x0000)
struct SensitivityInputDebug_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SensitivityInputDebug_C_Tick) == 0x000004, "Wrong alignment on SensitivityInputDebug_C_Tick");
static_assert(sizeof(SensitivityInputDebug_C_Tick) == 0x00003C, "Wrong size on SensitivityInputDebug_C_Tick");
static_assert(offsetof(SensitivityInputDebug_C_Tick, MyGeometry) == 0x000000, "Member 'SensitivityInputDebug_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(SensitivityInputDebug_C_Tick, InDeltaTime) == 0x000038, "Member 'SensitivityInputDebug_C_Tick::InDeltaTime' has a wrong offset!");

// Function SensitivityInputDebug.SensitivityInputDebug_C.Get_VelocityX_Text_0
// 0x0040 (0x0040 - 0x0000)
struct SensitivityInputDebug_C_Get_VelocityX_Text_0 final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm)
	struct FVector2D                              CallFunc_GetCurrentVelocity_ReturnValue;           // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X;                          // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_FloatToText_ReturnValue;             // 0x0028(0x0018)()
};
static_assert(alignof(SensitivityInputDebug_C_Get_VelocityX_Text_0) == 0x000008, "Wrong alignment on SensitivityInputDebug_C_Get_VelocityX_Text_0");
static_assert(sizeof(SensitivityInputDebug_C_Get_VelocityX_Text_0) == 0x000040, "Wrong size on SensitivityInputDebug_C_Get_VelocityX_Text_0");
static_assert(offsetof(SensitivityInputDebug_C_Get_VelocityX_Text_0, ReturnValue) == 0x000000, "Member 'SensitivityInputDebug_C_Get_VelocityX_Text_0::ReturnValue' has a wrong offset!");
static_assert(offsetof(SensitivityInputDebug_C_Get_VelocityX_Text_0, CallFunc_GetCurrentVelocity_ReturnValue) == 0x000018, "Member 'SensitivityInputDebug_C_Get_VelocityX_Text_0::CallFunc_GetCurrentVelocity_ReturnValue' has a wrong offset!");
static_assert(offsetof(SensitivityInputDebug_C_Get_VelocityX_Text_0, CallFunc_BreakVector2D_X) == 0x000020, "Member 'SensitivityInputDebug_C_Get_VelocityX_Text_0::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(SensitivityInputDebug_C_Get_VelocityX_Text_0, CallFunc_BreakVector2D_Y) == 0x000024, "Member 'SensitivityInputDebug_C_Get_VelocityX_Text_0::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(SensitivityInputDebug_C_Get_VelocityX_Text_0, CallFunc_Conv_FloatToText_ReturnValue) == 0x000028, "Member 'SensitivityInputDebug_C_Get_VelocityX_Text_0::CallFunc_Conv_FloatToText_ReturnValue' has a wrong offset!");

// Function SensitivityInputDebug.SensitivityInputDebug_C.Get_XVelocityOutOfMax_Percent_0
// 0x0028 (0x0028 - 0x0000)
struct SensitivityInputDebug_C_Get_XVelocityOutOfMax_Percent_0 final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetCurrentVelocity_ReturnValue;           // 0x0004(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetTopEndTurnSpeed_ReturnValue;           // 0x000C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X;                          // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X_1;                        // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y_1;                        // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SensitivityInputDebug_C_Get_XVelocityOutOfMax_Percent_0) == 0x000004, "Wrong alignment on SensitivityInputDebug_C_Get_XVelocityOutOfMax_Percent_0");
static_assert(sizeof(SensitivityInputDebug_C_Get_XVelocityOutOfMax_Percent_0) == 0x000028, "Wrong size on SensitivityInputDebug_C_Get_XVelocityOutOfMax_Percent_0");
static_assert(offsetof(SensitivityInputDebug_C_Get_XVelocityOutOfMax_Percent_0, ReturnValue) == 0x000000, "Member 'SensitivityInputDebug_C_Get_XVelocityOutOfMax_Percent_0::ReturnValue' has a wrong offset!");
static_assert(offsetof(SensitivityInputDebug_C_Get_XVelocityOutOfMax_Percent_0, CallFunc_GetCurrentVelocity_ReturnValue) == 0x000004, "Member 'SensitivityInputDebug_C_Get_XVelocityOutOfMax_Percent_0::CallFunc_GetCurrentVelocity_ReturnValue' has a wrong offset!");
static_assert(offsetof(SensitivityInputDebug_C_Get_XVelocityOutOfMax_Percent_0, CallFunc_GetTopEndTurnSpeed_ReturnValue) == 0x00000C, "Member 'SensitivityInputDebug_C_Get_XVelocityOutOfMax_Percent_0::CallFunc_GetTopEndTurnSpeed_ReturnValue' has a wrong offset!");
static_assert(offsetof(SensitivityInputDebug_C_Get_XVelocityOutOfMax_Percent_0, CallFunc_BreakVector2D_X) == 0x000014, "Member 'SensitivityInputDebug_C_Get_XVelocityOutOfMax_Percent_0::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(SensitivityInputDebug_C_Get_XVelocityOutOfMax_Percent_0, CallFunc_BreakVector2D_Y) == 0x000018, "Member 'SensitivityInputDebug_C_Get_XVelocityOutOfMax_Percent_0::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(SensitivityInputDebug_C_Get_XVelocityOutOfMax_Percent_0, CallFunc_BreakVector2D_X_1) == 0x00001C, "Member 'SensitivityInputDebug_C_Get_XVelocityOutOfMax_Percent_0::CallFunc_BreakVector2D_X_1' has a wrong offset!");
static_assert(offsetof(SensitivityInputDebug_C_Get_XVelocityOutOfMax_Percent_0, CallFunc_BreakVector2D_Y_1) == 0x000020, "Member 'SensitivityInputDebug_C_Get_XVelocityOutOfMax_Percent_0::CallFunc_BreakVector2D_Y_1' has a wrong offset!");
static_assert(offsetof(SensitivityInputDebug_C_Get_XVelocityOutOfMax_Percent_0, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000024, "Member 'SensitivityInputDebug_C_Get_XVelocityOutOfMax_Percent_0::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");

// Function SensitivityInputDebug.SensitivityInputDebug_C.Get_MaxVelocityX_Text_0
// 0x0040 (0x0040 - 0x0000)
struct SensitivityInputDebug_C_Get_MaxVelocityX_Text_0 final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm)
	struct FVector2D                              CallFunc_GetTopEndTurnSpeed_ReturnValue;           // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X;                          // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_FloatToText_ReturnValue;             // 0x0028(0x0018)()
};
static_assert(alignof(SensitivityInputDebug_C_Get_MaxVelocityX_Text_0) == 0x000008, "Wrong alignment on SensitivityInputDebug_C_Get_MaxVelocityX_Text_0");
static_assert(sizeof(SensitivityInputDebug_C_Get_MaxVelocityX_Text_0) == 0x000040, "Wrong size on SensitivityInputDebug_C_Get_MaxVelocityX_Text_0");
static_assert(offsetof(SensitivityInputDebug_C_Get_MaxVelocityX_Text_0, ReturnValue) == 0x000000, "Member 'SensitivityInputDebug_C_Get_MaxVelocityX_Text_0::ReturnValue' has a wrong offset!");
static_assert(offsetof(SensitivityInputDebug_C_Get_MaxVelocityX_Text_0, CallFunc_GetTopEndTurnSpeed_ReturnValue) == 0x000018, "Member 'SensitivityInputDebug_C_Get_MaxVelocityX_Text_0::CallFunc_GetTopEndTurnSpeed_ReturnValue' has a wrong offset!");
static_assert(offsetof(SensitivityInputDebug_C_Get_MaxVelocityX_Text_0, CallFunc_BreakVector2D_X) == 0x000020, "Member 'SensitivityInputDebug_C_Get_MaxVelocityX_Text_0::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(SensitivityInputDebug_C_Get_MaxVelocityX_Text_0, CallFunc_BreakVector2D_Y) == 0x000024, "Member 'SensitivityInputDebug_C_Get_MaxVelocityX_Text_0::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(SensitivityInputDebug_C_Get_MaxVelocityX_Text_0, CallFunc_Conv_FloatToText_ReturnValue) == 0x000028, "Member 'SensitivityInputDebug_C_Get_MaxVelocityX_Text_0::CallFunc_Conv_FloatToText_ReturnValue' has a wrong offset!");

// Function SensitivityInputDebug.SensitivityInputDebug_C.Get_VelocityY_Text_0
// 0x0040 (0x0040 - 0x0000)
struct SensitivityInputDebug_C_Get_VelocityY_Text_0 final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm)
	struct FVector2D                              CallFunc_GetCurrentVelocity_ReturnValue;           // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X;                          // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_FloatToText_ReturnValue;             // 0x0028(0x0018)()
};
static_assert(alignof(SensitivityInputDebug_C_Get_VelocityY_Text_0) == 0x000008, "Wrong alignment on SensitivityInputDebug_C_Get_VelocityY_Text_0");
static_assert(sizeof(SensitivityInputDebug_C_Get_VelocityY_Text_0) == 0x000040, "Wrong size on SensitivityInputDebug_C_Get_VelocityY_Text_0");
static_assert(offsetof(SensitivityInputDebug_C_Get_VelocityY_Text_0, ReturnValue) == 0x000000, "Member 'SensitivityInputDebug_C_Get_VelocityY_Text_0::ReturnValue' has a wrong offset!");
static_assert(offsetof(SensitivityInputDebug_C_Get_VelocityY_Text_0, CallFunc_GetCurrentVelocity_ReturnValue) == 0x000018, "Member 'SensitivityInputDebug_C_Get_VelocityY_Text_0::CallFunc_GetCurrentVelocity_ReturnValue' has a wrong offset!");
static_assert(offsetof(SensitivityInputDebug_C_Get_VelocityY_Text_0, CallFunc_BreakVector2D_X) == 0x000020, "Member 'SensitivityInputDebug_C_Get_VelocityY_Text_0::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(SensitivityInputDebug_C_Get_VelocityY_Text_0, CallFunc_BreakVector2D_Y) == 0x000024, "Member 'SensitivityInputDebug_C_Get_VelocityY_Text_0::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(SensitivityInputDebug_C_Get_VelocityY_Text_0, CallFunc_Conv_FloatToText_ReturnValue) == 0x000028, "Member 'SensitivityInputDebug_C_Get_VelocityY_Text_0::CallFunc_Conv_FloatToText_ReturnValue' has a wrong offset!");

// Function SensitivityInputDebug.SensitivityInputDebug_C.Get_MaxVelocityY_Text_0
// 0x0040 (0x0040 - 0x0000)
struct SensitivityInputDebug_C_Get_MaxVelocityY_Text_0 final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm)
	struct FVector2D                              CallFunc_GetTopEndTurnSpeed_ReturnValue;           // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X;                          // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_FloatToText_ReturnValue;             // 0x0028(0x0018)()
};
static_assert(alignof(SensitivityInputDebug_C_Get_MaxVelocityY_Text_0) == 0x000008, "Wrong alignment on SensitivityInputDebug_C_Get_MaxVelocityY_Text_0");
static_assert(sizeof(SensitivityInputDebug_C_Get_MaxVelocityY_Text_0) == 0x000040, "Wrong size on SensitivityInputDebug_C_Get_MaxVelocityY_Text_0");
static_assert(offsetof(SensitivityInputDebug_C_Get_MaxVelocityY_Text_0, ReturnValue) == 0x000000, "Member 'SensitivityInputDebug_C_Get_MaxVelocityY_Text_0::ReturnValue' has a wrong offset!");
static_assert(offsetof(SensitivityInputDebug_C_Get_MaxVelocityY_Text_0, CallFunc_GetTopEndTurnSpeed_ReturnValue) == 0x000018, "Member 'SensitivityInputDebug_C_Get_MaxVelocityY_Text_0::CallFunc_GetTopEndTurnSpeed_ReturnValue' has a wrong offset!");
static_assert(offsetof(SensitivityInputDebug_C_Get_MaxVelocityY_Text_0, CallFunc_BreakVector2D_X) == 0x000020, "Member 'SensitivityInputDebug_C_Get_MaxVelocityY_Text_0::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(SensitivityInputDebug_C_Get_MaxVelocityY_Text_0, CallFunc_BreakVector2D_Y) == 0x000024, "Member 'SensitivityInputDebug_C_Get_MaxVelocityY_Text_0::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(SensitivityInputDebug_C_Get_MaxVelocityY_Text_0, CallFunc_Conv_FloatToText_ReturnValue) == 0x000028, "Member 'SensitivityInputDebug_C_Get_MaxVelocityY_Text_0::CallFunc_Conv_FloatToText_ReturnValue' has a wrong offset!");

// Function SensitivityInputDebug.SensitivityInputDebug_C.Get_YVelocityOutOfMax_Percent_0
// 0x0028 (0x0028 - 0x0000)
struct SensitivityInputDebug_C_Get_YVelocityOutOfMax_Percent_0 final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetCurrentVelocity_ReturnValue;           // 0x0004(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetTopEndTurnSpeed_ReturnValue;           // 0x000C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X;                          // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X_1;                        // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y_1;                        // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SensitivityInputDebug_C_Get_YVelocityOutOfMax_Percent_0) == 0x000004, "Wrong alignment on SensitivityInputDebug_C_Get_YVelocityOutOfMax_Percent_0");
static_assert(sizeof(SensitivityInputDebug_C_Get_YVelocityOutOfMax_Percent_0) == 0x000028, "Wrong size on SensitivityInputDebug_C_Get_YVelocityOutOfMax_Percent_0");
static_assert(offsetof(SensitivityInputDebug_C_Get_YVelocityOutOfMax_Percent_0, ReturnValue) == 0x000000, "Member 'SensitivityInputDebug_C_Get_YVelocityOutOfMax_Percent_0::ReturnValue' has a wrong offset!");
static_assert(offsetof(SensitivityInputDebug_C_Get_YVelocityOutOfMax_Percent_0, CallFunc_GetCurrentVelocity_ReturnValue) == 0x000004, "Member 'SensitivityInputDebug_C_Get_YVelocityOutOfMax_Percent_0::CallFunc_GetCurrentVelocity_ReturnValue' has a wrong offset!");
static_assert(offsetof(SensitivityInputDebug_C_Get_YVelocityOutOfMax_Percent_0, CallFunc_GetTopEndTurnSpeed_ReturnValue) == 0x00000C, "Member 'SensitivityInputDebug_C_Get_YVelocityOutOfMax_Percent_0::CallFunc_GetTopEndTurnSpeed_ReturnValue' has a wrong offset!");
static_assert(offsetof(SensitivityInputDebug_C_Get_YVelocityOutOfMax_Percent_0, CallFunc_BreakVector2D_X) == 0x000014, "Member 'SensitivityInputDebug_C_Get_YVelocityOutOfMax_Percent_0::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(SensitivityInputDebug_C_Get_YVelocityOutOfMax_Percent_0, CallFunc_BreakVector2D_Y) == 0x000018, "Member 'SensitivityInputDebug_C_Get_YVelocityOutOfMax_Percent_0::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(SensitivityInputDebug_C_Get_YVelocityOutOfMax_Percent_0, CallFunc_BreakVector2D_X_1) == 0x00001C, "Member 'SensitivityInputDebug_C_Get_YVelocityOutOfMax_Percent_0::CallFunc_BreakVector2D_X_1' has a wrong offset!");
static_assert(offsetof(SensitivityInputDebug_C_Get_YVelocityOutOfMax_Percent_0, CallFunc_BreakVector2D_Y_1) == 0x000020, "Member 'SensitivityInputDebug_C_Get_YVelocityOutOfMax_Percent_0::CallFunc_BreakVector2D_Y_1' has a wrong offset!");
static_assert(offsetof(SensitivityInputDebug_C_Get_YVelocityOutOfMax_Percent_0, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000024, "Member 'SensitivityInputDebug_C_Get_YVelocityOutOfMax_Percent_0::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");

// Function SensitivityInputDebug.SensitivityInputDebug_C.GetCurrentInputs_X
// 0x001C (0x001C - 0x0000)
struct SensitivityInputDebug_C_GetCurrentInputs_X final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetCurrentInputs_ReturnValue;             // 0x0004(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X;                          // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Abs_ReturnValue;                          // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SensitivityInputDebug_C_GetCurrentInputs_X) == 0x000004, "Wrong alignment on SensitivityInputDebug_C_GetCurrentInputs_X");
static_assert(sizeof(SensitivityInputDebug_C_GetCurrentInputs_X) == 0x00001C, "Wrong size on SensitivityInputDebug_C_GetCurrentInputs_X");
static_assert(offsetof(SensitivityInputDebug_C_GetCurrentInputs_X, ReturnValue) == 0x000000, "Member 'SensitivityInputDebug_C_GetCurrentInputs_X::ReturnValue' has a wrong offset!");
static_assert(offsetof(SensitivityInputDebug_C_GetCurrentInputs_X, CallFunc_GetCurrentInputs_ReturnValue) == 0x000004, "Member 'SensitivityInputDebug_C_GetCurrentInputs_X::CallFunc_GetCurrentInputs_ReturnValue' has a wrong offset!");
static_assert(offsetof(SensitivityInputDebug_C_GetCurrentInputs_X, CallFunc_BreakVector2D_X) == 0x00000C, "Member 'SensitivityInputDebug_C_GetCurrentInputs_X::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(SensitivityInputDebug_C_GetCurrentInputs_X, CallFunc_BreakVector2D_Y) == 0x000010, "Member 'SensitivityInputDebug_C_GetCurrentInputs_X::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(SensitivityInputDebug_C_GetCurrentInputs_X, CallFunc_Abs_ReturnValue) == 0x000014, "Member 'SensitivityInputDebug_C_GetCurrentInputs_X::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(SensitivityInputDebug_C_GetCurrentInputs_X, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000018, "Member 'SensitivityInputDebug_C_GetCurrentInputs_X::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");

// Function SensitivityInputDebug.SensitivityInputDebug_C.Get_CurrentInputs_Y
// 0x001C (0x001C - 0x0000)
struct SensitivityInputDebug_C_Get_CurrentInputs_Y final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetCurrentInputs_ReturnValue;             // 0x0004(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X;                          // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Abs_ReturnValue;                          // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SensitivityInputDebug_C_Get_CurrentInputs_Y) == 0x000004, "Wrong alignment on SensitivityInputDebug_C_Get_CurrentInputs_Y");
static_assert(sizeof(SensitivityInputDebug_C_Get_CurrentInputs_Y) == 0x00001C, "Wrong size on SensitivityInputDebug_C_Get_CurrentInputs_Y");
static_assert(offsetof(SensitivityInputDebug_C_Get_CurrentInputs_Y, ReturnValue) == 0x000000, "Member 'SensitivityInputDebug_C_Get_CurrentInputs_Y::ReturnValue' has a wrong offset!");
static_assert(offsetof(SensitivityInputDebug_C_Get_CurrentInputs_Y, CallFunc_GetCurrentInputs_ReturnValue) == 0x000004, "Member 'SensitivityInputDebug_C_Get_CurrentInputs_Y::CallFunc_GetCurrentInputs_ReturnValue' has a wrong offset!");
static_assert(offsetof(SensitivityInputDebug_C_Get_CurrentInputs_Y, CallFunc_BreakVector2D_X) == 0x00000C, "Member 'SensitivityInputDebug_C_Get_CurrentInputs_Y::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(SensitivityInputDebug_C_Get_CurrentInputs_Y, CallFunc_BreakVector2D_Y) == 0x000010, "Member 'SensitivityInputDebug_C_Get_CurrentInputs_Y::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(SensitivityInputDebug_C_Get_CurrentInputs_Y, CallFunc_Abs_ReturnValue) == 0x000014, "Member 'SensitivityInputDebug_C_Get_CurrentInputs_Y::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(SensitivityInputDebug_C_Get_CurrentInputs_Y, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000018, "Member 'SensitivityInputDebug_C_Get_CurrentInputs_Y::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");

// Function SensitivityInputDebug.SensitivityInputDebug_C.Get_TextBlock_8_Text_0
// 0x0040 (0x0040 - 0x0000)
struct SensitivityInputDebug_C_Get_TextBlock_8_Text_0 final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm)
	struct FVector2D                              CallFunc_GetCurrentInputs_ReturnValue;             // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X;                          // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_FloatToText_ReturnValue;             // 0x0028(0x0018)()
};
static_assert(alignof(SensitivityInputDebug_C_Get_TextBlock_8_Text_0) == 0x000008, "Wrong alignment on SensitivityInputDebug_C_Get_TextBlock_8_Text_0");
static_assert(sizeof(SensitivityInputDebug_C_Get_TextBlock_8_Text_0) == 0x000040, "Wrong size on SensitivityInputDebug_C_Get_TextBlock_8_Text_0");
static_assert(offsetof(SensitivityInputDebug_C_Get_TextBlock_8_Text_0, ReturnValue) == 0x000000, "Member 'SensitivityInputDebug_C_Get_TextBlock_8_Text_0::ReturnValue' has a wrong offset!");
static_assert(offsetof(SensitivityInputDebug_C_Get_TextBlock_8_Text_0, CallFunc_GetCurrentInputs_ReturnValue) == 0x000018, "Member 'SensitivityInputDebug_C_Get_TextBlock_8_Text_0::CallFunc_GetCurrentInputs_ReturnValue' has a wrong offset!");
static_assert(offsetof(SensitivityInputDebug_C_Get_TextBlock_8_Text_0, CallFunc_BreakVector2D_X) == 0x000020, "Member 'SensitivityInputDebug_C_Get_TextBlock_8_Text_0::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(SensitivityInputDebug_C_Get_TextBlock_8_Text_0, CallFunc_BreakVector2D_Y) == 0x000024, "Member 'SensitivityInputDebug_C_Get_TextBlock_8_Text_0::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(SensitivityInputDebug_C_Get_TextBlock_8_Text_0, CallFunc_Conv_FloatToText_ReturnValue) == 0x000028, "Member 'SensitivityInputDebug_C_Get_TextBlock_8_Text_0::CallFunc_Conv_FloatToText_ReturnValue' has a wrong offset!");

// Function SensitivityInputDebug.SensitivityInputDebug_C.Get_TextBlock_9_Text_0
// 0x0040 (0x0040 - 0x0000)
struct SensitivityInputDebug_C_Get_TextBlock_9_Text_0 final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm)
	struct FVector2D                              CallFunc_GetCurrentInputs_ReturnValue;             // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X;                          // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_FloatToText_ReturnValue;             // 0x0028(0x0018)()
};
static_assert(alignof(SensitivityInputDebug_C_Get_TextBlock_9_Text_0) == 0x000008, "Wrong alignment on SensitivityInputDebug_C_Get_TextBlock_9_Text_0");
static_assert(sizeof(SensitivityInputDebug_C_Get_TextBlock_9_Text_0) == 0x000040, "Wrong size on SensitivityInputDebug_C_Get_TextBlock_9_Text_0");
static_assert(offsetof(SensitivityInputDebug_C_Get_TextBlock_9_Text_0, ReturnValue) == 0x000000, "Member 'SensitivityInputDebug_C_Get_TextBlock_9_Text_0::ReturnValue' has a wrong offset!");
static_assert(offsetof(SensitivityInputDebug_C_Get_TextBlock_9_Text_0, CallFunc_GetCurrentInputs_ReturnValue) == 0x000018, "Member 'SensitivityInputDebug_C_Get_TextBlock_9_Text_0::CallFunc_GetCurrentInputs_ReturnValue' has a wrong offset!");
static_assert(offsetof(SensitivityInputDebug_C_Get_TextBlock_9_Text_0, CallFunc_BreakVector2D_X) == 0x000020, "Member 'SensitivityInputDebug_C_Get_TextBlock_9_Text_0::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(SensitivityInputDebug_C_Get_TextBlock_9_Text_0, CallFunc_BreakVector2D_Y) == 0x000024, "Member 'SensitivityInputDebug_C_Get_TextBlock_9_Text_0::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(SensitivityInputDebug_C_Get_TextBlock_9_Text_0, CallFunc_Conv_FloatToText_ReturnValue) == 0x000028, "Member 'SensitivityInputDebug_C_Get_TextBlock_9_Text_0::CallFunc_Conv_FloatToText_ReturnValue' has a wrong offset!");

// Function SensitivityInputDebug.SensitivityInputDebug_C.Get_CompositeText_Text_0
// 0x0040 (0x0040 - 0x0000)
struct SensitivityInputDebug_C_Get_CompositeText_Text_0 final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm)
	struct FVector2D                              CallFunc_GetCurrentInputs_ReturnValue;             // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize2D_ReturnValue;                      // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_FloatToText_ReturnValue;             // 0x0028(0x0018)()
};
static_assert(alignof(SensitivityInputDebug_C_Get_CompositeText_Text_0) == 0x000008, "Wrong alignment on SensitivityInputDebug_C_Get_CompositeText_Text_0");
static_assert(sizeof(SensitivityInputDebug_C_Get_CompositeText_Text_0) == 0x000040, "Wrong size on SensitivityInputDebug_C_Get_CompositeText_Text_0");
static_assert(offsetof(SensitivityInputDebug_C_Get_CompositeText_Text_0, ReturnValue) == 0x000000, "Member 'SensitivityInputDebug_C_Get_CompositeText_Text_0::ReturnValue' has a wrong offset!");
static_assert(offsetof(SensitivityInputDebug_C_Get_CompositeText_Text_0, CallFunc_GetCurrentInputs_ReturnValue) == 0x000018, "Member 'SensitivityInputDebug_C_Get_CompositeText_Text_0::CallFunc_GetCurrentInputs_ReturnValue' has a wrong offset!");
static_assert(offsetof(SensitivityInputDebug_C_Get_CompositeText_Text_0, CallFunc_VSize2D_ReturnValue) == 0x000020, "Member 'SensitivityInputDebug_C_Get_CompositeText_Text_0::CallFunc_VSize2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(SensitivityInputDebug_C_Get_CompositeText_Text_0, CallFunc_Conv_FloatToText_ReturnValue) == 0x000028, "Member 'SensitivityInputDebug_C_Get_CompositeText_Text_0::CallFunc_Conv_FloatToText_ReturnValue' has a wrong offset!");

// Function SensitivityInputDebug.SensitivityInputDebug_C.Get_CompositInputBar_Percent_0
// 0x0014 (0x0014 - 0x0000)
struct SensitivityInputDebug_C_Get_CompositInputBar_Percent_0 final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetCurrentInputs_ReturnValue;             // 0x0004(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize2D_ReturnValue;                      // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SensitivityInputDebug_C_Get_CompositInputBar_Percent_0) == 0x000004, "Wrong alignment on SensitivityInputDebug_C_Get_CompositInputBar_Percent_0");
static_assert(sizeof(SensitivityInputDebug_C_Get_CompositInputBar_Percent_0) == 0x000014, "Wrong size on SensitivityInputDebug_C_Get_CompositInputBar_Percent_0");
static_assert(offsetof(SensitivityInputDebug_C_Get_CompositInputBar_Percent_0, ReturnValue) == 0x000000, "Member 'SensitivityInputDebug_C_Get_CompositInputBar_Percent_0::ReturnValue' has a wrong offset!");
static_assert(offsetof(SensitivityInputDebug_C_Get_CompositInputBar_Percent_0, CallFunc_GetCurrentInputs_ReturnValue) == 0x000004, "Member 'SensitivityInputDebug_C_Get_CompositInputBar_Percent_0::CallFunc_GetCurrentInputs_ReturnValue' has a wrong offset!");
static_assert(offsetof(SensitivityInputDebug_C_Get_CompositInputBar_Percent_0, CallFunc_VSize2D_ReturnValue) == 0x00000C, "Member 'SensitivityInputDebug_C_Get_CompositInputBar_Percent_0::CallFunc_VSize2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(SensitivityInputDebug_C_Get_CompositInputBar_Percent_0, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000010, "Member 'SensitivityInputDebug_C_Get_CompositInputBar_Percent_0::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");

// Function SensitivityInputDebug.SensitivityInputDebug_C.Get_AngleText_Text_0
// 0x0050 (0x0050 - 0x0000)
struct SensitivityInputDebug_C_Get_AngleText_Text_0 final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm)
	struct FVector2D                              CallFunc_GetInputBuffer_ReturnValue;               // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X;                          // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_FloatFloat_ReturnValue;          // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_DegAtan_ReturnValue;                      // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_FloatToText_ReturnValue;             // 0x0038(0x0018)()
};
static_assert(alignof(SensitivityInputDebug_C_Get_AngleText_Text_0) == 0x000008, "Wrong alignment on SensitivityInputDebug_C_Get_AngleText_Text_0");
static_assert(sizeof(SensitivityInputDebug_C_Get_AngleText_Text_0) == 0x000050, "Wrong size on SensitivityInputDebug_C_Get_AngleText_Text_0");
static_assert(offsetof(SensitivityInputDebug_C_Get_AngleText_Text_0, ReturnValue) == 0x000000, "Member 'SensitivityInputDebug_C_Get_AngleText_Text_0::ReturnValue' has a wrong offset!");
static_assert(offsetof(SensitivityInputDebug_C_Get_AngleText_Text_0, CallFunc_GetInputBuffer_ReturnValue) == 0x000018, "Member 'SensitivityInputDebug_C_Get_AngleText_Text_0::CallFunc_GetInputBuffer_ReturnValue' has a wrong offset!");
static_assert(offsetof(SensitivityInputDebug_C_Get_AngleText_Text_0, CallFunc_BreakVector2D_X) == 0x000020, "Member 'SensitivityInputDebug_C_Get_AngleText_Text_0::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(SensitivityInputDebug_C_Get_AngleText_Text_0, CallFunc_BreakVector2D_Y) == 0x000024, "Member 'SensitivityInputDebug_C_Get_AngleText_Text_0::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(SensitivityInputDebug_C_Get_AngleText_Text_0, CallFunc_NotEqual_FloatFloat_ReturnValue) == 0x000028, "Member 'SensitivityInputDebug_C_Get_AngleText_Text_0::CallFunc_NotEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(SensitivityInputDebug_C_Get_AngleText_Text_0, CallFunc_Divide_FloatFloat_ReturnValue) == 0x00002C, "Member 'SensitivityInputDebug_C_Get_AngleText_Text_0::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(SensitivityInputDebug_C_Get_AngleText_Text_0, CallFunc_DegAtan_ReturnValue) == 0x000030, "Member 'SensitivityInputDebug_C_Get_AngleText_Text_0::CallFunc_DegAtan_ReturnValue' has a wrong offset!");
static_assert(offsetof(SensitivityInputDebug_C_Get_AngleText_Text_0, CallFunc_Conv_FloatToText_ReturnValue) == 0x000038, "Member 'SensitivityInputDebug_C_Get_AngleText_Text_0::CallFunc_Conv_FloatToText_ReturnValue' has a wrong offset!");

// Function SensitivityInputDebug.SensitivityInputDebug_C.Get_TextBlock_15_Text_0
// 0x0040 (0x0040 - 0x0000)
struct SensitivityInputDebug_C_Get_TextBlock_15_Text_0 final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm)
	struct FVector2D                              CallFunc_GetDeadzonedInput_ReturnValue;            // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X;                          // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_FloatToText_ReturnValue;             // 0x0028(0x0018)()
};
static_assert(alignof(SensitivityInputDebug_C_Get_TextBlock_15_Text_0) == 0x000008, "Wrong alignment on SensitivityInputDebug_C_Get_TextBlock_15_Text_0");
static_assert(sizeof(SensitivityInputDebug_C_Get_TextBlock_15_Text_0) == 0x000040, "Wrong size on SensitivityInputDebug_C_Get_TextBlock_15_Text_0");
static_assert(offsetof(SensitivityInputDebug_C_Get_TextBlock_15_Text_0, ReturnValue) == 0x000000, "Member 'SensitivityInputDebug_C_Get_TextBlock_15_Text_0::ReturnValue' has a wrong offset!");
static_assert(offsetof(SensitivityInputDebug_C_Get_TextBlock_15_Text_0, CallFunc_GetDeadzonedInput_ReturnValue) == 0x000018, "Member 'SensitivityInputDebug_C_Get_TextBlock_15_Text_0::CallFunc_GetDeadzonedInput_ReturnValue' has a wrong offset!");
static_assert(offsetof(SensitivityInputDebug_C_Get_TextBlock_15_Text_0, CallFunc_BreakVector2D_X) == 0x000020, "Member 'SensitivityInputDebug_C_Get_TextBlock_15_Text_0::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(SensitivityInputDebug_C_Get_TextBlock_15_Text_0, CallFunc_BreakVector2D_Y) == 0x000024, "Member 'SensitivityInputDebug_C_Get_TextBlock_15_Text_0::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(SensitivityInputDebug_C_Get_TextBlock_15_Text_0, CallFunc_Conv_FloatToText_ReturnValue) == 0x000028, "Member 'SensitivityInputDebug_C_Get_TextBlock_15_Text_0::CallFunc_Conv_FloatToText_ReturnValue' has a wrong offset!");

// Function SensitivityInputDebug.SensitivityInputDebug_C.Get_TextBlock_13_Text_0
// 0x0040 (0x0040 - 0x0000)
struct SensitivityInputDebug_C_Get_TextBlock_13_Text_0 final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm)
	struct FVector2D                              CallFunc_GetDeadzonedInput_ReturnValue;            // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X;                          // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_FloatToText_ReturnValue;             // 0x0028(0x0018)()
};
static_assert(alignof(SensitivityInputDebug_C_Get_TextBlock_13_Text_0) == 0x000008, "Wrong alignment on SensitivityInputDebug_C_Get_TextBlock_13_Text_0");
static_assert(sizeof(SensitivityInputDebug_C_Get_TextBlock_13_Text_0) == 0x000040, "Wrong size on SensitivityInputDebug_C_Get_TextBlock_13_Text_0");
static_assert(offsetof(SensitivityInputDebug_C_Get_TextBlock_13_Text_0, ReturnValue) == 0x000000, "Member 'SensitivityInputDebug_C_Get_TextBlock_13_Text_0::ReturnValue' has a wrong offset!");
static_assert(offsetof(SensitivityInputDebug_C_Get_TextBlock_13_Text_0, CallFunc_GetDeadzonedInput_ReturnValue) == 0x000018, "Member 'SensitivityInputDebug_C_Get_TextBlock_13_Text_0::CallFunc_GetDeadzonedInput_ReturnValue' has a wrong offset!");
static_assert(offsetof(SensitivityInputDebug_C_Get_TextBlock_13_Text_0, CallFunc_BreakVector2D_X) == 0x000020, "Member 'SensitivityInputDebug_C_Get_TextBlock_13_Text_0::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(SensitivityInputDebug_C_Get_TextBlock_13_Text_0, CallFunc_BreakVector2D_Y) == 0x000024, "Member 'SensitivityInputDebug_C_Get_TextBlock_13_Text_0::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(SensitivityInputDebug_C_Get_TextBlock_13_Text_0, CallFunc_Conv_FloatToText_ReturnValue) == 0x000028, "Member 'SensitivityInputDebug_C_Get_TextBlock_13_Text_0::CallFunc_Conv_FloatToText_ReturnValue' has a wrong offset!");

// Function SensitivityInputDebug.SensitivityInputDebug_C.Get_DeadZonedInput_X
// 0x001C (0x001C - 0x0000)
struct SensitivityInputDebug_C_Get_DeadZonedInput_X final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetDeadzonedInput_ReturnValue;            // 0x0004(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X;                          // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Abs_ReturnValue;                          // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SensitivityInputDebug_C_Get_DeadZonedInput_X) == 0x000004, "Wrong alignment on SensitivityInputDebug_C_Get_DeadZonedInput_X");
static_assert(sizeof(SensitivityInputDebug_C_Get_DeadZonedInput_X) == 0x00001C, "Wrong size on SensitivityInputDebug_C_Get_DeadZonedInput_X");
static_assert(offsetof(SensitivityInputDebug_C_Get_DeadZonedInput_X, ReturnValue) == 0x000000, "Member 'SensitivityInputDebug_C_Get_DeadZonedInput_X::ReturnValue' has a wrong offset!");
static_assert(offsetof(SensitivityInputDebug_C_Get_DeadZonedInput_X, CallFunc_GetDeadzonedInput_ReturnValue) == 0x000004, "Member 'SensitivityInputDebug_C_Get_DeadZonedInput_X::CallFunc_GetDeadzonedInput_ReturnValue' has a wrong offset!");
static_assert(offsetof(SensitivityInputDebug_C_Get_DeadZonedInput_X, CallFunc_BreakVector2D_X) == 0x00000C, "Member 'SensitivityInputDebug_C_Get_DeadZonedInput_X::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(SensitivityInputDebug_C_Get_DeadZonedInput_X, CallFunc_BreakVector2D_Y) == 0x000010, "Member 'SensitivityInputDebug_C_Get_DeadZonedInput_X::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(SensitivityInputDebug_C_Get_DeadZonedInput_X, CallFunc_Abs_ReturnValue) == 0x000014, "Member 'SensitivityInputDebug_C_Get_DeadZonedInput_X::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(SensitivityInputDebug_C_Get_DeadZonedInput_X, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000018, "Member 'SensitivityInputDebug_C_Get_DeadZonedInput_X::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");

// Function SensitivityInputDebug.SensitivityInputDebug_C.Get_DeadZonedInput_Y
// 0x001C (0x001C - 0x0000)
struct SensitivityInputDebug_C_Get_DeadZonedInput_Y final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetDeadzonedInput_ReturnValue;            // 0x0004(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X;                          // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Abs_ReturnValue;                          // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SensitivityInputDebug_C_Get_DeadZonedInput_Y) == 0x000004, "Wrong alignment on SensitivityInputDebug_C_Get_DeadZonedInput_Y");
static_assert(sizeof(SensitivityInputDebug_C_Get_DeadZonedInput_Y) == 0x00001C, "Wrong size on SensitivityInputDebug_C_Get_DeadZonedInput_Y");
static_assert(offsetof(SensitivityInputDebug_C_Get_DeadZonedInput_Y, ReturnValue) == 0x000000, "Member 'SensitivityInputDebug_C_Get_DeadZonedInput_Y::ReturnValue' has a wrong offset!");
static_assert(offsetof(SensitivityInputDebug_C_Get_DeadZonedInput_Y, CallFunc_GetDeadzonedInput_ReturnValue) == 0x000004, "Member 'SensitivityInputDebug_C_Get_DeadZonedInput_Y::CallFunc_GetDeadzonedInput_ReturnValue' has a wrong offset!");
static_assert(offsetof(SensitivityInputDebug_C_Get_DeadZonedInput_Y, CallFunc_BreakVector2D_X) == 0x00000C, "Member 'SensitivityInputDebug_C_Get_DeadZonedInput_Y::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(SensitivityInputDebug_C_Get_DeadZonedInput_Y, CallFunc_BreakVector2D_Y) == 0x000010, "Member 'SensitivityInputDebug_C_Get_DeadZonedInput_Y::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(SensitivityInputDebug_C_Get_DeadZonedInput_Y, CallFunc_Abs_ReturnValue) == 0x000014, "Member 'SensitivityInputDebug_C_Get_DeadZonedInput_Y::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(SensitivityInputDebug_C_Get_DeadZonedInput_Y, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000018, "Member 'SensitivityInputDebug_C_Get_DeadZonedInput_Y::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");

// Function SensitivityInputDebug.SensitivityInputDebug_C.Get_TextBlock_22_Text_0
// 0x0048 (0x0048 - 0x0000)
struct SensitivityInputDebug_C_Get_TextBlock_22_Text_0 final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm)
	struct FVector                                CallFunc_GetSensitivityTimeWhilePegged_ReturnValue; // 0x0018(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_FloatToText_ReturnValue;             // 0x0030(0x0018)()
};
static_assert(alignof(SensitivityInputDebug_C_Get_TextBlock_22_Text_0) == 0x000008, "Wrong alignment on SensitivityInputDebug_C_Get_TextBlock_22_Text_0");
static_assert(sizeof(SensitivityInputDebug_C_Get_TextBlock_22_Text_0) == 0x000048, "Wrong size on SensitivityInputDebug_C_Get_TextBlock_22_Text_0");
static_assert(offsetof(SensitivityInputDebug_C_Get_TextBlock_22_Text_0, ReturnValue) == 0x000000, "Member 'SensitivityInputDebug_C_Get_TextBlock_22_Text_0::ReturnValue' has a wrong offset!");
static_assert(offsetof(SensitivityInputDebug_C_Get_TextBlock_22_Text_0, CallFunc_GetSensitivityTimeWhilePegged_ReturnValue) == 0x000018, "Member 'SensitivityInputDebug_C_Get_TextBlock_22_Text_0::CallFunc_GetSensitivityTimeWhilePegged_ReturnValue' has a wrong offset!");
static_assert(offsetof(SensitivityInputDebug_C_Get_TextBlock_22_Text_0, CallFunc_BreakVector_X) == 0x000024, "Member 'SensitivityInputDebug_C_Get_TextBlock_22_Text_0::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(SensitivityInputDebug_C_Get_TextBlock_22_Text_0, CallFunc_BreakVector_Y) == 0x000028, "Member 'SensitivityInputDebug_C_Get_TextBlock_22_Text_0::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(SensitivityInputDebug_C_Get_TextBlock_22_Text_0, CallFunc_BreakVector_Z) == 0x00002C, "Member 'SensitivityInputDebug_C_Get_TextBlock_22_Text_0::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(SensitivityInputDebug_C_Get_TextBlock_22_Text_0, CallFunc_Conv_FloatToText_ReturnValue) == 0x000030, "Member 'SensitivityInputDebug_C_Get_TextBlock_22_Text_0::CallFunc_Conv_FloatToText_ReturnValue' has a wrong offset!");

// Function SensitivityInputDebug.SensitivityInputDebug_C.Get_TextBlock_23_Text_0
// 0x0048 (0x0048 - 0x0000)
struct SensitivityInputDebug_C_Get_TextBlock_23_Text_0 final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm)
	struct FVector                                CallFunc_GetSensitivityTimeWhilePegged_ReturnValue; // 0x0018(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_FloatToText_ReturnValue;             // 0x0030(0x0018)()
};
static_assert(alignof(SensitivityInputDebug_C_Get_TextBlock_23_Text_0) == 0x000008, "Wrong alignment on SensitivityInputDebug_C_Get_TextBlock_23_Text_0");
static_assert(sizeof(SensitivityInputDebug_C_Get_TextBlock_23_Text_0) == 0x000048, "Wrong size on SensitivityInputDebug_C_Get_TextBlock_23_Text_0");
static_assert(offsetof(SensitivityInputDebug_C_Get_TextBlock_23_Text_0, ReturnValue) == 0x000000, "Member 'SensitivityInputDebug_C_Get_TextBlock_23_Text_0::ReturnValue' has a wrong offset!");
static_assert(offsetof(SensitivityInputDebug_C_Get_TextBlock_23_Text_0, CallFunc_GetSensitivityTimeWhilePegged_ReturnValue) == 0x000018, "Member 'SensitivityInputDebug_C_Get_TextBlock_23_Text_0::CallFunc_GetSensitivityTimeWhilePegged_ReturnValue' has a wrong offset!");
static_assert(offsetof(SensitivityInputDebug_C_Get_TextBlock_23_Text_0, CallFunc_BreakVector_X) == 0x000024, "Member 'SensitivityInputDebug_C_Get_TextBlock_23_Text_0::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(SensitivityInputDebug_C_Get_TextBlock_23_Text_0, CallFunc_BreakVector_Y) == 0x000028, "Member 'SensitivityInputDebug_C_Get_TextBlock_23_Text_0::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(SensitivityInputDebug_C_Get_TextBlock_23_Text_0, CallFunc_BreakVector_Z) == 0x00002C, "Member 'SensitivityInputDebug_C_Get_TextBlock_23_Text_0::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(SensitivityInputDebug_C_Get_TextBlock_23_Text_0, CallFunc_Conv_FloatToText_ReturnValue) == 0x000030, "Member 'SensitivityInputDebug_C_Get_TextBlock_23_Text_0::CallFunc_Conv_FloatToText_ReturnValue' has a wrong offset!");

// Function SensitivityInputDebug.SensitivityInputDebug_C.Get_PercentPegged_X
// 0x0024 (0x0024 - 0x0000)
struct SensitivityInputDebug_C_Get_PercentPegged_X final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetSensitivityTimeWhilePegged_ReturnValue; // 0x0004(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetTimePeggedUntilAtTopEndTurnSpeed_ReturnValue; // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SensitivityInputDebug_C_Get_PercentPegged_X) == 0x000004, "Wrong alignment on SensitivityInputDebug_C_Get_PercentPegged_X");
static_assert(sizeof(SensitivityInputDebug_C_Get_PercentPegged_X) == 0x000024, "Wrong size on SensitivityInputDebug_C_Get_PercentPegged_X");
static_assert(offsetof(SensitivityInputDebug_C_Get_PercentPegged_X, ReturnValue) == 0x000000, "Member 'SensitivityInputDebug_C_Get_PercentPegged_X::ReturnValue' has a wrong offset!");
static_assert(offsetof(SensitivityInputDebug_C_Get_PercentPegged_X, CallFunc_GetSensitivityTimeWhilePegged_ReturnValue) == 0x000004, "Member 'SensitivityInputDebug_C_Get_PercentPegged_X::CallFunc_GetSensitivityTimeWhilePegged_ReturnValue' has a wrong offset!");
static_assert(offsetof(SensitivityInputDebug_C_Get_PercentPegged_X, CallFunc_GetTimePeggedUntilAtTopEndTurnSpeed_ReturnValue) == 0x000010, "Member 'SensitivityInputDebug_C_Get_PercentPegged_X::CallFunc_GetTimePeggedUntilAtTopEndTurnSpeed_ReturnValue' has a wrong offset!");
static_assert(offsetof(SensitivityInputDebug_C_Get_PercentPegged_X, CallFunc_BreakVector_X) == 0x000014, "Member 'SensitivityInputDebug_C_Get_PercentPegged_X::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(SensitivityInputDebug_C_Get_PercentPegged_X, CallFunc_BreakVector_Y) == 0x000018, "Member 'SensitivityInputDebug_C_Get_PercentPegged_X::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(SensitivityInputDebug_C_Get_PercentPegged_X, CallFunc_BreakVector_Z) == 0x00001C, "Member 'SensitivityInputDebug_C_Get_PercentPegged_X::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(SensitivityInputDebug_C_Get_PercentPegged_X, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000020, "Member 'SensitivityInputDebug_C_Get_PercentPegged_X::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");

// Function SensitivityInputDebug.SensitivityInputDebug_C.Get_PercentPegged_Y
// 0x0024 (0x0024 - 0x0000)
struct SensitivityInputDebug_C_Get_PercentPegged_Y final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetSensitivityTimeWhilePegged_ReturnValue; // 0x0004(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetTimePeggedUntilAtTopEndTurnSpeed_ReturnValue; // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SensitivityInputDebug_C_Get_PercentPegged_Y) == 0x000004, "Wrong alignment on SensitivityInputDebug_C_Get_PercentPegged_Y");
static_assert(sizeof(SensitivityInputDebug_C_Get_PercentPegged_Y) == 0x000024, "Wrong size on SensitivityInputDebug_C_Get_PercentPegged_Y");
static_assert(offsetof(SensitivityInputDebug_C_Get_PercentPegged_Y, ReturnValue) == 0x000000, "Member 'SensitivityInputDebug_C_Get_PercentPegged_Y::ReturnValue' has a wrong offset!");
static_assert(offsetof(SensitivityInputDebug_C_Get_PercentPegged_Y, CallFunc_GetSensitivityTimeWhilePegged_ReturnValue) == 0x000004, "Member 'SensitivityInputDebug_C_Get_PercentPegged_Y::CallFunc_GetSensitivityTimeWhilePegged_ReturnValue' has a wrong offset!");
static_assert(offsetof(SensitivityInputDebug_C_Get_PercentPegged_Y, CallFunc_GetTimePeggedUntilAtTopEndTurnSpeed_ReturnValue) == 0x000010, "Member 'SensitivityInputDebug_C_Get_PercentPegged_Y::CallFunc_GetTimePeggedUntilAtTopEndTurnSpeed_ReturnValue' has a wrong offset!");
static_assert(offsetof(SensitivityInputDebug_C_Get_PercentPegged_Y, CallFunc_BreakVector_X) == 0x000014, "Member 'SensitivityInputDebug_C_Get_PercentPegged_Y::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(SensitivityInputDebug_C_Get_PercentPegged_Y, CallFunc_BreakVector_Y) == 0x000018, "Member 'SensitivityInputDebug_C_Get_PercentPegged_Y::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(SensitivityInputDebug_C_Get_PercentPegged_Y, CallFunc_BreakVector_Z) == 0x00001C, "Member 'SensitivityInputDebug_C_Get_PercentPegged_Y::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(SensitivityInputDebug_C_Get_PercentPegged_Y, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000020, "Member 'SensitivityInputDebug_C_Get_PercentPegged_Y::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");

// Function SensitivityInputDebug.SensitivityInputDebug_C.Get_TextBlock_27_Text_0
// 0x0040 (0x0040 - 0x0000)
struct SensitivityInputDebug_C_Get_TextBlock_27_Text_0 final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm)
	struct FVector2D                              CallFunc_GetInputBuffer_ReturnValue;               // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X;                          // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_FloatToText_ReturnValue;             // 0x0028(0x0018)()
};
static_assert(alignof(SensitivityInputDebug_C_Get_TextBlock_27_Text_0) == 0x000008, "Wrong alignment on SensitivityInputDebug_C_Get_TextBlock_27_Text_0");
static_assert(sizeof(SensitivityInputDebug_C_Get_TextBlock_27_Text_0) == 0x000040, "Wrong size on SensitivityInputDebug_C_Get_TextBlock_27_Text_0");
static_assert(offsetof(SensitivityInputDebug_C_Get_TextBlock_27_Text_0, ReturnValue) == 0x000000, "Member 'SensitivityInputDebug_C_Get_TextBlock_27_Text_0::ReturnValue' has a wrong offset!");
static_assert(offsetof(SensitivityInputDebug_C_Get_TextBlock_27_Text_0, CallFunc_GetInputBuffer_ReturnValue) == 0x000018, "Member 'SensitivityInputDebug_C_Get_TextBlock_27_Text_0::CallFunc_GetInputBuffer_ReturnValue' has a wrong offset!");
static_assert(offsetof(SensitivityInputDebug_C_Get_TextBlock_27_Text_0, CallFunc_BreakVector2D_X) == 0x000020, "Member 'SensitivityInputDebug_C_Get_TextBlock_27_Text_0::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(SensitivityInputDebug_C_Get_TextBlock_27_Text_0, CallFunc_BreakVector2D_Y) == 0x000024, "Member 'SensitivityInputDebug_C_Get_TextBlock_27_Text_0::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(SensitivityInputDebug_C_Get_TextBlock_27_Text_0, CallFunc_Conv_FloatToText_ReturnValue) == 0x000028, "Member 'SensitivityInputDebug_C_Get_TextBlock_27_Text_0::CallFunc_Conv_FloatToText_ReturnValue' has a wrong offset!");

// Function SensitivityInputDebug.SensitivityInputDebug_C.Get_TextBlock_28_Text_0
// 0x0040 (0x0040 - 0x0000)
struct SensitivityInputDebug_C_Get_TextBlock_28_Text_0 final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm)
	struct FVector2D                              CallFunc_GetInputBuffer_ReturnValue;               // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X;                          // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_FloatToText_ReturnValue;             // 0x0028(0x0018)()
};
static_assert(alignof(SensitivityInputDebug_C_Get_TextBlock_28_Text_0) == 0x000008, "Wrong alignment on SensitivityInputDebug_C_Get_TextBlock_28_Text_0");
static_assert(sizeof(SensitivityInputDebug_C_Get_TextBlock_28_Text_0) == 0x000040, "Wrong size on SensitivityInputDebug_C_Get_TextBlock_28_Text_0");
static_assert(offsetof(SensitivityInputDebug_C_Get_TextBlock_28_Text_0, ReturnValue) == 0x000000, "Member 'SensitivityInputDebug_C_Get_TextBlock_28_Text_0::ReturnValue' has a wrong offset!");
static_assert(offsetof(SensitivityInputDebug_C_Get_TextBlock_28_Text_0, CallFunc_GetInputBuffer_ReturnValue) == 0x000018, "Member 'SensitivityInputDebug_C_Get_TextBlock_28_Text_0::CallFunc_GetInputBuffer_ReturnValue' has a wrong offset!");
static_assert(offsetof(SensitivityInputDebug_C_Get_TextBlock_28_Text_0, CallFunc_BreakVector2D_X) == 0x000020, "Member 'SensitivityInputDebug_C_Get_TextBlock_28_Text_0::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(SensitivityInputDebug_C_Get_TextBlock_28_Text_0, CallFunc_BreakVector2D_Y) == 0x000024, "Member 'SensitivityInputDebug_C_Get_TextBlock_28_Text_0::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(SensitivityInputDebug_C_Get_TextBlock_28_Text_0, CallFunc_Conv_FloatToText_ReturnValue) == 0x000028, "Member 'SensitivityInputDebug_C_Get_TextBlock_28_Text_0::CallFunc_Conv_FloatToText_ReturnValue' has a wrong offset!");

// Function SensitivityInputDebug.SensitivityInputDebug_C.Get_InputBuffer_X
// 0x001C (0x001C - 0x0000)
struct SensitivityInputDebug_C_Get_InputBuffer_X final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetInputBuffer_ReturnValue;               // 0x0004(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X;                          // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Abs_ReturnValue;                          // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SensitivityInputDebug_C_Get_InputBuffer_X) == 0x000004, "Wrong alignment on SensitivityInputDebug_C_Get_InputBuffer_X");
static_assert(sizeof(SensitivityInputDebug_C_Get_InputBuffer_X) == 0x00001C, "Wrong size on SensitivityInputDebug_C_Get_InputBuffer_X");
static_assert(offsetof(SensitivityInputDebug_C_Get_InputBuffer_X, ReturnValue) == 0x000000, "Member 'SensitivityInputDebug_C_Get_InputBuffer_X::ReturnValue' has a wrong offset!");
static_assert(offsetof(SensitivityInputDebug_C_Get_InputBuffer_X, CallFunc_GetInputBuffer_ReturnValue) == 0x000004, "Member 'SensitivityInputDebug_C_Get_InputBuffer_X::CallFunc_GetInputBuffer_ReturnValue' has a wrong offset!");
static_assert(offsetof(SensitivityInputDebug_C_Get_InputBuffer_X, CallFunc_BreakVector2D_X) == 0x00000C, "Member 'SensitivityInputDebug_C_Get_InputBuffer_X::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(SensitivityInputDebug_C_Get_InputBuffer_X, CallFunc_BreakVector2D_Y) == 0x000010, "Member 'SensitivityInputDebug_C_Get_InputBuffer_X::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(SensitivityInputDebug_C_Get_InputBuffer_X, CallFunc_Abs_ReturnValue) == 0x000014, "Member 'SensitivityInputDebug_C_Get_InputBuffer_X::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(SensitivityInputDebug_C_Get_InputBuffer_X, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000018, "Member 'SensitivityInputDebug_C_Get_InputBuffer_X::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");

// Function SensitivityInputDebug.SensitivityInputDebug_C.Get_InputBuffer_Y
// 0x001C (0x001C - 0x0000)
struct SensitivityInputDebug_C_Get_InputBuffer_Y final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetInputBuffer_ReturnValue;               // 0x0004(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X;                          // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Abs_ReturnValue;                          // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SensitivityInputDebug_C_Get_InputBuffer_Y) == 0x000004, "Wrong alignment on SensitivityInputDebug_C_Get_InputBuffer_Y");
static_assert(sizeof(SensitivityInputDebug_C_Get_InputBuffer_Y) == 0x00001C, "Wrong size on SensitivityInputDebug_C_Get_InputBuffer_Y");
static_assert(offsetof(SensitivityInputDebug_C_Get_InputBuffer_Y, ReturnValue) == 0x000000, "Member 'SensitivityInputDebug_C_Get_InputBuffer_Y::ReturnValue' has a wrong offset!");
static_assert(offsetof(SensitivityInputDebug_C_Get_InputBuffer_Y, CallFunc_GetInputBuffer_ReturnValue) == 0x000004, "Member 'SensitivityInputDebug_C_Get_InputBuffer_Y::CallFunc_GetInputBuffer_ReturnValue' has a wrong offset!");
static_assert(offsetof(SensitivityInputDebug_C_Get_InputBuffer_Y, CallFunc_BreakVector2D_X) == 0x00000C, "Member 'SensitivityInputDebug_C_Get_InputBuffer_Y::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(SensitivityInputDebug_C_Get_InputBuffer_Y, CallFunc_BreakVector2D_Y) == 0x000010, "Member 'SensitivityInputDebug_C_Get_InputBuffer_Y::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(SensitivityInputDebug_C_Get_InputBuffer_Y, CallFunc_Abs_ReturnValue) == 0x000014, "Member 'SensitivityInputDebug_C_Get_InputBuffer_Y::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(SensitivityInputDebug_C_Get_InputBuffer_Y, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000018, "Member 'SensitivityInputDebug_C_Get_InputBuffer_Y::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");

// Function SensitivityInputDebug.SensitivityInputDebug_C.Get_TimePeggedUntilMaxSpeed_X
// 0x0038 (0x0038 - 0x0000)
struct SensitivityInputDebug_C_Get_TimePeggedUntilMaxSpeed_X final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm)
	float                                         CallFunc_GetTimePeggedUntilAtTopEndTurnSpeed_ReturnValue; // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_FloatToText_ReturnValue;             // 0x0020(0x0018)()
};
static_assert(alignof(SensitivityInputDebug_C_Get_TimePeggedUntilMaxSpeed_X) == 0x000008, "Wrong alignment on SensitivityInputDebug_C_Get_TimePeggedUntilMaxSpeed_X");
static_assert(sizeof(SensitivityInputDebug_C_Get_TimePeggedUntilMaxSpeed_X) == 0x000038, "Wrong size on SensitivityInputDebug_C_Get_TimePeggedUntilMaxSpeed_X");
static_assert(offsetof(SensitivityInputDebug_C_Get_TimePeggedUntilMaxSpeed_X, ReturnValue) == 0x000000, "Member 'SensitivityInputDebug_C_Get_TimePeggedUntilMaxSpeed_X::ReturnValue' has a wrong offset!");
static_assert(offsetof(SensitivityInputDebug_C_Get_TimePeggedUntilMaxSpeed_X, CallFunc_GetTimePeggedUntilAtTopEndTurnSpeed_ReturnValue) == 0x000018, "Member 'SensitivityInputDebug_C_Get_TimePeggedUntilMaxSpeed_X::CallFunc_GetTimePeggedUntilAtTopEndTurnSpeed_ReturnValue' has a wrong offset!");
static_assert(offsetof(SensitivityInputDebug_C_Get_TimePeggedUntilMaxSpeed_X, CallFunc_Conv_FloatToText_ReturnValue) == 0x000020, "Member 'SensitivityInputDebug_C_Get_TimePeggedUntilMaxSpeed_X::CallFunc_Conv_FloatToText_ReturnValue' has a wrong offset!");

// Function SensitivityInputDebug.SensitivityInputDebug_C.Get_TimePeggedUntilMaxSpeed_Y
// 0x0038 (0x0038 - 0x0000)
struct SensitivityInputDebug_C_Get_TimePeggedUntilMaxSpeed_Y final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm)
	float                                         CallFunc_GetTimePeggedUntilAtTopEndTurnSpeed_ReturnValue; // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_FloatToText_ReturnValue;             // 0x0020(0x0018)()
};
static_assert(alignof(SensitivityInputDebug_C_Get_TimePeggedUntilMaxSpeed_Y) == 0x000008, "Wrong alignment on SensitivityInputDebug_C_Get_TimePeggedUntilMaxSpeed_Y");
static_assert(sizeof(SensitivityInputDebug_C_Get_TimePeggedUntilMaxSpeed_Y) == 0x000038, "Wrong size on SensitivityInputDebug_C_Get_TimePeggedUntilMaxSpeed_Y");
static_assert(offsetof(SensitivityInputDebug_C_Get_TimePeggedUntilMaxSpeed_Y, ReturnValue) == 0x000000, "Member 'SensitivityInputDebug_C_Get_TimePeggedUntilMaxSpeed_Y::ReturnValue' has a wrong offset!");
static_assert(offsetof(SensitivityInputDebug_C_Get_TimePeggedUntilMaxSpeed_Y, CallFunc_GetTimePeggedUntilAtTopEndTurnSpeed_ReturnValue) == 0x000018, "Member 'SensitivityInputDebug_C_Get_TimePeggedUntilMaxSpeed_Y::CallFunc_GetTimePeggedUntilAtTopEndTurnSpeed_ReturnValue' has a wrong offset!");
static_assert(offsetof(SensitivityInputDebug_C_Get_TimePeggedUntilMaxSpeed_Y, CallFunc_Conv_FloatToText_ReturnValue) == 0x000020, "Member 'SensitivityInputDebug_C_Get_TimePeggedUntilMaxSpeed_Y::CallFunc_Conv_FloatToText_ReturnValue' has a wrong offset!");

// Function SensitivityInputDebug.SensitivityInputDebug_C.HandleInputReleased
// 0x0006 (0x0006 - 0x0000)
struct SensitivityInputDebug_C_HandleInputReleased final
{
public:
	EMarinerInputActions                          InInput;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HandleInputReleased_ReturnValue;          // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(SensitivityInputDebug_C_HandleInputReleased) == 0x000001, "Wrong alignment on SensitivityInputDebug_C_HandleInputReleased");
static_assert(sizeof(SensitivityInputDebug_C_HandleInputReleased) == 0x000006, "Wrong size on SensitivityInputDebug_C_HandleInputReleased");
static_assert(offsetof(SensitivityInputDebug_C_HandleInputReleased, InInput) == 0x000000, "Member 'SensitivityInputDebug_C_HandleInputReleased::InInput' has a wrong offset!");
static_assert(offsetof(SensitivityInputDebug_C_HandleInputReleased, ReturnValue) == 0x000001, "Member 'SensitivityInputDebug_C_HandleInputReleased::ReturnValue' has a wrong offset!");
static_assert(offsetof(SensitivityInputDebug_C_HandleInputReleased, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000002, "Member 'SensitivityInputDebug_C_HandleInputReleased::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(SensitivityInputDebug_C_HandleInputReleased, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000003, "Member 'SensitivityInputDebug_C_HandleInputReleased::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SensitivityInputDebug_C_HandleInputReleased, CallFunc_HandleInputReleased_ReturnValue) == 0x000004, "Member 'SensitivityInputDebug_C_HandleInputReleased::CallFunc_HandleInputReleased_ReturnValue' has a wrong offset!");
static_assert(offsetof(SensitivityInputDebug_C_HandleInputReleased, CallFunc_BooleanOR_ReturnValue) == 0x000005, "Member 'SensitivityInputDebug_C_HandleInputReleased::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

}

