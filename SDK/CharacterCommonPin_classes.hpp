#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: CharacterCommonPin

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Mariner_structs.hpp"
#include "Mariner_classes.hpp"
#include "UMG_structs.hpp"
#include "GameModeEnums_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass CharacterCommonPin.CharacterCommonPin_C
// 0x00E0 (0x04F0 - 0x0410)
class UCharacterCommonPin_C final : public UMarinerCharacterPinWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0410(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UCharacterCommonActionText_C*           ActionTextWidget;                                  // 0x0418(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 BGCircle;                                          // 0x0420(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCharacterCommonDamage_C*               DamageWidget;                                      // 0x0428(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               GameModePanel;                                     // 0x0430(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCharacterCommonGameMode_C*             GameModeWidget;                                    // 0x0438(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCharacterCommonGuttered_C*             GutterWidget;                                      // 0x0440(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Icon;                                              // 0x0448(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCharacterCommonName_C*                 NameWidget;                                        // 0x0450(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           OffscreenPanel;                                    // 0x0458(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           OnscreenPanel;                                     // 0x0460(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 PinPoint;                                          // 0x0468(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetSwitcher*                        RootSwitcher;                                      // 0x0470(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	bool                                          IconForcesVisible;                                 // 0x0478(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          InNameViewCone;                                    // 0x0479(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsEnemyOwner;                                      // 0x047A(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsReturningToArena;                                // 0x047B(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21BA[0x4];                                     // 0x047C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AMarinerPlayerState*                    PlayerStateReference;                              // 0x0480(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           LastInteractionTimer;                              // 0x0488(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          HasDamage;                                         // 0x0490(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21BB[0x7];                                     // 0x0491(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           LastDamageShortTimer;                              // 0x0498(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          HasActionText;                                     // 0x04A0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          ForcedOn;                                          // 0x04A1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21BC[0x6];                                     // 0x04A2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           LastDamageLongTimer;                               // 0x04A8(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	float                                         RenderScalarValue;                                 // 0x04B0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21BD[0x4];                                     // 0x04B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 MatchState;                                        // 0x04B8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	bool                                          IsMegablasted;                                     // 0x04C8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21BE[0x3];                                     // 0x04C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              GameModePanelDefaultSize;                          // 0x04CC(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              PinPointDefaultSize;                               // 0x04D4(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              GameModePanelDefaultPosition;                      // 0x04DC(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              ActionTextWidgetDefaultPosition;                   // 0x04E4(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ForceHideDamageWidget;                             // 0x04EC(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_CharacterCommonPin(int32 EntryPoint);
	void HandleRecoveredFromMegablastEvent();
	void OnDamaged(const class UMarinerDamageableComponent* RelevantDamageableComponent, float NewAmount, float OldAmount);
	void SetForceHideDamage(bool ForceHide);
	void OnActorReferenceChanged(class AActor* NewActorReference);
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);
	void HandleMegablastEvent(class AMarinerPlayerState* MegablastInstigator);
	void OnDamagedLocalClient();
	void FlashLastPlayerPin(int32 OnePlayerWithStockTeamIndex);
	void LastDamagedLongTimerExpired();
	void SetActionText(const class FText& Text);
	void SetForcedOn(bool bForcedOn);
	void LastDamageShortTimerExpired();
	void LastInteractionTimerExpired();
	void PlayMegaBlastThresholdAnim();
	void SetIcon(const struct FSlateBrush& Brush, bool bForcesPinVisible, bool bImageCanDim);
	void Construct();
	void ClearIcon();
	void SetGameModeWidget(TSubclassOf<class UMarinerPinGameModeWidget> Param_GameModeWidget, class AMarinerPlayerState* PlayerState);
	void ClearGameModeWidget();
	void OnCharacterArenaReturnStateChanged(EMarinerArenaReturnState PreviousState, EMarinerArenaReturnState NewState);
	void OnHasLineOfSightToActorChanged(bool bHasLineOfSight);
	void OnIsAtEdgeOfScreenChanged(bool bEdgeOfScreen);
	void ClearActionText();
	void OnInNameViewConeChanged(bool bInNameViewCone);
	void HandleOwnerKnockedOutTrackedPlayer();
	void OnDamagedByLocalClient();
	void RefreshAll();
	void UpdateNameForcedOn();
	void UpdateGameModeForcedOn();
	void OnGutterWidgetAnimationStateChanged(class UMarinerAnimatedWidget* Instance, EWidgetAnimationState NewState);
	void ReactToMatchStateChanged(class FName InName);
	void ToggleMegaBlastThresholdAnim();
	void FlashLastPlayerNavInStock(int32 OnePlayerWithStockTeamIndex);
	void OnDamageWidgetAnimationStateChanged(class UMarinerAnimatedWidget* Instance, EWidgetAnimationState NewState);
	void UpdateDamageForcedOn();
	void StartLastInteractionTimer();
	void StartLastDamageTimers();
	void UpdateGutterForcedOn();
	void UpdateActionTextForcedOn();
	void UpdateIconForcedOn();
	void UpdateTeam();
	void UpdateBindings();
	void OnPlayerStateReplicated(class AMarinerPlayerController* PlayerController);
	void SetRenderScalar(float NewScalar);
	void CreateMegablastWidget(class UBlastbarNavpinMegablast_C** BlastbarWidget);
	void UpdateVisibility();
	void SetGameModeWidgetScale(float NewScalar, float ActionTextExtraSpace);
	void SaveGameModeWidgetScale();
	void SetActionTextFontSize(int32 FontSize);
	void SetGutterWidgetTextVisibility(bool Param_IsVisible);
	void OnPlayerStateTeamChanged(class AMarinerPlayerState* PlayerState);
	void OnSmallPortraitFinishLoad(struct FSlateBrush& LoadedPortrait);
	void GetMatchStatus(bool* CanPlayMessages);
	void HandleGutterIcon(class AMarinerPlayerState* PlayerState);
	void HandleBotFakeSkin(int32 BotSkinIndex);
	void UpdateGutterIcon();

	float GetRenderScalar() const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"CharacterCommonPin_C">();
	}
	static class UCharacterCommonPin_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCharacterCommonPin_C>();
	}
};
static_assert(alignof(UCharacterCommonPin_C) == 0x000008, "Wrong alignment on UCharacterCommonPin_C");
static_assert(sizeof(UCharacterCommonPin_C) == 0x0004F0, "Wrong size on UCharacterCommonPin_C");
static_assert(offsetof(UCharacterCommonPin_C, UberGraphFrame) == 0x000410, "Member 'UCharacterCommonPin_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UCharacterCommonPin_C, ActionTextWidget) == 0x000418, "Member 'UCharacterCommonPin_C::ActionTextWidget' has a wrong offset!");
static_assert(offsetof(UCharacterCommonPin_C, BGCircle) == 0x000420, "Member 'UCharacterCommonPin_C::BGCircle' has a wrong offset!");
static_assert(offsetof(UCharacterCommonPin_C, DamageWidget) == 0x000428, "Member 'UCharacterCommonPin_C::DamageWidget' has a wrong offset!");
static_assert(offsetof(UCharacterCommonPin_C, GameModePanel) == 0x000430, "Member 'UCharacterCommonPin_C::GameModePanel' has a wrong offset!");
static_assert(offsetof(UCharacterCommonPin_C, GameModeWidget) == 0x000438, "Member 'UCharacterCommonPin_C::GameModeWidget' has a wrong offset!");
static_assert(offsetof(UCharacterCommonPin_C, GutterWidget) == 0x000440, "Member 'UCharacterCommonPin_C::GutterWidget' has a wrong offset!");
static_assert(offsetof(UCharacterCommonPin_C, Icon) == 0x000448, "Member 'UCharacterCommonPin_C::Icon' has a wrong offset!");
static_assert(offsetof(UCharacterCommonPin_C, NameWidget) == 0x000450, "Member 'UCharacterCommonPin_C::NameWidget' has a wrong offset!");
static_assert(offsetof(UCharacterCommonPin_C, OffscreenPanel) == 0x000458, "Member 'UCharacterCommonPin_C::OffscreenPanel' has a wrong offset!");
static_assert(offsetof(UCharacterCommonPin_C, OnscreenPanel) == 0x000460, "Member 'UCharacterCommonPin_C::OnscreenPanel' has a wrong offset!");
static_assert(offsetof(UCharacterCommonPin_C, PinPoint) == 0x000468, "Member 'UCharacterCommonPin_C::PinPoint' has a wrong offset!");
static_assert(offsetof(UCharacterCommonPin_C, RootSwitcher) == 0x000470, "Member 'UCharacterCommonPin_C::RootSwitcher' has a wrong offset!");
static_assert(offsetof(UCharacterCommonPin_C, IconForcesVisible) == 0x000478, "Member 'UCharacterCommonPin_C::IconForcesVisible' has a wrong offset!");
static_assert(offsetof(UCharacterCommonPin_C, InNameViewCone) == 0x000479, "Member 'UCharacterCommonPin_C::InNameViewCone' has a wrong offset!");
static_assert(offsetof(UCharacterCommonPin_C, IsEnemyOwner) == 0x00047A, "Member 'UCharacterCommonPin_C::IsEnemyOwner' has a wrong offset!");
static_assert(offsetof(UCharacterCommonPin_C, IsReturningToArena) == 0x00047B, "Member 'UCharacterCommonPin_C::IsReturningToArena' has a wrong offset!");
static_assert(offsetof(UCharacterCommonPin_C, PlayerStateReference) == 0x000480, "Member 'UCharacterCommonPin_C::PlayerStateReference' has a wrong offset!");
static_assert(offsetof(UCharacterCommonPin_C, LastInteractionTimer) == 0x000488, "Member 'UCharacterCommonPin_C::LastInteractionTimer' has a wrong offset!");
static_assert(offsetof(UCharacterCommonPin_C, HasDamage) == 0x000490, "Member 'UCharacterCommonPin_C::HasDamage' has a wrong offset!");
static_assert(offsetof(UCharacterCommonPin_C, LastDamageShortTimer) == 0x000498, "Member 'UCharacterCommonPin_C::LastDamageShortTimer' has a wrong offset!");
static_assert(offsetof(UCharacterCommonPin_C, HasActionText) == 0x0004A0, "Member 'UCharacterCommonPin_C::HasActionText' has a wrong offset!");
static_assert(offsetof(UCharacterCommonPin_C, ForcedOn) == 0x0004A1, "Member 'UCharacterCommonPin_C::ForcedOn' has a wrong offset!");
static_assert(offsetof(UCharacterCommonPin_C, LastDamageLongTimer) == 0x0004A8, "Member 'UCharacterCommonPin_C::LastDamageLongTimer' has a wrong offset!");
static_assert(offsetof(UCharacterCommonPin_C, RenderScalarValue) == 0x0004B0, "Member 'UCharacterCommonPin_C::RenderScalarValue' has a wrong offset!");
static_assert(offsetof(UCharacterCommonPin_C, MatchState) == 0x0004B8, "Member 'UCharacterCommonPin_C::MatchState' has a wrong offset!");
static_assert(offsetof(UCharacterCommonPin_C, IsMegablasted) == 0x0004C8, "Member 'UCharacterCommonPin_C::IsMegablasted' has a wrong offset!");
static_assert(offsetof(UCharacterCommonPin_C, GameModePanelDefaultSize) == 0x0004CC, "Member 'UCharacterCommonPin_C::GameModePanelDefaultSize' has a wrong offset!");
static_assert(offsetof(UCharacterCommonPin_C, PinPointDefaultSize) == 0x0004D4, "Member 'UCharacterCommonPin_C::PinPointDefaultSize' has a wrong offset!");
static_assert(offsetof(UCharacterCommonPin_C, GameModePanelDefaultPosition) == 0x0004DC, "Member 'UCharacterCommonPin_C::GameModePanelDefaultPosition' has a wrong offset!");
static_assert(offsetof(UCharacterCommonPin_C, ActionTextWidgetDefaultPosition) == 0x0004E4, "Member 'UCharacterCommonPin_C::ActionTextWidgetDefaultPosition' has a wrong offset!");
static_assert(offsetof(UCharacterCommonPin_C, ForceHideDamageWidget) == 0x0004EC, "Member 'UCharacterCommonPin_C::ForceHideDamageWidget' has a wrong offset!");

}

