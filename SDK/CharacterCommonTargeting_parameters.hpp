#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: CharacterCommonTargeting

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Mariner_structs.hpp"


namespace SDK::Params
{

// Function CharacterCommonTargeting.CharacterCommonTargeting_C.ExecuteUbergraph_CharacterCommonTargeting
// 0x0050 (0x0050 - 0x0000)
struct CharacterCommonTargeting_C_ExecuteUbergraph_CharacterCommonTargeting final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_25C4[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMarinerCharacter*                      K2Node_CustomEvent_LockedCharacter;                // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_1;              // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_2;              // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_3;              // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMarinerCharacter*                      K2Node_CustomEvent_ShiftingCharacter;              // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMarinerRealityState                          K2Node_CustomEvent_EnteringReality;                // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bCharacterIsLocal;              // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x003B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x003D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25C5[0x2];                                     // 0x003E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class AMarinerCharacter* ShiftingCharacter, EMarinerRealityState EnteringReality, bool bCharacterIsLocal)> K2Node_CreateDelegate_OutputDelegate;              // 0x0040(0x0010)(ZeroConstructor, NoDestructor)
};
static_assert(alignof(CharacterCommonTargeting_C_ExecuteUbergraph_CharacterCommonTargeting) == 0x000008, "Wrong alignment on CharacterCommonTargeting_C_ExecuteUbergraph_CharacterCommonTargeting");
static_assert(sizeof(CharacterCommonTargeting_C_ExecuteUbergraph_CharacterCommonTargeting) == 0x000050, "Wrong size on CharacterCommonTargeting_C_ExecuteUbergraph_CharacterCommonTargeting");
static_assert(offsetof(CharacterCommonTargeting_C_ExecuteUbergraph_CharacterCommonTargeting, EntryPoint) == 0x000000, "Member 'CharacterCommonTargeting_C_ExecuteUbergraph_CharacterCommonTargeting::EntryPoint' has a wrong offset!");
static_assert(offsetof(CharacterCommonTargeting_C_ExecuteUbergraph_CharacterCommonTargeting, CallFunc_PlayAnimation_ReturnValue) == 0x000008, "Member 'CharacterCommonTargeting_C_ExecuteUbergraph_CharacterCommonTargeting::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharacterCommonTargeting_C_ExecuteUbergraph_CharacterCommonTargeting, K2Node_CustomEvent_LockedCharacter) == 0x000010, "Member 'CharacterCommonTargeting_C_ExecuteUbergraph_CharacterCommonTargeting::K2Node_CustomEvent_LockedCharacter' has a wrong offset!");
static_assert(offsetof(CharacterCommonTargeting_C_ExecuteUbergraph_CharacterCommonTargeting, CallFunc_PlayAnimation_ReturnValue_1) == 0x000018, "Member 'CharacterCommonTargeting_C_ExecuteUbergraph_CharacterCommonTargeting::CallFunc_PlayAnimation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CharacterCommonTargeting_C_ExecuteUbergraph_CharacterCommonTargeting, CallFunc_PlayAnimation_ReturnValue_2) == 0x000020, "Member 'CharacterCommonTargeting_C_ExecuteUbergraph_CharacterCommonTargeting::CallFunc_PlayAnimation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(CharacterCommonTargeting_C_ExecuteUbergraph_CharacterCommonTargeting, CallFunc_PlayAnimation_ReturnValue_3) == 0x000028, "Member 'CharacterCommonTargeting_C_ExecuteUbergraph_CharacterCommonTargeting::CallFunc_PlayAnimation_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(CharacterCommonTargeting_C_ExecuteUbergraph_CharacterCommonTargeting, K2Node_CustomEvent_ShiftingCharacter) == 0x000030, "Member 'CharacterCommonTargeting_C_ExecuteUbergraph_CharacterCommonTargeting::K2Node_CustomEvent_ShiftingCharacter' has a wrong offset!");
static_assert(offsetof(CharacterCommonTargeting_C_ExecuteUbergraph_CharacterCommonTargeting, K2Node_CustomEvent_EnteringReality) == 0x000038, "Member 'CharacterCommonTargeting_C_ExecuteUbergraph_CharacterCommonTargeting::K2Node_CustomEvent_EnteringReality' has a wrong offset!");
static_assert(offsetof(CharacterCommonTargeting_C_ExecuteUbergraph_CharacterCommonTargeting, K2Node_CustomEvent_bCharacterIsLocal) == 0x000039, "Member 'CharacterCommonTargeting_C_ExecuteUbergraph_CharacterCommonTargeting::K2Node_CustomEvent_bCharacterIsLocal' has a wrong offset!");
static_assert(offsetof(CharacterCommonTargeting_C_ExecuteUbergraph_CharacterCommonTargeting, CallFunc_IsValid_ReturnValue) == 0x00003A, "Member 'CharacterCommonTargeting_C_ExecuteUbergraph_CharacterCommonTargeting::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharacterCommonTargeting_C_ExecuteUbergraph_CharacterCommonTargeting, K2Node_SwitchEnum_CmpSuccess) == 0x00003B, "Member 'CharacterCommonTargeting_C_ExecuteUbergraph_CharacterCommonTargeting::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(CharacterCommonTargeting_C_ExecuteUbergraph_CharacterCommonTargeting, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00003C, "Member 'CharacterCommonTargeting_C_ExecuteUbergraph_CharacterCommonTargeting::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharacterCommonTargeting_C_ExecuteUbergraph_CharacterCommonTargeting, CallFunc_IsValid_ReturnValue_1) == 0x00003D, "Member 'CharacterCommonTargeting_C_ExecuteUbergraph_CharacterCommonTargeting::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CharacterCommonTargeting_C_ExecuteUbergraph_CharacterCommonTargeting, K2Node_CreateDelegate_OutputDelegate) == 0x000040, "Member 'CharacterCommonTargeting_C_ExecuteUbergraph_CharacterCommonTargeting::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");

// Function CharacterCommonTargeting.CharacterCommonTargeting_C.CustomEvent_0
// 0x0010 (0x0010 - 0x0000)
struct CharacterCommonTargeting_C_CustomEvent_0 final
{
public:
	class AMarinerCharacter*                      ShiftingCharacter;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMarinerRealityState                          EnteringReality;                                   // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bCharacterIsLocal;                                 // 0x0009(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(CharacterCommonTargeting_C_CustomEvent_0) == 0x000008, "Wrong alignment on CharacterCommonTargeting_C_CustomEvent_0");
static_assert(sizeof(CharacterCommonTargeting_C_CustomEvent_0) == 0x000010, "Wrong size on CharacterCommonTargeting_C_CustomEvent_0");
static_assert(offsetof(CharacterCommonTargeting_C_CustomEvent_0, ShiftingCharacter) == 0x000000, "Member 'CharacterCommonTargeting_C_CustomEvent_0::ShiftingCharacter' has a wrong offset!");
static_assert(offsetof(CharacterCommonTargeting_C_CustomEvent_0, EnteringReality) == 0x000008, "Member 'CharacterCommonTargeting_C_CustomEvent_0::EnteringReality' has a wrong offset!");
static_assert(offsetof(CharacterCommonTargeting_C_CustomEvent_0, bCharacterIsLocal) == 0x000009, "Member 'CharacterCommonTargeting_C_CustomEvent_0::bCharacterIsLocal' has a wrong offset!");

// Function CharacterCommonTargeting.CharacterCommonTargeting_C.CompleteLockOn
// 0x0008 (0x0008 - 0x0000)
struct CharacterCommonTargeting_C_CompleteLockOn final
{
public:
	class AMarinerCharacter*                      Param_LockedCharacter;                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CharacterCommonTargeting_C_CompleteLockOn) == 0x000008, "Wrong alignment on CharacterCommonTargeting_C_CompleteLockOn");
static_assert(sizeof(CharacterCommonTargeting_C_CompleteLockOn) == 0x000008, "Wrong size on CharacterCommonTargeting_C_CompleteLockOn");
static_assert(offsetof(CharacterCommonTargeting_C_CompleteLockOn, Param_LockedCharacter) == 0x000000, "Member 'CharacterCommonTargeting_C_CompleteLockOn::Param_LockedCharacter' has a wrong offset!");

// Function CharacterCommonTargeting.CharacterCommonTargeting_C.SetArrowColors
// 0x0034 (0x0034 - 0x0000)
struct CharacterCommonTargeting_C_SetArrowColors final
{
public:
	bool                                          LockedOn;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25C6[0x2];                                     // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Temp_struct_Variable;                              // 0x0004(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_1;                            // 0x0014(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_Select_Default;                             // 0x0024(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CharacterCommonTargeting_C_SetArrowColors) == 0x000004, "Wrong alignment on CharacterCommonTargeting_C_SetArrowColors");
static_assert(sizeof(CharacterCommonTargeting_C_SetArrowColors) == 0x000034, "Wrong size on CharacterCommonTargeting_C_SetArrowColors");
static_assert(offsetof(CharacterCommonTargeting_C_SetArrowColors, LockedOn) == 0x000000, "Member 'CharacterCommonTargeting_C_SetArrowColors::LockedOn' has a wrong offset!");
static_assert(offsetof(CharacterCommonTargeting_C_SetArrowColors, Temp_bool_Variable) == 0x000001, "Member 'CharacterCommonTargeting_C_SetArrowColors::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(CharacterCommonTargeting_C_SetArrowColors, Temp_struct_Variable) == 0x000004, "Member 'CharacterCommonTargeting_C_SetArrowColors::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(CharacterCommonTargeting_C_SetArrowColors, Temp_struct_Variable_1) == 0x000014, "Member 'CharacterCommonTargeting_C_SetArrowColors::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(CharacterCommonTargeting_C_SetArrowColors, K2Node_Select_Default) == 0x000024, "Member 'CharacterCommonTargeting_C_SetArrowColors::K2Node_Select_Default' has a wrong offset!");

}

