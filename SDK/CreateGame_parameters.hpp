#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: CreateGame

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "SlateCore_structs.hpp"
#include "MangoClient_structs.hpp"
#include "Mariner_structs.hpp"
#include "InputCore_structs.hpp"
#include "AkAudio_structs.hpp"


namespace SDK::Params
{

// Function CreateGame.CreateGame_C.ExecuteUbergraph_CreateGame
// 0x0488 (0x0488 - 0x0000)
struct CreateGame_C_ExecuteUbergraph_CreateGame final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1FDD[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_CustomEvent_KeyPressed;                     // 0x0008(0x0018)(ConstParm, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1FDE[0x1];                                     // 0x0023(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(struct FKey& KeyPressed)>      K2Node_CreateDelegate_OutputDelegate;              // 0x0024(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(struct FKey& KeyPressed)>      K2Node_CreateDelegate_OutputDelegate_1;            // 0x0034(0x0010)(ZeroConstructor, NoDestructor)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(struct FKey& KeyPressed)>      K2Node_CreateDelegate_OutputDelegate_2;            // 0x0048(0x0010)(ZeroConstructor, NoDestructor)
	struct FMarinerMessageBoxData                 K2Node_MakeStruct_MarinerMessageBoxData;           // 0x0058(0x0170)(ContainsInstancedReference)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x01C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 K2Node_ComponentBoundEvent_SelectedItem_2;         // 0x01D0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	ESelectInfo                                   K2Node_ComponentBoundEvent_SelectionType_3;        // 0x01E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1FDF[0x7];                                     // 0x01E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMarinerGameInstance*                   K2Node_DynamicCast_AsMariner_Game_Instance;        // 0x01E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x01F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1FE0[0x7];                                     // 0x01F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_ComponentBoundEvent_SelectedItem_1;         // 0x01F8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	ESelectInfo                                   K2Node_ComponentBoundEvent_SelectionType_2;        // 0x0208(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue;            // 0x0209(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_StriStri_ReturnValue;          // 0x020A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1FE1[0x5];                                     // 0x020B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0210(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class UWidgetAnimation*                 K2Node_Event_Animation;                            // 0x0218(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0220(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_1;    // 0x0221(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0222(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0223(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_3;            // 0x0224(0x0010)(ZeroConstructor, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x0234(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1FE2[0x3];                                     // 0x0235(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_ComponentBoundEvent_SelectedItem;           // 0x0238(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	ESelectInfo                                   K2Node_ComponentBoundEvent_SelectionType_1;        // 0x0248(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1FE3[0x3];                                     // 0x0249(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_StringToInt_ReturnValue;             // 0x024C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bFromSubMenu;                         // 0x0250(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1FE4[0x7];                                     // 0x0251(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue_1;            // 0x0258(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0260(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMarinerGameInstance*                   K2Node_DynamicCast_AsMariner_Game_Instance_1;      // 0x0268(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0270(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1FE5[0x7];                                     // 0x0271(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AMarinerLANLobbyGameState*              K2Node_DynamicCast_AsMariner_LANLobby_Game_State;  // 0x0278(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0280(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bToSubLayer;                          // 0x0281(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1FE6[0x2];                                     // 0x0282(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0284(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue_1;               // 0x0288(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMarinerLANLobbyGameState*              K2Node_DynamicCast_AsMariner_LANLobby_Game_State_1; // 0x0290(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0298(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1FE7[0x3];                                     // 0x0299(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x029C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_SelectedIndex;          // 0x02A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESelectInfo                                   K2Node_ComponentBoundEvent_SelectionType;          // 0x02A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x02A5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDemoE3_18_ReturnValue;                  // 0x02A6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x02A7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x02A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1FE8[0x7];                                     // 0x02A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_CustomEvent_KeyPressed_2;                   // 0x02B0(0x0018)(ConstParm, HasGetValueTypeHash)
	struct FKey                                   K2Node_CustomEvent_KeyPressed_1;                   // 0x02C8(0x0018)(ConstParm, HasGetValueTypeHash)
	TScriptInterface<class IMarinerInputInterface> CallFunc_SetActiveInputWidget_InputWidget_CastInput; // 0x02E0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsServer_ReturnValue;                     // 0x02F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x02F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1FE9[0x6];                                     // 0x02F2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UMangoCMSManager*                       CallFunc_Get_ReturnValue;                          // 0x02F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMarinerMapGlobals*                     CallFunc_GetMapGlobals_ReturnValue;                // 0x0300(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMap<struct FGuid, struct FMangoMap>          CallFunc_GetMaps_ReturnValue;                      // 0x0308(0x0050)(ConstParm, ZeroConstructor)
	TDelegate<void(const class FString& DesiredMapName, const class FString& DesiredModeName, int32 DesiredBotsSelection, int32 DesiredBotDifficulty)> K2Node_CreateDelegate_OutputDelegate_4;            // 0x0358(0x0010)(ZeroConstructor, NoDestructor)
	TArray<struct FMangoMap>                      CallFunc_Map_Values_Values;                        // 0x0368(0x0010)(ZeroConstructor, ReferenceParm)
	struct FMangoMap                              CallFunc_Array_Get_Item;                           // 0x0378(0x0060)()
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x03D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x03DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1FEA[0x3];                                     // 0x03DD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UTexture2D>              CallFunc_GetSoftImage_ReturnValue;                 // 0x03E0(0x0028)(ConstParm, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0408(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1FEB[0x7];                                     // 0x0409(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMarinerMapDataAsset*                   CallFunc_TryAndGetMapDataFromLoadName_ReturnValue; // 0x0410(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0418(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0428(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue_1;          // 0x0429(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1FEC[0x6];                                     // 0x042A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetFullMapName_ReturnValue;               // 0x0430(0x0010)(ConstParm, ZeroConstructor, HasGetValueTypeHash)
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue_2;               // 0x0440(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue_3;               // 0x0448(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMarinerLANLobbyGameState*              K2Node_DynamicCast_AsMariner_LANLobby_Game_State_2; // 0x0450(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x0458(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1FED[0x7];                                     // 0x0459(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AMarinerLANLobbyGameState*              K2Node_DynamicCast_AsMariner_LANLobby_Game_State_3; // 0x0460(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x0468(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1FEE[0x7];                                     // 0x0469(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue_4;               // 0x0470(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMarinerLANLobbyGameState*              K2Node_DynamicCast_AsMariner_LANLobby_Game_State_4; // 0x0478(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_6;                     // 0x0480(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(CreateGame_C_ExecuteUbergraph_CreateGame) == 0x000008, "Wrong alignment on CreateGame_C_ExecuteUbergraph_CreateGame");
static_assert(sizeof(CreateGame_C_ExecuteUbergraph_CreateGame) == 0x000488, "Wrong size on CreateGame_C_ExecuteUbergraph_CreateGame");
static_assert(offsetof(CreateGame_C_ExecuteUbergraph_CreateGame, EntryPoint) == 0x000000, "Member 'CreateGame_C_ExecuteUbergraph_CreateGame::EntryPoint' has a wrong offset!");
static_assert(offsetof(CreateGame_C_ExecuteUbergraph_CreateGame, K2Node_CustomEvent_KeyPressed) == 0x000008, "Member 'CreateGame_C_ExecuteUbergraph_CreateGame::K2Node_CustomEvent_KeyPressed' has a wrong offset!");
static_assert(offsetof(CreateGame_C_ExecuteUbergraph_CreateGame, Temp_bool_Variable) == 0x000020, "Member 'CreateGame_C_ExecuteUbergraph_CreateGame::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(CreateGame_C_ExecuteUbergraph_CreateGame, Temp_byte_Variable) == 0x000021, "Member 'CreateGame_C_ExecuteUbergraph_CreateGame::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(CreateGame_C_ExecuteUbergraph_CreateGame, Temp_byte_Variable_1) == 0x000022, "Member 'CreateGame_C_ExecuteUbergraph_CreateGame::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(CreateGame_C_ExecuteUbergraph_CreateGame, K2Node_CreateDelegate_OutputDelegate) == 0x000024, "Member 'CreateGame_C_ExecuteUbergraph_CreateGame::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(CreateGame_C_ExecuteUbergraph_CreateGame, K2Node_CreateDelegate_OutputDelegate_1) == 0x000034, "Member 'CreateGame_C_ExecuteUbergraph_CreateGame::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(CreateGame_C_ExecuteUbergraph_CreateGame, Temp_int_Array_Index_Variable) == 0x000044, "Member 'CreateGame_C_ExecuteUbergraph_CreateGame::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(CreateGame_C_ExecuteUbergraph_CreateGame, K2Node_CreateDelegate_OutputDelegate_2) == 0x000048, "Member 'CreateGame_C_ExecuteUbergraph_CreateGame::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(CreateGame_C_ExecuteUbergraph_CreateGame, K2Node_MakeStruct_MarinerMessageBoxData) == 0x000058, "Member 'CreateGame_C_ExecuteUbergraph_CreateGame::K2Node_MakeStruct_MarinerMessageBoxData' has a wrong offset!");
static_assert(offsetof(CreateGame_C_ExecuteUbergraph_CreateGame, CallFunc_GetGameInstance_ReturnValue) == 0x0001C8, "Member 'CreateGame_C_ExecuteUbergraph_CreateGame::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(CreateGame_C_ExecuteUbergraph_CreateGame, K2Node_ComponentBoundEvent_SelectedItem_2) == 0x0001D0, "Member 'CreateGame_C_ExecuteUbergraph_CreateGame::K2Node_ComponentBoundEvent_SelectedItem_2' has a wrong offset!");
static_assert(offsetof(CreateGame_C_ExecuteUbergraph_CreateGame, K2Node_ComponentBoundEvent_SelectionType_3) == 0x0001E0, "Member 'CreateGame_C_ExecuteUbergraph_CreateGame::K2Node_ComponentBoundEvent_SelectionType_3' has a wrong offset!");
static_assert(offsetof(CreateGame_C_ExecuteUbergraph_CreateGame, K2Node_DynamicCast_AsMariner_Game_Instance) == 0x0001E8, "Member 'CreateGame_C_ExecuteUbergraph_CreateGame::K2Node_DynamicCast_AsMariner_Game_Instance' has a wrong offset!");
static_assert(offsetof(CreateGame_C_ExecuteUbergraph_CreateGame, K2Node_DynamicCast_bSuccess) == 0x0001F0, "Member 'CreateGame_C_ExecuteUbergraph_CreateGame::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(CreateGame_C_ExecuteUbergraph_CreateGame, K2Node_ComponentBoundEvent_SelectedItem_1) == 0x0001F8, "Member 'CreateGame_C_ExecuteUbergraph_CreateGame::K2Node_ComponentBoundEvent_SelectedItem_1' has a wrong offset!");
static_assert(offsetof(CreateGame_C_ExecuteUbergraph_CreateGame, K2Node_ComponentBoundEvent_SelectionType_2) == 0x000208, "Member 'CreateGame_C_ExecuteUbergraph_CreateGame::K2Node_ComponentBoundEvent_SelectionType_2' has a wrong offset!");
static_assert(offsetof(CreateGame_C_ExecuteUbergraph_CreateGame, CallFunc_EqualEqual_StrStr_ReturnValue) == 0x000209, "Member 'CreateGame_C_ExecuteUbergraph_CreateGame::CallFunc_EqualEqual_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(CreateGame_C_ExecuteUbergraph_CreateGame, CallFunc_EqualEqual_StriStri_ReturnValue) == 0x00020A, "Member 'CreateGame_C_ExecuteUbergraph_CreateGame::CallFunc_EqualEqual_StriStri_ReturnValue' has a wrong offset!");
static_assert(offsetof(CreateGame_C_ExecuteUbergraph_CreateGame, CallFunc_PlayAnimation_ReturnValue) == 0x000210, "Member 'CreateGame_C_ExecuteUbergraph_CreateGame::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(CreateGame_C_ExecuteUbergraph_CreateGame, K2Node_Event_Animation) == 0x000218, "Member 'CreateGame_C_ExecuteUbergraph_CreateGame::K2Node_Event_Animation' has a wrong offset!");
static_assert(offsetof(CreateGame_C_ExecuteUbergraph_CreateGame, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000220, "Member 'CreateGame_C_ExecuteUbergraph_CreateGame::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(CreateGame_C_ExecuteUbergraph_CreateGame, CallFunc_EqualEqual_ObjectObject_ReturnValue_1) == 0x000221, "Member 'CreateGame_C_ExecuteUbergraph_CreateGame::CallFunc_EqualEqual_ObjectObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CreateGame_C_ExecuteUbergraph_CreateGame, Temp_bool_True_if_break_was_hit_Variable) == 0x000222, "Member 'CreateGame_C_ExecuteUbergraph_CreateGame::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(CreateGame_C_ExecuteUbergraph_CreateGame, CallFunc_Not_PreBool_ReturnValue) == 0x000223, "Member 'CreateGame_C_ExecuteUbergraph_CreateGame::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(CreateGame_C_ExecuteUbergraph_CreateGame, K2Node_CreateDelegate_OutputDelegate_3) == 0x000224, "Member 'CreateGame_C_ExecuteUbergraph_CreateGame::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(CreateGame_C_ExecuteUbergraph_CreateGame, Temp_byte_Variable_2) == 0x000234, "Member 'CreateGame_C_ExecuteUbergraph_CreateGame::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(CreateGame_C_ExecuteUbergraph_CreateGame, K2Node_ComponentBoundEvent_SelectedItem) == 0x000238, "Member 'CreateGame_C_ExecuteUbergraph_CreateGame::K2Node_ComponentBoundEvent_SelectedItem' has a wrong offset!");
static_assert(offsetof(CreateGame_C_ExecuteUbergraph_CreateGame, K2Node_ComponentBoundEvent_SelectionType_1) == 0x000248, "Member 'CreateGame_C_ExecuteUbergraph_CreateGame::K2Node_ComponentBoundEvent_SelectionType_1' has a wrong offset!");
static_assert(offsetof(CreateGame_C_ExecuteUbergraph_CreateGame, CallFunc_Conv_StringToInt_ReturnValue) == 0x00024C, "Member 'CreateGame_C_ExecuteUbergraph_CreateGame::CallFunc_Conv_StringToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(CreateGame_C_ExecuteUbergraph_CreateGame, K2Node_Event_bFromSubMenu) == 0x000250, "Member 'CreateGame_C_ExecuteUbergraph_CreateGame::K2Node_Event_bFromSubMenu' has a wrong offset!");
static_assert(offsetof(CreateGame_C_ExecuteUbergraph_CreateGame, CallFunc_GetGameInstance_ReturnValue_1) == 0x000258, "Member 'CreateGame_C_ExecuteUbergraph_CreateGame::CallFunc_GetGameInstance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CreateGame_C_ExecuteUbergraph_CreateGame, CallFunc_GetGameState_ReturnValue) == 0x000260, "Member 'CreateGame_C_ExecuteUbergraph_CreateGame::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(CreateGame_C_ExecuteUbergraph_CreateGame, K2Node_DynamicCast_AsMariner_Game_Instance_1) == 0x000268, "Member 'CreateGame_C_ExecuteUbergraph_CreateGame::K2Node_DynamicCast_AsMariner_Game_Instance_1' has a wrong offset!");
static_assert(offsetof(CreateGame_C_ExecuteUbergraph_CreateGame, K2Node_DynamicCast_bSuccess_1) == 0x000270, "Member 'CreateGame_C_ExecuteUbergraph_CreateGame::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(CreateGame_C_ExecuteUbergraph_CreateGame, K2Node_DynamicCast_AsMariner_LANLobby_Game_State) == 0x000278, "Member 'CreateGame_C_ExecuteUbergraph_CreateGame::K2Node_DynamicCast_AsMariner_LANLobby_Game_State' has a wrong offset!");
static_assert(offsetof(CreateGame_C_ExecuteUbergraph_CreateGame, K2Node_DynamicCast_bSuccess_2) == 0x000280, "Member 'CreateGame_C_ExecuteUbergraph_CreateGame::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(CreateGame_C_ExecuteUbergraph_CreateGame, K2Node_Event_bToSubLayer) == 0x000281, "Member 'CreateGame_C_ExecuteUbergraph_CreateGame::K2Node_Event_bToSubLayer' has a wrong offset!");
static_assert(offsetof(CreateGame_C_ExecuteUbergraph_CreateGame, Temp_int_Loop_Counter_Variable) == 0x000284, "Member 'CreateGame_C_ExecuteUbergraph_CreateGame::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(CreateGame_C_ExecuteUbergraph_CreateGame, CallFunc_GetGameState_ReturnValue_1) == 0x000288, "Member 'CreateGame_C_ExecuteUbergraph_CreateGame::CallFunc_GetGameState_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CreateGame_C_ExecuteUbergraph_CreateGame, K2Node_DynamicCast_AsMariner_LANLobby_Game_State_1) == 0x000290, "Member 'CreateGame_C_ExecuteUbergraph_CreateGame::K2Node_DynamicCast_AsMariner_LANLobby_Game_State_1' has a wrong offset!");
static_assert(offsetof(CreateGame_C_ExecuteUbergraph_CreateGame, K2Node_DynamicCast_bSuccess_3) == 0x000298, "Member 'CreateGame_C_ExecuteUbergraph_CreateGame::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(CreateGame_C_ExecuteUbergraph_CreateGame, CallFunc_Add_IntInt_ReturnValue) == 0x00029C, "Member 'CreateGame_C_ExecuteUbergraph_CreateGame::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(CreateGame_C_ExecuteUbergraph_CreateGame, K2Node_ComponentBoundEvent_SelectedIndex) == 0x0002A0, "Member 'CreateGame_C_ExecuteUbergraph_CreateGame::K2Node_ComponentBoundEvent_SelectedIndex' has a wrong offset!");
static_assert(offsetof(CreateGame_C_ExecuteUbergraph_CreateGame, K2Node_ComponentBoundEvent_SelectionType) == 0x0002A4, "Member 'CreateGame_C_ExecuteUbergraph_CreateGame::K2Node_ComponentBoundEvent_SelectionType' has a wrong offset!");
static_assert(offsetof(CreateGame_C_ExecuteUbergraph_CreateGame, Temp_byte_Variable_3) == 0x0002A5, "Member 'CreateGame_C_ExecuteUbergraph_CreateGame::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(CreateGame_C_ExecuteUbergraph_CreateGame, CallFunc_IsDemoE3_18_ReturnValue) == 0x0002A6, "Member 'CreateGame_C_ExecuteUbergraph_CreateGame::CallFunc_IsDemoE3_18_ReturnValue' has a wrong offset!");
static_assert(offsetof(CreateGame_C_ExecuteUbergraph_CreateGame, K2Node_Select_Default) == 0x0002A7, "Member 'CreateGame_C_ExecuteUbergraph_CreateGame::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(CreateGame_C_ExecuteUbergraph_CreateGame, Temp_bool_Variable_1) == 0x0002A8, "Member 'CreateGame_C_ExecuteUbergraph_CreateGame::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(CreateGame_C_ExecuteUbergraph_CreateGame, K2Node_CustomEvent_KeyPressed_2) == 0x0002B0, "Member 'CreateGame_C_ExecuteUbergraph_CreateGame::K2Node_CustomEvent_KeyPressed_2' has a wrong offset!");
static_assert(offsetof(CreateGame_C_ExecuteUbergraph_CreateGame, K2Node_CustomEvent_KeyPressed_1) == 0x0002C8, "Member 'CreateGame_C_ExecuteUbergraph_CreateGame::K2Node_CustomEvent_KeyPressed_1' has a wrong offset!");
static_assert(offsetof(CreateGame_C_ExecuteUbergraph_CreateGame, CallFunc_SetActiveInputWidget_InputWidget_CastInput) == 0x0002E0, "Member 'CreateGame_C_ExecuteUbergraph_CreateGame::CallFunc_SetActiveInputWidget_InputWidget_CastInput' has a wrong offset!");
static_assert(offsetof(CreateGame_C_ExecuteUbergraph_CreateGame, CallFunc_IsServer_ReturnValue) == 0x0002F0, "Member 'CreateGame_C_ExecuteUbergraph_CreateGame::CallFunc_IsServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(CreateGame_C_ExecuteUbergraph_CreateGame, K2Node_Select_Default_1) == 0x0002F1, "Member 'CreateGame_C_ExecuteUbergraph_CreateGame::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(CreateGame_C_ExecuteUbergraph_CreateGame, CallFunc_Get_ReturnValue) == 0x0002F8, "Member 'CreateGame_C_ExecuteUbergraph_CreateGame::CallFunc_Get_ReturnValue' has a wrong offset!");
static_assert(offsetof(CreateGame_C_ExecuteUbergraph_CreateGame, CallFunc_GetMapGlobals_ReturnValue) == 0x000300, "Member 'CreateGame_C_ExecuteUbergraph_CreateGame::CallFunc_GetMapGlobals_ReturnValue' has a wrong offset!");
static_assert(offsetof(CreateGame_C_ExecuteUbergraph_CreateGame, CallFunc_GetMaps_ReturnValue) == 0x000308, "Member 'CreateGame_C_ExecuteUbergraph_CreateGame::CallFunc_GetMaps_ReturnValue' has a wrong offset!");
static_assert(offsetof(CreateGame_C_ExecuteUbergraph_CreateGame, K2Node_CreateDelegate_OutputDelegate_4) == 0x000358, "Member 'CreateGame_C_ExecuteUbergraph_CreateGame::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(CreateGame_C_ExecuteUbergraph_CreateGame, CallFunc_Map_Values_Values) == 0x000368, "Member 'CreateGame_C_ExecuteUbergraph_CreateGame::CallFunc_Map_Values_Values' has a wrong offset!");
static_assert(offsetof(CreateGame_C_ExecuteUbergraph_CreateGame, CallFunc_Array_Get_Item) == 0x000378, "Member 'CreateGame_C_ExecuteUbergraph_CreateGame::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(CreateGame_C_ExecuteUbergraph_CreateGame, CallFunc_Array_Length_ReturnValue) == 0x0003D8, "Member 'CreateGame_C_ExecuteUbergraph_CreateGame::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(CreateGame_C_ExecuteUbergraph_CreateGame, CallFunc_Less_IntInt_ReturnValue) == 0x0003DC, "Member 'CreateGame_C_ExecuteUbergraph_CreateGame::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(CreateGame_C_ExecuteUbergraph_CreateGame, CallFunc_GetSoftImage_ReturnValue) == 0x0003E0, "Member 'CreateGame_C_ExecuteUbergraph_CreateGame::CallFunc_GetSoftImage_ReturnValue' has a wrong offset!");
static_assert(offsetof(CreateGame_C_ExecuteUbergraph_CreateGame, CallFunc_BooleanAND_ReturnValue) == 0x000408, "Member 'CreateGame_C_ExecuteUbergraph_CreateGame::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(CreateGame_C_ExecuteUbergraph_CreateGame, CallFunc_TryAndGetMapDataFromLoadName_ReturnValue) == 0x000410, "Member 'CreateGame_C_ExecuteUbergraph_CreateGame::CallFunc_TryAndGetMapDataFromLoadName_ReturnValue' has a wrong offset!");
static_assert(offsetof(CreateGame_C_ExecuteUbergraph_CreateGame, CallFunc_Conv_TextToString_ReturnValue) == 0x000418, "Member 'CreateGame_C_ExecuteUbergraph_CreateGame::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(CreateGame_C_ExecuteUbergraph_CreateGame, CallFunc_IsValid_ReturnValue) == 0x000428, "Member 'CreateGame_C_ExecuteUbergraph_CreateGame::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(CreateGame_C_ExecuteUbergraph_CreateGame, CallFunc_EqualEqual_StrStr_ReturnValue_1) == 0x000429, "Member 'CreateGame_C_ExecuteUbergraph_CreateGame::CallFunc_EqualEqual_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CreateGame_C_ExecuteUbergraph_CreateGame, CallFunc_GetFullMapName_ReturnValue) == 0x000430, "Member 'CreateGame_C_ExecuteUbergraph_CreateGame::CallFunc_GetFullMapName_ReturnValue' has a wrong offset!");
static_assert(offsetof(CreateGame_C_ExecuteUbergraph_CreateGame, CallFunc_GetGameState_ReturnValue_2) == 0x000440, "Member 'CreateGame_C_ExecuteUbergraph_CreateGame::CallFunc_GetGameState_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(CreateGame_C_ExecuteUbergraph_CreateGame, CallFunc_GetGameState_ReturnValue_3) == 0x000448, "Member 'CreateGame_C_ExecuteUbergraph_CreateGame::CallFunc_GetGameState_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(CreateGame_C_ExecuteUbergraph_CreateGame, K2Node_DynamicCast_AsMariner_LANLobby_Game_State_2) == 0x000450, "Member 'CreateGame_C_ExecuteUbergraph_CreateGame::K2Node_DynamicCast_AsMariner_LANLobby_Game_State_2' has a wrong offset!");
static_assert(offsetof(CreateGame_C_ExecuteUbergraph_CreateGame, K2Node_DynamicCast_bSuccess_4) == 0x000458, "Member 'CreateGame_C_ExecuteUbergraph_CreateGame::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(CreateGame_C_ExecuteUbergraph_CreateGame, K2Node_DynamicCast_AsMariner_LANLobby_Game_State_3) == 0x000460, "Member 'CreateGame_C_ExecuteUbergraph_CreateGame::K2Node_DynamicCast_AsMariner_LANLobby_Game_State_3' has a wrong offset!");
static_assert(offsetof(CreateGame_C_ExecuteUbergraph_CreateGame, K2Node_DynamicCast_bSuccess_5) == 0x000468, "Member 'CreateGame_C_ExecuteUbergraph_CreateGame::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(CreateGame_C_ExecuteUbergraph_CreateGame, CallFunc_GetGameState_ReturnValue_4) == 0x000470, "Member 'CreateGame_C_ExecuteUbergraph_CreateGame::CallFunc_GetGameState_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(CreateGame_C_ExecuteUbergraph_CreateGame, K2Node_DynamicCast_AsMariner_LANLobby_Game_State_4) == 0x000478, "Member 'CreateGame_C_ExecuteUbergraph_CreateGame::K2Node_DynamicCast_AsMariner_LANLobby_Game_State_4' has a wrong offset!");
static_assert(offsetof(CreateGame_C_ExecuteUbergraph_CreateGame, K2Node_DynamicCast_bSuccess_6) == 0x000480, "Member 'CreateGame_C_ExecuteUbergraph_CreateGame::K2Node_DynamicCast_bSuccess_6' has a wrong offset!");

// Function CreateGame.CreateGame_C.Dummy Event
// 0x0018 (0x0018 - 0x0000)
struct CreateGame_C_Dummy_Event final
{
public:
	struct FKey                                   KeyPressed;                                        // 0x0000(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
};
static_assert(alignof(CreateGame_C_Dummy_Event) == 0x000008, "Wrong alignment on CreateGame_C_Dummy_Event");
static_assert(sizeof(CreateGame_C_Dummy_Event) == 0x000018, "Wrong size on CreateGame_C_Dummy_Event");
static_assert(offsetof(CreateGame_C_Dummy_Event, KeyPressed) == 0x000000, "Member 'CreateGame_C_Dummy_Event::KeyPressed' has a wrong offset!");

// Function CreateGame.CreateGame_C.MainMenuCancel
// 0x0018 (0x0018 - 0x0000)
struct CreateGame_C_MainMenuCancel final
{
public:
	struct FKey                                   KeyPressed;                                        // 0x0000(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
};
static_assert(alignof(CreateGame_C_MainMenuCancel) == 0x000008, "Wrong alignment on CreateGame_C_MainMenuCancel");
static_assert(sizeof(CreateGame_C_MainMenuCancel) == 0x000018, "Wrong size on CreateGame_C_MainMenuCancel");
static_assert(offsetof(CreateGame_C_MainMenuCancel, KeyPressed) == 0x000000, "Member 'CreateGame_C_MainMenuCancel::KeyPressed' has a wrong offset!");

// Function CreateGame.CreateGame_C.MainMenuConfirm
// 0x0018 (0x0018 - 0x0000)
struct CreateGame_C_MainMenuConfirm final
{
public:
	struct FKey                                   KeyPressed;                                        // 0x0000(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
};
static_assert(alignof(CreateGame_C_MainMenuConfirm) == 0x000008, "Wrong alignment on CreateGame_C_MainMenuConfirm");
static_assert(sizeof(CreateGame_C_MainMenuConfirm) == 0x000018, "Wrong size on CreateGame_C_MainMenuConfirm");
static_assert(offsetof(CreateGame_C_MainMenuConfirm, KeyPressed) == 0x000000, "Member 'CreateGame_C_MainMenuConfirm::KeyPressed' has a wrong offset!");

// Function CreateGame.CreateGame_C.BndEvt__BotsDifficulty_K2Node_ComponentBoundEvent_2229_OnSelectionIndexChangedEvent__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct CreateGame_C_BndEvt__BotsDifficulty_K2Node_ComponentBoundEvent_2229_OnSelectionIndexChangedEvent__DelegateSignature final
{
public:
	int32                                         SelectedIndex;                                     // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESelectInfo                                   SelectionType;                                     // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CreateGame_C_BndEvt__BotsDifficulty_K2Node_ComponentBoundEvent_2229_OnSelectionIndexChangedEvent__DelegateSignature) == 0x000004, "Wrong alignment on CreateGame_C_BndEvt__BotsDifficulty_K2Node_ComponentBoundEvent_2229_OnSelectionIndexChangedEvent__DelegateSignature");
static_assert(sizeof(CreateGame_C_BndEvt__BotsDifficulty_K2Node_ComponentBoundEvent_2229_OnSelectionIndexChangedEvent__DelegateSignature) == 0x000008, "Wrong size on CreateGame_C_BndEvt__BotsDifficulty_K2Node_ComponentBoundEvent_2229_OnSelectionIndexChangedEvent__DelegateSignature");
static_assert(offsetof(CreateGame_C_BndEvt__BotsDifficulty_K2Node_ComponentBoundEvent_2229_OnSelectionIndexChangedEvent__DelegateSignature, SelectedIndex) == 0x000000, "Member 'CreateGame_C_BndEvt__BotsDifficulty_K2Node_ComponentBoundEvent_2229_OnSelectionIndexChangedEvent__DelegateSignature::SelectedIndex' has a wrong offset!");
static_assert(offsetof(CreateGame_C_BndEvt__BotsDifficulty_K2Node_ComponentBoundEvent_2229_OnSelectionIndexChangedEvent__DelegateSignature, SelectionType) == 0x000004, "Member 'CreateGame_C_BndEvt__BotsDifficulty_K2Node_ComponentBoundEvent_2229_OnSelectionIndexChangedEvent__DelegateSignature::SelectionType' has a wrong offset!");

// Function CreateGame.CreateGame_C.BP_OnExited
// 0x0001 (0x0001 - 0x0000)
struct CreateGame_C_BP_OnExited final
{
public:
	bool                                          bToSubLayer;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(CreateGame_C_BP_OnExited) == 0x000001, "Wrong alignment on CreateGame_C_BP_OnExited");
static_assert(sizeof(CreateGame_C_BP_OnExited) == 0x000001, "Wrong size on CreateGame_C_BP_OnExited");
static_assert(offsetof(CreateGame_C_BP_OnExited, bToSubLayer) == 0x000000, "Member 'CreateGame_C_BP_OnExited::bToSubLayer' has a wrong offset!");

// Function CreateGame.CreateGame_C.BP_OnEntered
// 0x0001 (0x0001 - 0x0000)
struct CreateGame_C_BP_OnEntered final
{
public:
	bool                                          bFromSubMenu;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(CreateGame_C_BP_OnEntered) == 0x000001, "Wrong alignment on CreateGame_C_BP_OnEntered");
static_assert(sizeof(CreateGame_C_BP_OnEntered) == 0x000001, "Wrong size on CreateGame_C_BP_OnEntered");
static_assert(offsetof(CreateGame_C_BP_OnEntered, bFromSubMenu) == 0x000000, "Member 'CreateGame_C_BP_OnEntered::bFromSubMenu' has a wrong offset!");

// Function CreateGame.CreateGame_C.BndEvt__BotsSelection_K2Node_ComponentBoundEvent_87_OnSelectionChangedEvent__DelegateSignature
// 0x0018 (0x0018 - 0x0000)
struct CreateGame_C_BndEvt__BotsSelection_K2Node_ComponentBoundEvent_87_OnSelectionChangedEvent__DelegateSignature final
{
public:
	class FString                                 SelectedItem;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	ESelectInfo                                   SelectionType;                                     // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CreateGame_C_BndEvt__BotsSelection_K2Node_ComponentBoundEvent_87_OnSelectionChangedEvent__DelegateSignature) == 0x000008, "Wrong alignment on CreateGame_C_BndEvt__BotsSelection_K2Node_ComponentBoundEvent_87_OnSelectionChangedEvent__DelegateSignature");
static_assert(sizeof(CreateGame_C_BndEvt__BotsSelection_K2Node_ComponentBoundEvent_87_OnSelectionChangedEvent__DelegateSignature) == 0x000018, "Wrong size on CreateGame_C_BndEvt__BotsSelection_K2Node_ComponentBoundEvent_87_OnSelectionChangedEvent__DelegateSignature");
static_assert(offsetof(CreateGame_C_BndEvt__BotsSelection_K2Node_ComponentBoundEvent_87_OnSelectionChangedEvent__DelegateSignature, SelectedItem) == 0x000000, "Member 'CreateGame_C_BndEvt__BotsSelection_K2Node_ComponentBoundEvent_87_OnSelectionChangedEvent__DelegateSignature::SelectedItem' has a wrong offset!");
static_assert(offsetof(CreateGame_C_BndEvt__BotsSelection_K2Node_ComponentBoundEvent_87_OnSelectionChangedEvent__DelegateSignature, SelectionType) == 0x000010, "Member 'CreateGame_C_BndEvt__BotsSelection_K2Node_ComponentBoundEvent_87_OnSelectionChangedEvent__DelegateSignature::SelectionType' has a wrong offset!");

// Function CreateGame.CreateGame_C.OnAnimationFinished
// 0x0008 (0x0008 - 0x0000)
struct CreateGame_C_OnAnimationFinished final
{
public:
	const class UWidgetAnimation*                 Animation;                                         // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CreateGame_C_OnAnimationFinished) == 0x000008, "Wrong alignment on CreateGame_C_OnAnimationFinished");
static_assert(sizeof(CreateGame_C_OnAnimationFinished) == 0x000008, "Wrong size on CreateGame_C_OnAnimationFinished");
static_assert(offsetof(CreateGame_C_OnAnimationFinished, Animation) == 0x000000, "Member 'CreateGame_C_OnAnimationFinished::Animation' has a wrong offset!");

// Function CreateGame.CreateGame_C.BndEvt__ModeSelection_K2Node_ComponentBoundEvent_26_OnSelectionChangedEvent__DelegateSignature
// 0x0018 (0x0018 - 0x0000)
struct CreateGame_C_BndEvt__ModeSelection_K2Node_ComponentBoundEvent_26_OnSelectionChangedEvent__DelegateSignature final
{
public:
	class FString                                 SelectedItem;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	ESelectInfo                                   SelectionType;                                     // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CreateGame_C_BndEvt__ModeSelection_K2Node_ComponentBoundEvent_26_OnSelectionChangedEvent__DelegateSignature) == 0x000008, "Wrong alignment on CreateGame_C_BndEvt__ModeSelection_K2Node_ComponentBoundEvent_26_OnSelectionChangedEvent__DelegateSignature");
static_assert(sizeof(CreateGame_C_BndEvt__ModeSelection_K2Node_ComponentBoundEvent_26_OnSelectionChangedEvent__DelegateSignature) == 0x000018, "Wrong size on CreateGame_C_BndEvt__ModeSelection_K2Node_ComponentBoundEvent_26_OnSelectionChangedEvent__DelegateSignature");
static_assert(offsetof(CreateGame_C_BndEvt__ModeSelection_K2Node_ComponentBoundEvent_26_OnSelectionChangedEvent__DelegateSignature, SelectedItem) == 0x000000, "Member 'CreateGame_C_BndEvt__ModeSelection_K2Node_ComponentBoundEvent_26_OnSelectionChangedEvent__DelegateSignature::SelectedItem' has a wrong offset!");
static_assert(offsetof(CreateGame_C_BndEvt__ModeSelection_K2Node_ComponentBoundEvent_26_OnSelectionChangedEvent__DelegateSignature, SelectionType) == 0x000010, "Member 'CreateGame_C_BndEvt__ModeSelection_K2Node_ComponentBoundEvent_26_OnSelectionChangedEvent__DelegateSignature::SelectionType' has a wrong offset!");

// Function CreateGame.CreateGame_C.BndEvt__MapSelection_K2Node_ComponentBoundEvent_48_OnSelectionChangedEvent__DelegateSignature
// 0x0018 (0x0018 - 0x0000)
struct CreateGame_C_BndEvt__MapSelection_K2Node_ComponentBoundEvent_48_OnSelectionChangedEvent__DelegateSignature final
{
public:
	class FString                                 SelectedItem;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	ESelectInfo                                   SelectionType;                                     // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CreateGame_C_BndEvt__MapSelection_K2Node_ComponentBoundEvent_48_OnSelectionChangedEvent__DelegateSignature) == 0x000008, "Wrong alignment on CreateGame_C_BndEvt__MapSelection_K2Node_ComponentBoundEvent_48_OnSelectionChangedEvent__DelegateSignature");
static_assert(sizeof(CreateGame_C_BndEvt__MapSelection_K2Node_ComponentBoundEvent_48_OnSelectionChangedEvent__DelegateSignature) == 0x000018, "Wrong size on CreateGame_C_BndEvt__MapSelection_K2Node_ComponentBoundEvent_48_OnSelectionChangedEvent__DelegateSignature");
static_assert(offsetof(CreateGame_C_BndEvt__MapSelection_K2Node_ComponentBoundEvent_48_OnSelectionChangedEvent__DelegateSignature, SelectedItem) == 0x000000, "Member 'CreateGame_C_BndEvt__MapSelection_K2Node_ComponentBoundEvent_48_OnSelectionChangedEvent__DelegateSignature::SelectedItem' has a wrong offset!");
static_assert(offsetof(CreateGame_C_BndEvt__MapSelection_K2Node_ComponentBoundEvent_48_OnSelectionChangedEvent__DelegateSignature, SelectionType) == 0x000010, "Member 'CreateGame_C_BndEvt__MapSelection_K2Node_ComponentBoundEvent_48_OnSelectionChangedEvent__DelegateSignature::SelectionType' has a wrong offset!");

// Function CreateGame.CreateGame_C.IsVerticalSliceButtonEnabled
// 0x0001 (0x0001 - 0x0000)
struct CreateGame_C_IsVerticalSliceButtonEnabled final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(CreateGame_C_IsVerticalSliceButtonEnabled) == 0x000001, "Wrong alignment on CreateGame_C_IsVerticalSliceButtonEnabled");
static_assert(sizeof(CreateGame_C_IsVerticalSliceButtonEnabled) == 0x000001, "Wrong size on CreateGame_C_IsVerticalSliceButtonEnabled");
static_assert(offsetof(CreateGame_C_IsVerticalSliceButtonEnabled, ReturnValue) == 0x000000, "Member 'CreateGame_C_IsVerticalSliceButtonEnabled::ReturnValue' has a wrong offset!");

// Function CreateGame.CreateGame_C.PlayClickSound
// 0x0030 (0x0030 - 0x0000)
struct CreateGame_C_PlayClickSound final
{
public:
	TArray<struct FAkExternalSourceInfo>          Temp_struct_Variable;                              // 0x0000(0x0010)(ConstParm, ZeroConstructor, ReferenceParm)
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable;                            // 0x0010(0x0010)(ConstParm, ZeroConstructor, NoDestructor)
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_PostEvent_ReturnValue;                    // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CreateGame_C_PlayClickSound) == 0x000008, "Wrong alignment on CreateGame_C_PlayClickSound");
static_assert(sizeof(CreateGame_C_PlayClickSound) == 0x000030, "Wrong size on CreateGame_C_PlayClickSound");
static_assert(offsetof(CreateGame_C_PlayClickSound, Temp_struct_Variable) == 0x000000, "Member 'CreateGame_C_PlayClickSound::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(CreateGame_C_PlayClickSound, Temp_delegate_Variable) == 0x000010, "Member 'CreateGame_C_PlayClickSound::Temp_delegate_Variable' has a wrong offset!");
static_assert(offsetof(CreateGame_C_PlayClickSound, CallFunc_GetOwningPlayer_ReturnValue) == 0x000020, "Member 'CreateGame_C_PlayClickSound::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(CreateGame_C_PlayClickSound, CallFunc_PostEvent_ReturnValue) == 0x000028, "Member 'CreateGame_C_PlayClickSound::CallFunc_PostEvent_ReturnValue' has a wrong offset!");

// Function CreateGame.CreateGame_C.InitiateReturnToMainMenu
// 0x0008 (0x0008 - 0x0000)
struct CreateGame_C_InitiateReturnToMainMenu final
{
public:
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CreateGame_C_InitiateReturnToMainMenu) == 0x000008, "Wrong alignment on CreateGame_C_InitiateReturnToMainMenu");
static_assert(sizeof(CreateGame_C_InitiateReturnToMainMenu) == 0x000008, "Wrong size on CreateGame_C_InitiateReturnToMainMenu");
static_assert(offsetof(CreateGame_C_InitiateReturnToMainMenu, CallFunc_PlayAnimation_ReturnValue) == 0x000000, "Member 'CreateGame_C_InitiateReturnToMainMenu::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");

// Function CreateGame.CreateGame_C.InitiateOutSequence
// 0x0010 (0x0010 - 0x0000)
struct CreateGame_C_InitiateOutSequence final
{
public:
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsAnimationPlaying_ReturnValue;           // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(CreateGame_C_InitiateOutSequence) == 0x000008, "Wrong alignment on CreateGame_C_InitiateOutSequence");
static_assert(sizeof(CreateGame_C_InitiateOutSequence) == 0x000010, "Wrong size on CreateGame_C_InitiateOutSequence");
static_assert(offsetof(CreateGame_C_InitiateOutSequence, CallFunc_PlayAnimation_ReturnValue) == 0x000000, "Member 'CreateGame_C_InitiateOutSequence::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(CreateGame_C_InitiateOutSequence, CallFunc_IsAnimationPlaying_ReturnValue) == 0x000008, "Member 'CreateGame_C_InitiateOutSequence::CallFunc_IsAnimationPlaying_ReturnValue' has a wrong offset!");
static_assert(offsetof(CreateGame_C_InitiateOutSequence, CallFunc_Not_PreBool_ReturnValue) == 0x000009, "Member 'CreateGame_C_InitiateOutSequence::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function CreateGame.CreateGame_C.OnKeyDown
// 0x0128 (0x0128 - 0x0000)
struct CreateGame_C_OnKeyDown final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FKeyEvent                              InKeyEvent;                                        // 0x0038(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm)
	struct FEventReply                            ReturnValue;                                       // 0x0070(0x00B8)(Parm, OutParm, ReturnParm)
};
static_assert(alignof(CreateGame_C_OnKeyDown) == 0x000008, "Wrong alignment on CreateGame_C_OnKeyDown");
static_assert(sizeof(CreateGame_C_OnKeyDown) == 0x000128, "Wrong size on CreateGame_C_OnKeyDown");
static_assert(offsetof(CreateGame_C_OnKeyDown, MyGeometry) == 0x000000, "Member 'CreateGame_C_OnKeyDown::MyGeometry' has a wrong offset!");
static_assert(offsetof(CreateGame_C_OnKeyDown, InKeyEvent) == 0x000038, "Member 'CreateGame_C_OnKeyDown::InKeyEvent' has a wrong offset!");
static_assert(offsetof(CreateGame_C_OnKeyDown, ReturnValue) == 0x000070, "Member 'CreateGame_C_OnKeyDown::ReturnValue' has a wrong offset!");

// Function CreateGame.CreateGame_C.FillGameModesSelection
// 0x0108 (0x0108 - 0x0000)
struct CreateGame_C_FillGameModesSelection final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1FEF[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMangoCMSManager*                       CallFunc_Get_ReturnValue;                          // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FGuid>                          CallFunc_GetPrivateMatchModes_ReturnValue;         // 0x0018(0x0010)(ConstParm, ZeroConstructor, ReferenceParm)
	struct FGuid                                  CallFunc_Array_Get_Item;                           // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1FF0[0x4];                                     // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<struct FGuid, struct FMangoMode>         CallFunc_GetModes_ReturnValue;                     // 0x0040(0x0050)(ConstParm, ZeroConstructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1FF1[0x7];                                     // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMangoMode                             CallFunc_Map_Find_Value;                           // 0x0098(0x0058)()
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1FF2[0x7];                                     // 0x00F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x00F8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(CreateGame_C_FillGameModesSelection) == 0x000008, "Wrong alignment on CreateGame_C_FillGameModesSelection");
static_assert(sizeof(CreateGame_C_FillGameModesSelection) == 0x000108, "Wrong size on CreateGame_C_FillGameModesSelection");
static_assert(offsetof(CreateGame_C_FillGameModesSelection, Temp_int_Array_Index_Variable) == 0x000000, "Member 'CreateGame_C_FillGameModesSelection::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(CreateGame_C_FillGameModesSelection, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'CreateGame_C_FillGameModesSelection::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(CreateGame_C_FillGameModesSelection, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'CreateGame_C_FillGameModesSelection::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(CreateGame_C_FillGameModesSelection, CallFunc_Get_ReturnValue) == 0x000010, "Member 'CreateGame_C_FillGameModesSelection::CallFunc_Get_ReturnValue' has a wrong offset!");
static_assert(offsetof(CreateGame_C_FillGameModesSelection, CallFunc_GetPrivateMatchModes_ReturnValue) == 0x000018, "Member 'CreateGame_C_FillGameModesSelection::CallFunc_GetPrivateMatchModes_ReturnValue' has a wrong offset!");
static_assert(offsetof(CreateGame_C_FillGameModesSelection, CallFunc_Array_Get_Item) == 0x000028, "Member 'CreateGame_C_FillGameModesSelection::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(CreateGame_C_FillGameModesSelection, CallFunc_Array_Length_ReturnValue) == 0x000038, "Member 'CreateGame_C_FillGameModesSelection::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(CreateGame_C_FillGameModesSelection, CallFunc_GetModes_ReturnValue) == 0x000040, "Member 'CreateGame_C_FillGameModesSelection::CallFunc_GetModes_ReturnValue' has a wrong offset!");
static_assert(offsetof(CreateGame_C_FillGameModesSelection, CallFunc_Less_IntInt_ReturnValue) == 0x000090, "Member 'CreateGame_C_FillGameModesSelection::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(CreateGame_C_FillGameModesSelection, CallFunc_Map_Find_Value) == 0x000098, "Member 'CreateGame_C_FillGameModesSelection::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(CreateGame_C_FillGameModesSelection, CallFunc_Map_Find_ReturnValue) == 0x0000F0, "Member 'CreateGame_C_FillGameModesSelection::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(CreateGame_C_FillGameModesSelection, CallFunc_Conv_TextToString_ReturnValue) == 0x0000F8, "Member 'CreateGame_C_FillGameModesSelection::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");

// Function CreateGame.CreateGame_C.UpdateKnockoutBotsSelection
// 0x0028 (0x0028 - 0x0000)
struct CreateGame_C_UpdateKnockoutBotsSelection final
{
public:
	int32                                         CurrentSelection;                                  // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1FF3[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0010(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(CreateGame_C_UpdateKnockoutBotsSelection) == 0x000008, "Wrong alignment on CreateGame_C_UpdateKnockoutBotsSelection");
static_assert(sizeof(CreateGame_C_UpdateKnockoutBotsSelection) == 0x000028, "Wrong size on CreateGame_C_UpdateKnockoutBotsSelection");
static_assert(offsetof(CreateGame_C_UpdateKnockoutBotsSelection, CurrentSelection) == 0x000000, "Member 'CreateGame_C_UpdateKnockoutBotsSelection::CurrentSelection' has a wrong offset!");
static_assert(offsetof(CreateGame_C_UpdateKnockoutBotsSelection, Temp_int_Variable) == 0x000004, "Member 'CreateGame_C_UpdateKnockoutBotsSelection::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(CreateGame_C_UpdateKnockoutBotsSelection, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'CreateGame_C_UpdateKnockoutBotsSelection::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(CreateGame_C_UpdateKnockoutBotsSelection, CallFunc_Conv_IntToString_ReturnValue) == 0x000010, "Member 'CreateGame_C_UpdateKnockoutBotsSelection::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(CreateGame_C_UpdateKnockoutBotsSelection, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000020, "Member 'CreateGame_C_UpdateKnockoutBotsSelection::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");

// Function CreateGame.CreateGame_C.Handle Map Settings Menu Changed
// 0x00E8 (0x00E8 - 0x0000)
struct CreateGame_C_Handle_Map_Settings_Menu_Changed final
{
public:
	class FString                                 Desired_Map_Name;                                  // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Desired_Mode_Name;                                 // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	int32                                         Desired_Bots_Selection;                            // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         DesiredBotsDifficulty;                             // 0x0024(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1FF4[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_MapLoadNameToMapName_MapName;             // 0x0040(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_MapLoadNameToMapName_bValid;              // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0052(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1FF5[0x5];                                     // 0x0053(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UMarinerModeGlobals*                    CallFunc_GetModeGlobals_ReturnValue;               // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TryAndGetMangoModeFromLoadName_bIsValid;  // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1FF6[0x7];                                     // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMangoMode                             CallFunc_TryAndGetMangoModeFromLoadName_ReturnValue; // 0x0068(0x0058)(ConstParm)
	class UMarinerModeDataAsset*                  CallFunc_TryAndGetModeDataFromLoadName_ReturnValue; // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1FF7[0x7];                                     // 0x00C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x00D0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetSupportsBots_ReturnValue;              // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x00E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CreateGame_C_Handle_Map_Settings_Menu_Changed) == 0x000008, "Wrong alignment on CreateGame_C_Handle_Map_Settings_Menu_Changed");
static_assert(sizeof(CreateGame_C_Handle_Map_Settings_Menu_Changed) == 0x0000E8, "Wrong size on CreateGame_C_Handle_Map_Settings_Menu_Changed");
static_assert(offsetof(CreateGame_C_Handle_Map_Settings_Menu_Changed, Desired_Map_Name) == 0x000000, "Member 'CreateGame_C_Handle_Map_Settings_Menu_Changed::Desired_Map_Name' has a wrong offset!");
static_assert(offsetof(CreateGame_C_Handle_Map_Settings_Menu_Changed, Desired_Mode_Name) == 0x000010, "Member 'CreateGame_C_Handle_Map_Settings_Menu_Changed::Desired_Mode_Name' has a wrong offset!");
static_assert(offsetof(CreateGame_C_Handle_Map_Settings_Menu_Changed, Desired_Bots_Selection) == 0x000020, "Member 'CreateGame_C_Handle_Map_Settings_Menu_Changed::Desired_Bots_Selection' has a wrong offset!");
static_assert(offsetof(CreateGame_C_Handle_Map_Settings_Menu_Changed, DesiredBotsDifficulty) == 0x000024, "Member 'CreateGame_C_Handle_Map_Settings_Menu_Changed::DesiredBotsDifficulty' has a wrong offset!");
static_assert(offsetof(CreateGame_C_Handle_Map_Settings_Menu_Changed, Temp_bool_Variable) == 0x000028, "Member 'CreateGame_C_Handle_Map_Settings_Menu_Changed::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(CreateGame_C_Handle_Map_Settings_Menu_Changed, CallFunc_Conv_IntToString_ReturnValue) == 0x000030, "Member 'CreateGame_C_Handle_Map_Settings_Menu_Changed::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(CreateGame_C_Handle_Map_Settings_Menu_Changed, CallFunc_MapLoadNameToMapName_MapName) == 0x000040, "Member 'CreateGame_C_Handle_Map_Settings_Menu_Changed::CallFunc_MapLoadNameToMapName_MapName' has a wrong offset!");
static_assert(offsetof(CreateGame_C_Handle_Map_Settings_Menu_Changed, CallFunc_MapLoadNameToMapName_bValid) == 0x000050, "Member 'CreateGame_C_Handle_Map_Settings_Menu_Changed::CallFunc_MapLoadNameToMapName_bValid' has a wrong offset!");
static_assert(offsetof(CreateGame_C_Handle_Map_Settings_Menu_Changed, Temp_byte_Variable) == 0x000051, "Member 'CreateGame_C_Handle_Map_Settings_Menu_Changed::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(CreateGame_C_Handle_Map_Settings_Menu_Changed, Temp_byte_Variable_1) == 0x000052, "Member 'CreateGame_C_Handle_Map_Settings_Menu_Changed::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(CreateGame_C_Handle_Map_Settings_Menu_Changed, CallFunc_GetModeGlobals_ReturnValue) == 0x000058, "Member 'CreateGame_C_Handle_Map_Settings_Menu_Changed::CallFunc_GetModeGlobals_ReturnValue' has a wrong offset!");
static_assert(offsetof(CreateGame_C_Handle_Map_Settings_Menu_Changed, CallFunc_TryAndGetMangoModeFromLoadName_bIsValid) == 0x000060, "Member 'CreateGame_C_Handle_Map_Settings_Menu_Changed::CallFunc_TryAndGetMangoModeFromLoadName_bIsValid' has a wrong offset!");
static_assert(offsetof(CreateGame_C_Handle_Map_Settings_Menu_Changed, CallFunc_TryAndGetMangoModeFromLoadName_ReturnValue) == 0x000068, "Member 'CreateGame_C_Handle_Map_Settings_Menu_Changed::CallFunc_TryAndGetMangoModeFromLoadName_ReturnValue' has a wrong offset!");
static_assert(offsetof(CreateGame_C_Handle_Map_Settings_Menu_Changed, CallFunc_TryAndGetModeDataFromLoadName_ReturnValue) == 0x0000C0, "Member 'CreateGame_C_Handle_Map_Settings_Menu_Changed::CallFunc_TryAndGetModeDataFromLoadName_ReturnValue' has a wrong offset!");
static_assert(offsetof(CreateGame_C_Handle_Map_Settings_Menu_Changed, CallFunc_IsValid_ReturnValue) == 0x0000C8, "Member 'CreateGame_C_Handle_Map_Settings_Menu_Changed::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(CreateGame_C_Handle_Map_Settings_Menu_Changed, CallFunc_Conv_TextToString_ReturnValue) == 0x0000D0, "Member 'CreateGame_C_Handle_Map_Settings_Menu_Changed::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(CreateGame_C_Handle_Map_Settings_Menu_Changed, CallFunc_GetSupportsBots_ReturnValue) == 0x0000E0, "Member 'CreateGame_C_Handle_Map_Settings_Menu_Changed::CallFunc_GetSupportsBots_ReturnValue' has a wrong offset!");
static_assert(offsetof(CreateGame_C_Handle_Map_Settings_Menu_Changed, K2Node_Select_Default) == 0x0000E1, "Member 'CreateGame_C_Handle_Map_Settings_Menu_Changed::K2Node_Select_Default' has a wrong offset!");

// Function CreateGame.CreateGame_C.HandleInput
// 0x0020 (0x0020 - 0x0000)
struct CreateGame_C_HandleInput final
{
public:
	EMarinerInputActions                          InInput;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HandleInput_ReturnValue;                  // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1FF8[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue;                  // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMarinerLANLobbyGameMode*               K2Node_DynamicCast_AsMariner_LANLobby_Game_Mode;   // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(CreateGame_C_HandleInput) == 0x000008, "Wrong alignment on CreateGame_C_HandleInput");
static_assert(sizeof(CreateGame_C_HandleInput) == 0x000020, "Wrong size on CreateGame_C_HandleInput");
static_assert(offsetof(CreateGame_C_HandleInput, InInput) == 0x000000, "Member 'CreateGame_C_HandleInput::InInput' has a wrong offset!");
static_assert(offsetof(CreateGame_C_HandleInput, ReturnValue) == 0x000001, "Member 'CreateGame_C_HandleInput::ReturnValue' has a wrong offset!");
static_assert(offsetof(CreateGame_C_HandleInput, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000002, "Member 'CreateGame_C_HandleInput::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(CreateGame_C_HandleInput, CallFunc_HandleInput_ReturnValue) == 0x000003, "Member 'CreateGame_C_HandleInput::CallFunc_HandleInput_ReturnValue' has a wrong offset!");
static_assert(offsetof(CreateGame_C_HandleInput, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000004, "Member 'CreateGame_C_HandleInput::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CreateGame_C_HandleInput, CallFunc_GetGameMode_ReturnValue) == 0x000008, "Member 'CreateGame_C_HandleInput::CallFunc_GetGameMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(CreateGame_C_HandleInput, K2Node_DynamicCast_AsMariner_LANLobby_Game_Mode) == 0x000010, "Member 'CreateGame_C_HandleInput::K2Node_DynamicCast_AsMariner_LANLobby_Game_Mode' has a wrong offset!");
static_assert(offsetof(CreateGame_C_HandleInput, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'CreateGame_C_HandleInput::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function CreateGame.CreateGame_C.ChangeBotOptionVisibility
// 0x0001 (0x0001 - 0x0000)
struct CreateGame_C_ChangeBotOptionVisibility final
{
public:
	ESlateVisibility                              Param_Visibility;                                  // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CreateGame_C_ChangeBotOptionVisibility) == 0x000001, "Wrong alignment on CreateGame_C_ChangeBotOptionVisibility");
static_assert(sizeof(CreateGame_C_ChangeBotOptionVisibility) == 0x000001, "Wrong size on CreateGame_C_ChangeBotOptionVisibility");
static_assert(offsetof(CreateGame_C_ChangeBotOptionVisibility, Param_Visibility) == 0x000000, "Member 'CreateGame_C_ChangeBotOptionVisibility::Param_Visibility' has a wrong offset!");

// Function CreateGame.CreateGame_C.MapLoadNameToMapName
// 0x00A8 (0x00A8 - 0x0000)
struct CreateGame_C_MapLoadNameToMapName final
{
public:
	class FString                                 MapLoadName;                                       // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 MapName;                                           // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          bValid;                                            // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1FF9[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMarinerMapGlobals*                     CallFunc_GetMapGlobals_ReturnValue;                // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TryAndGetMangoMapFromLoadName_bIsValid;   // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1FFA[0x7];                                     // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMangoMap                              CallFunc_TryAndGetMangoMapFromLoadName_ReturnValue; // 0x0038(0x0060)(ConstParm)
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0098(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(CreateGame_C_MapLoadNameToMapName) == 0x000008, "Wrong alignment on CreateGame_C_MapLoadNameToMapName");
static_assert(sizeof(CreateGame_C_MapLoadNameToMapName) == 0x0000A8, "Wrong size on CreateGame_C_MapLoadNameToMapName");
static_assert(offsetof(CreateGame_C_MapLoadNameToMapName, MapLoadName) == 0x000000, "Member 'CreateGame_C_MapLoadNameToMapName::MapLoadName' has a wrong offset!");
static_assert(offsetof(CreateGame_C_MapLoadNameToMapName, MapName) == 0x000010, "Member 'CreateGame_C_MapLoadNameToMapName::MapName' has a wrong offset!");
static_assert(offsetof(CreateGame_C_MapLoadNameToMapName, bValid) == 0x000020, "Member 'CreateGame_C_MapLoadNameToMapName::bValid' has a wrong offset!");
static_assert(offsetof(CreateGame_C_MapLoadNameToMapName, CallFunc_GetMapGlobals_ReturnValue) == 0x000028, "Member 'CreateGame_C_MapLoadNameToMapName::CallFunc_GetMapGlobals_ReturnValue' has a wrong offset!");
static_assert(offsetof(CreateGame_C_MapLoadNameToMapName, CallFunc_TryAndGetMangoMapFromLoadName_bIsValid) == 0x000030, "Member 'CreateGame_C_MapLoadNameToMapName::CallFunc_TryAndGetMangoMapFromLoadName_bIsValid' has a wrong offset!");
static_assert(offsetof(CreateGame_C_MapLoadNameToMapName, CallFunc_TryAndGetMangoMapFromLoadName_ReturnValue) == 0x000038, "Member 'CreateGame_C_MapLoadNameToMapName::CallFunc_TryAndGetMangoMapFromLoadName_ReturnValue' has a wrong offset!");
static_assert(offsetof(CreateGame_C_MapLoadNameToMapName, CallFunc_Conv_TextToString_ReturnValue) == 0x000098, "Member 'CreateGame_C_MapLoadNameToMapName::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");

// Function CreateGame.CreateGame_C.UpdateSelectionsFromGameState
// 0x0018 (0x0018 - 0x0000)
struct CreateGame_C_UpdateSelectionsFromGameState final
{
public:
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMarinerLANLobbyGameState*              K2Node_DynamicCast_AsMariner_LANLobby_Game_State;  // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(CreateGame_C_UpdateSelectionsFromGameState) == 0x000008, "Wrong alignment on CreateGame_C_UpdateSelectionsFromGameState");
static_assert(sizeof(CreateGame_C_UpdateSelectionsFromGameState) == 0x000018, "Wrong size on CreateGame_C_UpdateSelectionsFromGameState");
static_assert(offsetof(CreateGame_C_UpdateSelectionsFromGameState, CallFunc_GetGameState_ReturnValue) == 0x000000, "Member 'CreateGame_C_UpdateSelectionsFromGameState::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(CreateGame_C_UpdateSelectionsFromGameState, K2Node_DynamicCast_AsMariner_LANLobby_Game_State) == 0x000008, "Member 'CreateGame_C_UpdateSelectionsFromGameState::K2Node_DynamicCast_AsMariner_LANLobby_Game_State' has a wrong offset!");
static_assert(offsetof(CreateGame_C_UpdateSelectionsFromGameState, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'CreateGame_C_UpdateSelectionsFromGameState::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function CreateGame.CreateGame_C.Fill Map Selection
// 0x0148 (0x0148 - 0x0000)
struct CreateGame_C_Fill_Map_Selection final
{
public:
	class FString                                 Previous_Selection;                                // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1FFB[0x3];                                     // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetOptionAtIndex_ReturnValue;             // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class AMarinerLANLobbyGameState*              K2Node_DynamicCast_AsMariner_LANLobby_Game_State;  // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1FFC[0x3];                                     // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_FindOptionIndex_ReturnValue;              // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1FFD[0x7];                                     // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMangoCMSManager*                       CallFunc_Get_ReturnValue;                          // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 K2Node_Select_Default;                             // 0x0058(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TMap<struct FGuid, struct FMangoMap>          CallFunc_GetMaps_ReturnValue;                      // 0x0068(0x0050)(ConstParm, ZeroConstructor)
	TArray<struct FMangoMap>                      CallFunc_Map_Values_Values;                        // 0x00B8(0x0010)(ZeroConstructor, ReferenceParm)
	struct FMangoMap                              CallFunc_Array_Get_Item;                           // 0x00C8(0x0060)()
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1FFE[0x4];                                     // 0x012C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0130(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(CreateGame_C_Fill_Map_Selection) == 0x000008, "Wrong alignment on CreateGame_C_Fill_Map_Selection");
static_assert(sizeof(CreateGame_C_Fill_Map_Selection) == 0x000148, "Wrong size on CreateGame_C_Fill_Map_Selection");
static_assert(offsetof(CreateGame_C_Fill_Map_Selection, Previous_Selection) == 0x000000, "Member 'CreateGame_C_Fill_Map_Selection::Previous_Selection' has a wrong offset!");
static_assert(offsetof(CreateGame_C_Fill_Map_Selection, Temp_bool_Variable) == 0x000010, "Member 'CreateGame_C_Fill_Map_Selection::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(CreateGame_C_Fill_Map_Selection, Temp_int_Array_Index_Variable) == 0x000014, "Member 'CreateGame_C_Fill_Map_Selection::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(CreateGame_C_Fill_Map_Selection, Temp_int_Loop_Counter_Variable) == 0x000018, "Member 'CreateGame_C_Fill_Map_Selection::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(CreateGame_C_Fill_Map_Selection, CallFunc_Add_IntInt_ReturnValue) == 0x00001C, "Member 'CreateGame_C_Fill_Map_Selection::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(CreateGame_C_Fill_Map_Selection, CallFunc_GetGameState_ReturnValue) == 0x000020, "Member 'CreateGame_C_Fill_Map_Selection::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(CreateGame_C_Fill_Map_Selection, CallFunc_GetOptionAtIndex_ReturnValue) == 0x000028, "Member 'CreateGame_C_Fill_Map_Selection::CallFunc_GetOptionAtIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(CreateGame_C_Fill_Map_Selection, K2Node_DynamicCast_AsMariner_LANLobby_Game_State) == 0x000038, "Member 'CreateGame_C_Fill_Map_Selection::K2Node_DynamicCast_AsMariner_LANLobby_Game_State' has a wrong offset!");
static_assert(offsetof(CreateGame_C_Fill_Map_Selection, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'CreateGame_C_Fill_Map_Selection::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(CreateGame_C_Fill_Map_Selection, CallFunc_FindOptionIndex_ReturnValue) == 0x000044, "Member 'CreateGame_C_Fill_Map_Selection::CallFunc_FindOptionIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(CreateGame_C_Fill_Map_Selection, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000048, "Member 'CreateGame_C_Fill_Map_Selection::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(CreateGame_C_Fill_Map_Selection, CallFunc_Get_ReturnValue) == 0x000050, "Member 'CreateGame_C_Fill_Map_Selection::CallFunc_Get_ReturnValue' has a wrong offset!");
static_assert(offsetof(CreateGame_C_Fill_Map_Selection, K2Node_Select_Default) == 0x000058, "Member 'CreateGame_C_Fill_Map_Selection::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(CreateGame_C_Fill_Map_Selection, CallFunc_GetMaps_ReturnValue) == 0x000068, "Member 'CreateGame_C_Fill_Map_Selection::CallFunc_GetMaps_ReturnValue' has a wrong offset!");
static_assert(offsetof(CreateGame_C_Fill_Map_Selection, CallFunc_Map_Values_Values) == 0x0000B8, "Member 'CreateGame_C_Fill_Map_Selection::CallFunc_Map_Values_Values' has a wrong offset!");
static_assert(offsetof(CreateGame_C_Fill_Map_Selection, CallFunc_Array_Get_Item) == 0x0000C8, "Member 'CreateGame_C_Fill_Map_Selection::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(CreateGame_C_Fill_Map_Selection, CallFunc_Array_Length_ReturnValue) == 0x000128, "Member 'CreateGame_C_Fill_Map_Selection::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(CreateGame_C_Fill_Map_Selection, CallFunc_Conv_TextToString_ReturnValue) == 0x000130, "Member 'CreateGame_C_Fill_Map_Selection::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(CreateGame_C_Fill_Map_Selection, CallFunc_Less_IntInt_ReturnValue) == 0x000140, "Member 'CreateGame_C_Fill_Map_Selection::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function CreateGame.CreateGame_C.Handle Mode Selection Changed
// 0x0130 (0x0130 - 0x0000)
struct CreateGame_C_Handle_Mode_Selection_Changed final
{
public:
	class FString                                 Mode_Selected;                                     // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_StriStri_ReturnValue;          // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue;            // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1FFF[0x3];                                     // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2000[0x3];                                     // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2001[0x3];                                     // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2002[0x3];                                     // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMarinerLANLobbyGameState*              K2Node_DynamicCast_AsMariner_LANLobby_Game_State;  // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2003[0x6];                                     // 0x0042(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UMangoCMSManager*                       CallFunc_Get_ReturnValue;                          // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsServer_ReturnValue;                     // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2004[0x7];                                     // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<struct FGuid, struct FMangoMode>         CallFunc_GetModes_ReturnValue;                     // 0x0058(0x0050)(ConstParm, ZeroConstructor)
	TArray<struct FMangoMode>                     CallFunc_Map_Values_Values;                        // 0x00A8(0x0010)(ZeroConstructor, ReferenceParm)
	struct FMangoMode                             CallFunc_Array_Get_Item;                           // 0x00B8(0x0058)()
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0114(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2005[0x3];                                     // 0x0115(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0118(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue_1;          // 0x0129(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(CreateGame_C_Handle_Mode_Selection_Changed) == 0x000008, "Wrong alignment on CreateGame_C_Handle_Mode_Selection_Changed");
static_assert(sizeof(CreateGame_C_Handle_Mode_Selection_Changed) == 0x000130, "Wrong size on CreateGame_C_Handle_Mode_Selection_Changed");
static_assert(offsetof(CreateGame_C_Handle_Mode_Selection_Changed, Mode_Selected) == 0x000000, "Member 'CreateGame_C_Handle_Mode_Selection_Changed::Mode_Selected' has a wrong offset!");
static_assert(offsetof(CreateGame_C_Handle_Mode_Selection_Changed, Temp_byte_Variable) == 0x000010, "Member 'CreateGame_C_Handle_Mode_Selection_Changed::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(CreateGame_C_Handle_Mode_Selection_Changed, CallFunc_EqualEqual_StriStri_ReturnValue) == 0x000011, "Member 'CreateGame_C_Handle_Mode_Selection_Changed::CallFunc_EqualEqual_StriStri_ReturnValue' has a wrong offset!");
static_assert(offsetof(CreateGame_C_Handle_Mode_Selection_Changed, CallFunc_EqualEqual_StrStr_ReturnValue) == 0x000012, "Member 'CreateGame_C_Handle_Mode_Selection_Changed::CallFunc_EqualEqual_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(CreateGame_C_Handle_Mode_Selection_Changed, CallFunc_BooleanOR_ReturnValue) == 0x000013, "Member 'CreateGame_C_Handle_Mode_Selection_Changed::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(CreateGame_C_Handle_Mode_Selection_Changed, Temp_bool_True_if_break_was_hit_Variable) == 0x000014, "Member 'CreateGame_C_Handle_Mode_Selection_Changed::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(CreateGame_C_Handle_Mode_Selection_Changed, Temp_int_Array_Index_Variable) == 0x000018, "Member 'CreateGame_C_Handle_Mode_Selection_Changed::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(CreateGame_C_Handle_Mode_Selection_Changed, CallFunc_Not_PreBool_ReturnValue) == 0x00001C, "Member 'CreateGame_C_Handle_Mode_Selection_Changed::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(CreateGame_C_Handle_Mode_Selection_Changed, Temp_int_Loop_Counter_Variable) == 0x000020, "Member 'CreateGame_C_Handle_Mode_Selection_Changed::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(CreateGame_C_Handle_Mode_Selection_Changed, Temp_byte_Variable_1) == 0x000024, "Member 'CreateGame_C_Handle_Mode_Selection_Changed::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(CreateGame_C_Handle_Mode_Selection_Changed, CallFunc_Add_IntInt_ReturnValue) == 0x000028, "Member 'CreateGame_C_Handle_Mode_Selection_Changed::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(CreateGame_C_Handle_Mode_Selection_Changed, Temp_bool_Variable) == 0x00002C, "Member 'CreateGame_C_Handle_Mode_Selection_Changed::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(CreateGame_C_Handle_Mode_Selection_Changed, CallFunc_GetGameState_ReturnValue) == 0x000030, "Member 'CreateGame_C_Handle_Mode_Selection_Changed::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(CreateGame_C_Handle_Mode_Selection_Changed, K2Node_DynamicCast_AsMariner_LANLobby_Game_State) == 0x000038, "Member 'CreateGame_C_Handle_Mode_Selection_Changed::K2Node_DynamicCast_AsMariner_LANLobby_Game_State' has a wrong offset!");
static_assert(offsetof(CreateGame_C_Handle_Mode_Selection_Changed, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'CreateGame_C_Handle_Mode_Selection_Changed::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(CreateGame_C_Handle_Mode_Selection_Changed, K2Node_Select_Default) == 0x000041, "Member 'CreateGame_C_Handle_Mode_Selection_Changed::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(CreateGame_C_Handle_Mode_Selection_Changed, CallFunc_Get_ReturnValue) == 0x000048, "Member 'CreateGame_C_Handle_Mode_Selection_Changed::CallFunc_Get_ReturnValue' has a wrong offset!");
static_assert(offsetof(CreateGame_C_Handle_Mode_Selection_Changed, CallFunc_IsServer_ReturnValue) == 0x000050, "Member 'CreateGame_C_Handle_Mode_Selection_Changed::CallFunc_IsServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(CreateGame_C_Handle_Mode_Selection_Changed, CallFunc_GetModes_ReturnValue) == 0x000058, "Member 'CreateGame_C_Handle_Mode_Selection_Changed::CallFunc_GetModes_ReturnValue' has a wrong offset!");
static_assert(offsetof(CreateGame_C_Handle_Mode_Selection_Changed, CallFunc_Map_Values_Values) == 0x0000A8, "Member 'CreateGame_C_Handle_Mode_Selection_Changed::CallFunc_Map_Values_Values' has a wrong offset!");
static_assert(offsetof(CreateGame_C_Handle_Mode_Selection_Changed, CallFunc_Array_Get_Item) == 0x0000B8, "Member 'CreateGame_C_Handle_Mode_Selection_Changed::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(CreateGame_C_Handle_Mode_Selection_Changed, CallFunc_Array_Length_ReturnValue) == 0x000110, "Member 'CreateGame_C_Handle_Mode_Selection_Changed::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(CreateGame_C_Handle_Mode_Selection_Changed, CallFunc_Less_IntInt_ReturnValue) == 0x000114, "Member 'CreateGame_C_Handle_Mode_Selection_Changed::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(CreateGame_C_Handle_Mode_Selection_Changed, CallFunc_Conv_TextToString_ReturnValue) == 0x000118, "Member 'CreateGame_C_Handle_Mode_Selection_Changed::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(CreateGame_C_Handle_Mode_Selection_Changed, CallFunc_BooleanAND_ReturnValue) == 0x000128, "Member 'CreateGame_C_Handle_Mode_Selection_Changed::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(CreateGame_C_Handle_Mode_Selection_Changed, CallFunc_EqualEqual_StrStr_ReturnValue_1) == 0x000129, "Member 'CreateGame_C_Handle_Mode_Selection_Changed::CallFunc_EqualEqual_StrStr_ReturnValue_1' has a wrong offset!");

// Function CreateGame.CreateGame_C.UpdateRocketBotAttackBotsSelection
// 0x0040 (0x0040 - 0x0000)
struct CreateGame_C_UpdateRocketBotAttackBotsSelection final
{
public:
	int32                                         CurrentSelection;                                  // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2006[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMarinerLANLobbyGameState*              K2Node_DynamicCast_AsMariner_LANLobby_Game_State;  // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2007[0x3];                                     // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2008[0x4];                                     // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(CreateGame_C_UpdateRocketBotAttackBotsSelection) == 0x000008, "Wrong alignment on CreateGame_C_UpdateRocketBotAttackBotsSelection");
static_assert(sizeof(CreateGame_C_UpdateRocketBotAttackBotsSelection) == 0x000040, "Wrong size on CreateGame_C_UpdateRocketBotAttackBotsSelection");
static_assert(offsetof(CreateGame_C_UpdateRocketBotAttackBotsSelection, CurrentSelection) == 0x000000, "Member 'CreateGame_C_UpdateRocketBotAttackBotsSelection::CurrentSelection' has a wrong offset!");
static_assert(offsetof(CreateGame_C_UpdateRocketBotAttackBotsSelection, CallFunc_GetGameState_ReturnValue) == 0x000008, "Member 'CreateGame_C_UpdateRocketBotAttackBotsSelection::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(CreateGame_C_UpdateRocketBotAttackBotsSelection, K2Node_DynamicCast_AsMariner_LANLobby_Game_State) == 0x000010, "Member 'CreateGame_C_UpdateRocketBotAttackBotsSelection::K2Node_DynamicCast_AsMariner_LANLobby_Game_State' has a wrong offset!");
static_assert(offsetof(CreateGame_C_UpdateRocketBotAttackBotsSelection, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'CreateGame_C_UpdateRocketBotAttackBotsSelection::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(CreateGame_C_UpdateRocketBotAttackBotsSelection, Temp_int_Variable) == 0x00001C, "Member 'CreateGame_C_UpdateRocketBotAttackBotsSelection::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(CreateGame_C_UpdateRocketBotAttackBotsSelection, CallFunc_Add_IntInt_ReturnValue) == 0x000020, "Member 'CreateGame_C_UpdateRocketBotAttackBotsSelection::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(CreateGame_C_UpdateRocketBotAttackBotsSelection, CallFunc_Conv_IntToString_ReturnValue) == 0x000028, "Member 'CreateGame_C_UpdateRocketBotAttackBotsSelection::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(CreateGame_C_UpdateRocketBotAttackBotsSelection, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000038, "Member 'CreateGame_C_UpdateRocketBotAttackBotsSelection::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");

}

