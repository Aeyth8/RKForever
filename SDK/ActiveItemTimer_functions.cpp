#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ActiveItemTimer

#include "Basic.hpp"

#include "ActiveItemTimer_classes.hpp"
#include "ActiveItemTimer_parameters.hpp"


namespace SDK
{

// Function ActiveItemTimer.ActiveItemTimer_C.ExecuteUbergraph_ActiveItemTimer
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UActiveItemTimer_C::ExecuteUbergraph_ActiveItemTimer(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ActiveItemTimer_C", "ExecuteUbergraph_ActiveItemTimer");

	Params::ActiveItemTimer_C_ExecuteUbergraph_ActiveItemTimer Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ActiveItemTimer.ActiveItemTimer_C.CustomEvent_0
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class AMarinerCharacter*                KnockOutInstigator                                     (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bWasMegablast                                          (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UActiveItemTimer_C::CustomEvent_0(const class AMarinerCharacter* KnockOutInstigator, const bool bWasMegablast)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ActiveItemTimer_C", "CustomEvent_0");

	Params::ActiveItemTimer_C_CustomEvent_0 Parms{};

	Parms.KnockOutInstigator = KnockOutInstigator;
	Parms.bWasMegablast = bWasMegablast;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ActiveItemTimer.ActiveItemTimer_C.OnItemSet
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// struct FSlateBrush                      Icon                                                   (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// float                                   Duration                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UActiveItemTimer_C::OnItemSet(const struct FSlateBrush& Icon, float Duration)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ActiveItemTimer_C", "OnItemSet");

	Params::ActiveItemTimer_C_OnItemSet Parms{};

	Parms.Icon = std::move(Icon);
	Parms.Duration = Duration;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ActiveItemTimer.ActiveItemTimer_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UActiveItemTimer_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ActiveItemTimer_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ActiveItemTimer.ActiveItemTimer_C.Tick
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// struct FGeometry                        MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// float                                   InDeltaTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UActiveItemTimer_C::Tick(const struct FGeometry& MyGeometry, float InDeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ActiveItemTimer_C", "Tick");

	Params::ActiveItemTimer_C_Tick Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.InDeltaTime = InDeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ActiveItemTimer.ActiveItemTimer_C.TimerComplete
// (Public, BlueprintCallable, BlueprintEvent)

void UActiveItemTimer_C::TimerComplete()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ActiveItemTimer_C", "TimerComplete");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ActiveItemTimer.ActiveItemTimer_C.SetActiveTimer
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Duration                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UActiveItemTimer_C::SetActiveTimer(float Duration)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ActiveItemTimer_C", "SetActiveTimer");

	Params::ActiveItemTimer_C_SetActiveTimer Parms{};

	Parms.Duration = Duration;

	UObject::ProcessEvent(Func, &Parms);
}

}

