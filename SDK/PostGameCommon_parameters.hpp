#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PostGameCommon

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "SlateCore_structs.hpp"
#include "MangoClient_structs.hpp"
#include "Mariner_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function PostGameCommon.PostGameCommon_C.GetPlayerTeam
// 0x0190 (0x0190 - 0x0000)
struct PostGameCommon_C_GetPlayerTeam final
{
public:
	struct FMatchEnd                              MatchEnd;                                          // 0x0000(0x0068)(BlueprintVisible, BlueprintReadOnly, Parm)
	class UObject*                                __WorldContext;                                    // 0x0068(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         TeamIndex;                                         // 0x0070(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMarinerGameOutcome                           PlayerGameOutcome;                                 // 0x0074(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_75[0x3];                                       // 0x0075(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7C[0x4];                                       // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetPlayerID_PlayerID;                     // 0x0080(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FMatchEndPlayer                        CallFunc_Array_Get_Item;                           // 0x0090(0x00E8)()
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0178(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x017C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_181[0x3];                                      // 0x0181(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0184(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue;            // 0x0188(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PostGameCommon_C_GetPlayerTeam) == 0x000008, "Wrong alignment on PostGameCommon_C_GetPlayerTeam");
static_assert(sizeof(PostGameCommon_C_GetPlayerTeam) == 0x000190, "Wrong size on PostGameCommon_C_GetPlayerTeam");
static_assert(offsetof(PostGameCommon_C_GetPlayerTeam, MatchEnd) == 0x000000, "Member 'PostGameCommon_C_GetPlayerTeam::MatchEnd' has a wrong offset!");
static_assert(offsetof(PostGameCommon_C_GetPlayerTeam, __WorldContext) == 0x000068, "Member 'PostGameCommon_C_GetPlayerTeam::__WorldContext' has a wrong offset!");
static_assert(offsetof(PostGameCommon_C_GetPlayerTeam, TeamIndex) == 0x000070, "Member 'PostGameCommon_C_GetPlayerTeam::TeamIndex' has a wrong offset!");
static_assert(offsetof(PostGameCommon_C_GetPlayerTeam, PlayerGameOutcome) == 0x000074, "Member 'PostGameCommon_C_GetPlayerTeam::PlayerGameOutcome' has a wrong offset!");
static_assert(offsetof(PostGameCommon_C_GetPlayerTeam, Temp_int_Array_Index_Variable) == 0x000078, "Member 'PostGameCommon_C_GetPlayerTeam::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(PostGameCommon_C_GetPlayerTeam, CallFunc_GetPlayerID_PlayerID) == 0x000080, "Member 'PostGameCommon_C_GetPlayerTeam::CallFunc_GetPlayerID_PlayerID' has a wrong offset!");
static_assert(offsetof(PostGameCommon_C_GetPlayerTeam, CallFunc_Array_Get_Item) == 0x000090, "Member 'PostGameCommon_C_GetPlayerTeam::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(PostGameCommon_C_GetPlayerTeam, CallFunc_Array_Length_ReturnValue) == 0x000178, "Member 'PostGameCommon_C_GetPlayerTeam::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(PostGameCommon_C_GetPlayerTeam, Temp_int_Loop_Counter_Variable) == 0x00017C, "Member 'PostGameCommon_C_GetPlayerTeam::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(PostGameCommon_C_GetPlayerTeam, CallFunc_Less_IntInt_ReturnValue) == 0x000180, "Member 'PostGameCommon_C_GetPlayerTeam::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PostGameCommon_C_GetPlayerTeam, CallFunc_Add_IntInt_ReturnValue) == 0x000184, "Member 'PostGameCommon_C_GetPlayerTeam::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PostGameCommon_C_GetPlayerTeam, CallFunc_EqualEqual_StrStr_ReturnValue) == 0x000188, "Member 'PostGameCommon_C_GetPlayerTeam::CallFunc_EqualEqual_StrStr_ReturnValue' has a wrong offset!");

// Function PostGameCommon.PostGameCommon_C.GetEnemyTeam
// 0x0018 (0x0018 - 0x0000)
struct PostGameCommon_C_GetEnemyTeam final
{
public:
	int32                                         PlayerTeam;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         EnemyTeam;                                         // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PostGameCommon_C_GetEnemyTeam) == 0x000008, "Wrong alignment on PostGameCommon_C_GetEnemyTeam");
static_assert(sizeof(PostGameCommon_C_GetEnemyTeam) == 0x000018, "Wrong size on PostGameCommon_C_GetEnemyTeam");
static_assert(offsetof(PostGameCommon_C_GetEnemyTeam, PlayerTeam) == 0x000000, "Member 'PostGameCommon_C_GetEnemyTeam::PlayerTeam' has a wrong offset!");
static_assert(offsetof(PostGameCommon_C_GetEnemyTeam, __WorldContext) == 0x000008, "Member 'PostGameCommon_C_GetEnemyTeam::__WorldContext' has a wrong offset!");
static_assert(offsetof(PostGameCommon_C_GetEnemyTeam, EnemyTeam) == 0x000010, "Member 'PostGameCommon_C_GetEnemyTeam::EnemyTeam' has a wrong offset!");
static_assert(offsetof(PostGameCommon_C_GetEnemyTeam, K2Node_SwitchInteger_CmpSuccess) == 0x000014, "Member 'PostGameCommon_C_GetEnemyTeam::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");

// Function PostGameCommon.PostGameCommon_C.GetCharacterProgression
// 0x03E8 (0x03E8 - 0x0000)
struct PostGameCommon_C_GetCharacterProgression final
{
public:
	class FString                                 CharacterId;                                       // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FMangoCharacterProgression             CharacterProgressionData;                          // 0x0018(0x0058)(Parm, OutParm)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_74[0x4];                                       // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMangoPlayerManager*                    CallFunc_Get_ReturnValue;                          // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FMangoProfile                          CallFunc_GetMangoProfile_ReturnValue;              // 0x0080(0x02E0)(ConstParm)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0360(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_364[0x4];                                      // 0x0364(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMangoCharacterProgression             CallFunc_Array_Get_Item;                           // 0x0368(0x0058)()
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x03C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C4[0x4];                                      // 0x03C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x03C8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue;            // 0x03D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D9[0x3];                                      // 0x03D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x03DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x03E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PostGameCommon_C_GetCharacterProgression) == 0x000008, "Wrong alignment on PostGameCommon_C_GetCharacterProgression");
static_assert(sizeof(PostGameCommon_C_GetCharacterProgression) == 0x0003E8, "Wrong size on PostGameCommon_C_GetCharacterProgression");
static_assert(offsetof(PostGameCommon_C_GetCharacterProgression, CharacterId) == 0x000000, "Member 'PostGameCommon_C_GetCharacterProgression::CharacterId' has a wrong offset!");
static_assert(offsetof(PostGameCommon_C_GetCharacterProgression, __WorldContext) == 0x000010, "Member 'PostGameCommon_C_GetCharacterProgression::__WorldContext' has a wrong offset!");
static_assert(offsetof(PostGameCommon_C_GetCharacterProgression, CharacterProgressionData) == 0x000018, "Member 'PostGameCommon_C_GetCharacterProgression::CharacterProgressionData' has a wrong offset!");
static_assert(offsetof(PostGameCommon_C_GetCharacterProgression, Temp_int_Array_Index_Variable) == 0x000070, "Member 'PostGameCommon_C_GetCharacterProgression::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(PostGameCommon_C_GetCharacterProgression, CallFunc_Get_ReturnValue) == 0x000078, "Member 'PostGameCommon_C_GetCharacterProgression::CallFunc_Get_ReturnValue' has a wrong offset!");
static_assert(offsetof(PostGameCommon_C_GetCharacterProgression, CallFunc_GetMangoProfile_ReturnValue) == 0x000080, "Member 'PostGameCommon_C_GetCharacterProgression::CallFunc_GetMangoProfile_ReturnValue' has a wrong offset!");
static_assert(offsetof(PostGameCommon_C_GetCharacterProgression, Temp_int_Loop_Counter_Variable) == 0x000360, "Member 'PostGameCommon_C_GetCharacterProgression::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(PostGameCommon_C_GetCharacterProgression, CallFunc_Array_Get_Item) == 0x000368, "Member 'PostGameCommon_C_GetCharacterProgression::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(PostGameCommon_C_GetCharacterProgression, CallFunc_Add_IntInt_ReturnValue) == 0x0003C0, "Member 'PostGameCommon_C_GetCharacterProgression::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PostGameCommon_C_GetCharacterProgression, CallFunc_Conv_NameToString_ReturnValue) == 0x0003C8, "Member 'PostGameCommon_C_GetCharacterProgression::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(PostGameCommon_C_GetCharacterProgression, CallFunc_EqualEqual_StrStr_ReturnValue) == 0x0003D8, "Member 'PostGameCommon_C_GetCharacterProgression::CallFunc_EqualEqual_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(PostGameCommon_C_GetCharacterProgression, CallFunc_Array_Length_ReturnValue) == 0x0003DC, "Member 'PostGameCommon_C_GetCharacterProgression::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(PostGameCommon_C_GetCharacterProgression, CallFunc_Less_IntInt_ReturnValue) == 0x0003E0, "Member 'PostGameCommon_C_GetCharacterProgression::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function PostGameCommon.PostGameCommon_C.GetClientTeamColor
// 0x0058 (0x0058 - 0x0000)
struct PostGameCommon_C_GetClientTeamColor final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            Color;                                             // 0x0008(0x0028)(Parm, OutParm)
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0030(0x0028)()
};
static_assert(alignof(PostGameCommon_C_GetClientTeamColor) == 0x000008, "Wrong alignment on PostGameCommon_C_GetClientTeamColor");
static_assert(sizeof(PostGameCommon_C_GetClientTeamColor) == 0x000058, "Wrong size on PostGameCommon_C_GetClientTeamColor");
static_assert(offsetof(PostGameCommon_C_GetClientTeamColor, __WorldContext) == 0x000000, "Member 'PostGameCommon_C_GetClientTeamColor::__WorldContext' has a wrong offset!");
static_assert(offsetof(PostGameCommon_C_GetClientTeamColor, Color) == 0x000008, "Member 'PostGameCommon_C_GetClientTeamColor::Color' has a wrong offset!");
static_assert(offsetof(PostGameCommon_C_GetClientTeamColor, K2Node_MakeStruct_SlateColor) == 0x000030, "Member 'PostGameCommon_C_GetClientTeamColor::K2Node_MakeStruct_SlateColor' has a wrong offset!");

// Function PostGameCommon.PostGameCommon_C.GetEnemyTeamColor
// 0x0058 (0x0058 - 0x0000)
struct PostGameCommon_C_GetEnemyTeamColor final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            Color;                                             // 0x0008(0x0028)(Parm, OutParm)
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0030(0x0028)()
};
static_assert(alignof(PostGameCommon_C_GetEnemyTeamColor) == 0x000008, "Wrong alignment on PostGameCommon_C_GetEnemyTeamColor");
static_assert(sizeof(PostGameCommon_C_GetEnemyTeamColor) == 0x000058, "Wrong size on PostGameCommon_C_GetEnemyTeamColor");
static_assert(offsetof(PostGameCommon_C_GetEnemyTeamColor, __WorldContext) == 0x000000, "Member 'PostGameCommon_C_GetEnemyTeamColor::__WorldContext' has a wrong offset!");
static_assert(offsetof(PostGameCommon_C_GetEnemyTeamColor, Color) == 0x000008, "Member 'PostGameCommon_C_GetEnemyTeamColor::Color' has a wrong offset!");
static_assert(offsetof(PostGameCommon_C_GetEnemyTeamColor, K2Node_MakeStruct_SlateColor) == 0x000030, "Member 'PostGameCommon_C_GetEnemyTeamColor::K2Node_MakeStruct_SlateColor' has a wrong offset!");

// Function PostGameCommon.PostGameCommon_C.GetPostGameModeStats
// 0x01A8 (0x01A8 - 0x0000)
struct PostGameCommon_C_GetPostGameModeStats final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FMatchEnd                              MatchEnd;                                          // 0x0008(0x0068)(BlueprintVisible, BlueprintReadOnly, Parm)
	class UObject*                                __WorldContext;                                    // 0x0070(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMap<class FName, class FText>                Stats;                                             // 0x0078(0x0050)(Parm, OutParm, ZeroConstructor)
	class FString                                 CallFunc_Conv_GuidToString_ReturnValue;            // 0x00C8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class UMangoCMSManager*                       CallFunc_Get_ReturnValue;                          // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMarinerModeGlobals*                    CallFunc_GetModeGlobals_ReturnValue;               // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMap<struct FGuid, struct FMangoMode>         CallFunc_GetModes_ReturnValue;                     // 0x00E8(0x0050)(ConstParm, ZeroConstructor)
	struct FMangoMode                             CallFunc_Map_Find_Value;                           // 0x0138(0x0058)()
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_191[0x7];                                      // 0x0191(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMarinerModeDataAsset*                  CallFunc_TryAndGetModeDataFromLoadName_ReturnValue; // 0x0198(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x01A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PostGameCommon_C_GetPostGameModeStats) == 0x000008, "Wrong alignment on PostGameCommon_C_GetPostGameModeStats");
static_assert(sizeof(PostGameCommon_C_GetPostGameModeStats) == 0x0001A8, "Wrong size on PostGameCommon_C_GetPostGameModeStats");
static_assert(offsetof(PostGameCommon_C_GetPostGameModeStats, WorldContextObject) == 0x000000, "Member 'PostGameCommon_C_GetPostGameModeStats::WorldContextObject' has a wrong offset!");
static_assert(offsetof(PostGameCommon_C_GetPostGameModeStats, MatchEnd) == 0x000008, "Member 'PostGameCommon_C_GetPostGameModeStats::MatchEnd' has a wrong offset!");
static_assert(offsetof(PostGameCommon_C_GetPostGameModeStats, __WorldContext) == 0x000070, "Member 'PostGameCommon_C_GetPostGameModeStats::__WorldContext' has a wrong offset!");
static_assert(offsetof(PostGameCommon_C_GetPostGameModeStats, Stats) == 0x000078, "Member 'PostGameCommon_C_GetPostGameModeStats::Stats' has a wrong offset!");
static_assert(offsetof(PostGameCommon_C_GetPostGameModeStats, CallFunc_Conv_GuidToString_ReturnValue) == 0x0000C8, "Member 'PostGameCommon_C_GetPostGameModeStats::CallFunc_Conv_GuidToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(PostGameCommon_C_GetPostGameModeStats, CallFunc_Get_ReturnValue) == 0x0000D8, "Member 'PostGameCommon_C_GetPostGameModeStats::CallFunc_Get_ReturnValue' has a wrong offset!");
static_assert(offsetof(PostGameCommon_C_GetPostGameModeStats, CallFunc_GetModeGlobals_ReturnValue) == 0x0000E0, "Member 'PostGameCommon_C_GetPostGameModeStats::CallFunc_GetModeGlobals_ReturnValue' has a wrong offset!");
static_assert(offsetof(PostGameCommon_C_GetPostGameModeStats, CallFunc_GetModes_ReturnValue) == 0x0000E8, "Member 'PostGameCommon_C_GetPostGameModeStats::CallFunc_GetModes_ReturnValue' has a wrong offset!");
static_assert(offsetof(PostGameCommon_C_GetPostGameModeStats, CallFunc_Map_Find_Value) == 0x000138, "Member 'PostGameCommon_C_GetPostGameModeStats::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(PostGameCommon_C_GetPostGameModeStats, CallFunc_Map_Find_ReturnValue) == 0x000190, "Member 'PostGameCommon_C_GetPostGameModeStats::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(PostGameCommon_C_GetPostGameModeStats, CallFunc_TryAndGetModeDataFromLoadName_ReturnValue) == 0x000198, "Member 'PostGameCommon_C_GetPostGameModeStats::CallFunc_TryAndGetModeDataFromLoadName_ReturnValue' has a wrong offset!");
static_assert(offsetof(PostGameCommon_C_GetPostGameModeStats, CallFunc_IsValid_ReturnValue) == 0x0001A0, "Member 'PostGameCommon_C_GetPostGameModeStats::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function PostGameCommon.PostGameCommon_C.GetPlayerID
// 0x0040 (0x0040 - 0x0000)
struct PostGameCommon_C_GetPlayerID final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 PlayerId;                                          // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
	class UMangoPlayerManager*                    CallFunc_Get_ReturnValue;                          // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FMangoId                               CallFunc_GetMangoId_ReturnValue;                   // 0x0020(0x0010)(ConstParm, HasGetValueTypeHash)
	class FString                                 CallFunc_MangoIdToString_ReturnValue;              // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(PostGameCommon_C_GetPlayerID) == 0x000008, "Wrong alignment on PostGameCommon_C_GetPlayerID");
static_assert(sizeof(PostGameCommon_C_GetPlayerID) == 0x000040, "Wrong size on PostGameCommon_C_GetPlayerID");
static_assert(offsetof(PostGameCommon_C_GetPlayerID, __WorldContext) == 0x000000, "Member 'PostGameCommon_C_GetPlayerID::__WorldContext' has a wrong offset!");
static_assert(offsetof(PostGameCommon_C_GetPlayerID, PlayerId) == 0x000008, "Member 'PostGameCommon_C_GetPlayerID::PlayerId' has a wrong offset!");
static_assert(offsetof(PostGameCommon_C_GetPlayerID, CallFunc_Get_ReturnValue) == 0x000018, "Member 'PostGameCommon_C_GetPlayerID::CallFunc_Get_ReturnValue' has a wrong offset!");
static_assert(offsetof(PostGameCommon_C_GetPlayerID, CallFunc_GetMangoId_ReturnValue) == 0x000020, "Member 'PostGameCommon_C_GetPlayerID::CallFunc_GetMangoId_ReturnValue' has a wrong offset!");
static_assert(offsetof(PostGameCommon_C_GetPlayerID, CallFunc_MangoIdToString_ReturnValue) == 0x000030, "Member 'PostGameCommon_C_GetPlayerID::CallFunc_MangoIdToString_ReturnValue' has a wrong offset!");

// Function PostGameCommon.PostGameCommon_C.GetPlayerFromMatchEndData
// 0x0308 (0x0308 - 0x0000)
struct PostGameCommon_C_GetPlayerFromMatchEndData final
{
public:
	struct FMatchEnd                              MatchEnd;                                          // 0x0000(0x0068)(BlueprintVisible, BlueprintReadOnly, Parm)
	class UObject*                                __WorldContext;                                    // 0x0068(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FMatchEndPlayer                        Player;                                            // 0x0070(0x00E8)(Parm, OutParm)
	bool                                          IsValid;                                           // 0x0158(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_159[0x7];                                      // 0x0159(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetPlayerID_PlayerID;                     // 0x0160(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0170(0x0018)()
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0188(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_18C[0x4];                                      // 0x018C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0190(0x0040)(HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x01D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D4[0x4];                                      // 0x01D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x01D8(0x0010)(ZeroConstructor, ReferenceParm)
	struct FMatchEndPlayer                        CallFunc_Array_Get_Item;                           // 0x01E8(0x00E8)()
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x02D0(0x0018)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x02E8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue;            // 0x02F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2F9[0x3];                                      // 0x02F9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x02FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0300(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_301[0x3];                                      // 0x0301(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0304(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PostGameCommon_C_GetPlayerFromMatchEndData) == 0x000008, "Wrong alignment on PostGameCommon_C_GetPlayerFromMatchEndData");
static_assert(sizeof(PostGameCommon_C_GetPlayerFromMatchEndData) == 0x000308, "Wrong size on PostGameCommon_C_GetPlayerFromMatchEndData");
static_assert(offsetof(PostGameCommon_C_GetPlayerFromMatchEndData, MatchEnd) == 0x000000, "Member 'PostGameCommon_C_GetPlayerFromMatchEndData::MatchEnd' has a wrong offset!");
static_assert(offsetof(PostGameCommon_C_GetPlayerFromMatchEndData, __WorldContext) == 0x000068, "Member 'PostGameCommon_C_GetPlayerFromMatchEndData::__WorldContext' has a wrong offset!");
static_assert(offsetof(PostGameCommon_C_GetPlayerFromMatchEndData, Player) == 0x000070, "Member 'PostGameCommon_C_GetPlayerFromMatchEndData::Player' has a wrong offset!");
static_assert(offsetof(PostGameCommon_C_GetPlayerFromMatchEndData, IsValid) == 0x000158, "Member 'PostGameCommon_C_GetPlayerFromMatchEndData::IsValid' has a wrong offset!");
static_assert(offsetof(PostGameCommon_C_GetPlayerFromMatchEndData, CallFunc_GetPlayerID_PlayerID) == 0x000160, "Member 'PostGameCommon_C_GetPlayerFromMatchEndData::CallFunc_GetPlayerID_PlayerID' has a wrong offset!");
static_assert(offsetof(PostGameCommon_C_GetPlayerFromMatchEndData, CallFunc_Conv_StringToText_ReturnValue) == 0x000170, "Member 'PostGameCommon_C_GetPlayerFromMatchEndData::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(PostGameCommon_C_GetPlayerFromMatchEndData, CallFunc_Array_Length_ReturnValue) == 0x000188, "Member 'PostGameCommon_C_GetPlayerFromMatchEndData::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(PostGameCommon_C_GetPlayerFromMatchEndData, K2Node_MakeStruct_FormatArgumentData) == 0x000190, "Member 'PostGameCommon_C_GetPlayerFromMatchEndData::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(PostGameCommon_C_GetPlayerFromMatchEndData, Temp_int_Array_Index_Variable) == 0x0001D0, "Member 'PostGameCommon_C_GetPlayerFromMatchEndData::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(PostGameCommon_C_GetPlayerFromMatchEndData, K2Node_MakeArray_Array) == 0x0001D8, "Member 'PostGameCommon_C_GetPlayerFromMatchEndData::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(PostGameCommon_C_GetPlayerFromMatchEndData, CallFunc_Array_Get_Item) == 0x0001E8, "Member 'PostGameCommon_C_GetPlayerFromMatchEndData::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(PostGameCommon_C_GetPlayerFromMatchEndData, CallFunc_Format_ReturnValue) == 0x0002D0, "Member 'PostGameCommon_C_GetPlayerFromMatchEndData::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(PostGameCommon_C_GetPlayerFromMatchEndData, CallFunc_Conv_TextToString_ReturnValue) == 0x0002E8, "Member 'PostGameCommon_C_GetPlayerFromMatchEndData::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(PostGameCommon_C_GetPlayerFromMatchEndData, CallFunc_EqualEqual_StrStr_ReturnValue) == 0x0002F8, "Member 'PostGameCommon_C_GetPlayerFromMatchEndData::CallFunc_EqualEqual_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(PostGameCommon_C_GetPlayerFromMatchEndData, Temp_int_Loop_Counter_Variable) == 0x0002FC, "Member 'PostGameCommon_C_GetPlayerFromMatchEndData::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(PostGameCommon_C_GetPlayerFromMatchEndData, CallFunc_Less_IntInt_ReturnValue) == 0x000300, "Member 'PostGameCommon_C_GetPlayerFromMatchEndData::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PostGameCommon_C_GetPlayerFromMatchEndData, CallFunc_Add_IntInt_ReturnValue) == 0x000304, "Member 'PostGameCommon_C_GetPlayerFromMatchEndData::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function PostGameCommon.PostGameCommon_C.GetClientPlayerColor
// 0x0058 (0x0058 - 0x0000)
struct PostGameCommon_C_GetClientPlayerColor final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            Color;                                             // 0x0008(0x0028)(Parm, OutParm)
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0030(0x0028)()
};
static_assert(alignof(PostGameCommon_C_GetClientPlayerColor) == 0x000008, "Wrong alignment on PostGameCommon_C_GetClientPlayerColor");
static_assert(sizeof(PostGameCommon_C_GetClientPlayerColor) == 0x000058, "Wrong size on PostGameCommon_C_GetClientPlayerColor");
static_assert(offsetof(PostGameCommon_C_GetClientPlayerColor, __WorldContext) == 0x000000, "Member 'PostGameCommon_C_GetClientPlayerColor::__WorldContext' has a wrong offset!");
static_assert(offsetof(PostGameCommon_C_GetClientPlayerColor, Color) == 0x000008, "Member 'PostGameCommon_C_GetClientPlayerColor::Color' has a wrong offset!");
static_assert(offsetof(PostGameCommon_C_GetClientPlayerColor, K2Node_MakeStruct_SlateColor) == 0x000030, "Member 'PostGameCommon_C_GetClientPlayerColor::K2Node_MakeStruct_SlateColor' has a wrong offset!");

// Function PostGameCommon.PostGameCommon_C.GetPlayerColor
// 0x00D8 (0x00D8 - 0x0000)
struct PostGameCommon_C_GetPlayerColor final
{
public:
	bool                                          IsClientPlayer;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsClientTeam;                                      // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          PreferNeutralColor;                                // 0x0002(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3[0x5];                                        // 0x0003(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            Color;                                             // 0x0010(0x0028)(Parm, OutParm)
	struct FSlateColor                            CallFunc_GetNeutralColor_Color;                    // 0x0038(0x0028)()
	struct FSlateColor                            CallFunc_GetEnemyTeamColor_Color;                  // 0x0060(0x0028)()
	struct FSlateColor                            CallFunc_GetClientTeamColor_Color;                 // 0x0088(0x0028)()
	struct FSlateColor                            CallFunc_GetClientPlayerColor_Color;               // 0x00B0(0x0028)()
};
static_assert(alignof(PostGameCommon_C_GetPlayerColor) == 0x000008, "Wrong alignment on PostGameCommon_C_GetPlayerColor");
static_assert(sizeof(PostGameCommon_C_GetPlayerColor) == 0x0000D8, "Wrong size on PostGameCommon_C_GetPlayerColor");
static_assert(offsetof(PostGameCommon_C_GetPlayerColor, IsClientPlayer) == 0x000000, "Member 'PostGameCommon_C_GetPlayerColor::IsClientPlayer' has a wrong offset!");
static_assert(offsetof(PostGameCommon_C_GetPlayerColor, IsClientTeam) == 0x000001, "Member 'PostGameCommon_C_GetPlayerColor::IsClientTeam' has a wrong offset!");
static_assert(offsetof(PostGameCommon_C_GetPlayerColor, PreferNeutralColor) == 0x000002, "Member 'PostGameCommon_C_GetPlayerColor::PreferNeutralColor' has a wrong offset!");
static_assert(offsetof(PostGameCommon_C_GetPlayerColor, __WorldContext) == 0x000008, "Member 'PostGameCommon_C_GetPlayerColor::__WorldContext' has a wrong offset!");
static_assert(offsetof(PostGameCommon_C_GetPlayerColor, Color) == 0x000010, "Member 'PostGameCommon_C_GetPlayerColor::Color' has a wrong offset!");
static_assert(offsetof(PostGameCommon_C_GetPlayerColor, CallFunc_GetNeutralColor_Color) == 0x000038, "Member 'PostGameCommon_C_GetPlayerColor::CallFunc_GetNeutralColor_Color' has a wrong offset!");
static_assert(offsetof(PostGameCommon_C_GetPlayerColor, CallFunc_GetEnemyTeamColor_Color) == 0x000060, "Member 'PostGameCommon_C_GetPlayerColor::CallFunc_GetEnemyTeamColor_Color' has a wrong offset!");
static_assert(offsetof(PostGameCommon_C_GetPlayerColor, CallFunc_GetClientTeamColor_Color) == 0x000088, "Member 'PostGameCommon_C_GetPlayerColor::CallFunc_GetClientTeamColor_Color' has a wrong offset!");
static_assert(offsetof(PostGameCommon_C_GetPlayerColor, CallFunc_GetClientPlayerColor_Color) == 0x0000B0, "Member 'PostGameCommon_C_GetPlayerColor::CallFunc_GetClientPlayerColor_Color' has a wrong offset!");

// Function PostGameCommon.PostGameCommon_C.GetNeutralColor
// 0x0058 (0x0058 - 0x0000)
struct PostGameCommon_C_GetNeutralColor final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            Color;                                             // 0x0008(0x0028)(Parm, OutParm)
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0030(0x0028)()
};
static_assert(alignof(PostGameCommon_C_GetNeutralColor) == 0x000008, "Wrong alignment on PostGameCommon_C_GetNeutralColor");
static_assert(sizeof(PostGameCommon_C_GetNeutralColor) == 0x000058, "Wrong size on PostGameCommon_C_GetNeutralColor");
static_assert(offsetof(PostGameCommon_C_GetNeutralColor, __WorldContext) == 0x000000, "Member 'PostGameCommon_C_GetNeutralColor::__WorldContext' has a wrong offset!");
static_assert(offsetof(PostGameCommon_C_GetNeutralColor, Color) == 0x000008, "Member 'PostGameCommon_C_GetNeutralColor::Color' has a wrong offset!");
static_assert(offsetof(PostGameCommon_C_GetNeutralColor, K2Node_MakeStruct_SlateColor) == 0x000030, "Member 'PostGameCommon_C_GetNeutralColor::K2Node_MakeStruct_SlateColor' has a wrong offset!");

// Function PostGameCommon.PostGameCommon_C.GetPlayerStartRank
// 0x02B8 (0x02B8 - 0x0000)
struct PostGameCommon_C_GetPlayerStartRank final
{
public:
	class FString                                 PlayerMangoID;                                     // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	struct FMangoMatchResultResponse              MatchResponse;                                     // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm)
	class UObject*                                __WorldContext;                                    // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Rank;                                              // 0x0028(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMangoPlayerReport                     CallFunc_Array_Get_Item;                           // 0x0038(0x0268)()
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x02A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x02A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x02A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2A9[0x3];                                      // 0x02A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x02AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue;            // 0x02B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PostGameCommon_C_GetPlayerStartRank) == 0x000008, "Wrong alignment on PostGameCommon_C_GetPlayerStartRank");
static_assert(sizeof(PostGameCommon_C_GetPlayerStartRank) == 0x0002B8, "Wrong size on PostGameCommon_C_GetPlayerStartRank");
static_assert(offsetof(PostGameCommon_C_GetPlayerStartRank, PlayerMangoID) == 0x000000, "Member 'PostGameCommon_C_GetPlayerStartRank::PlayerMangoID' has a wrong offset!");
static_assert(offsetof(PostGameCommon_C_GetPlayerStartRank, MatchResponse) == 0x000010, "Member 'PostGameCommon_C_GetPlayerStartRank::MatchResponse' has a wrong offset!");
static_assert(offsetof(PostGameCommon_C_GetPlayerStartRank, __WorldContext) == 0x000020, "Member 'PostGameCommon_C_GetPlayerStartRank::__WorldContext' has a wrong offset!");
static_assert(offsetof(PostGameCommon_C_GetPlayerStartRank, Rank) == 0x000028, "Member 'PostGameCommon_C_GetPlayerStartRank::Rank' has a wrong offset!");
static_assert(offsetof(PostGameCommon_C_GetPlayerStartRank, Temp_int_Array_Index_Variable) == 0x00002C, "Member 'PostGameCommon_C_GetPlayerStartRank::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(PostGameCommon_C_GetPlayerStartRank, CallFunc_Array_Length_ReturnValue) == 0x000030, "Member 'PostGameCommon_C_GetPlayerStartRank::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(PostGameCommon_C_GetPlayerStartRank, CallFunc_Array_Get_Item) == 0x000038, "Member 'PostGameCommon_C_GetPlayerStartRank::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(PostGameCommon_C_GetPlayerStartRank, Temp_int_Loop_Counter_Variable) == 0x0002A0, "Member 'PostGameCommon_C_GetPlayerStartRank::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(PostGameCommon_C_GetPlayerStartRank, CallFunc_FTrunc_ReturnValue) == 0x0002A4, "Member 'PostGameCommon_C_GetPlayerStartRank::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(PostGameCommon_C_GetPlayerStartRank, CallFunc_Less_IntInt_ReturnValue) == 0x0002A8, "Member 'PostGameCommon_C_GetPlayerStartRank::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PostGameCommon_C_GetPlayerStartRank, CallFunc_Add_IntInt_ReturnValue) == 0x0002AC, "Member 'PostGameCommon_C_GetPlayerStartRank::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PostGameCommon_C_GetPlayerStartRank, CallFunc_EqualEqual_StrStr_ReturnValue) == 0x0002B0, "Member 'PostGameCommon_C_GetPlayerStartRank::CallFunc_EqualEqual_StrStr_ReturnValue' has a wrong offset!");

}

