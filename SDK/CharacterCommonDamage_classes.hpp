#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: CharacterCommonDamage

#include "Basic.hpp"

#include "Mariner_structs.hpp"
#include "Mariner_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass CharacterCommonDamage.CharacterCommonDamage_C
// 0x0018 (0x0430 - 0x0418)
class UCharacterCommonDamage_C final : public UMarinerAnimatedWidget
{
public:
	class UArrowWidget_C*                         Arrow;                                             // 0x0418(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBlastBarElement_C*                     BlastBarElement;                                   // 0x0420(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	EMarinerHostility                             Team;                                              // 0x0428(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2587[0x3];                                     // 0x0429(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         LastDamage;                                        // 0x042C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void UpdateDamage(float NewDamage, class AMarinerCharacter* Character);
	void PopulateTeam(class AMarinerCharacter* Character);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"CharacterCommonDamage_C">();
	}
	static class UCharacterCommonDamage_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCharacterCommonDamage_C>();
	}
};
static_assert(alignof(UCharacterCommonDamage_C) == 0x000008, "Wrong alignment on UCharacterCommonDamage_C");
static_assert(sizeof(UCharacterCommonDamage_C) == 0x000430, "Wrong size on UCharacterCommonDamage_C");
static_assert(offsetof(UCharacterCommonDamage_C, Arrow) == 0x000418, "Member 'UCharacterCommonDamage_C::Arrow' has a wrong offset!");
static_assert(offsetof(UCharacterCommonDamage_C, BlastBarElement) == 0x000420, "Member 'UCharacterCommonDamage_C::BlastBarElement' has a wrong offset!");
static_assert(offsetof(UCharacterCommonDamage_C, Team) == 0x000428, "Member 'UCharacterCommonDamage_C::Team' has a wrong offset!");
static_assert(offsetof(UCharacterCommonDamage_C, LastDamage) == 0x00042C, "Member 'UCharacterCommonDamage_C::LastDamage' has a wrong offset!");

}

