#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PregamePlayerWidget

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function PregamePlayerWidget.PregamePlayerWidget_C.ExecuteUbergraph_PregamePlayerWidget
// 0x0110 (0x0110 - 0x0000)
struct PregamePlayerWidget_C_ExecuteUbergraph_PregamePlayerWidget final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2485[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AMarinerPlayerState*                    K2Node_Event_PlayerState;                          // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMarinerPlayableCharacter*              K2Node_Event_CharacterData;                        // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMarinerSkinCollectionDataAsset*        K2Node_Event_ActiveSkin;                           // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_Level;                                // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2486[0x4];                                     // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMarinerArtifactDataAsset*              K2Node_Event_Artifact;                             // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetPlayerName_ReturnValue;                // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0040(0x0018)()
	class UMarinerUIGlobals*                      CallFunc_GetUIGlobals_ReturnValue;                 // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMarinerGameState*                      K2Node_DynamicCast_AsMariner_Game_State;           // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2487[0x3];                                     // 0x0071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGuid                                  CallFunc_GetPlaylistName_ReturnValue;              // 0x0074(0x0010)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2488[0x4];                                     // 0x0084(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AMarinerPlayerState*                    K2Node_Event_PlayerState_1;                        // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMarinerSkinCollectionDataAsset*        K2Node_Event_ActiveSkin_1;                         // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_Level_1;                              // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2489[0x4];                                     // 0x009C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMarinerArtifactDataAsset*              K2Node_Event_Artifact_1;                           // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_GetCurrentPlatform_ReturnValue;           // 0x00A8(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetPlayerName_ReturnValue_1;              // 0x00B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_1;          // 0x00C0(0x0018)()
	class FText                                   CallFunc_GetSelectedCharacterNameForPlayerState_CharacterName; // 0x00D8(0x0018)()
	bool                                          CallFunc_GetHasRequestedPawnClass_ReturnValue;     // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsLocalPlayerControlled_bIsLocalPlayerControlled; // 0x00F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_248A[0x6];                                     // 0x00F2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue_1;               // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMarinerGameState*                      K2Node_DynamicCast_AsMariner_Game_State_1;         // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x0109(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PregamePlayerWidget_C_ExecuteUbergraph_PregamePlayerWidget) == 0x000008, "Wrong alignment on PregamePlayerWidget_C_ExecuteUbergraph_PregamePlayerWidget");
static_assert(sizeof(PregamePlayerWidget_C_ExecuteUbergraph_PregamePlayerWidget) == 0x000110, "Wrong size on PregamePlayerWidget_C_ExecuteUbergraph_PregamePlayerWidget");
static_assert(offsetof(PregamePlayerWidget_C_ExecuteUbergraph_PregamePlayerWidget, EntryPoint) == 0x000000, "Member 'PregamePlayerWidget_C_ExecuteUbergraph_PregamePlayerWidget::EntryPoint' has a wrong offset!");
static_assert(offsetof(PregamePlayerWidget_C_ExecuteUbergraph_PregamePlayerWidget, K2Node_Event_PlayerState) == 0x000008, "Member 'PregamePlayerWidget_C_ExecuteUbergraph_PregamePlayerWidget::K2Node_Event_PlayerState' has a wrong offset!");
static_assert(offsetof(PregamePlayerWidget_C_ExecuteUbergraph_PregamePlayerWidget, K2Node_Event_CharacterData) == 0x000010, "Member 'PregamePlayerWidget_C_ExecuteUbergraph_PregamePlayerWidget::K2Node_Event_CharacterData' has a wrong offset!");
static_assert(offsetof(PregamePlayerWidget_C_ExecuteUbergraph_PregamePlayerWidget, K2Node_Event_ActiveSkin) == 0x000018, "Member 'PregamePlayerWidget_C_ExecuteUbergraph_PregamePlayerWidget::K2Node_Event_ActiveSkin' has a wrong offset!");
static_assert(offsetof(PregamePlayerWidget_C_ExecuteUbergraph_PregamePlayerWidget, K2Node_Event_Level) == 0x000020, "Member 'PregamePlayerWidget_C_ExecuteUbergraph_PregamePlayerWidget::K2Node_Event_Level' has a wrong offset!");
static_assert(offsetof(PregamePlayerWidget_C_ExecuteUbergraph_PregamePlayerWidget, K2Node_Event_Artifact) == 0x000028, "Member 'PregamePlayerWidget_C_ExecuteUbergraph_PregamePlayerWidget::K2Node_Event_Artifact' has a wrong offset!");
static_assert(offsetof(PregamePlayerWidget_C_ExecuteUbergraph_PregamePlayerWidget, CallFunc_GetPlayerName_ReturnValue) == 0x000030, "Member 'PregamePlayerWidget_C_ExecuteUbergraph_PregamePlayerWidget::CallFunc_GetPlayerName_ReturnValue' has a wrong offset!");
static_assert(offsetof(PregamePlayerWidget_C_ExecuteUbergraph_PregamePlayerWidget, CallFunc_Conv_StringToText_ReturnValue) == 0x000040, "Member 'PregamePlayerWidget_C_ExecuteUbergraph_PregamePlayerWidget::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(PregamePlayerWidget_C_ExecuteUbergraph_PregamePlayerWidget, CallFunc_GetUIGlobals_ReturnValue) == 0x000058, "Member 'PregamePlayerWidget_C_ExecuteUbergraph_PregamePlayerWidget::CallFunc_GetUIGlobals_ReturnValue' has a wrong offset!");
static_assert(offsetof(PregamePlayerWidget_C_ExecuteUbergraph_PregamePlayerWidget, CallFunc_GetGameState_ReturnValue) == 0x000060, "Member 'PregamePlayerWidget_C_ExecuteUbergraph_PregamePlayerWidget::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(PregamePlayerWidget_C_ExecuteUbergraph_PregamePlayerWidget, K2Node_DynamicCast_AsMariner_Game_State) == 0x000068, "Member 'PregamePlayerWidget_C_ExecuteUbergraph_PregamePlayerWidget::K2Node_DynamicCast_AsMariner_Game_State' has a wrong offset!");
static_assert(offsetof(PregamePlayerWidget_C_ExecuteUbergraph_PregamePlayerWidget, K2Node_DynamicCast_bSuccess) == 0x000070, "Member 'PregamePlayerWidget_C_ExecuteUbergraph_PregamePlayerWidget::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(PregamePlayerWidget_C_ExecuteUbergraph_PregamePlayerWidget, CallFunc_GetPlaylistName_ReturnValue) == 0x000074, "Member 'PregamePlayerWidget_C_ExecuteUbergraph_PregamePlayerWidget::CallFunc_GetPlaylistName_ReturnValue' has a wrong offset!");
static_assert(offsetof(PregamePlayerWidget_C_ExecuteUbergraph_PregamePlayerWidget, K2Node_Event_PlayerState_1) == 0x000088, "Member 'PregamePlayerWidget_C_ExecuteUbergraph_PregamePlayerWidget::K2Node_Event_PlayerState_1' has a wrong offset!");
static_assert(offsetof(PregamePlayerWidget_C_ExecuteUbergraph_PregamePlayerWidget, K2Node_Event_ActiveSkin_1) == 0x000090, "Member 'PregamePlayerWidget_C_ExecuteUbergraph_PregamePlayerWidget::K2Node_Event_ActiveSkin_1' has a wrong offset!");
static_assert(offsetof(PregamePlayerWidget_C_ExecuteUbergraph_PregamePlayerWidget, K2Node_Event_Level_1) == 0x000098, "Member 'PregamePlayerWidget_C_ExecuteUbergraph_PregamePlayerWidget::K2Node_Event_Level_1' has a wrong offset!");
static_assert(offsetof(PregamePlayerWidget_C_ExecuteUbergraph_PregamePlayerWidget, K2Node_Event_Artifact_1) == 0x0000A0, "Member 'PregamePlayerWidget_C_ExecuteUbergraph_PregamePlayerWidget::K2Node_Event_Artifact_1' has a wrong offset!");
static_assert(offsetof(PregamePlayerWidget_C_ExecuteUbergraph_PregamePlayerWidget, CallFunc_GetCurrentPlatform_ReturnValue) == 0x0000A8, "Member 'PregamePlayerWidget_C_ExecuteUbergraph_PregamePlayerWidget::CallFunc_GetCurrentPlatform_ReturnValue' has a wrong offset!");
static_assert(offsetof(PregamePlayerWidget_C_ExecuteUbergraph_PregamePlayerWidget, CallFunc_GetPlayerName_ReturnValue_1) == 0x0000B0, "Member 'PregamePlayerWidget_C_ExecuteUbergraph_PregamePlayerWidget::CallFunc_GetPlayerName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PregamePlayerWidget_C_ExecuteUbergraph_PregamePlayerWidget, CallFunc_Conv_StringToText_ReturnValue_1) == 0x0000C0, "Member 'PregamePlayerWidget_C_ExecuteUbergraph_PregamePlayerWidget::CallFunc_Conv_StringToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PregamePlayerWidget_C_ExecuteUbergraph_PregamePlayerWidget, CallFunc_GetSelectedCharacterNameForPlayerState_CharacterName) == 0x0000D8, "Member 'PregamePlayerWidget_C_ExecuteUbergraph_PregamePlayerWidget::CallFunc_GetSelectedCharacterNameForPlayerState_CharacterName' has a wrong offset!");
static_assert(offsetof(PregamePlayerWidget_C_ExecuteUbergraph_PregamePlayerWidget, CallFunc_GetHasRequestedPawnClass_ReturnValue) == 0x0000F0, "Member 'PregamePlayerWidget_C_ExecuteUbergraph_PregamePlayerWidget::CallFunc_GetHasRequestedPawnClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(PregamePlayerWidget_C_ExecuteUbergraph_PregamePlayerWidget, CallFunc_IsLocalPlayerControlled_bIsLocalPlayerControlled) == 0x0000F1, "Member 'PregamePlayerWidget_C_ExecuteUbergraph_PregamePlayerWidget::CallFunc_IsLocalPlayerControlled_bIsLocalPlayerControlled' has a wrong offset!");
static_assert(offsetof(PregamePlayerWidget_C_ExecuteUbergraph_PregamePlayerWidget, CallFunc_GetGameState_ReturnValue_1) == 0x0000F8, "Member 'PregamePlayerWidget_C_ExecuteUbergraph_PregamePlayerWidget::CallFunc_GetGameState_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PregamePlayerWidget_C_ExecuteUbergraph_PregamePlayerWidget, K2Node_DynamicCast_AsMariner_Game_State_1) == 0x000100, "Member 'PregamePlayerWidget_C_ExecuteUbergraph_PregamePlayerWidget::K2Node_DynamicCast_AsMariner_Game_State_1' has a wrong offset!");
static_assert(offsetof(PregamePlayerWidget_C_ExecuteUbergraph_PregamePlayerWidget, K2Node_DynamicCast_bSuccess_1) == 0x000108, "Member 'PregamePlayerWidget_C_ExecuteUbergraph_PregamePlayerWidget::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(PregamePlayerWidget_C_ExecuteUbergraph_PregamePlayerWidget, CallFunc_EqualEqual_NameName_ReturnValue) == 0x000109, "Member 'PregamePlayerWidget_C_ExecuteUbergraph_PregamePlayerWidget::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");

// Function PregamePlayerWidget.PregamePlayerWidget_C.DisplayHoveredData
// 0x0028 (0x0028 - 0x0000)
struct PregamePlayerWidget_C_DisplayHoveredData final
{
public:
	class AMarinerPlayerState*                    PlayerState;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMarinerPlayableCharacter*              CharacterData;                                     // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMarinerSkinCollectionDataAsset*        ActiveSkin;                                        // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Level;                                             // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_248B[0x4];                                     // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMarinerArtifactDataAsset*              Artifact;                                          // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PregamePlayerWidget_C_DisplayHoveredData) == 0x000008, "Wrong alignment on PregamePlayerWidget_C_DisplayHoveredData");
static_assert(sizeof(PregamePlayerWidget_C_DisplayHoveredData) == 0x000028, "Wrong size on PregamePlayerWidget_C_DisplayHoveredData");
static_assert(offsetof(PregamePlayerWidget_C_DisplayHoveredData, PlayerState) == 0x000000, "Member 'PregamePlayerWidget_C_DisplayHoveredData::PlayerState' has a wrong offset!");
static_assert(offsetof(PregamePlayerWidget_C_DisplayHoveredData, CharacterData) == 0x000008, "Member 'PregamePlayerWidget_C_DisplayHoveredData::CharacterData' has a wrong offset!");
static_assert(offsetof(PregamePlayerWidget_C_DisplayHoveredData, ActiveSkin) == 0x000010, "Member 'PregamePlayerWidget_C_DisplayHoveredData::ActiveSkin' has a wrong offset!");
static_assert(offsetof(PregamePlayerWidget_C_DisplayHoveredData, Level) == 0x000018, "Member 'PregamePlayerWidget_C_DisplayHoveredData::Level' has a wrong offset!");
static_assert(offsetof(PregamePlayerWidget_C_DisplayHoveredData, Artifact) == 0x000020, "Member 'PregamePlayerWidget_C_DisplayHoveredData::Artifact' has a wrong offset!");

// Function PregamePlayerWidget.PregamePlayerWidget_C.DisplayData
// 0x0020 (0x0020 - 0x0000)
struct PregamePlayerWidget_C_DisplayData final
{
public:
	class AMarinerPlayerState*                    PlayerState;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMarinerSkinCollectionDataAsset*        ActiveSkin;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Level;                                             // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_248C[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMarinerArtifactDataAsset*              Artifact;                                          // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PregamePlayerWidget_C_DisplayData) == 0x000008, "Wrong alignment on PregamePlayerWidget_C_DisplayData");
static_assert(sizeof(PregamePlayerWidget_C_DisplayData) == 0x000020, "Wrong size on PregamePlayerWidget_C_DisplayData");
static_assert(offsetof(PregamePlayerWidget_C_DisplayData, PlayerState) == 0x000000, "Member 'PregamePlayerWidget_C_DisplayData::PlayerState' has a wrong offset!");
static_assert(offsetof(PregamePlayerWidget_C_DisplayData, ActiveSkin) == 0x000008, "Member 'PregamePlayerWidget_C_DisplayData::ActiveSkin' has a wrong offset!");
static_assert(offsetof(PregamePlayerWidget_C_DisplayData, Level) == 0x000010, "Member 'PregamePlayerWidget_C_DisplayData::Level' has a wrong offset!");
static_assert(offsetof(PregamePlayerWidget_C_DisplayData, Artifact) == 0x000018, "Member 'PregamePlayerWidget_C_DisplayData::Artifact' has a wrong offset!");

// Function PregamePlayerWidget.PregamePlayerWidget_C.DisplayUnselectedState
// 0x0068 (0x0068 - 0x0000)
struct PregamePlayerWidget_C_DisplayUnselectedState final
{
public:
	class UImage*                                 NewLocalVar_0;                                     // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMarinerGameState*                      K2Node_DynamicCast_AsMariner_Game_State;           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_248D[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMarinerUIGlobals*                      CallFunc_GetUIGlobals_ReturnValue;                 // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGuid                                  CallFunc_GetPlaylistName_ReturnValue;              // 0x0028(0x0010)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_GetCurrentPlatform_ReturnValue;           // 0x0038(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetPlayerName_ReturnValue;                // 0x0040(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0050(0x0018)()
};
static_assert(alignof(PregamePlayerWidget_C_DisplayUnselectedState) == 0x000008, "Wrong alignment on PregamePlayerWidget_C_DisplayUnselectedState");
static_assert(sizeof(PregamePlayerWidget_C_DisplayUnselectedState) == 0x000068, "Wrong size on PregamePlayerWidget_C_DisplayUnselectedState");
static_assert(offsetof(PregamePlayerWidget_C_DisplayUnselectedState, NewLocalVar_0) == 0x000000, "Member 'PregamePlayerWidget_C_DisplayUnselectedState::NewLocalVar_0' has a wrong offset!");
static_assert(offsetof(PregamePlayerWidget_C_DisplayUnselectedState, CallFunc_GetGameState_ReturnValue) == 0x000008, "Member 'PregamePlayerWidget_C_DisplayUnselectedState::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(PregamePlayerWidget_C_DisplayUnselectedState, K2Node_DynamicCast_AsMariner_Game_State) == 0x000010, "Member 'PregamePlayerWidget_C_DisplayUnselectedState::K2Node_DynamicCast_AsMariner_Game_State' has a wrong offset!");
static_assert(offsetof(PregamePlayerWidget_C_DisplayUnselectedState, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'PregamePlayerWidget_C_DisplayUnselectedState::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(PregamePlayerWidget_C_DisplayUnselectedState, CallFunc_GetUIGlobals_ReturnValue) == 0x000020, "Member 'PregamePlayerWidget_C_DisplayUnselectedState::CallFunc_GetUIGlobals_ReturnValue' has a wrong offset!");
static_assert(offsetof(PregamePlayerWidget_C_DisplayUnselectedState, CallFunc_GetPlaylistName_ReturnValue) == 0x000028, "Member 'PregamePlayerWidget_C_DisplayUnselectedState::CallFunc_GetPlaylistName_ReturnValue' has a wrong offset!");
static_assert(offsetof(PregamePlayerWidget_C_DisplayUnselectedState, CallFunc_GetCurrentPlatform_ReturnValue) == 0x000038, "Member 'PregamePlayerWidget_C_DisplayUnselectedState::CallFunc_GetCurrentPlatform_ReturnValue' has a wrong offset!");
static_assert(offsetof(PregamePlayerWidget_C_DisplayUnselectedState, CallFunc_GetPlayerName_ReturnValue) == 0x000040, "Member 'PregamePlayerWidget_C_DisplayUnselectedState::CallFunc_GetPlayerName_ReturnValue' has a wrong offset!");
static_assert(offsetof(PregamePlayerWidget_C_DisplayUnselectedState, CallFunc_Conv_StringToText_ReturnValue) == 0x000050, "Member 'PregamePlayerWidget_C_DisplayUnselectedState::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");

// Function PregamePlayerWidget.PregamePlayerWidget_C.UpdateCharacterLevel
// 0x0050 (0x0050 - 0x0000)
struct PregamePlayerWidget_C_UpdateCharacterLevel final
{
public:
	class AMarinerPlayerState*                    PlayerState;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Level;                                             // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetTeamIndex_ReturnValue;                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMarinerGameState*                      K2Node_DynamicCast_AsMariner_Game_State;           // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_248E[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsRanked_ReturnValue;                     // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_248F[0x6];                                     // 0x0032(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AMarinerPlayerState*                    K2Node_DynamicCast_AsMariner_Player_State;         // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2490[0x3];                                     // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetTeamIndex_ReturnValue_1;               // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PregamePlayerWidget_C_UpdateCharacterLevel) == 0x000008, "Wrong alignment on PregamePlayerWidget_C_UpdateCharacterLevel");
static_assert(sizeof(PregamePlayerWidget_C_UpdateCharacterLevel) == 0x000050, "Wrong size on PregamePlayerWidget_C_UpdateCharacterLevel");
static_assert(offsetof(PregamePlayerWidget_C_UpdateCharacterLevel, PlayerState) == 0x000000, "Member 'PregamePlayerWidget_C_UpdateCharacterLevel::PlayerState' has a wrong offset!");
static_assert(offsetof(PregamePlayerWidget_C_UpdateCharacterLevel, Level) == 0x000008, "Member 'PregamePlayerWidget_C_UpdateCharacterLevel::Level' has a wrong offset!");
static_assert(offsetof(PregamePlayerWidget_C_UpdateCharacterLevel, CallFunc_GetTeamIndex_ReturnValue) == 0x00000C, "Member 'PregamePlayerWidget_C_UpdateCharacterLevel::CallFunc_GetTeamIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(PregamePlayerWidget_C_UpdateCharacterLevel, CallFunc_GetGameState_ReturnValue) == 0x000010, "Member 'PregamePlayerWidget_C_UpdateCharacterLevel::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(PregamePlayerWidget_C_UpdateCharacterLevel, K2Node_DynamicCast_AsMariner_Game_State) == 0x000018, "Member 'PregamePlayerWidget_C_UpdateCharacterLevel::K2Node_DynamicCast_AsMariner_Game_State' has a wrong offset!");
static_assert(offsetof(PregamePlayerWidget_C_UpdateCharacterLevel, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'PregamePlayerWidget_C_UpdateCharacterLevel::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(PregamePlayerWidget_C_UpdateCharacterLevel, CallFunc_GetOwningPlayer_ReturnValue) == 0x000028, "Member 'PregamePlayerWidget_C_UpdateCharacterLevel::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(PregamePlayerWidget_C_UpdateCharacterLevel, CallFunc_IsRanked_ReturnValue) == 0x000030, "Member 'PregamePlayerWidget_C_UpdateCharacterLevel::CallFunc_IsRanked_ReturnValue' has a wrong offset!");
static_assert(offsetof(PregamePlayerWidget_C_UpdateCharacterLevel, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000031, "Member 'PregamePlayerWidget_C_UpdateCharacterLevel::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(PregamePlayerWidget_C_UpdateCharacterLevel, K2Node_DynamicCast_AsMariner_Player_State) == 0x000038, "Member 'PregamePlayerWidget_C_UpdateCharacterLevel::K2Node_DynamicCast_AsMariner_Player_State' has a wrong offset!");
static_assert(offsetof(PregamePlayerWidget_C_UpdateCharacterLevel, K2Node_DynamicCast_bSuccess_1) == 0x000040, "Member 'PregamePlayerWidget_C_UpdateCharacterLevel::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(PregamePlayerWidget_C_UpdateCharacterLevel, CallFunc_GetTeamIndex_ReturnValue_1) == 0x000044, "Member 'PregamePlayerWidget_C_UpdateCharacterLevel::CallFunc_GetTeamIndex_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PregamePlayerWidget_C_UpdateCharacterLevel, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000048, "Member 'PregamePlayerWidget_C_UpdateCharacterLevel::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");

// Function PregamePlayerWidget.PregamePlayerWidget_C.IsLocalPlayerControlled
// 0x0018 (0x0018 - 0x0000)
struct PregamePlayerWidget_C_IsLocalPlayerControlled final
{
public:
	bool                                          bIsLocalPlayerControlled;                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2491[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AMarinerBasePlayerController*           CallFunc_TryAndGetLocalPlayerController_ReturnValue; // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PregamePlayerWidget_C_IsLocalPlayerControlled) == 0x000008, "Wrong alignment on PregamePlayerWidget_C_IsLocalPlayerControlled");
static_assert(sizeof(PregamePlayerWidget_C_IsLocalPlayerControlled) == 0x000018, "Wrong size on PregamePlayerWidget_C_IsLocalPlayerControlled");
static_assert(offsetof(PregamePlayerWidget_C_IsLocalPlayerControlled, bIsLocalPlayerControlled) == 0x000000, "Member 'PregamePlayerWidget_C_IsLocalPlayerControlled::bIsLocalPlayerControlled' has a wrong offset!");
static_assert(offsetof(PregamePlayerWidget_C_IsLocalPlayerControlled, CallFunc_TryAndGetLocalPlayerController_ReturnValue) == 0x000008, "Member 'PregamePlayerWidget_C_IsLocalPlayerControlled::CallFunc_TryAndGetLocalPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(PregamePlayerWidget_C_IsLocalPlayerControlled, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000010, "Member 'PregamePlayerWidget_C_IsLocalPlayerControlled::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");

}

