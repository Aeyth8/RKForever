#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PostGameMapData

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Mariner_classes.hpp"
#include "UMG_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass PostGameMapData.PostGameMapData_C
// 0x0028 (0x02D8 - 0x02B0)
class UPostGameMapData_C final : public UMarinerUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02B0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UTextBlock*                             ArenaNameText;                                     // 0x02B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           ArenaPanel;                                        // 0x02C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           GameModePanel;                                     // 0x02C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             GameModeText;                                      // 0x02D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_PostGameMapData(int32 EntryPoint);
	void Construct();
	void Update();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"PostGameMapData_C">();
	}
	static class UPostGameMapData_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPostGameMapData_C>();
	}
};
static_assert(alignof(UPostGameMapData_C) == 0x000008, "Wrong alignment on UPostGameMapData_C");
static_assert(sizeof(UPostGameMapData_C) == 0x0002D8, "Wrong size on UPostGameMapData_C");
static_assert(offsetof(UPostGameMapData_C, UberGraphFrame) == 0x0002B0, "Member 'UPostGameMapData_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UPostGameMapData_C, ArenaNameText) == 0x0002B8, "Member 'UPostGameMapData_C::ArenaNameText' has a wrong offset!");
static_assert(offsetof(UPostGameMapData_C, ArenaPanel) == 0x0002C0, "Member 'UPostGameMapData_C::ArenaPanel' has a wrong offset!");
static_assert(offsetof(UPostGameMapData_C, GameModePanel) == 0x0002C8, "Member 'UPostGameMapData_C::GameModePanel' has a wrong offset!");
static_assert(offsetof(UPostGameMapData_C, GameModeText) == 0x0002D0, "Member 'UPostGameMapData_C::GameModeText' has a wrong offset!");

}

