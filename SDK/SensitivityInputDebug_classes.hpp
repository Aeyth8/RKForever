#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: SensitivityInputDebug

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Mariner_structs.hpp"
#include "Mariner_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass SensitivityInputDebug.SensitivityInputDebug_C
// 0x0138 (0x0618 - 0x04E0)
class USensitivityInputDebug_C final : public UMarinerMenu
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x04E0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UTextBlock*                             AngleText;                                         // 0x04E8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             CompositeText;                                     // 0x04F0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UProgressBar*                           CompositInputBar;                                  // 0x04F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UMarinerButton*                         ExitButton;                                        // 0x0500(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             MaxVelocityX;                                      // 0x0508(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             MaxVelocityY;                                      // 0x0510(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UStepperWidget_C*                       PlatformCurveStepper;                              // 0x0518(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UProgressBar*                           ProgressBar_0;                                     // 0x0520(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UProgressBar*                           ProgressBar_1;                                     // 0x0528(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UProgressBar*                           ProgressBar_2;                                     // 0x0530(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UProgressBar*                           ProgressBar_3;                                     // 0x0538(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UProgressBar*                           ProgressBar_4;                                     // 0x0540(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UProgressBar*                           ProgressBar_5;                                     // 0x0548(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UProgressBar*                           ProgressBar_6;                                     // 0x0550(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UProgressBar*                           ProgressBar_7;                                     // 0x0558(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USensitivityControls_C*                 SensitivityControls_93;                            // 0x0560(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TextBlock_8;                                       // 0x0568(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TextBlock_9;                                       // 0x0570(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TextBlock_13;                                      // 0x0578(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TextBlock_15;                                      // 0x0580(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TextBlock_20;                                      // 0x0588(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TextBlock_21;                                      // 0x0590(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TextBlock_22;                                      // 0x0598(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TextBlock_23;                                      // 0x05A0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TextBlock_27;                                      // 0x05A8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TextBlock_28;                                      // 0x05B0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UThumbStickDebug_C*                     ThumbStickDebug;                                   // 0x05B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             VelocityX;                                         // 0x05C0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             VelocityY;                                         // 0x05C8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UProgressBar*                           XInputValueBar;                                    // 0x05D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UProgressBar*                           XVelocityOutOfMax;                                 // 0x05D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UProgressBar*                           YInputValueBar;                                    // 0x05E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UProgressBar*                           YVelocityOutOfMax;                                 // 0x05E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class AMarinerCharacter*                      MarinerCharacter;                                  // 0x05F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FString>                         Curves;                                            // 0x05F8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	TArray<class UCurveVector*>                   CurveDataTables;                                   // 0x0608(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)

public:
	void ExecuteUbergraph_SensitivityInputDebug(int32 EntryPoint);
	void ExitDebug();
	void BP_OnExited(bool bToSubLayer);
	void BP_OnEntered(bool bFromSubMenu);
	void StepperSelectionChanged_Event();
	void BndEvt__ExitButton_K2Node_ComponentBoundEvent_32_OnButtonClickedEvent__DelegateSignature();
	void Construct();
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);
	class FText Get_VelocityX_Text_0();
	float Get_XVelocityOutOfMax_Percent_0();
	class FText Get_MaxVelocityX_Text_0();
	class FText Get_VelocityY_Text_0();
	class FText Get_MaxVelocityY_Text_0();
	float Get_YVelocityOutOfMax_Percent_0();
	float GetCurrentInputs_X();
	float Get_CurrentInputs_Y();
	class FText Get_TextBlock_8_Text_0();
	class FText Get_TextBlock_9_Text_0();
	class FText Get_CompositeText_Text_0();
	float Get_CompositInputBar_Percent_0();
	class FText Get_AngleText_Text_0();
	class FText Get_TextBlock_15_Text_0();
	class FText Get_TextBlock_13_Text_0();
	float Get_DeadZonedInput_X();
	float Get_DeadZonedInput_Y();
	class FText Get_TextBlock_22_Text_0();
	class FText Get_TextBlock_23_Text_0();
	float Get_PercentPegged_X();
	float Get_PercentPegged_Y();
	class FText Get_TextBlock_27_Text_0();
	class FText Get_TextBlock_28_Text_0();
	float Get_InputBuffer_X();
	float Get_InputBuffer_Y();
	class FText Get_TimePeggedUntilMaxSpeed_X();
	class FText Get_TimePeggedUntilMaxSpeed_Y();
	bool HandleInputReleased(EMarinerInputActions InInput);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"SensitivityInputDebug_C">();
	}
	static class USensitivityInputDebug_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<USensitivityInputDebug_C>();
	}
};
static_assert(alignof(USensitivityInputDebug_C) == 0x000008, "Wrong alignment on USensitivityInputDebug_C");
static_assert(sizeof(USensitivityInputDebug_C) == 0x000618, "Wrong size on USensitivityInputDebug_C");
static_assert(offsetof(USensitivityInputDebug_C, UberGraphFrame) == 0x0004E0, "Member 'USensitivityInputDebug_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(USensitivityInputDebug_C, AngleText) == 0x0004E8, "Member 'USensitivityInputDebug_C::AngleText' has a wrong offset!");
static_assert(offsetof(USensitivityInputDebug_C, CompositeText) == 0x0004F0, "Member 'USensitivityInputDebug_C::CompositeText' has a wrong offset!");
static_assert(offsetof(USensitivityInputDebug_C, CompositInputBar) == 0x0004F8, "Member 'USensitivityInputDebug_C::CompositInputBar' has a wrong offset!");
static_assert(offsetof(USensitivityInputDebug_C, ExitButton) == 0x000500, "Member 'USensitivityInputDebug_C::ExitButton' has a wrong offset!");
static_assert(offsetof(USensitivityInputDebug_C, MaxVelocityX) == 0x000508, "Member 'USensitivityInputDebug_C::MaxVelocityX' has a wrong offset!");
static_assert(offsetof(USensitivityInputDebug_C, MaxVelocityY) == 0x000510, "Member 'USensitivityInputDebug_C::MaxVelocityY' has a wrong offset!");
static_assert(offsetof(USensitivityInputDebug_C, PlatformCurveStepper) == 0x000518, "Member 'USensitivityInputDebug_C::PlatformCurveStepper' has a wrong offset!");
static_assert(offsetof(USensitivityInputDebug_C, ProgressBar_0) == 0x000520, "Member 'USensitivityInputDebug_C::ProgressBar_0' has a wrong offset!");
static_assert(offsetof(USensitivityInputDebug_C, ProgressBar_1) == 0x000528, "Member 'USensitivityInputDebug_C::ProgressBar_1' has a wrong offset!");
static_assert(offsetof(USensitivityInputDebug_C, ProgressBar_2) == 0x000530, "Member 'USensitivityInputDebug_C::ProgressBar_2' has a wrong offset!");
static_assert(offsetof(USensitivityInputDebug_C, ProgressBar_3) == 0x000538, "Member 'USensitivityInputDebug_C::ProgressBar_3' has a wrong offset!");
static_assert(offsetof(USensitivityInputDebug_C, ProgressBar_4) == 0x000540, "Member 'USensitivityInputDebug_C::ProgressBar_4' has a wrong offset!");
static_assert(offsetof(USensitivityInputDebug_C, ProgressBar_5) == 0x000548, "Member 'USensitivityInputDebug_C::ProgressBar_5' has a wrong offset!");
static_assert(offsetof(USensitivityInputDebug_C, ProgressBar_6) == 0x000550, "Member 'USensitivityInputDebug_C::ProgressBar_6' has a wrong offset!");
static_assert(offsetof(USensitivityInputDebug_C, ProgressBar_7) == 0x000558, "Member 'USensitivityInputDebug_C::ProgressBar_7' has a wrong offset!");
static_assert(offsetof(USensitivityInputDebug_C, SensitivityControls_93) == 0x000560, "Member 'USensitivityInputDebug_C::SensitivityControls_93' has a wrong offset!");
static_assert(offsetof(USensitivityInputDebug_C, TextBlock_8) == 0x000568, "Member 'USensitivityInputDebug_C::TextBlock_8' has a wrong offset!");
static_assert(offsetof(USensitivityInputDebug_C, TextBlock_9) == 0x000570, "Member 'USensitivityInputDebug_C::TextBlock_9' has a wrong offset!");
static_assert(offsetof(USensitivityInputDebug_C, TextBlock_13) == 0x000578, "Member 'USensitivityInputDebug_C::TextBlock_13' has a wrong offset!");
static_assert(offsetof(USensitivityInputDebug_C, TextBlock_15) == 0x000580, "Member 'USensitivityInputDebug_C::TextBlock_15' has a wrong offset!");
static_assert(offsetof(USensitivityInputDebug_C, TextBlock_20) == 0x000588, "Member 'USensitivityInputDebug_C::TextBlock_20' has a wrong offset!");
static_assert(offsetof(USensitivityInputDebug_C, TextBlock_21) == 0x000590, "Member 'USensitivityInputDebug_C::TextBlock_21' has a wrong offset!");
static_assert(offsetof(USensitivityInputDebug_C, TextBlock_22) == 0x000598, "Member 'USensitivityInputDebug_C::TextBlock_22' has a wrong offset!");
static_assert(offsetof(USensitivityInputDebug_C, TextBlock_23) == 0x0005A0, "Member 'USensitivityInputDebug_C::TextBlock_23' has a wrong offset!");
static_assert(offsetof(USensitivityInputDebug_C, TextBlock_27) == 0x0005A8, "Member 'USensitivityInputDebug_C::TextBlock_27' has a wrong offset!");
static_assert(offsetof(USensitivityInputDebug_C, TextBlock_28) == 0x0005B0, "Member 'USensitivityInputDebug_C::TextBlock_28' has a wrong offset!");
static_assert(offsetof(USensitivityInputDebug_C, ThumbStickDebug) == 0x0005B8, "Member 'USensitivityInputDebug_C::ThumbStickDebug' has a wrong offset!");
static_assert(offsetof(USensitivityInputDebug_C, VelocityX) == 0x0005C0, "Member 'USensitivityInputDebug_C::VelocityX' has a wrong offset!");
static_assert(offsetof(USensitivityInputDebug_C, VelocityY) == 0x0005C8, "Member 'USensitivityInputDebug_C::VelocityY' has a wrong offset!");
static_assert(offsetof(USensitivityInputDebug_C, XInputValueBar) == 0x0005D0, "Member 'USensitivityInputDebug_C::XInputValueBar' has a wrong offset!");
static_assert(offsetof(USensitivityInputDebug_C, XVelocityOutOfMax) == 0x0005D8, "Member 'USensitivityInputDebug_C::XVelocityOutOfMax' has a wrong offset!");
static_assert(offsetof(USensitivityInputDebug_C, YInputValueBar) == 0x0005E0, "Member 'USensitivityInputDebug_C::YInputValueBar' has a wrong offset!");
static_assert(offsetof(USensitivityInputDebug_C, YVelocityOutOfMax) == 0x0005E8, "Member 'USensitivityInputDebug_C::YVelocityOutOfMax' has a wrong offset!");
static_assert(offsetof(USensitivityInputDebug_C, MarinerCharacter) == 0x0005F0, "Member 'USensitivityInputDebug_C::MarinerCharacter' has a wrong offset!");
static_assert(offsetof(USensitivityInputDebug_C, Curves) == 0x0005F8, "Member 'USensitivityInputDebug_C::Curves' has a wrong offset!");
static_assert(offsetof(USensitivityInputDebug_C, CurveDataTables) == 0x000608, "Member 'USensitivityInputDebug_C::CurveDataTables' has a wrong offset!");

}

