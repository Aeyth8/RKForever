#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PlayerName

#include "Basic.hpp"

#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function PlayerName.PlayerName_C.ExecuteUbergraph_PlayerName
// 0x0020 (0x0020 - 0x0000)
struct PlayerName_C_ExecuteUbergraph_PlayerName final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1F1D[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0008(0x0018)()
};
static_assert(alignof(PlayerName_C_ExecuteUbergraph_PlayerName) == 0x000008, "Wrong alignment on PlayerName_C_ExecuteUbergraph_PlayerName");
static_assert(sizeof(PlayerName_C_ExecuteUbergraph_PlayerName) == 0x000020, "Wrong size on PlayerName_C_ExecuteUbergraph_PlayerName");
static_assert(offsetof(PlayerName_C_ExecuteUbergraph_PlayerName, EntryPoint) == 0x000000, "Member 'PlayerName_C_ExecuteUbergraph_PlayerName::EntryPoint' has a wrong offset!");
static_assert(offsetof(PlayerName_C_ExecuteUbergraph_PlayerName, CallFunc_Conv_IntToText_ReturnValue) == 0x000008, "Member 'PlayerName_C_ExecuteUbergraph_PlayerName::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");

// Function PlayerName.PlayerName_C.GetPlayerName
// 0x0060 (0x0060 - 0x0000)
struct PlayerName_C_GetPlayerName final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm)
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1F1E[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerState*                           CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1F1F[0x7];                                     // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetPlayerName_ReturnValue;                // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0048(0x0018)()
};
static_assert(alignof(PlayerName_C_GetPlayerName) == 0x000008, "Wrong alignment on PlayerName_C_GetPlayerName");
static_assert(sizeof(PlayerName_C_GetPlayerName) == 0x000060, "Wrong size on PlayerName_C_GetPlayerName");
static_assert(offsetof(PlayerName_C_GetPlayerName, ReturnValue) == 0x000000, "Member 'PlayerName_C_GetPlayerName::ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerName_C_GetPlayerName, CallFunc_GetGameState_ReturnValue) == 0x000018, "Member 'PlayerName_C_GetPlayerName::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerName_C_GetPlayerName, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000020, "Member 'PlayerName_C_GetPlayerName::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerName_C_GetPlayerName, CallFunc_Array_Get_Item) == 0x000028, "Member 'PlayerName_C_GetPlayerName::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(PlayerName_C_GetPlayerName, CallFunc_IsValid_ReturnValue) == 0x000030, "Member 'PlayerName_C_GetPlayerName::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerName_C_GetPlayerName, CallFunc_GetPlayerName_ReturnValue) == 0x000038, "Member 'PlayerName_C_GetPlayerName::CallFunc_GetPlayerName_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerName_C_GetPlayerName, CallFunc_Conv_StringToText_ReturnValue) == 0x000048, "Member 'PlayerName_C_GetPlayerName::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");

// Function PlayerName.PlayerName_C.GetPlayerColor
// 0x00A0 (0x00A0 - 0x0000)
struct PlayerName_C_GetPlayerColor final
{
public:
	struct FSlateColor                            ReturnValue;                                       // 0x0000(0x0028)(Parm, OutParm, ReturnParm)
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0028(0x0028)()
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_1;                    // 0x0050(0x0028)()
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMarinerGameState*                      K2Node_DynamicCast_AsMariner_Game_State;           // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1F20[0x6];                                     // 0x008A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerState*                           CallFunc_Array_Get_Item;                           // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PlayerName_C_GetPlayerColor) == 0x000008, "Wrong alignment on PlayerName_C_GetPlayerColor");
static_assert(sizeof(PlayerName_C_GetPlayerColor) == 0x0000A0, "Wrong size on PlayerName_C_GetPlayerColor");
static_assert(offsetof(PlayerName_C_GetPlayerColor, ReturnValue) == 0x000000, "Member 'PlayerName_C_GetPlayerColor::ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerName_C_GetPlayerColor, K2Node_MakeStruct_SlateColor) == 0x000028, "Member 'PlayerName_C_GetPlayerColor::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(PlayerName_C_GetPlayerColor, K2Node_MakeStruct_SlateColor_1) == 0x000050, "Member 'PlayerName_C_GetPlayerColor::K2Node_MakeStruct_SlateColor_1' has a wrong offset!");
static_assert(offsetof(PlayerName_C_GetPlayerColor, CallFunc_GetGameState_ReturnValue) == 0x000078, "Member 'PlayerName_C_GetPlayerColor::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerName_C_GetPlayerColor, K2Node_DynamicCast_AsMariner_Game_State) == 0x000080, "Member 'PlayerName_C_GetPlayerColor::K2Node_DynamicCast_AsMariner_Game_State' has a wrong offset!");
static_assert(offsetof(PlayerName_C_GetPlayerColor, K2Node_DynamicCast_bSuccess) == 0x000088, "Member 'PlayerName_C_GetPlayerColor::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(PlayerName_C_GetPlayerColor, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000089, "Member 'PlayerName_C_GetPlayerColor::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerName_C_GetPlayerColor, CallFunc_Array_Get_Item) == 0x000090, "Member 'PlayerName_C_GetPlayerColor::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(PlayerName_C_GetPlayerColor, CallFunc_IsValid_ReturnValue) == 0x000098, "Member 'PlayerName_C_GetPlayerColor::CallFunc_IsValid_ReturnValue' has a wrong offset!");

}

