#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: CharacterXPLine

#include "Basic.hpp"

#include "MangoClient_structs.hpp"
#include "Engine_structs.hpp"
#include "PGRStatData_structs.hpp"


namespace SDK::Params
{

// Function CharacterXPLine.CharacterXPLine_C.ExecuteUbergraph_CharacterXPLine
// 0x0018 (0x0018 - 0x0000)
struct CharacterXPLine_C_ExecuteUbergraph_CharacterXPLine final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_1;              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CharacterXPLine_C_ExecuteUbergraph_CharacterXPLine) == 0x000008, "Wrong alignment on CharacterXPLine_C_ExecuteUbergraph_CharacterXPLine");
static_assert(sizeof(CharacterXPLine_C_ExecuteUbergraph_CharacterXPLine) == 0x000018, "Wrong size on CharacterXPLine_C_ExecuteUbergraph_CharacterXPLine");
static_assert(offsetof(CharacterXPLine_C_ExecuteUbergraph_CharacterXPLine, EntryPoint) == 0x000000, "Member 'CharacterXPLine_C_ExecuteUbergraph_CharacterXPLine::EntryPoint' has a wrong offset!");
static_assert(offsetof(CharacterXPLine_C_ExecuteUbergraph_CharacterXPLine, CallFunc_PlayAnimation_ReturnValue) == 0x000008, "Member 'CharacterXPLine_C_ExecuteUbergraph_CharacterXPLine::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharacterXPLine_C_ExecuteUbergraph_CharacterXPLine, CallFunc_PlayAnimation_ReturnValue_1) == 0x000010, "Member 'CharacterXPLine_C_ExecuteUbergraph_CharacterXPLine::CallFunc_PlayAnimation_ReturnValue_1' has a wrong offset!");

// Function CharacterXPLine.CharacterXPLine_C.SetData
// 0x00D0 (0x00D0 - 0x0000)
struct CharacterXPLine_C_SetData final
{
public:
	struct FPGRStatData                           StatData;                                          // 0x0000(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	struct FMangoXPBonusType                      XPData;                                            // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0028(0x0040)(HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6C[0x4];                                       // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0070(0x0010)(ZeroConstructor, ReferenceParm)
	class FText                                   CallFunc_FormatTimeRemaining_ReturnValue;          // 0x0080(0x0018)()
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0098(0x0018)()
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x00B0(0x0018)()
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(CharacterXPLine_C_SetData) == 0x000008, "Wrong alignment on CharacterXPLine_C_SetData");
static_assert(sizeof(CharacterXPLine_C_SetData) == 0x0000D0, "Wrong size on CharacterXPLine_C_SetData");
static_assert(offsetof(CharacterXPLine_C_SetData, StatData) == 0x000000, "Member 'CharacterXPLine_C_SetData::StatData' has a wrong offset!");
static_assert(offsetof(CharacterXPLine_C_SetData, XPData) == 0x000020, "Member 'CharacterXPLine_C_SetData::XPData' has a wrong offset!");
static_assert(offsetof(CharacterXPLine_C_SetData, K2Node_MakeStruct_FormatArgumentData) == 0x000028, "Member 'CharacterXPLine_C_SetData::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(CharacterXPLine_C_SetData, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000068, "Member 'CharacterXPLine_C_SetData::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharacterXPLine_C_SetData, K2Node_MakeArray_Array) == 0x000070, "Member 'CharacterXPLine_C_SetData::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(CharacterXPLine_C_SetData, CallFunc_FormatTimeRemaining_ReturnValue) == 0x000080, "Member 'CharacterXPLine_C_SetData::CallFunc_FormatTimeRemaining_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharacterXPLine_C_SetData, CallFunc_Format_ReturnValue) == 0x000098, "Member 'CharacterXPLine_C_SetData::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharacterXPLine_C_SetData, CallFunc_Conv_IntToText_ReturnValue) == 0x0000B0, "Member 'CharacterXPLine_C_SetData::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(CharacterXPLine_C_SetData, K2Node_SwitchEnum_CmpSuccess) == 0x0000C8, "Member 'CharacterXPLine_C_SetData::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

}

