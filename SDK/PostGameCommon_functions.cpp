#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PostGameCommon

#include "Basic.hpp"

#include "PostGameCommon_classes.hpp"
#include "PostGameCommon_parameters.hpp"


namespace SDK
{

// Function PostGameCommon.PostGameCommon_C.GetPlayerTeam
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FMatchEnd                        MatchEnd                                               (BlueprintVisible, BlueprintReadOnly, Parm)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   TeamIndex                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EMarinerGameOutcome                     PlayerGameOutcome                                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UPostGameCommon_C::GetPlayerTeam(const struct FMatchEnd& MatchEnd, class UObject* __WorldContext, int32* TeamIndex, EMarinerGameOutcome* PlayerGameOutcome)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PostGameCommon_C", "GetPlayerTeam");

	Params::PostGameCommon_C_GetPlayerTeam Parms{};

	Parms.MatchEnd = std::move(MatchEnd);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (TeamIndex != nullptr)
		*TeamIndex = Parms.TeamIndex;

	if (PlayerGameOutcome != nullptr)
		*PlayerGameOutcome = Parms.PlayerGameOutcome;
}


// Function PostGameCommon.PostGameCommon_C.GetEnemyTeam
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   PlayerTeam                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   EnemyTeam                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UPostGameCommon_C::GetEnemyTeam(int32 PlayerTeam, class UObject* __WorldContext, int32* EnemyTeam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PostGameCommon_C", "GetEnemyTeam");

	Params::PostGameCommon_C_GetEnemyTeam Parms{};

	Parms.PlayerTeam = PlayerTeam;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (EnemyTeam != nullptr)
		*EnemyTeam = Parms.EnemyTeam;
}


// Function PostGameCommon.PostGameCommon_C.GetCharacterProgression
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           CharacterId                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FMangoCharacterProgression       CharacterProgressionData                               (Parm, OutParm)

void UPostGameCommon_C::GetCharacterProgression(const class FString& CharacterId, class UObject* __WorldContext, struct FMangoCharacterProgression* CharacterProgressionData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PostGameCommon_C", "GetCharacterProgression");

	Params::PostGameCommon_C_GetCharacterProgression Parms{};

	Parms.CharacterId = std::move(CharacterId);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (CharacterProgressionData != nullptr)
		*CharacterProgressionData = std::move(Parms.CharacterProgressionData);
}


// Function PostGameCommon.PostGameCommon_C.GetClientTeamColor
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FSlateColor                      Color                                                  (Parm, OutParm)

void UPostGameCommon_C::GetClientTeamColor(class UObject* __WorldContext, struct FSlateColor* Color)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PostGameCommon_C", "GetClientTeamColor");

	Params::PostGameCommon_C_GetClientTeamColor Parms{};

	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Color != nullptr)
		*Color = std::move(Parms.Color);
}


// Function PostGameCommon.PostGameCommon_C.GetEnemyTeamColor
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FSlateColor                      Color                                                  (Parm, OutParm)

void UPostGameCommon_C::GetEnemyTeamColor(class UObject* __WorldContext, struct FSlateColor* Color)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PostGameCommon_C", "GetEnemyTeamColor");

	Params::PostGameCommon_C_GetEnemyTeamColor Parms{};

	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Color != nullptr)
		*Color = std::move(Parms.Color);
}


// Function PostGameCommon.PostGameCommon_C.GetPostGameModeStats
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          WorldContextObject                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FMatchEnd                        MatchEnd                                               (BlueprintVisible, BlueprintReadOnly, Parm)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TMap<class FName, class FText>          Stats                                                  (Parm, OutParm, ZeroConstructor)

void UPostGameCommon_C::GetPostGameModeStats(class UObject* WorldContextObject, const struct FMatchEnd& MatchEnd, class UObject* __WorldContext, TMap<class FName, class FText>* Stats)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PostGameCommon_C", "GetPostGameModeStats");

	Params::PostGameCommon_C_GetPostGameModeStats Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.MatchEnd = std::move(MatchEnd);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Stats != nullptr)
		*Stats = std::move(Parms.Stats);
}


// Function PostGameCommon.PostGameCommon_C.GetPlayerID
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           PlayerId                                               (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)

void UPostGameCommon_C::GetPlayerID(class UObject* __WorldContext, class FString* PlayerId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PostGameCommon_C", "GetPlayerID");

	Params::PostGameCommon_C_GetPlayerID Parms{};

	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (PlayerId != nullptr)
		*PlayerId = std::move(Parms.PlayerId);
}


// Function PostGameCommon.PostGameCommon_C.GetPlayerFromMatchEndData
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FMatchEnd                        MatchEnd                                               (BlueprintVisible, BlueprintReadOnly, Parm)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FMatchEndPlayer                  Player                                                 (Parm, OutParm)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UPostGameCommon_C::GetPlayerFromMatchEndData(const struct FMatchEnd& MatchEnd, class UObject* __WorldContext, struct FMatchEndPlayer* Player, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PostGameCommon_C", "GetPlayerFromMatchEndData");

	Params::PostGameCommon_C_GetPlayerFromMatchEndData Parms{};

	Parms.MatchEnd = std::move(MatchEnd);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Player != nullptr)
		*Player = std::move(Parms.Player);

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;
}


// Function PostGameCommon.PostGameCommon_C.GetClientPlayerColor
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FSlateColor                      Color                                                  (Parm, OutParm)

void UPostGameCommon_C::GetClientPlayerColor(class UObject* __WorldContext, struct FSlateColor* Color)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PostGameCommon_C", "GetClientPlayerColor");

	Params::PostGameCommon_C_GetClientPlayerColor Parms{};

	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Color != nullptr)
		*Color = std::move(Parms.Color);
}


// Function PostGameCommon.PostGameCommon_C.GetPlayerColor
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsClientPlayer                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    IsClientTeam                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    PreferNeutralColor                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FSlateColor                      Color                                                  (Parm, OutParm)

void UPostGameCommon_C::GetPlayerColor(bool IsClientPlayer, bool IsClientTeam, bool PreferNeutralColor, class UObject* __WorldContext, struct FSlateColor* Color)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PostGameCommon_C", "GetPlayerColor");

	Params::PostGameCommon_C_GetPlayerColor Parms{};

	Parms.IsClientPlayer = IsClientPlayer;
	Parms.IsClientTeam = IsClientTeam;
	Parms.PreferNeutralColor = PreferNeutralColor;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Color != nullptr)
		*Color = std::move(Parms.Color);
}


// Function PostGameCommon.PostGameCommon_C.GetNeutralColor
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FSlateColor                      Color                                                  (Parm, OutParm)

void UPostGameCommon_C::GetNeutralColor(class UObject* __WorldContext, struct FSlateColor* Color)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PostGameCommon_C", "GetNeutralColor");

	Params::PostGameCommon_C_GetNeutralColor Parms{};

	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Color != nullptr)
		*Color = std::move(Parms.Color);
}


// Function PostGameCommon.PostGameCommon_C.GetPlayerStartRank
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           PlayerMangoID                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// struct FMangoMatchResultResponse        MatchResponse                                          (BlueprintVisible, BlueprintReadOnly, Parm)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Rank                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UPostGameCommon_C::GetPlayerStartRank(const class FString& PlayerMangoID, const struct FMangoMatchResultResponse& MatchResponse, class UObject* __WorldContext, int32* Rank)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PostGameCommon_C", "GetPlayerStartRank");

	Params::PostGameCommon_C_GetPlayerStartRank Parms{};

	Parms.PlayerMangoID = std::move(PlayerMangoID);
	Parms.MatchResponse = std::move(MatchResponse);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Rank != nullptr)
		*Rank = Parms.Rank;
}

}

