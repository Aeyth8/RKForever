#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AsyncFlowBlastPassSplash

#include "Basic.hpp"

#include "AsyncFlowBlastPassSplash_classes.hpp"
#include "AsyncFlowBlastPassSplash_parameters.hpp"


namespace SDK
{

// Function AsyncFlowBlastPassSplash.AsyncFlowBlastPassSplash_C.EvalBlastPassSplash
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UAsyncFlowBlastPassSplash_C::EvalBlastPassSplash()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AsyncFlowBlastPassSplash_C", "EvalBlastPassSplash");

	UObject::ProcessEvent(Func, nullptr);
}


// Function AsyncFlowBlastPassSplash.AsyncFlowBlastPassSplash_C.DidPlayerWinLastGame
// (Private, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Victory                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UAsyncFlowBlastPassSplash_C::DidPlayerWinLastGame(bool* Victory)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AsyncFlowBlastPassSplash_C", "DidPlayerWinLastGame");

	Params::AsyncFlowBlastPassSplash_C_DidPlayerWinLastGame Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Victory != nullptr)
		*Victory = Parms.Victory;
}


// Function AsyncFlowBlastPassSplash.AsyncFlowBlastPassSplash_C.BlastPassSplashConfirm
// (Private, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FKey                             KeyPressed                                             (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)

void UAsyncFlowBlastPassSplash_C::BlastPassSplashConfirm(struct FKey& KeyPressed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AsyncFlowBlastPassSplash_C", "BlastPassSplashConfirm");

	Params::AsyncFlowBlastPassSplash_C_BlastPassSplashConfirm Parms{};

	Parms.KeyPressed = std::move(KeyPressed);

	UObject::ProcessEvent(Func, &Parms);

	KeyPressed = std::move(Parms.KeyPressed);
}


// Function AsyncFlowBlastPassSplash.AsyncFlowBlastPassSplash_C.BlastPassSplashCancel
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FKey                             KeyPressed                                             (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)

void UAsyncFlowBlastPassSplash_C::BlastPassSplashCancel(struct FKey& KeyPressed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AsyncFlowBlastPassSplash_C", "BlastPassSplashCancel");

	Params::AsyncFlowBlastPassSplash_C_BlastPassSplashCancel Parms{};

	Parms.KeyPressed = std::move(KeyPressed);

	UObject::ProcessEvent(Func, &Parms);

	KeyPressed = std::move(Parms.KeyPressed);
}


// Function AsyncFlowBlastPassSplash.AsyncFlowBlastPassSplash_C.GetMessageBoxManager
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UMarinerMessageBoxManager*        MessageBoxManager                                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UAsyncFlowBlastPassSplash_C::GetMessageBoxManager(class UMarinerMessageBoxManager** MessageBoxManager)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AsyncFlowBlastPassSplash_C", "GetMessageBoxManager");

	Params::AsyncFlowBlastPassSplash_C_GetMessageBoxManager Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (MessageBoxManager != nullptr)
		*MessageBoxManager = Parms.MessageBoxManager;
}


// Function AsyncFlowBlastPassSplash.AsyncFlowBlastPassSplash_C.BlastPassSplashDetails
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FKey                             KeyPressed                                             (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)

void UAsyncFlowBlastPassSplash_C::BlastPassSplashDetails(struct FKey& KeyPressed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AsyncFlowBlastPassSplash_C", "BlastPassSplashDetails");

	Params::AsyncFlowBlastPassSplash_C_BlastPassSplashDetails Parms{};

	Parms.KeyPressed = std::move(KeyPressed);

	UObject::ProcessEvent(Func, &Parms);

	KeyPressed = std::move(Parms.KeyPressed);
}


// Function AsyncFlowBlastPassSplash.AsyncFlowBlastPassSplash_C.SetAsViewed
// (Public, BlueprintCallable, BlueprintEvent)

void UAsyncFlowBlastPassSplash_C::SetAsViewed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AsyncFlowBlastPassSplash_C", "SetAsViewed");

	UObject::ProcessEvent(Func, nullptr);
}

}

