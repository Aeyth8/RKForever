#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: IntermissionCountdown

#include "Basic.hpp"

#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function IntermissionCountdown.IntermissionCountdown_C.ExecuteUbergraph_IntermissionCountdown
// 0x0088 (0x0088 - 0x0000)
struct IntermissionCountdown_C_ExecuteUbergraph_IntermissionCountdown final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0004(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_PostEventAtLocation_ReturnValue;          // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMangoMatchmakingManager*               CallFunc_Get_ReturnValue;                          // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_PostEventAtLocation_ReturnValue_1;        // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetIntermissionTimeRemaining_ReturnValue; // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_65[0x3];                                       // 0x0065(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0068(0x0018)()
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x0082(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(IntermissionCountdown_C_ExecuteUbergraph_IntermissionCountdown) == 0x000008, "Wrong alignment on IntermissionCountdown_C_ExecuteUbergraph_IntermissionCountdown");
static_assert(sizeof(IntermissionCountdown_C_ExecuteUbergraph_IntermissionCountdown) == 0x000088, "Wrong size on IntermissionCountdown_C_ExecuteUbergraph_IntermissionCountdown");
static_assert(offsetof(IntermissionCountdown_C_ExecuteUbergraph_IntermissionCountdown, EntryPoint) == 0x000000, "Member 'IntermissionCountdown_C_ExecuteUbergraph_IntermissionCountdown::EntryPoint' has a wrong offset!");
static_assert(offsetof(IntermissionCountdown_C_ExecuteUbergraph_IntermissionCountdown, K2Node_Event_MyGeometry) == 0x000004, "Member 'IntermissionCountdown_C_ExecuteUbergraph_IntermissionCountdown::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(IntermissionCountdown_C_ExecuteUbergraph_IntermissionCountdown, K2Node_Event_InDeltaTime) == 0x00003C, "Member 'IntermissionCountdown_C_ExecuteUbergraph_IntermissionCountdown::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(IntermissionCountdown_C_ExecuteUbergraph_IntermissionCountdown, CallFunc_PostEventAtLocation_ReturnValue) == 0x000040, "Member 'IntermissionCountdown_C_ExecuteUbergraph_IntermissionCountdown::CallFunc_PostEventAtLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(IntermissionCountdown_C_ExecuteUbergraph_IntermissionCountdown, CallFunc_PlayAnimation_ReturnValue) == 0x000048, "Member 'IntermissionCountdown_C_ExecuteUbergraph_IntermissionCountdown::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(IntermissionCountdown_C_ExecuteUbergraph_IntermissionCountdown, CallFunc_Get_ReturnValue) == 0x000050, "Member 'IntermissionCountdown_C_ExecuteUbergraph_IntermissionCountdown::CallFunc_Get_ReturnValue' has a wrong offset!");
static_assert(offsetof(IntermissionCountdown_C_ExecuteUbergraph_IntermissionCountdown, CallFunc_PostEventAtLocation_ReturnValue_1) == 0x000058, "Member 'IntermissionCountdown_C_ExecuteUbergraph_IntermissionCountdown::CallFunc_PostEventAtLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(IntermissionCountdown_C_ExecuteUbergraph_IntermissionCountdown, CallFunc_GetIntermissionTimeRemaining_ReturnValue) == 0x00005C, "Member 'IntermissionCountdown_C_ExecuteUbergraph_IntermissionCountdown::CallFunc_GetIntermissionTimeRemaining_ReturnValue' has a wrong offset!");
static_assert(offsetof(IntermissionCountdown_C_ExecuteUbergraph_IntermissionCountdown, CallFunc_FTrunc_ReturnValue) == 0x000060, "Member 'IntermissionCountdown_C_ExecuteUbergraph_IntermissionCountdown::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(IntermissionCountdown_C_ExecuteUbergraph_IntermissionCountdown, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000064, "Member 'IntermissionCountdown_C_ExecuteUbergraph_IntermissionCountdown::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(IntermissionCountdown_C_ExecuteUbergraph_IntermissionCountdown, CallFunc_Conv_IntToText_ReturnValue) == 0x000068, "Member 'IntermissionCountdown_C_ExecuteUbergraph_IntermissionCountdown::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(IntermissionCountdown_C_ExecuteUbergraph_IntermissionCountdown, CallFunc_Less_IntInt_ReturnValue) == 0x000080, "Member 'IntermissionCountdown_C_ExecuteUbergraph_IntermissionCountdown::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(IntermissionCountdown_C_ExecuteUbergraph_IntermissionCountdown, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000081, "Member 'IntermissionCountdown_C_ExecuteUbergraph_IntermissionCountdown::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(IntermissionCountdown_C_ExecuteUbergraph_IntermissionCountdown, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x000082, "Member 'IntermissionCountdown_C_ExecuteUbergraph_IntermissionCountdown::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");

// Function IntermissionCountdown.IntermissionCountdown_C.Tick
// 0x003C (0x003C - 0x0000)
struct IntermissionCountdown_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(IntermissionCountdown_C_Tick) == 0x000004, "Wrong alignment on IntermissionCountdown_C_Tick");
static_assert(sizeof(IntermissionCountdown_C_Tick) == 0x00003C, "Wrong size on IntermissionCountdown_C_Tick");
static_assert(offsetof(IntermissionCountdown_C_Tick, MyGeometry) == 0x000000, "Member 'IntermissionCountdown_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(IntermissionCountdown_C_Tick, InDeltaTime) == 0x000038, "Member 'IntermissionCountdown_C_Tick::InDeltaTime' has a wrong offset!");

}

