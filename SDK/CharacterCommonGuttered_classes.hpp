#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: CharacterCommonGuttered

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "Mariner_structs.hpp"
#include "Mariner_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass CharacterCommonGuttered.CharacterCommonGuttered_C
// 0x01A0 (0x05B8 - 0x0418)
class UCharacterCommonGuttered_C final : public UMarinerAnimatedWidget
{
public:
	class UWidgetAnimation*                       Flash;                                             // 0x0418(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       StunAnim;                                          // 0x0420(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       TakeDamageFriendAnim;                              // 0x0428(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       TakeDamageEnemyAnim;                               // 0x0430(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UCharacterCommonActionText_C*           ActionTextWidget;                                  // 0x0438(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 BGCircle;                                          // 0x0440(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           BGPanel;                                           // 0x0448(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 FlashCircle01;                                     // 0x0450(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 FlashCircle02;                                     // 0x0458(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCharacterCommonGameMode_C*             GameModeWidget;                                    // 0x0460(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Icon;                                              // 0x0468(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 PinCircleBack;                                     // 0x0470(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 PinPoint;                                          // 0x0478(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 WhiteCircleRing;                                   // 0x0480(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	bool                                          StunActive;                                        // 0x0488(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          PostStunActive;                                    // 0x0489(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_258E[0x6];                                     // 0x048A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateBrush                            IconBrush;                                         // 0x0490(0x0088)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          IsEnemy;                                           // 0x0518(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_258F[0x7];                                     // 0x0519(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateBrush                            CharacterBrush;                                    // 0x0520(0x0088)(Edit, BlueprintVisible, DisableEditOnInstance)
	UMulticastInlineDelegateProperty_             OnIconRefresh;                                     // 0x05A8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)

public:
	void OnIconRefresh__DelegateSignature();
	void PopulateTeam(class AMarinerCharacter* Character);
	void SetCirclePinRenderAngle(float RenderAngle);
	void SetIconBrush(const struct FSlateBrush& Param_IconBrush);
	void PlayFlashAnimation();
	void SetCharacterBrush(const struct FSlateBrush& Param_CharacterBrush);
	void RefreshIcon();
	void SetGameModeWidget(class UClass* Param_GameModeWidget, class AMarinerPlayerState* PlayerState);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"CharacterCommonGuttered_C">();
	}
	static class UCharacterCommonGuttered_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCharacterCommonGuttered_C>();
	}
};
static_assert(alignof(UCharacterCommonGuttered_C) == 0x000008, "Wrong alignment on UCharacterCommonGuttered_C");
static_assert(sizeof(UCharacterCommonGuttered_C) == 0x0005B8, "Wrong size on UCharacterCommonGuttered_C");
static_assert(offsetof(UCharacterCommonGuttered_C, Flash) == 0x000418, "Member 'UCharacterCommonGuttered_C::Flash' has a wrong offset!");
static_assert(offsetof(UCharacterCommonGuttered_C, StunAnim) == 0x000420, "Member 'UCharacterCommonGuttered_C::StunAnim' has a wrong offset!");
static_assert(offsetof(UCharacterCommonGuttered_C, TakeDamageFriendAnim) == 0x000428, "Member 'UCharacterCommonGuttered_C::TakeDamageFriendAnim' has a wrong offset!");
static_assert(offsetof(UCharacterCommonGuttered_C, TakeDamageEnemyAnim) == 0x000430, "Member 'UCharacterCommonGuttered_C::TakeDamageEnemyAnim' has a wrong offset!");
static_assert(offsetof(UCharacterCommonGuttered_C, ActionTextWidget) == 0x000438, "Member 'UCharacterCommonGuttered_C::ActionTextWidget' has a wrong offset!");
static_assert(offsetof(UCharacterCommonGuttered_C, BGCircle) == 0x000440, "Member 'UCharacterCommonGuttered_C::BGCircle' has a wrong offset!");
static_assert(offsetof(UCharacterCommonGuttered_C, BGPanel) == 0x000448, "Member 'UCharacterCommonGuttered_C::BGPanel' has a wrong offset!");
static_assert(offsetof(UCharacterCommonGuttered_C, FlashCircle01) == 0x000450, "Member 'UCharacterCommonGuttered_C::FlashCircle01' has a wrong offset!");
static_assert(offsetof(UCharacterCommonGuttered_C, FlashCircle02) == 0x000458, "Member 'UCharacterCommonGuttered_C::FlashCircle02' has a wrong offset!");
static_assert(offsetof(UCharacterCommonGuttered_C, GameModeWidget) == 0x000460, "Member 'UCharacterCommonGuttered_C::GameModeWidget' has a wrong offset!");
static_assert(offsetof(UCharacterCommonGuttered_C, Icon) == 0x000468, "Member 'UCharacterCommonGuttered_C::Icon' has a wrong offset!");
static_assert(offsetof(UCharacterCommonGuttered_C, PinCircleBack) == 0x000470, "Member 'UCharacterCommonGuttered_C::PinCircleBack' has a wrong offset!");
static_assert(offsetof(UCharacterCommonGuttered_C, PinPoint) == 0x000478, "Member 'UCharacterCommonGuttered_C::PinPoint' has a wrong offset!");
static_assert(offsetof(UCharacterCommonGuttered_C, WhiteCircleRing) == 0x000480, "Member 'UCharacterCommonGuttered_C::WhiteCircleRing' has a wrong offset!");
static_assert(offsetof(UCharacterCommonGuttered_C, StunActive) == 0x000488, "Member 'UCharacterCommonGuttered_C::StunActive' has a wrong offset!");
static_assert(offsetof(UCharacterCommonGuttered_C, PostStunActive) == 0x000489, "Member 'UCharacterCommonGuttered_C::PostStunActive' has a wrong offset!");
static_assert(offsetof(UCharacterCommonGuttered_C, IconBrush) == 0x000490, "Member 'UCharacterCommonGuttered_C::IconBrush' has a wrong offset!");
static_assert(offsetof(UCharacterCommonGuttered_C, IsEnemy) == 0x000518, "Member 'UCharacterCommonGuttered_C::IsEnemy' has a wrong offset!");
static_assert(offsetof(UCharacterCommonGuttered_C, CharacterBrush) == 0x000520, "Member 'UCharacterCommonGuttered_C::CharacterBrush' has a wrong offset!");
static_assert(offsetof(UCharacterCommonGuttered_C, OnIconRefresh) == 0x0005A8, "Member 'UCharacterCommonGuttered_C::OnIconRefresh' has a wrong offset!");

}

