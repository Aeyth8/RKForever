#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PostGameSequence

#include "Basic.hpp"

#include "Mariner_structs.hpp"
#include "MangoClient_structs.hpp"


namespace SDK::Params
{

// Function PostGameSequence.PostGameSequence_C.ExecuteUbergraph_PostGameSequence
// 0x0068 (0x0068 - 0x0000)
struct PostGameSequence_C_ExecuteUbergraph_PostGameSequence final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMarinerMenuManager*                    CallFunc_GetMenuManager_ReturnValue;               // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMarinerMenuSequence*                   CallFunc_GetActiveSequence_ReturnValue;            // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bResultSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMarinerPostGameSequence*               K2Node_DynamicCast_AsMariner_Post_Game_Sequence;   // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMarinerMenuManager*                    CallFunc_GetMenuManager_ReturnValue_1;             // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUserWidget*                            CallFunc_GetCustomBackground_ReturnValue;          // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class UClass*                           CallFunc_GetActiveStep_ReturnValue;                // 0x0040(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPostGameBackground_C*                  K2Node_DynamicCast_AsPost_Game_Background;         // 0x0048(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ClassClass_ReturnValue;        // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_52[0x6];                                       // 0x0052(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 K2Node_Event_Layer;                                // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ClassClass_ReturnValue_1;      // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PostGameSequence_C_ExecuteUbergraph_PostGameSequence) == 0x000008, "Wrong alignment on PostGameSequence_C_ExecuteUbergraph_PostGameSequence");
static_assert(sizeof(PostGameSequence_C_ExecuteUbergraph_PostGameSequence) == 0x000068, "Wrong size on PostGameSequence_C_ExecuteUbergraph_PostGameSequence");
static_assert(offsetof(PostGameSequence_C_ExecuteUbergraph_PostGameSequence, EntryPoint) == 0x000000, "Member 'PostGameSequence_C_ExecuteUbergraph_PostGameSequence::EntryPoint' has a wrong offset!");
static_assert(offsetof(PostGameSequence_C_ExecuteUbergraph_PostGameSequence, CallFunc_GetMenuManager_ReturnValue) == 0x000008, "Member 'PostGameSequence_C_ExecuteUbergraph_PostGameSequence::CallFunc_GetMenuManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(PostGameSequence_C_ExecuteUbergraph_PostGameSequence, CallFunc_GetActiveSequence_ReturnValue) == 0x000010, "Member 'PostGameSequence_C_ExecuteUbergraph_PostGameSequence::CallFunc_GetActiveSequence_ReturnValue' has a wrong offset!");
static_assert(offsetof(PostGameSequence_C_ExecuteUbergraph_PostGameSequence, K2Node_Event_bResultSuccess) == 0x000018, "Member 'PostGameSequence_C_ExecuteUbergraph_PostGameSequence::K2Node_Event_bResultSuccess' has a wrong offset!");
static_assert(offsetof(PostGameSequence_C_ExecuteUbergraph_PostGameSequence, K2Node_DynamicCast_AsMariner_Post_Game_Sequence) == 0x000020, "Member 'PostGameSequence_C_ExecuteUbergraph_PostGameSequence::K2Node_DynamicCast_AsMariner_Post_Game_Sequence' has a wrong offset!");
static_assert(offsetof(PostGameSequence_C_ExecuteUbergraph_PostGameSequence, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'PostGameSequence_C_ExecuteUbergraph_PostGameSequence::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(PostGameSequence_C_ExecuteUbergraph_PostGameSequence, CallFunc_GetMenuManager_ReturnValue_1) == 0x000030, "Member 'PostGameSequence_C_ExecuteUbergraph_PostGameSequence::CallFunc_GetMenuManager_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PostGameSequence_C_ExecuteUbergraph_PostGameSequence, CallFunc_GetCustomBackground_ReturnValue) == 0x000038, "Member 'PostGameSequence_C_ExecuteUbergraph_PostGameSequence::CallFunc_GetCustomBackground_ReturnValue' has a wrong offset!");
static_assert(offsetof(PostGameSequence_C_ExecuteUbergraph_PostGameSequence, CallFunc_GetActiveStep_ReturnValue) == 0x000040, "Member 'PostGameSequence_C_ExecuteUbergraph_PostGameSequence::CallFunc_GetActiveStep_ReturnValue' has a wrong offset!");
static_assert(offsetof(PostGameSequence_C_ExecuteUbergraph_PostGameSequence, K2Node_DynamicCast_AsPost_Game_Background) == 0x000048, "Member 'PostGameSequence_C_ExecuteUbergraph_PostGameSequence::K2Node_DynamicCast_AsPost_Game_Background' has a wrong offset!");
static_assert(offsetof(PostGameSequence_C_ExecuteUbergraph_PostGameSequence, K2Node_DynamicCast_bSuccess_1) == 0x000050, "Member 'PostGameSequence_C_ExecuteUbergraph_PostGameSequence::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(PostGameSequence_C_ExecuteUbergraph_PostGameSequence, CallFunc_EqualEqual_ClassClass_ReturnValue) == 0x000051, "Member 'PostGameSequence_C_ExecuteUbergraph_PostGameSequence::CallFunc_EqualEqual_ClassClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(PostGameSequence_C_ExecuteUbergraph_PostGameSequence, K2Node_Event_Layer) == 0x000058, "Member 'PostGameSequence_C_ExecuteUbergraph_PostGameSequence::K2Node_Event_Layer' has a wrong offset!");
static_assert(offsetof(PostGameSequence_C_ExecuteUbergraph_PostGameSequence, CallFunc_EqualEqual_ClassClass_ReturnValue_1) == 0x000060, "Member 'PostGameSequence_C_ExecuteUbergraph_PostGameSequence::CallFunc_EqualEqual_ClassClass_ReturnValue_1' has a wrong offset!");

// Function PostGameSequence.PostGameSequence_C.OnStepReached
// 0x0008 (0x0008 - 0x0000)
struct PostGameSequence_C_OnStepReached final
{
public:
	TSubclassOf<class UMarinerMenuStackLayer>     Layer;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
};
static_assert(alignof(PostGameSequence_C_OnStepReached) == 0x000008, "Wrong alignment on PostGameSequence_C_OnStepReached");
static_assert(sizeof(PostGameSequence_C_OnStepReached) == 0x000008, "Wrong size on PostGameSequence_C_OnStepReached");
static_assert(offsetof(PostGameSequence_C_OnStepReached, Layer) == 0x000000, "Member 'PostGameSequence_C_OnStepReached::Layer' has a wrong offset!");

// Function PostGameSequence.PostGameSequence_C.OnRequestComplete
// 0x0001 (0x0001 - 0x0000)
struct PostGameSequence_C_OnRequestComplete final
{
public:
	bool                                          bResultSuccess;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PostGameSequence_C_OnRequestComplete) == 0x000001, "Wrong alignment on PostGameSequence_C_OnRequestComplete");
static_assert(sizeof(PostGameSequence_C_OnRequestComplete) == 0x000001, "Wrong size on PostGameSequence_C_OnRequestComplete");
static_assert(offsetof(PostGameSequence_C_OnRequestComplete, bResultSuccess) == 0x000000, "Member 'PostGameSequence_C_OnRequestComplete::bResultSuccess' has a wrong offset!");

// Function PostGameSequence.PostGameSequence_C.HasProgressionData
// 0x0020 (0x0020 - 0x0000)
struct PostGameSequence_C_HasProgressionData final
{
public:
	struct FMangoMatchCharacterProgression        CharacterProgression;                              // 0x0000(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	bool                                          Result;                                            // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x001E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PostGameSequence_C_HasProgressionData) == 0x000004, "Wrong alignment on PostGameSequence_C_HasProgressionData");
static_assert(sizeof(PostGameSequence_C_HasProgressionData) == 0x000020, "Wrong size on PostGameSequence_C_HasProgressionData");
static_assert(offsetof(PostGameSequence_C_HasProgressionData, CharacterProgression) == 0x000000, "Member 'PostGameSequence_C_HasProgressionData::CharacterProgression' has a wrong offset!");
static_assert(offsetof(PostGameSequence_C_HasProgressionData, Result) == 0x000018, "Member 'PostGameSequence_C_HasProgressionData::Result' has a wrong offset!");
static_assert(offsetof(PostGameSequence_C_HasProgressionData, CallFunc_Less_IntInt_ReturnValue) == 0x000019, "Member 'PostGameSequence_C_HasProgressionData::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PostGameSequence_C_HasProgressionData, CallFunc_Less_FloatFloat_ReturnValue) == 0x00001A, "Member 'PostGameSequence_C_HasProgressionData::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PostGameSequence_C_HasProgressionData, CallFunc_BooleanOR_ReturnValue) == 0x00001B, "Member 'PostGameSequence_C_HasProgressionData::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(PostGameSequence_C_HasProgressionData, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x00001C, "Member 'PostGameSequence_C_HasProgressionData::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PostGameSequence_C_HasProgressionData, CallFunc_BooleanAND_ReturnValue) == 0x00001D, "Member 'PostGameSequence_C_HasProgressionData::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(PostGameSequence_C_HasProgressionData, CallFunc_BooleanOR_ReturnValue_1) == 0x00001E, "Member 'PostGameSequence_C_HasProgressionData::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");

// Function PostGameSequence.PostGameSequence_C.ShowSequenceTitle
// 0x0018 (0x0018 - 0x0000)
struct PostGameSequence_C_ShowSequenceTitle final
{
public:
	class FText                                   Title;                                             // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(PostGameSequence_C_ShowSequenceTitle) == 0x000008, "Wrong alignment on PostGameSequence_C_ShowSequenceTitle");
static_assert(sizeof(PostGameSequence_C_ShowSequenceTitle) == 0x000018, "Wrong size on PostGameSequence_C_ShowSequenceTitle");
static_assert(offsetof(PostGameSequence_C_ShowSequenceTitle, Title) == 0x000000, "Member 'PostGameSequence_C_ShowSequenceTitle::Title' has a wrong offset!");

// Function PostGameSequence.PostGameSequence_C.ShowSoftCurrency
// 0x0008 (0x0008 - 0x0000)
struct PostGameSequence_C_ShowSoftCurrency final
{
public:
	int32                                         Delta;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Animate;                                           // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PostGameSequence_C_ShowSoftCurrency) == 0x000004, "Wrong alignment on PostGameSequence_C_ShowSoftCurrency");
static_assert(sizeof(PostGameSequence_C_ShowSoftCurrency) == 0x000008, "Wrong size on PostGameSequence_C_ShowSoftCurrency");
static_assert(offsetof(PostGameSequence_C_ShowSoftCurrency, Delta) == 0x000000, "Member 'PostGameSequence_C_ShowSoftCurrency::Delta' has a wrong offset!");
static_assert(offsetof(PostGameSequence_C_ShowSoftCurrency, Animate) == 0x000004, "Member 'PostGameSequence_C_ShowSoftCurrency::Animate' has a wrong offset!");

// Function PostGameSequence.PostGameSequence_C.HasBlastPassData
// 0x0020 (0x0020 - 0x0000)
struct PostGameSequence_C_HasBlastPassData final
{
public:
	struct FMangoBattlePassProgress               MatchResult;                                       // 0x0000(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	bool                                          Result;                                            // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PostGameSequence_C_HasBlastPassData) == 0x000004, "Wrong alignment on PostGameSequence_C_HasBlastPassData");
static_assert(sizeof(PostGameSequence_C_HasBlastPassData) == 0x000020, "Wrong size on PostGameSequence_C_HasBlastPassData");
static_assert(offsetof(PostGameSequence_C_HasBlastPassData, MatchResult) == 0x000000, "Member 'PostGameSequence_C_HasBlastPassData::MatchResult' has a wrong offset!");
static_assert(offsetof(PostGameSequence_C_HasBlastPassData, Result) == 0x000018, "Member 'PostGameSequence_C_HasBlastPassData::Result' has a wrong offset!");
static_assert(offsetof(PostGameSequence_C_HasBlastPassData, CallFunc_Less_IntInt_ReturnValue) == 0x000019, "Member 'PostGameSequence_C_HasBlastPassData::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PostGameSequence_C_HasBlastPassData, CallFunc_Less_FloatFloat_ReturnValue) == 0x00001A, "Member 'PostGameSequence_C_HasBlastPassData::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PostGameSequence_C_HasBlastPassData, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x00001B, "Member 'PostGameSequence_C_HasBlastPassData::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PostGameSequence_C_HasBlastPassData, CallFunc_BooleanAND_ReturnValue) == 0x00001C, "Member 'PostGameSequence_C_HasBlastPassData::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(PostGameSequence_C_HasBlastPassData, CallFunc_BooleanOR_ReturnValue) == 0x00001D, "Member 'PostGameSequence_C_HasBlastPassData::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function PostGameSequence.PostGameSequence_C.IsStepAllowed
// 0x0AD8 (0x0AD8 - 0x0000)
struct PostGameSequence_C_IsStepAllowed final
{
public:
	TSubclassOf<class UMarinerMenuStackLayer>     Layer;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMarinerPostGameData                   CallFunc_GetLocalPlayerPostGameData_ReturnValue;   // 0x0010(0x0358)(ConstParm)
	bool                                          CallFunc_EqualEqual_ClassClass_ReturnValue;        // 0x0368(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ClassClass_ReturnValue_1;      // 0x0369(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasBlastPassData_Result;                  // 0x036A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ClassClass_ReturnValue_2;      // 0x036B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ClassClass_ReturnValue_3;      // 0x036C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ClassClass_ReturnValue_4;      // 0x036D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ClassClass_ReturnValue_5;      // 0x036E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ClassClass_ReturnValue_6;      // 0x036F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FMarinerPostGameData                   CallFunc_GetLocalPlayerPostGameData_ReturnValue_1; // 0x0370(0x0358)(ConstParm)
	struct FMarinerPostGameData                   CallFunc_GetLocalPlayerPostGameData_ReturnValue_2; // 0x06C8(0x0358)(ConstParm)
	bool                                          CallFunc_HasProgressionData_Result;                // 0x0A20(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0A21(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsRequestComplete_bResultSuccess;         // 0x0A22(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsRequestComplete_ReturnValue;            // 0x0A23(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0A24(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsRequestComplete_bResultSuccess_1;       // 0x0A25(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsRequestComplete_ReturnValue_1;          // 0x0A26(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0A27(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsRequestComplete_bResultSuccess_2;       // 0x0A28(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsRequestComplete_ReturnValue_2;          // 0x0A29(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0A2A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsRequestComplete_bResultSuccess_3;       // 0x0A2B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsRequestComplete_ReturnValue_3;          // 0x0A2C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A2D[0x3];                                      // 0x0A2D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FMarinerQuestProgress>          CallFunc_GetMatchResultLocalQuestsWithProgress_OutQuests; // 0x0A30(0x0010)(ZeroConstructor, ReferenceParm)
	bool                                          CallFunc_GetMatchResultLocalQuestsWithProgress_ReturnValue; // 0x0A40(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A41[0x7];                                      // 0x0A41(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMatchEnd                              CallFunc_GetMatchEndData_ReturnValue;              // 0x0A48(0x0068)(ConstParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0AB0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x0AB4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x0AB5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsRequestComplete_bResultSuccess_4;       // 0x0AB6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsRequestComplete_ReturnValue_4;          // 0x0AB7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0AB8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_4;                 // 0x0AB9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsBetaBuild_ReturnValue;                  // 0x0ABA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0ABB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasArtifactsData_ShowArtifactMenu;        // 0x0ABC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_5;                 // 0x0ABD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_ABE[0x2];                                      // 0x0ABE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0AC0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMarinerMainMenuGameState*              K2Node_DynamicCast_AsMariner_Main_Menu_Game_State; // 0x0AC8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0AD0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PostGameSequence_C_IsStepAllowed) == 0x000008, "Wrong alignment on PostGameSequence_C_IsStepAllowed");
static_assert(sizeof(PostGameSequence_C_IsStepAllowed) == 0x000AD8, "Wrong size on PostGameSequence_C_IsStepAllowed");
static_assert(offsetof(PostGameSequence_C_IsStepAllowed, Layer) == 0x000000, "Member 'PostGameSequence_C_IsStepAllowed::Layer' has a wrong offset!");
static_assert(offsetof(PostGameSequence_C_IsStepAllowed, ReturnValue) == 0x000008, "Member 'PostGameSequence_C_IsStepAllowed::ReturnValue' has a wrong offset!");
static_assert(offsetof(PostGameSequence_C_IsStepAllowed, CallFunc_GetLocalPlayerPostGameData_ReturnValue) == 0x000010, "Member 'PostGameSequence_C_IsStepAllowed::CallFunc_GetLocalPlayerPostGameData_ReturnValue' has a wrong offset!");
static_assert(offsetof(PostGameSequence_C_IsStepAllowed, CallFunc_EqualEqual_ClassClass_ReturnValue) == 0x000368, "Member 'PostGameSequence_C_IsStepAllowed::CallFunc_EqualEqual_ClassClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(PostGameSequence_C_IsStepAllowed, CallFunc_EqualEqual_ClassClass_ReturnValue_1) == 0x000369, "Member 'PostGameSequence_C_IsStepAllowed::CallFunc_EqualEqual_ClassClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PostGameSequence_C_IsStepAllowed, CallFunc_HasBlastPassData_Result) == 0x00036A, "Member 'PostGameSequence_C_IsStepAllowed::CallFunc_HasBlastPassData_Result' has a wrong offset!");
static_assert(offsetof(PostGameSequence_C_IsStepAllowed, CallFunc_EqualEqual_ClassClass_ReturnValue_2) == 0x00036B, "Member 'PostGameSequence_C_IsStepAllowed::CallFunc_EqualEqual_ClassClass_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PostGameSequence_C_IsStepAllowed, CallFunc_EqualEqual_ClassClass_ReturnValue_3) == 0x00036C, "Member 'PostGameSequence_C_IsStepAllowed::CallFunc_EqualEqual_ClassClass_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PostGameSequence_C_IsStepAllowed, CallFunc_EqualEqual_ClassClass_ReturnValue_4) == 0x00036D, "Member 'PostGameSequence_C_IsStepAllowed::CallFunc_EqualEqual_ClassClass_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(PostGameSequence_C_IsStepAllowed, CallFunc_EqualEqual_ClassClass_ReturnValue_5) == 0x00036E, "Member 'PostGameSequence_C_IsStepAllowed::CallFunc_EqualEqual_ClassClass_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(PostGameSequence_C_IsStepAllowed, CallFunc_EqualEqual_ClassClass_ReturnValue_6) == 0x00036F, "Member 'PostGameSequence_C_IsStepAllowed::CallFunc_EqualEqual_ClassClass_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(PostGameSequence_C_IsStepAllowed, CallFunc_GetLocalPlayerPostGameData_ReturnValue_1) == 0x000370, "Member 'PostGameSequence_C_IsStepAllowed::CallFunc_GetLocalPlayerPostGameData_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PostGameSequence_C_IsStepAllowed, CallFunc_GetLocalPlayerPostGameData_ReturnValue_2) == 0x0006C8, "Member 'PostGameSequence_C_IsStepAllowed::CallFunc_GetLocalPlayerPostGameData_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PostGameSequence_C_IsStepAllowed, CallFunc_HasProgressionData_Result) == 0x000A20, "Member 'PostGameSequence_C_IsStepAllowed::CallFunc_HasProgressionData_Result' has a wrong offset!");
static_assert(offsetof(PostGameSequence_C_IsStepAllowed, CallFunc_Greater_IntInt_ReturnValue) == 0x000A21, "Member 'PostGameSequence_C_IsStepAllowed::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PostGameSequence_C_IsStepAllowed, CallFunc_IsRequestComplete_bResultSuccess) == 0x000A22, "Member 'PostGameSequence_C_IsStepAllowed::CallFunc_IsRequestComplete_bResultSuccess' has a wrong offset!");
static_assert(offsetof(PostGameSequence_C_IsStepAllowed, CallFunc_IsRequestComplete_ReturnValue) == 0x000A23, "Member 'PostGameSequence_C_IsStepAllowed::CallFunc_IsRequestComplete_ReturnValue' has a wrong offset!");
static_assert(offsetof(PostGameSequence_C_IsStepAllowed, CallFunc_BooleanAND_ReturnValue) == 0x000A24, "Member 'PostGameSequence_C_IsStepAllowed::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(PostGameSequence_C_IsStepAllowed, CallFunc_IsRequestComplete_bResultSuccess_1) == 0x000A25, "Member 'PostGameSequence_C_IsStepAllowed::CallFunc_IsRequestComplete_bResultSuccess_1' has a wrong offset!");
static_assert(offsetof(PostGameSequence_C_IsStepAllowed, CallFunc_IsRequestComplete_ReturnValue_1) == 0x000A26, "Member 'PostGameSequence_C_IsStepAllowed::CallFunc_IsRequestComplete_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PostGameSequence_C_IsStepAllowed, CallFunc_BooleanAND_ReturnValue_1) == 0x000A27, "Member 'PostGameSequence_C_IsStepAllowed::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PostGameSequence_C_IsStepAllowed, CallFunc_IsRequestComplete_bResultSuccess_2) == 0x000A28, "Member 'PostGameSequence_C_IsStepAllowed::CallFunc_IsRequestComplete_bResultSuccess_2' has a wrong offset!");
static_assert(offsetof(PostGameSequence_C_IsStepAllowed, CallFunc_IsRequestComplete_ReturnValue_2) == 0x000A29, "Member 'PostGameSequence_C_IsStepAllowed::CallFunc_IsRequestComplete_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PostGameSequence_C_IsStepAllowed, CallFunc_BooleanAND_ReturnValue_2) == 0x000A2A, "Member 'PostGameSequence_C_IsStepAllowed::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PostGameSequence_C_IsStepAllowed, CallFunc_IsRequestComplete_bResultSuccess_3) == 0x000A2B, "Member 'PostGameSequence_C_IsStepAllowed::CallFunc_IsRequestComplete_bResultSuccess_3' has a wrong offset!");
static_assert(offsetof(PostGameSequence_C_IsStepAllowed, CallFunc_IsRequestComplete_ReturnValue_3) == 0x000A2C, "Member 'PostGameSequence_C_IsStepAllowed::CallFunc_IsRequestComplete_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PostGameSequence_C_IsStepAllowed, CallFunc_GetMatchResultLocalQuestsWithProgress_OutQuests) == 0x000A30, "Member 'PostGameSequence_C_IsStepAllowed::CallFunc_GetMatchResultLocalQuestsWithProgress_OutQuests' has a wrong offset!");
static_assert(offsetof(PostGameSequence_C_IsStepAllowed, CallFunc_GetMatchResultLocalQuestsWithProgress_ReturnValue) == 0x000A40, "Member 'PostGameSequence_C_IsStepAllowed::CallFunc_GetMatchResultLocalQuestsWithProgress_ReturnValue' has a wrong offset!");
static_assert(offsetof(PostGameSequence_C_IsStepAllowed, CallFunc_GetMatchEndData_ReturnValue) == 0x000A48, "Member 'PostGameSequence_C_IsStepAllowed::CallFunc_GetMatchEndData_ReturnValue' has a wrong offset!");
static_assert(offsetof(PostGameSequence_C_IsStepAllowed, CallFunc_Array_Length_ReturnValue) == 0x000AB0, "Member 'PostGameSequence_C_IsStepAllowed::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(PostGameSequence_C_IsStepAllowed, CallFunc_Greater_IntInt_ReturnValue_1) == 0x000AB4, "Member 'PostGameSequence_C_IsStepAllowed::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PostGameSequence_C_IsStepAllowed, CallFunc_BooleanAND_ReturnValue_3) == 0x000AB5, "Member 'PostGameSequence_C_IsStepAllowed::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PostGameSequence_C_IsStepAllowed, CallFunc_IsRequestComplete_bResultSuccess_4) == 0x000AB6, "Member 'PostGameSequence_C_IsStepAllowed::CallFunc_IsRequestComplete_bResultSuccess_4' has a wrong offset!");
static_assert(offsetof(PostGameSequence_C_IsStepAllowed, CallFunc_IsRequestComplete_ReturnValue_4) == 0x000AB7, "Member 'PostGameSequence_C_IsStepAllowed::CallFunc_IsRequestComplete_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(PostGameSequence_C_IsStepAllowed, CallFunc_BooleanOR_ReturnValue) == 0x000AB8, "Member 'PostGameSequence_C_IsStepAllowed::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(PostGameSequence_C_IsStepAllowed, CallFunc_BooleanAND_ReturnValue_4) == 0x000AB9, "Member 'PostGameSequence_C_IsStepAllowed::CallFunc_BooleanAND_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(PostGameSequence_C_IsStepAllowed, CallFunc_IsBetaBuild_ReturnValue) == 0x000ABA, "Member 'PostGameSequence_C_IsStepAllowed::CallFunc_IsBetaBuild_ReturnValue' has a wrong offset!");
static_assert(offsetof(PostGameSequence_C_IsStepAllowed, CallFunc_Not_PreBool_ReturnValue) == 0x000ABB, "Member 'PostGameSequence_C_IsStepAllowed::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(PostGameSequence_C_IsStepAllowed, CallFunc_HasArtifactsData_ShowArtifactMenu) == 0x000ABC, "Member 'PostGameSequence_C_IsStepAllowed::CallFunc_HasArtifactsData_ShowArtifactMenu' has a wrong offset!");
static_assert(offsetof(PostGameSequence_C_IsStepAllowed, CallFunc_BooleanAND_ReturnValue_5) == 0x000ABD, "Member 'PostGameSequence_C_IsStepAllowed::CallFunc_BooleanAND_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(PostGameSequence_C_IsStepAllowed, CallFunc_GetGameState_ReturnValue) == 0x000AC0, "Member 'PostGameSequence_C_IsStepAllowed::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(PostGameSequence_C_IsStepAllowed, K2Node_DynamicCast_AsMariner_Main_Menu_Game_State) == 0x000AC8, "Member 'PostGameSequence_C_IsStepAllowed::K2Node_DynamicCast_AsMariner_Main_Menu_Game_State' has a wrong offset!");
static_assert(offsetof(PostGameSequence_C_IsStepAllowed, K2Node_DynamicCast_bSuccess) == 0x000AD0, "Member 'PostGameSequence_C_IsStepAllowed::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function PostGameSequence.PostGameSequence_C.HasArtifactsData
// 0x03A8 (0x03A8 - 0x0000)
struct PostGameSequence_C_HasArtifactsData final
{
public:
	bool                                          ShowArtifactMenu;                                  // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FMarinerPostGameData                   CallFunc_GetLocalPlayerPostGameData_ReturnValue;   // 0x0010(0x0358)(ConstParm)
	struct FMangoItemResult                       CallFunc_Array_Get_Item;                           // 0x0368(0x0030)()
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0398(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x039C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x039D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x039E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x039F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x03A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x03A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PostGameSequence_C_HasArtifactsData) == 0x000008, "Wrong alignment on PostGameSequence_C_HasArtifactsData");
static_assert(sizeof(PostGameSequence_C_HasArtifactsData) == 0x0003A8, "Wrong size on PostGameSequence_C_HasArtifactsData");
static_assert(offsetof(PostGameSequence_C_HasArtifactsData, ShowArtifactMenu) == 0x000000, "Member 'PostGameSequence_C_HasArtifactsData::ShowArtifactMenu' has a wrong offset!");
static_assert(offsetof(PostGameSequence_C_HasArtifactsData, Temp_int_Array_Index_Variable) == 0x000004, "Member 'PostGameSequence_C_HasArtifactsData::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(PostGameSequence_C_HasArtifactsData, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'PostGameSequence_C_HasArtifactsData::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(PostGameSequence_C_HasArtifactsData, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'PostGameSequence_C_HasArtifactsData::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PostGameSequence_C_HasArtifactsData, CallFunc_GetLocalPlayerPostGameData_ReturnValue) == 0x000010, "Member 'PostGameSequence_C_HasArtifactsData::CallFunc_GetLocalPlayerPostGameData_ReturnValue' has a wrong offset!");
static_assert(offsetof(PostGameSequence_C_HasArtifactsData, CallFunc_Array_Get_Item) == 0x000368, "Member 'PostGameSequence_C_HasArtifactsData::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(PostGameSequence_C_HasArtifactsData, CallFunc_Array_Length_ReturnValue) == 0x000398, "Member 'PostGameSequence_C_HasArtifactsData::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(PostGameSequence_C_HasArtifactsData, CallFunc_Less_FloatFloat_ReturnValue) == 0x00039C, "Member 'PostGameSequence_C_HasArtifactsData::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PostGameSequence_C_HasArtifactsData, CallFunc_Greater_IntInt_ReturnValue) == 0x00039D, "Member 'PostGameSequence_C_HasArtifactsData::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PostGameSequence_C_HasArtifactsData, CallFunc_Less_IntInt_ReturnValue) == 0x00039E, "Member 'PostGameSequence_C_HasArtifactsData::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PostGameSequence_C_HasArtifactsData, CallFunc_BooleanOR_ReturnValue) == 0x00039F, "Member 'PostGameSequence_C_HasArtifactsData::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(PostGameSequence_C_HasArtifactsData, CallFunc_Array_Length_ReturnValue_1) == 0x0003A0, "Member 'PostGameSequence_C_HasArtifactsData::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PostGameSequence_C_HasArtifactsData, CallFunc_Less_IntInt_ReturnValue_1) == 0x0003A4, "Member 'PostGameSequence_C_HasArtifactsData::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");

// Function PostGameSequence.PostGameSequence_C.GetAssets
// 0x0020 (0x0020 - 0x0000)
struct PostGameSequence_C_GetAssets final
{
public:
	struct FMarinerMenuSequenceAssets             ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ReturnParm, NoDestructor, ContainsInstancedReference)
	struct FMarinerMenuSequenceAssets             K2Node_MakeStruct_MarinerMenuSequenceAssets;       // 0x0010(0x0010)(NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(PostGameSequence_C_GetAssets) == 0x000008, "Wrong alignment on PostGameSequence_C_GetAssets");
static_assert(sizeof(PostGameSequence_C_GetAssets) == 0x000020, "Wrong size on PostGameSequence_C_GetAssets");
static_assert(offsetof(PostGameSequence_C_GetAssets, ReturnValue) == 0x000000, "Member 'PostGameSequence_C_GetAssets::ReturnValue' has a wrong offset!");
static_assert(offsetof(PostGameSequence_C_GetAssets, K2Node_MakeStruct_MarinerMenuSequenceAssets) == 0x000010, "Member 'PostGameSequence_C_GetAssets::K2Node_MakeStruct_MarinerMenuSequenceAssets' has a wrong offset!");

}

