#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GC_Characters_MerlinHover

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Mariner_classes.hpp"
#include "GameplayAbilities_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass GC_Characters_MerlinHover.GC_Characters_MerlinHover_C
// 0x0020 (0x0350 - 0x0330)
class AGC_Characters_MerlinHover_C final : public AMarinerCueNotify_ManagedCharacterEffect
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0330(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0338(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class AMarinerCharacter*                      Target;                                            // 0x0340(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MaxRTPCDistance;                                   // 0x0348(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_GC_Characters_MerlinHover(int32 EntryPoint);
	void ReceiveTick(float DeltaSeconds);
	void K2_HandleGameplayCue(class AActor* MyTarget, EGameplayCueEvent EventType, const struct FGameplayCueParameters& Parameters);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"GC_Characters_MerlinHover_C">();
	}
	static class AGC_Characters_MerlinHover_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AGC_Characters_MerlinHover_C>();
	}
};
static_assert(alignof(AGC_Characters_MerlinHover_C) == 0x000008, "Wrong alignment on AGC_Characters_MerlinHover_C");
static_assert(sizeof(AGC_Characters_MerlinHover_C) == 0x000350, "Wrong size on AGC_Characters_MerlinHover_C");
static_assert(offsetof(AGC_Characters_MerlinHover_C, UberGraphFrame) == 0x000330, "Member 'AGC_Characters_MerlinHover_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AGC_Characters_MerlinHover_C, DefaultSceneRoot) == 0x000338, "Member 'AGC_Characters_MerlinHover_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(AGC_Characters_MerlinHover_C, Target) == 0x000340, "Member 'AGC_Characters_MerlinHover_C::Target' has a wrong offset!");
static_assert(offsetof(AGC_Characters_MerlinHover_C, MaxRTPCDistance) == 0x000348, "Member 'AGC_Characters_MerlinHover_C::MaxRTPCDistance' has a wrong offset!");

}

