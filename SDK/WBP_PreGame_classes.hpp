#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_PreGame

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Mariner_structs.hpp"
#include "Mariner_classes.hpp"
#include "AkAudio_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_PreGame.WBP_PreGame_C
// 0x0048 (0x0528 - 0x04E0)
class UWBP_PreGame_C final : public UMarinerMenu
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x04E0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UActivePlayersList_C*                   ActivePlayersListWidget;                           // 0x04E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UChallengePreviewWidget_C*              ChallengePreviewWidget;                            // 0x04F0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCharacterSelectMenu_C*                 CharacterSelectMenu;                               // 0x04F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UMapSummary_C*                          MapSummary;                                        // 0x0500(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UModeSummary_C*                         ModeSummary;                                       // 0x0508(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UShowdownWidget_C*                      Showdown;                                          // 0x0510(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetSwitcher*                        Switcher;                                          // 0x0518(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class FName                                   CurrentPregameStateDisplayed;                      // 0x0520(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_WBP_PreGame(int32 EntryPoint);
	void OnCharacterSelectionWorldUIEnabled(bool Enabled);
	void HandleInputDeviceChanged(EPlayerInputType InputType);
	void BP_OnExited(bool bToSubLayer);
	void BP_OnEntered(bool bFromSubMenu);
	void OnPregameStateChanged(class FName NewState);
	ESlateVisibility GetPreGameHUDVisibility();
	void ResolvePreGameState(class FName PregameState);
	void TransitionToMapSummary();
	void TransitionToCharacterSelection();
	void TransitionToShowdown();
	void TransitionToModeSummary();
	void HideSwitcher();
	void AnimateActiveWidgetOut(const TDelegate<void()>& TransitionComplete, bool* AnimationStarted);
	void EnableWorldUI(bool Enabled, const TDelegate<void(bool bIsVisible)> OnComplete);
	void DummyEvent(bool Visible);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_PreGame_C">();
	}
	static class UWBP_PreGame_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_PreGame_C>();
	}
};
static_assert(alignof(UWBP_PreGame_C) == 0x000008, "Wrong alignment on UWBP_PreGame_C");
static_assert(sizeof(UWBP_PreGame_C) == 0x000528, "Wrong size on UWBP_PreGame_C");
static_assert(offsetof(UWBP_PreGame_C, UberGraphFrame) == 0x0004E0, "Member 'UWBP_PreGame_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_PreGame_C, ActivePlayersListWidget) == 0x0004E8, "Member 'UWBP_PreGame_C::ActivePlayersListWidget' has a wrong offset!");
static_assert(offsetof(UWBP_PreGame_C, ChallengePreviewWidget) == 0x0004F0, "Member 'UWBP_PreGame_C::ChallengePreviewWidget' has a wrong offset!");
static_assert(offsetof(UWBP_PreGame_C, CharacterSelectMenu) == 0x0004F8, "Member 'UWBP_PreGame_C::CharacterSelectMenu' has a wrong offset!");
static_assert(offsetof(UWBP_PreGame_C, MapSummary) == 0x000500, "Member 'UWBP_PreGame_C::MapSummary' has a wrong offset!");
static_assert(offsetof(UWBP_PreGame_C, ModeSummary) == 0x000508, "Member 'UWBP_PreGame_C::ModeSummary' has a wrong offset!");
static_assert(offsetof(UWBP_PreGame_C, Showdown) == 0x000510, "Member 'UWBP_PreGame_C::Showdown' has a wrong offset!");
static_assert(offsetof(UWBP_PreGame_C, Switcher) == 0x000518, "Member 'UWBP_PreGame_C::Switcher' has a wrong offset!");
static_assert(offsetof(UWBP_PreGame_C, CurrentPregameStateDisplayed) == 0x000520, "Member 'UWBP_PreGame_C::CurrentPregameStateDisplayed' has a wrong offset!");

}

