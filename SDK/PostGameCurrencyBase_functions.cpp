#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PostGameCurrencyBase

#include "Basic.hpp"

#include "PostGameCurrencyBase_classes.hpp"
#include "PostGameCurrencyBase_parameters.hpp"


namespace SDK
{

// Function PostGameCurrencyBase.PostGameCurrencyBase_C.CurrencyAnimationComplete__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void UPostGameCurrencyBase_C::CurrencyAnimationComplete__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PostGameCurrencyBase_C", "CurrencyAnimationComplete__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PostGameCurrencyBase.PostGameCurrencyBase_C.ExecuteUbergraph_PostGameCurrencyBase
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UPostGameCurrencyBase_C::ExecuteUbergraph_PostGameCurrencyBase(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PostGameCurrencyBase_C", "ExecuteUbergraph_PostGameCurrencyBase");

	Params::PostGameCurrencyBase_C_ExecuteUbergraph_PostGameCurrencyBase Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PostGameCurrencyBase.PostGameCurrencyBase_C.Destruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UPostGameCurrencyBase_C::Destruct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PostGameCurrencyBase_C", "Destruct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PostGameCurrencyBase.PostGameCurrencyBase_C.StopFillLoopAnim
// (BlueprintCallable, BlueprintEvent)

void UPostGameCurrencyBase_C::StopFillLoopAnim()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PostGameCurrencyBase_C", "StopFillLoopAnim");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PostGameCurrencyBase.PostGameCurrencyBase_C.PlayCompleteAnim
// (BlueprintCallable, BlueprintEvent)

void UPostGameCurrencyBase_C::PlayCompleteAnim()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PostGameCurrencyBase_C", "PlayCompleteAnim");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PostGameCurrencyBase.PostGameCurrencyBase_C.PlayFillLoopAnim
// (BlueprintCallable, BlueprintEvent)

void UPostGameCurrencyBase_C::PlayFillLoopAnim()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PostGameCurrencyBase_C", "PlayFillLoopAnim");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PostGameCurrencyBase.PostGameCurrencyBase_C.SetCurrencyText
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FText                             Text                                                   (BlueprintVisible, BlueprintReadOnly, Parm)

void UPostGameCurrencyBase_C::SetCurrencyText(const class FText& Text)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PostGameCurrencyBase_C", "SetCurrencyText");

	Params::PostGameCurrencyBase_C_SetCurrencyText Parms{};

	Parms.Text = std::move(Text);

	UObject::ProcessEvent(Func, &Parms);
}


// Function PostGameCurrencyBase.PostGameCurrencyBase_C.Tick
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// struct FGeometry                        MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// float                                   InDeltaTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UPostGameCurrencyBase_C::Tick(const struct FGeometry& MyGeometry, float InDeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PostGameCurrencyBase_C", "Tick");

	Params::PostGameCurrencyBase_C_Tick Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.InDeltaTime = InDeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PostGameCurrencyBase.PostGameCurrencyBase_C.AnimateToValue
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   CurrencyValue                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UPostGameCurrencyBase_C::AnimateToValue(int32 CurrencyValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PostGameCurrencyBase_C", "AnimateToValue");

	Params::PostGameCurrencyBase_C_AnimateToValue Parms{};

	Parms.CurrencyValue = CurrencyValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PostGameCurrencyBase.PostGameCurrencyBase_C.PopulateValue
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   CurrentValue                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UPostGameCurrencyBase_C::PopulateValue(int32 CurrentValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PostGameCurrencyBase_C", "PopulateValue");

	Params::PostGameCurrencyBase_C_PopulateValue Parms{};

	Parms.CurrentValue = CurrentValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PostGameCurrencyBase.PostGameCurrencyBase_C.AnimateToDelta
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   CurrencyDelta                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UPostGameCurrencyBase_C::AnimateToDelta(int32 CurrencyDelta)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PostGameCurrencyBase_C", "AnimateToDelta");

	Params::PostGameCurrencyBase_C_AnimateToDelta Parms{};

	Parms.CurrencyDelta = CurrencyDelta;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PostGameCurrencyBase.PostGameCurrencyBase_C.Populate
// (Event, Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UPostGameCurrencyBase_C::Populate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PostGameCurrencyBase_C", "Populate");

	Params::PostGameCurrencyBase_C_Populate Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function PostGameCurrencyBase.PostGameCurrencyBase_C.HideWidget
// (Public, BlueprintCallable, BlueprintEvent)

void UPostGameCurrencyBase_C::HideWidget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PostGameCurrencyBase_C", "HideWidget");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PostGameCurrencyBase.PostGameCurrencyBase_C.PopulateDelta
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Delta                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UPostGameCurrencyBase_C::PopulateDelta(int32 Delta)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PostGameCurrencyBase_C", "PopulateDelta");

	Params::PostGameCurrencyBase_C_PopulateDelta Parms{};

	Parms.Delta = Delta;

	UObject::ProcessEvent(Func, &Parms);
}

}

